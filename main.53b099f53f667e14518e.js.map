{"version":3,"sources":["webpack://sleepy/webpack/runtime/create fake namespace object","webpack://sleepy/./src/index.js","webpack://sleepy/./src/utils/ImageLoader.js","webpack://sleepy/./node_modules/howler/dist/howler.js","webpack://sleepy/./src/core/Game.js","webpack://sleepy/./src/core/rendering/RenderManager.js","webpack://sleepy/./src/core/Manager.js","webpack://sleepy/./src/core/rendering/Display.js","webpack://sleepy/./src/utils/Grid.js","webpack://sleepy/./src/core/rendering/spritesheets.js","webpack://sleepy/./src/core/rendering/SpriteSheet.js","webpack://sleepy/./src/core/rendering/cp437.js","webpack://sleepy/./src/core/rendering/Sprite.js","webpack://sleepy/./src/utils/ColorParser.js","webpack://sleepy/./node_modules/color-parse/index.mjs","webpack://sleepy/./node_modules/color-name/index.js","webpack://sleepy/./src/utils/ColorUtil.js","webpack://sleepy/./src/core/input/InputController.js","webpack://sleepy/./src/core/input/events/InputKeyboardEvent.js","webpack://sleepy/./src/core/input/events/InputEvent.js","webpack://sleepy/./src/core/input/events/InputMouseEvent.js","webpack://sleepy/./src/systems/ActionSystem.js","webpack://sleepy/./src/core/screens/ScreenType.js","webpack://sleepy/./src/ecs/components/Actor.js","webpack://sleepy/../node_modules/camelcase/index.js","webpack://sleepy/../src/util/string-util.js","webpack://sleepy/../src/Properties/Property.js","webpack://sleepy/../src/Properties/SimpleProperty.js","webpack://sleepy/../src/Properties/EntityProperty.js","webpack://sleepy/../src/Properties/EntityArrayProperty.js","webpack://sleepy/../src/Properties/PropertyFactory.js","webpack://sleepy/../src/Component.js","webpack://sleepy/../src/registries/ComponentRegistry.js","webpack://sleepy/../node_modules/deepmerge/dist/cjs.js","webpack://sleepy/../src/PrefabComponent.js","webpack://sleepy/../src/Prefab.js","webpack://sleepy/../src/registries/PrefabRegistry.js","webpack://sleepy/../src/EntityEvent.js","webpack://sleepy/../src/Entity.js","webpack://sleepy/../src/registries/EntityRegistry.js","webpack://sleepy/../src/Query.js","webpack://sleepy/../src/registries/QueryRegistry.js","webpack://sleepy/../src/Engine.js","webpack://sleepy/../node_modules/nanoid/non-secure/index.js","webpack://sleepy/./src/ecs/components/IsDestroying.js","webpack://sleepy/./src/ecs/components/LiquidContainer.js","webpack://sleepy/./src/data/Spawnables.js","webpack://sleepy/./src/data/Spawner.js","webpack://sleepy/./src/data/spawnables/SpawnableVialHoney.js","webpack://sleepy/./src/enums/LiquidTypes.js","webpack://sleepy/./src/data/spawnables/SpawnableVialBlood.js","webpack://sleepy/./src/data/spawnables/SpawnableVialWater.js","webpack://sleepy/./src/data/spawnables/SpawnableGoblinGrunt.js","webpack://sleepy/./src/ai/GoalTypes/BoredGoalType.js","webpack://sleepy/./src/ai/GoalTypes/GoalType.js","webpack://sleepy/./src/ai/GoalActionResult.js","webpack://sleepy/./src/ai/GoalTypes/KillSomethingGoalType.js","webpack://sleepy/./src/utils/AStar.js","webpack://sleepy/./src/utils/diagonalDistance.js","webpack://sleepy/./src/utils/ManhattanDistance.js","webpack://sleepy/./src/utils/PriorityQueue.js","webpack://sleepy/./src/ai/GoalTypes/MoveGoalType.js","webpack://sleepy/./src/ai/GoalTypes/EatFoodGoalType.js","webpack://sleepy/./src/data/spawnables/SpawnableGoblinBruiser.js","webpack://sleepy/./src/data/spawnables/SpawnableGoblinStargazer.js","webpack://sleepy/./src/data/spawnables/SpawnablePineTree.js","webpack://sleepy/./src/utils/rand.js","webpack://sleepy/./src/data/spawnables/SpawnableHumanWanderer.js","webpack://sleepy/./src/data/spawnables/SpawnablePoolLiquid.js","webpack://sleepy/./src/data/spawnables/SpawnableGrass.js","webpack://sleepy/./src/ecs/components/Door.js","webpack://sleepy/./src/ecs/components/Blocker.js","webpack://sleepy/./src/ecs/components/Shadowcaster.js","webpack://sleepy/./src/ecs/components/Loot.js","webpack://sleepy/./src/ecs/components/Inventory.js","webpack://sleepy/./src/ecs/components/IsInventoried.js","webpack://sleepy/./src/ecs/components/Stackable.js","webpack://sleepy/./src/enums/Stackables.js","webpack://sleepy/./src/ecs/components/Throwable.js","webpack://sleepy/./src/data/Skills.js","webpack://sleepy/./src/data/skills/ArmorSkill.js","webpack://sleepy/./src/data/skills/Skill.js","webpack://sleepy/./src/data/Stats.js","webpack://sleepy/./src/data/skills/SpeedSkill.js","webpack://sleepy/./src/data/skills/ThrowingSkill.js","webpack://sleepy/./src/data/skills/DodgeSkill.js","webpack://sleepy/./src/data/Attack.js","webpack://sleepy/./src/data/DamageTypes.js","webpack://sleepy/./src/utils/BresenhamLine.js","webpack://sleepy/./src/utils/cursor/SimpleLineRenderer.js","webpack://sleepy/./src/ecs/components/FragileGlass.js","webpack://sleepy/./src/enums/ConsoleEvents.js","webpack://sleepy/./src/ecs/components/Brain.js","webpack://sleepy/./src/ecs/components/Body.js","webpack://sleepy/./src/ecs/components/Goal.js","webpack://sleepy/./src/ai/GoalEvaluator.js","webpack://sleepy/./src/ecs/components/Moniker.js","webpack://sleepy/./src/ecs/components/Logger.js","webpack://sleepy/./src/ecs/components/Position.js","webpack://sleepy/./src/ecs/components/Glyph.js","webpack://sleepy/./src/ecs/components/Legs.js","webpack://sleepy/./src/ecs/components/IsPlayer.js","webpack://sleepy/./src/ecs/components/Wandering.js","webpack://sleepy/./src/enums/Directions.js","webpack://sleepy/./src/ecs/components/IsVisible.js","webpack://sleepy/./src/ecs/components/Explorable.js","webpack://sleepy/./src/ecs/components/Explored.js","webpack://sleepy/./src/ecs/components/Health.js","webpack://sleepy/./src/ecs/components/IsDead.js","webpack://sleepy/./src/ecs/components/FactionMember.js","webpack://sleepy/./src/enums/Factions.js","webpack://sleepy/./src/data/Faction.js","webpack://sleepy/./src/ecs/components/Eyes.js","webpack://sleepy/./src/ecs/components/Particle.js","webpack://sleepy/./src/ecs/components/ParticleEmitter.js","webpack://sleepy/./src/ecs/components/LootDropper.js","webpack://sleepy/./src/data/tables/LootSpawn.js","webpack://sleepy/./src/utils/WeightedTable.js","webpack://sleepy/./src/data/tables/loot/LootTableGoblin.js","webpack://sleepy/./src/data/tables/loot/LootTableForest.js","webpack://sleepy/./src/data/tables/loot/LootTableBruiser.js","webpack://sleepy/./src/ecs/components/IsEquipped.js","webpack://sleepy/./src/ecs/components/Equipment.js","webpack://sleepy/./src/data/EquipmentSlotType.js","webpack://sleepy/./src/ecs/components/EquipmentSlot.js","webpack://sleepy/./src/data/WeaponTypes.js","webpack://sleepy/./src/data/WeaponFamilies.js","webpack://sleepy/./src/data/weapons/WpnTypeBattleAxe.js","webpack://sleepy/./src/data/weapons/WeaponType.js","webpack://sleepy/./src/data/weapons/WpnTypeGreatsword.js","webpack://sleepy/./src/data/weapons/WpnTypeMace.js","webpack://sleepy/./src/data/Statuses.js","webpack://sleepy/./src/data/statuses/StatusBleeding.js","webpack://sleepy/./src/enums/StatusTypes.js","webpack://sleepy/./src/data/statuses/Status.js","webpack://sleepy/./src/data/statuses/StatusStunned.js","webpack://sleepy/./src/data/weapons/WpnTypeShortsword.js","webpack://sleepy/./src/data/weapons/WpnTypeUnarmed.js","webpack://sleepy/./src/ecs/components/Stats.js","webpack://sleepy/./node_modules/rot-js/lib/util.js","webpack://sleepy/./src/ecs/components/Race.js","webpack://sleepy/./src/data/Races.js","webpack://sleepy/./src/data/RaceData.js","webpack://sleepy/./src/ecs/components/Weapon.js","webpack://sleepy/./src/ecs/components/Status.js","webpack://sleepy/./src/ecs/components/Ground.js","webpack://sleepy/./src/ecs/components/IsIncapacitated.js","webpack://sleepy/./src/ecs/components/SharpTrap.js","webpack://sleepy/./src/ecs/components/EquippedSkillMod.js","webpack://sleepy/./src/ecs/components/Combustible.js","webpack://sleepy/./src/ecs/components/Fire.js","webpack://sleepy/./src/ecs/components/ThermalCapacity.js","webpack://sleepy/./src/ecs/components/Abilities.js","webpack://sleepy/./src/ecs/components/AbilityStatus.js","webpack://sleepy/./src/data/Abilities.js","webpack://sleepy/./src/data/abilities/prayers/PrayerOfProtectionAbility.js","webpack://sleepy/./src/enums/AbilityTypes.js","webpack://sleepy/./src/data/abilities/SimpleChannelAbility.js","webpack://sleepy/./src/data/abilities/Ability.js","webpack://sleepy/./src/data/abilities/spells/BlinkAbility.js","webpack://sleepy/./src/utils/cursor/SimpleCursorRenderer.js","webpack://sleepy/./src/data/abilities/spells/CrimsonWellAbility.js","webpack://sleepy/./src/data/abilities/SimpleDurationAbility.js","webpack://sleepy/./src/data/abilities/stances/RageAbility.js","webpack://sleepy/./src/data/abilities/SimpleToggledAbility.js","webpack://sleepy/./src/data/abilities/stances/SprintAbility.js","webpack://sleepy/./src/data/abilities/stunts/JumpAbility.js","webpack://sleepy/./src/ecs/components/BitmaskGlyph.js","webpack://sleepy/./src/data/bitmasks.js","webpack://sleepy/./src/ecs/components/Level.js","webpack://sleepy/./src/systems/System.js","webpack://sleepy/./src/systems/RenderSystem.js","webpack://sleepy/./src/systems/UISystem.js","webpack://sleepy/./src/core/input/MouseManager.js","webpack://sleepy/./src/core/input/CommandManager.js","webpack://sleepy/./src/core/input/InputDomainType.js","webpack://sleepy/./src/core/input/commands.js","webpack://sleepy/./src/core/input/InputCommand.js","webpack://sleepy/./src/core/input/InputCommandType.js","webpack://sleepy/./src/core/input/KeyCodes.js","webpack://sleepy/./src/core/screens/ScreenManager.js","webpack://sleepy/./src/core/screens/screens/AdventureScreen.js","webpack://sleepy/./src/core/screens/screens/Screen.js","webpack://sleepy/./src/core/screens/screens/MainMenuScreen.js","webpack://sleepy/./src/enums/UIGlyphs.js","webpack://sleepy/./src/utils/UIWindowUtil.js","webpack://sleepy/./src/core/screens/screens/DeathScreen.js","webpack://sleepy/./src/core/screens/screens/InventoryScreen.js","webpack://sleepy/./src/utils/SelectableList.js","webpack://sleepy/./src/core/screens/screens/InteractModalScreen.js","webpack://sleepy/./src/core/screens/screens/CursorScreen.js","webpack://sleepy/./src/utils/UITags.js","webpack://sleepy/./src/core/screens/screens/LoadSectorScreen.js","webpack://sleepy/./src/core/screens/screens/EquipmentScreen.js","webpack://sleepy/./src/core/screens/screens/ListSelectionScreen.js","webpack://sleepy/./src/core/screens/screens/CharacterScreen.js","webpack://sleepy/./src/core/screens/screens/AbilityScreen.js","webpack://sleepy/./src/core/screens/screens/ConfirmationScreen.js","webpack://sleepy/./src/core/screens/screens/WaitScreen.js","webpack://sleepy/./src/core/screens/screens/ChannelScreen.js","webpack://sleepy/./src/core/PlayerManager.js","webpack://sleepy/./src/ecs/index.js","webpack://sleepy/./src/core/GameStateManager.js","webpack://sleepy/./src/core/ClockManager.js","webpack://sleepy/./src/core/MapManager.js","webpack://sleepy/./src/utils/FastMap.js","webpack://sleepy/./src/systems/FOVSystem.js","webpack://sleepy/./node_modules/rot-js/lib/index.js","webpack://sleepy/./node_modules/rot-js/lib/rng.js","webpack://sleepy/./node_modules/rot-js/lib/display/display.js","webpack://sleepy/./node_modules/rot-js/lib/display/hex.js","webpack://sleepy/./node_modules/rot-js/lib/display/canvas.js","webpack://sleepy/./node_modules/rot-js/lib/display/backend.js","webpack://sleepy/./node_modules/rot-js/lib/display/rect.js","webpack://sleepy/./node_modules/rot-js/lib/display/tile.js","webpack://sleepy/./node_modules/rot-js/lib/display/tile-gl.js","webpack://sleepy/./node_modules/rot-js/lib/color.js","webpack://sleepy/./node_modules/rot-js/lib/display/term.js","webpack://sleepy/./node_modules/rot-js/lib/text.js","webpack://sleepy/./node_modules/rot-js/lib/constants.js","webpack://sleepy/./node_modules/rot-js/lib/stringgenerator.js","webpack://sleepy/./node_modules/rot-js/lib/eventqueue.js","webpack://sleepy/./node_modules/rot-js/lib/MinHeap.js","webpack://sleepy/./node_modules/rot-js/lib/scheduler/index.js","webpack://sleepy/./node_modules/rot-js/lib/scheduler/simple.js","webpack://sleepy/./node_modules/rot-js/lib/scheduler/scheduler.js","webpack://sleepy/./node_modules/rot-js/lib/scheduler/speed.js","webpack://sleepy/./node_modules/rot-js/lib/scheduler/action.js","webpack://sleepy/./node_modules/rot-js/lib/fov/index.js","webpack://sleepy/./node_modules/rot-js/lib/fov/discrete-shadowcasting.js","webpack://sleepy/./node_modules/rot-js/lib/fov/fov.js","webpack://sleepy/./node_modules/rot-js/lib/fov/precise-shadowcasting.js","webpack://sleepy/./node_modules/rot-js/lib/fov/recursive-shadowcasting.js","webpack://sleepy/./node_modules/rot-js/lib/map/index.js","webpack://sleepy/./node_modules/rot-js/lib/map/arena.js","webpack://sleepy/./node_modules/rot-js/lib/map/map.js","webpack://sleepy/./node_modules/rot-js/lib/map/uniform.js","webpack://sleepy/./node_modules/rot-js/lib/map/dungeon.js","webpack://sleepy/./node_modules/rot-js/lib/map/features.js","webpack://sleepy/./node_modules/rot-js/lib/map/cellular.js","webpack://sleepy/./node_modules/rot-js/lib/map/digger.js","webpack://sleepy/./node_modules/rot-js/lib/map/ellermaze.js","webpack://sleepy/./node_modules/rot-js/lib/map/dividedmaze.js","webpack://sleepy/./node_modules/rot-js/lib/map/iceymaze.js","webpack://sleepy/./node_modules/rot-js/lib/map/rogue.js","webpack://sleepy/./node_modules/rot-js/lib/noise/index.js","webpack://sleepy/./node_modules/rot-js/lib/noise/simplex.js","webpack://sleepy/./node_modules/rot-js/lib/noise/noise.js","webpack://sleepy/./node_modules/rot-js/lib/path/index.js","webpack://sleepy/./node_modules/rot-js/lib/path/dijkstra.js","webpack://sleepy/./node_modules/rot-js/lib/path/path.js","webpack://sleepy/./node_modules/rot-js/lib/path/astar.js","webpack://sleepy/./node_modules/rot-js/lib/engine.js","webpack://sleepy/./node_modules/rot-js/lib/lighting.js","webpack://sleepy/./src/systems/DeathSystem.js","webpack://sleepy/./src/systems/ParticleSystem.js","webpack://sleepy/./src/core/FactionManager.js","webpack://sleepy/./src/core/CameraManager.js","webpack://sleepy/./src/systems/FPSMonitoringSystem.js","webpack://sleepy/./src/core/WorldManager.js","webpack://sleepy/./src/data/WorldData.js","webpack://sleepy/./src/data/Sector.js","webpack://sleepy/./src/level/generators/generators.js","webpack://sleepy/./src/level/generators/ForestCabinsGenerator.js","webpack://sleepy/./src/level/LevelConnections.js","webpack://sleepy/./src/level/TileData.js","webpack://sleepy/./src/level/themes/TileTheme.js","webpack://sleepy/./src/level/themes/CastleTheme.js","webpack://sleepy/./src/level/themes/TileThemePopulator.js","webpack://sleepy/./src/level/themes/ForestTheme.js","webpack://sleepy/./src/level/themes/CabinTheme.js","webpack://sleepy/./src/level/schemes/UniformScheme.js","webpack://sleepy/./src/level/TileContainer.js","webpack://sleepy/./src/level/RoomData.js","webpack://sleepy/./node_modules/nanoid/index.prod.js","webpack://sleepy/./node_modules/nanoid/url-alphabet/index.js","webpack://sleepy/./src/level/TileScheme.js","webpack://sleepy/./src/level/generators/SectorGenerator.js","webpack://sleepy/./src/level/generators/ForestGenerator.js","webpack://sleepy/./src/level/generators/ForestStrongholdGenerator.js","webpack://sleepy/./src/level/schemes/DenseCastleScheme.js","webpack://sleepy/./src/level/generators/ForestTownGenerator.js","webpack://sleepy/./src/level/schemes/ScatteredScheme.js","webpack://sleepy/./src/level/generators/GeneratorUtils.js","webpack://sleepy/./src/core/ConsoleManager.js","webpack://sleepy/./src/systems/DestroySystem.js","webpack://sleepy/./src/core/MusicManager.js","webpack://sleepy/./src/systems/StatusSystem.js","webpack://sleepy/./src/systems/LiquidSystem.js","webpack://sleepy/./src/systems/TrapSystem.js","webpack://sleepy/./src/systems/FireSystem.js","webpack://sleepy/./src/systems/TemperatureSystem.js","webpack://sleepy/./src/utils/ArrayUtil.js","webpack://sleepy/./src/utils/LerpUtil.js","webpack://sleepy/./src/utils/MemoryGrid.js","webpack://sleepy/./src/systems/AbilitySystem.js","webpack://sleepy/./src/core/BitmaskManager.js","webpack://sleepy/webpack/bootstrap","webpack://sleepy/webpack/runtime/compat get default export","webpack://sleepy/webpack/runtime/define property getters","webpack://sleepy/webpack/runtime/global","webpack://sleepy/webpack/runtime/hasOwnProperty shorthand","webpack://sleepy/webpack/runtime/make namespace object","webpack://sleepy/webpack/startup"],"names":["leafPrototypes","getProto","loadImages","then","require","window","game","ecs","start","Howler","loadImage","img","Promise","resolve","reject","complete","addEventListener","error","imgs","Array","from","document","querySelectorAll","all","map","HowlerGlobal","this","init","prototype","self","_counter","_html5AudioPool","html5PoolSize","_codecs","_howls","_muted","_volume","_canPlayEvent","_navigator","navigator","masterGain","noAudio","usingWebAudio","autoSuspend","ctx","autoUnlock","_setup","volume","vol","parseFloat","setupAudioContext","gain","setValueAtTime","currentTime","i","length","_webAudio","ids","_getSoundIds","j","sound","_soundById","_node","mute","muted","stop","unload","close","codecs","ext","replace","state","_autoSuspend","Audio","oncanplaythrough","e","_setupCodecs","audioTest","err","canPlayType","mpegTest","checkOpera","userAgent","match","isOldOpera","parseInt","split","mp3","mpeg","opus","ogg","oga","wav","aac","caf","m4a","m4b","mp4","weba","webm","dolby","flac","_unlockAudio","_audioUnlocked","_mobileUnloaded","sampleRate","_scratchBuffer","createBuffer","unlock","audioNode","_unlocked","_releaseHtml5Audio","load","_autoResume","source","createBufferSource","buffer","connect","destination","noteOn","resume","onended","disconnect","removeEventListener","_emit","_obtainHtml5Audio","pop","testPlay","play","catch","console","warn","audio","push","suspend","_sounds","_paused","_suspendTimer","clearTimeout","setTimeout","handleSuspension","_resumeAfterSuspend","Howl","o","src","_autoplay","autoplay","_format","format","_html5","html5","_loop","loop","_pool","pool","_preload","preload","_rate","rate","_sprite","sprite","_src","undefined","_xhr","method","xhr","headers","withCredentials","_duration","_state","_endTimers","_queue","_playLock","_onend","onend","fn","_onfade","onfade","_onload","onload","_onloaderror","onloaderror","_onplayerror","onplayerror","_onpause","onpause","_onplay","onplay","_onstop","onstop","_onmute","onmute","_onvolume","onvolume","_onrate","onrate","_onseek","onseek","_onunlock","onunlock","_onresume","event","action","url","str","exec","toLowerCase","location","protocol","slice","Sound","loadBuffer","internal","id","num","_ended","_id","_inactiveSound","soundId","_loadQueue","seek","Math","max","_seek","duration","timeout","abs","setParams","_start","_stop","node","playWebAudio","_refreshBuffer","_playStart","bufferSource","noteGrainOn","Infinity","bind","once","_clearTimer","playHtml5","playbackRate","paused","loadedNoReadyState","ejecta","readyState","isCocoonJS","listener","pause","_rateSeek","_stopFade","noteOff","_cleanBuffer","isNaN","arguments","_clearSound","_interval","args","index","indexOf","apply","fade","to","len","min","end","linearRampToValueAtTime","_startFadeInterval","isGroup","diff","steps","stepLen","lastTick","Date","now","_fadeTo","setInterval","tick","round","clearInterval","cancelScheduledValues","loopStart","loopEnd","playing","realTime","rateSeek","seekAndEmit","emitSeek","sounds","_errorFn","_loadFn","_endFn","splice","remCache","cache","on","events","off","isId","keys","Object","isArray","msg","call","task","shift","ended","_drain","reset","limit","cnt","_panner","isIOS","vendor","test","howl","_parent","parent","create","createGain","createGainNode","_errorListener","_loadListener","_endListener","code","ceil","__default","loadSound","data","atob","dataView","Uint8Array","charCodeAt","decodeAudioData","XMLHttpRequest","open","responseType","forEach","key","setRequestHeader","status","response","onerror","safeXhrSend","send","arraybuffer","success","AudioContext","webkitAudioContext","iOS","platform","appVersion","version","safari","exports","global","_super","_pos","_orientation","stereo","pan","pos","x","y","z","positionX","setTargetAtTime","positionY","positionZ","setPosition","orientation","xUp","yUp","zUp","or","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","_stereo","_pannerAttr","coneInnerAngle","coneOuterAngle","coneOuterGain","distanceModel","maxDistance","panningModel","refDistance","rolloffFactor","_onstereo","onstereo","_onpos","onpos","_onorientation","onorientation","pannerType","createStereoPanner","setupPanner","orientationX","orientationY","orientationZ","pannerAttr","_coneInnerAngle","_coneOuterAngle","_coneOuterGain","_distanceModel","_maxDistance","_refDistance","_rolloffFactor","_panningModel","pa","panner","type","createPanner","Game","engine","constructor","ECS","music","MusicManager","mouse","MouseManager","clock","ClockManager","renderer","Renderer","GameStateManager","world","WorldManager","MapManager","camera","CameraManager","factions","FactionManager","player","PlayerManager","commands","CommandManager","screens","ScreenManager","input","InputController","ConsoleManager","bitmasks","BitmaskManager","actionSystem","ActionSystem","deathSystem","DeathSystem","statusSystem","StatusSystem","FOVSystem","renderSystem","RenderSystem","UISystem","particles","ParticleSystem","fps","FPSMonitoringSystem","destroySystem","DestroySystem","liquidSystem","LiquidSystem","trapSystem","TrapSystem","fireSystem","FireSystem","temperature","TemperatureSystem","abilities","AbilitySystem","boundLoop","requestAnimationFrame","updateAdventureSystems","dt","update","playerTurn","updatePlayerSystems","render","t","Manager","display","canvas","super","spritesheets","spritesheet","name","Display","width","height","tileWidth","tileHeight","body","appendChild","resizeDisplay","zoom","setSize","draw","char","fg1","fg2","bg","tiles","getSprite","drawUI","ui","computeTextWidth","text","computeTextWidthTile","drawTextWrapping","drawText","left","right","lastSpace","nextLeft","substr","charAt","trimLeft","font","drawTextCenter","clear","clearArea","pxToTile","xPx","yPx","trunc","onNewGame","getSaveGameData","cells","Grid","suppressOOBWarn","createElement","getContext","alpha","globalCompositeOperation","textBaseline","widthPx","heightPx","style","cssText","clearAndResize","set","colorize","fillStyle","clearColor","fillRect","offsetX","cellX","cellY","filter","c","cell","pixelX","pixelY","drawImage","_width","_height","defaultValueGenerator","idx","coord","size","setAll","value","isOutOfBounds","serialize","entries","deserialize","get","getNeighbors","tileImage","getElementById","fontImage","uiImage","SpriteSheet","image","spriteWidth","spriteCountX","spriteHeight","spriteCountY","cp437","row","glyph","Sprite","sheet","sourceX","sourceY","primaryCss","secondaryCss","primary","parseColor","secondary","_cache","hasOwnProperty","pixels","getImageData","r","g","b","a","isBlack","isWhite","cvs","putImageData","colorStr","parsed","colorParse","values","cstr","m","space","parts","names","base","isRGB","trim","baseHues","join","red","R","green","G","blue","B","h","hue","H","s","saturation","S","l","lightness","L","brightness","opacity","orange","yellow","purple","module","HSLToRGB","lerpHSL","deg","lerp","sat","light","onKeydown","container","onMouseClick","onMouseMove","onMouseEnter","onMouseLeave","evt","InputKeyboardEvent","keyCode","shiftKey","ctrl","ctrlKey","alt","altKey","meta","metaKey","preventDefault","onInputEvent","offsetY","InputMouseEvent","button","updatePosition","updateMouseEnter","updateMouseLeave","InputEvent","tileX","tileY","System","createQuery","Actor","none","IsDestroying","IsDead","entities","sorted","sort","actor","energy","entity","hasEnergy","incrementTick","addEnergy","tickDelta","isIncapacitated","fireEvent","isPlayer","pushScreen","SCREEN_WAIT","time","getNextAction","SCREEN_MAIN_MENU","SCREEN_ADVENTURE","SCREEN_DEATH","SCREEN_INVENTORY","SCREEN_INTERACT_MODAL","SCREEN_CURSOR","SCREEN_LOAD_SECTOR","SCREEN_EQUIPMENT","SCREEN_LIST_SELECT","SCREEN_CHARACTER","SCREEN_ABILITIES","SCREEN_CONFIRM","SCREEN_CHANNEL","Component","onEnergyConsumed","reduceEnergy","onTick","camelCase","options","TypeError","pascalCase","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","character","preserveCamelCase","_","p1","camelCache","camelString","camelcaseSlow","pascalCache","Property","component","enumerable","v","onDestroyed","cleanupReference","SimpleProperty","EntityProperty","getEntity","EntityArrayProperty","Proxy","target","prop","receiver","Reflect","old","deleteProperty","proxy","ref","PropertyStrategy","Boolean","ob","properties","_onAttached","_onDetached","_onDestroyed","onAttached","onDetached","remove","destroy","clone","createComponent","_onEvent","handlerName","onEvent","_defaultPropertyValue","propertyName","_defineProxies","initialProperties","initialValue","property","PropertyFactory","ComponentRegistry","Map","register","getAccessor","typeOrClassOrComponent","_getType","_definitions","typeOrClass","definition","isMergeableObject","isNonNullObject","stringValue","isReactElement","isSpecial","REACT_ELEMENT_TYPE","Symbol","cloneUnlessOtherwiseSpecified","deepmerge","val","defaultArrayMerge","element","getKeys","getEnumerableOwnPropertySymbols","propertyIsOnObject","object","mergeObject","propertyIsUnsafe","customMerge","getMergeFunction","sourceIsArray","array","Error","prev","next","PrefabComponent","componentDef","overwrite","applyToEntity","initialProps","props","merge","Prefab","addComponent","prefabComponent","arrComps","accessor","components","initialCompProps","PrefabRegistry","registered","prefab","inherit","comps","componentData","def","_ecs","nameOrClassOrPrefab","_prefabs","nameOrClass","EntityEvent","is","handle","prevent","Entity","has","hasType","nestedComponent","add","attach","configurable","writable","allowMultiple","owns","isComponent","instance","o2","k2","v2","EntityRegistry","_entities","createOrGetById","onEntityDestroyed","cleanupRefs","refs","_refs","addRef","entityId","Set","removeRef","json","list","entityData","deserializeEntity","pascalString","d","Query","any","isMatch","hasAny","_filter","some","hasAll","every","hasNone","onEntityAdded","onEntityRemoved","candidate","isTracking","cb","_onEntityCreated","_onComponentAdded","_onComponentRemoved","_onEntityDestroyed","bustCache","QueryRegistry","filters","query","onComponentAdded","onComponentRemoved","onEntityCreated","Engine","nanoid","generateId","createEntity","createPrefab","prefabs","destroyEntity","registerPrefab","registerComponent","queries","pass","LiquidContainer","isEmpty","liquids","content","maxVolume","overridePrimary","liquid","overrideSecondary","_checkDestroyOnEmpty","destroyOnEmpty","isDestroying","pour","quantity","isPourable","spawn","SPWN_POOL_LIQUID","combineFrom","other","sum","onTryPour","interactor","position","getPos","onTryDrink","drinkLiquid","onGetInteractions","interactions","LIQUID_BLOOD","isFreeFlowing","SPWN_VIAL_HONEY","SPWN_VIAL_BLOOD","SPWN_VIAL_WATER","SPWN_STONE","SPWN_TWIG","SPWN_ASH","SPWN_GOBLIN_GRUNT","SPWN_GOBLIN_BRUISER","SPWN_GOBLIN_STARGAZER","SPWN_HUMAN_WANDERER","SPWN_PINE_TREE","SPWN_WOOD_WALL","SPWN_WOOD_DOOR","SPWN_WOOD_CHEST","SPWN_STONE_WALL","SPWN_DIRT_PATH","SPWN_CORPSE","SPWN_GLASS_SHARD","SPWN_AMULET","SPWN_CLOTH_ARMOR","SPWN_LEATHER_BOOTS","SPWN_SHORTSWORD","SPWN_GREATSWORD","SPWN_BATTLE_AXE","SPWN_HATCHET","SPWN_MACE","SPWN_WOOD_CLUB","SPWN_GROUND_GRASS","SPWN_GROUND_STONE","SPWN_HEAVY_PLATE_ARMOR","SPWN_LEATHER_ARMOR","SPWN_CLOTH_HOOD","SPWN_WIZARD_CAP","SPWN_HELM","simplePrefab","prefabName","spawnables","VialHoney","VialBlood","VialWater","Grass","GoblinGrunt","GoblinBruiser","GoblinStargazer","HumanWanderer","PineTree","PoolLiquid","setPos","createSpawnable","vial","liquidContainer","LIQUID_HONEY","LIQUID_WATER","LIQUID_OIL","colorDesc","onDrink","log","direction","glyphs","fg1s","speed","lifetime","goblin","brain","pushGoal","BoredGoalType","sword","equipmentSlot","handRight","equip","GoalType","goal","targets","killGoal","KillSomethingGoalType","SUCCESS","boredomGoal","FAILURE","originalIntent","INVALID","isDead","isDestroyed","handled","targetPos","result","computeAStar","cost","diagonalDistance","blocker","sharpTrap","segment","path","delta","moveGoal","MoveGoalType","allowDiagonals","neighbors","defaultSettings","settings","heuristic","manhattanDistance","PriorityQueue","cameFrom","costSoFar","startKey","goalKey","costs","put","currentKey","current","nextKey","graphCost","newCost","priority","previous","previousKey","unshift","dx","dy","peek","item","createItem","EatFoodGoalType","food","bruiser","club","pickRandom","arr","floor","random","randomInt","randomBool","randomWeightedBool","weight","wanderer","grass","ch","Door","isOpen","chOpen","chClosed","openDoor","shadowcaster","closeDoor","Blocker","Shadowcaster","onTryCloseDoor","onTryOpenDoor","onProjectileHit","stopProjectile","deflectProjectile","isAttached","Loot","take","newOwner","isInventoried","isOwnedBy","owner","inventory","removeLoot","addLoot","IsInventoried","Inventory","hasLoot","onEquipped","onTryPickUp","onTryTake","onQueryOwnership","getStackable","stackableIdentifier","find","Stackable","stackable","identifier","loot","existing","addOther","dropLoot","dropper","onTryOpen","accessible","isOpenable","onTryDrop","onThrown","increment","amount","STACKABLE_DEFAULT","STACKABLE_STONE","STACKABLE_ASH","STACKABLE_GLASS_SHARD","Throwable","throw","trajectory","initiator","stopped","deflected","hit","projectile","getStat","STAT_STRENGTH","damage","die","modifier","attack","Attack","attacker","defender","weaponName","moniker","damageType","ignoreDodge","onTryThrow","range","getSkillValue","SKILL_THROWING","simpleLineRenderer","onResult","cursor","bresenhamLine","onCancel","DMG_TYPE_BLUDGEONING","SKILL_SPEED","SKILL_ARMOR","SKILL_DODGE","lookup","ArmorSkill","SpeedSkill","ThrowingSkill","DodgeSkill","getSkill","getSkillName","compute","getSkillEquippedMod","modifiers","skill","getAllSkillEquippedMods","reduce","mods","getAllSkillEquippedModSums","mod","getArmorBlockPercent","getArmorBlockPercentDisplay","prcnt","Skill","baseStat","getModifiers","getModifierSum","cur","STAT_FINESSE","STAT_ATHLETICISM","STAT_TRICKERY","STAT_FAITH","getStatName","stat","stats","rollStat","statCheck","getSpeedPercent","getSpeedPercentDisplay","getDodgePercent","unscaled","DMG_TYPE_PIERCING","DMG_TYPE_SLASHING","DMG_TYPE_NECROTIC","verb","getDmgTypeName","getDmgTypeVerb","x0","y0","x1","y1","sx","sy","e2","bresenhamLineExclusive","line","truthy","isValid","opts","color","screen","FragileGlass","shatter","CONSOLE_EVENT_SHATTER","onCollideGround","onCollide","CONSOLE_EVENT_DAMAGE","CONSOLE_EVENT_DEAD","CONSOLE_EVENT_MISS","CONSOLE_EVENT_BLOCK","CONSOLE_EVENT_TRAP_SHARP","CONSOLE_EVENT_LEVEL","getMonikerSubject","Moniker","simpleDisplay","getMonikerIndirectObject","mapping","message","level","shouldAppear","isVisible","dodgePrcnt","dmgVerb","dmg","blocked","blockText","trap","getMessage","Brain","goals","onTakeAction","peekGoal","isFinished","popGoal","currentGoal","takeAction","removeGoal","goalsToDestroy","isSelf","isSiblingGoal","Body","onDeath","corpse","corpseSpawnable","Goal","GoalEvaluator","goalTypeMap","GoalTypes","goalType","getGoalType","disp","door","Logger","onLog","Position","getPosition","equals","Glyph","col","primaryColorOverride","secondaryColorOverride","Legs","onTryMove","targetX","targetY","targetTileEntities","nonHostile","factionMember","IsPlayer","Wandering","onBoredom","directionDelta","directions","shortName","fullName","adjacent","DIR_NW","DIR_N","DIR_NE","DIR_W","DIR_Z","DIR_E","DIR_SW","DIR_S","DIR_SE","allDirections","getAdjacentDeltas","directionFromDelta","dir","IsVisible","Explorable","Explored","Health","applyDamage","onAttacked","dodge","isDodged","isKilled","armor","armorPrcnt","enemy","onHeal","FactionMember","getFactionByName","FACTION_PLAYER","FACTION_VILLAGER","FACTION_GOBLIN","FACTION_NATURE","Faction","villager","nature","Eyes","canSee","onTryDetectHostiles","Particle","age","frame","chunks","percent","fg2s","bgs","startX","startY","ParticleEmitter","createParticle","particle","particleData","count","LootDropper","spawnLoot","tables","TBL_LOOT_GOBLIN","LootTableGoblin","TBL_LOOT_FOREST","LootTableForest","TBL_LOOT_BRUISER","LootTableBruiser","getTable","tableKey","pickLoot","tableKeys","WeightedTable","pick","spawnable","rows","currentW","chance","maxWeight","table","goblins","forest","IsEquipped","slotKey","onDropped","slot","unequip","Equipment","onTryEquip","slots","slotTypes","includes","slotType","header","icon","leadText","onRenderRow","isSelected","onSelect","onTryUnequip","isEquipped","EQ_SLOT_BODY","EQ_SLOT_HEAD","EQ_SLOT_NECK","EQ_SLOT_FEET","EQ_SLOT_ARM","EQ_SLOT_HAND","EquipmentSlot","equipment","onTryMelee","isPrimary","selfPos","isAdjacent","getWeaponType","WPN_TYPE_UNARMED","onQuerySkillMod","isOffhand","WPN_TYPE_WAR_HAMMER","WPN_TYPE_SLEDGE_HAMMER","WPN_TYPE_CLUB","WPN_TYPE_MACE","WPN_TYPE_HEAVY_AXE","WPN_TYPE_BATTLE_AXE","WPN_TYPE_GREATSWORD","WPN_TYPE_SHORTSWORD","WPN_TYPE_DAGGER","WPN_TYPE_STAFF","WPN_TYPE_HALBERD","WPN_TYPE_JAVELIN","WpnTypeUnarmed","family","WPN_FAMILY_HAMMER","WPN_FAMILY_AXE","WpnTypeBattleAxe","WpnTypeGreatsword","WpnTypeShortsword","WpnTypeMace","WPN_FAMILY_BLADE","WPN_FAMILY_POLEARM","getWeaponTypeName","getWeaponTypeFamily","getWeaponTypeDmgType","WPN_FAMILY_ARCHERY","WPN_FAMILY_UNARMED","WPN_FAMILY_CUDGEL","getWeaponFamilyName","WeaponType","_createAttack","weapon","roll","attacks","secondAttack","weaponDamageText","user","getShortDescription","fam","getAttacks","_getNeighborAttacks","attackerPos","defenderPos","deltaX","deltaY","flat","hostile","_tryAttackDefender","addStatus","STATUS_STUNNED","STATUS_BLEEDING","StatusBleeding","StatusStunned","getStatus","Status","STATUS_TYPE_CONDITION","isDot","getDmgPerTurn","potency","getPipCount","ticks","remainingLifetime","health","IsIncapacitated","isCompleted","Stats","_sumMods","getStatModifiers","getStatModifierSum","capitalize","modSum","strength","finesse","athleticism","trickery","faith","baseStrength","baseFinesse","baseAthleticism","baseTrickery","baseFaith","n","clamp","toUpperCase","substring","template","group1","group2","obj","replaced","first","Race","getRaceData","getModifier","onQueryStatMod","RACE_HUMAN","RACE_GOBLIN","RaceData","Weapon","weaponType","onTryUseMelee","Ground","SharpTrap","challenge","EquippedSkillMod","onQuerySkillModEquipped","Combustible","fire","fuel","getTemperature","setTemperature","getDieOutChance","getSparkChance","getCatchChance","intensity","onSpark","isOnFire","Fire","flashPoint","onTryIgnite","spawnableRemains","burnRate","extinguish","onTryExtinguish","ThermalCapacity","Abilities","onQueryAbilities","known","AbilityStatus","getAbility","isCoolingDown","cooldownDuration","currentCooldownDuration","currentDuration","currentChannelDuration","channelDuration","ability","isToggleable","isToggledOn","startCooldown","isComplete","skillMods","statMods","ABILITY_SPRINT","ABILITY_RAGE","ABILITY_CRIMSON_WELL","ABILITY_BLINK","ABILITY_JUMP","ABILITY_PRAYER_PROTECTION","SprintAbility","RageAbility","CrimsonWellAbility","BlinkAbility","JumpAbility","PrayerOfProtectionAbility","getAbilityStatus","abilityStatus","getStance","isStance","getChanneling","isChanneled","isChanneling","SimpleChannelAbility","ABILITY_TYPE_PRAYER","getCooldownDuration","getChannelDuration","getArmorModifier","getDescription","getSkillMods","onChannelComplete","createEmitter","ABILITY_TYPE_STANCE","ABILITY_TYPE_SHOUT","ABILITY_TYPE_STUNT","ABILITY_TYPE_SPELL","getAbilityTypeName","Ability","getDuration","execute","getStatMods","initiate","onConfirm","toggleOn","toggleOff","channel","cancelChannel","isCooldownComplete","getDisplayText","cd","remainingCooldownDuration","toFixed","isEnabled","simpleCursorRenderer","visible","prevPos","nextPos","SimpleDurationAbility","performLifeteal","enemyPos","SimpleToggledAbility","computeStrengthMod","computeSpeedMod","getJumpDistance","distance","word","BitmaskGlyph","BITMASK_WALL","updateGlyph","getMaskGlyph","mask","Level","levelUp","skillPoints","addXP","xp","nextLevelReq","onEnemyKilled","levelFactor","modeLookup","background","explored","worldX","worldY","temp","rgb","sqrt","temperatureGradient","renderTile","screenToWorld","isInView","getEntitiesAt","renderableZ","renderable","mode","beingsQuery","renderNearbyCreatures","beings","glyphOffset","relation","getEntityRelation","getAttitudeGlyph","statusOffset","dotLevel","statusType","barWidth","healthWidth","middle","primaryHP","secondaryHp","showTicks","turn","subTurn","padEnd","INPUT_DOMAIN_DEFAULT","cmd","registerCommand","_inputStack","getNextCommand","getCommandForInputEvent","pushDomain","domain","_domainStack","popDomain","lastIndexOf","getDomainCommands","_commands","matches","command","INPUT_DOMAIN_MAIN_MENU","INPUT_DOMAIN_ADVENTURE","INPUT_DOMAIN_LOOK","INPUT_DOMAIN_LIST","isKeyboard","InputCommand","INPUT_CMD_CONFIRM","KEY_ENTER","KEY_SPACE","INPUT_CMD_CANCEL","KEY_ESCAPE","INPUT_CMD_SAVE","KEY_S","INPUT_CMD_LOAD","KEY_L","INPUT_CMD_NEW_GAME","KEY_N","INPUT_CMD_WAIT","INPUT_CMD_MOVE_NW","KEY_Q","INPUT_CMD_MOVE_N","KEY_W","KEY_UP","INPUT_CMD_MOVE_NE","KEY_E","INPUT_CMD_MOVE_W","KEY_A","KEY_LEFT","INPUT_CMD_MOVE_E","KEY_D","KEY_RIGHT","INPUT_CMD_MOVE_SW","KEY_Z","INPUT_CMD_MOVE_S","KEY_X","KEY_DOWN","INPUT_CMD_MOVE_SE","KEY_C","INPUT_CMD_SELECT_NW","INPUT_CMD_SELECT_N","INPUT_CMD_SELECT_NE","INPUT_CMD_SELECT_W","INPUT_CMD_SELECT_E","INPUT_CMD_SELECT_SW","INPUT_CMD_SELECT_S","INPUT_CMD_SELECT_SE","INPUT_CMD_INTERACT","INPUT_CMD_LOOK","INPUT_CMD_PICK_UP","KEY_G","KEY_J","INPUT_CMD_INVENTORY","KEY_I","INPUT_CMD_EQUIPMENT","KEY_P","INPUT_CMD_CHARACTER","KEY_Y","INPUT_CMD_ABILITIES","KEY_T","inputEvent","KEY_CANCEL","KEY_HELP","KEY_BACK_SPACE","KEY_TAB","KEY_CLEAR","KEY_ENTER_SPECIAL","KEY_SHIFT","KEY_CONTROL","KEY_ALT","KEY_PAUSE","KEY_CAPS_LOCK","KEY_KANA","KEY_EISU","KEY_JUNJA","KEY_FINAL","KEY_HANJA","KEY_CONVERT","KEY_NONCONVERT","KEY_ACCEPT","KEY_MODECHANGE","KEY_PAGE_UP","KEY_PAGE_DOWN","KEY_END","KEY_HOME","KEY_SELECT","KEY_PRINT","KEY_EXECUTE","KEY_PRINTSCREEN","KEY_INSERT","KEY_DELETE","KEY_NUM_0","KEY_NUM_1","KEY_NUM_2","KEY_NUM_3","KEY_NUM_4","KEY_NUM_5","KEY_NUM_6","KEY_NUM_7","KEY_NUM_8","KEY_NUM_9","KEY_COLON","KEY_SEMICOLON","KEY_LESS_THAN","KEY_EQUALS","KEY_GREATER_THAN","KEY_QUESTION_MARK","KEY_AT","KEY_B","KEY_F","KEY_H","KEY_K","KEY_M","KEY_O","KEY_R","KEY_U","KEY_V","KEY_META","KEY_CONTEXT_MENU","KEY_SLEEP","KEY_NUMPAD_0","KEY_NUMPAD_1","KEY_NUMPAD_2","KEY_NUMPAD_3","KEY_NUMPAD_4","KEY_NUMPAD_5","KEY_NUMPAD_6","KEY_NUMPAD_7","KEY_NUMPAD_8","KEY_NUMPAD_9","KEY_MULTIPLY","KEY_ADD","KEY_SEPARATOR","KEY_SUBTRACT","KEY_DECIMAL","KEY_DIVIDE","KEY_F1","KEY_F2","KEY_F3","KEY_F4","KEY_F5","KEY_F6","KEY_F7","KEY_F8","KEY_F9","KEY_F10","KEY_F11","KEY_F12","KEY_F13","KEY_F14","KEY_F15","KEY_F16","KEY_F17","KEY_F18","KEY_F19","KEY_F20","KEY_F21","KEY_F22","KEY_F23","KEY_F24","KEY_NUM_LOCK","KEY_SCROLL_LOCK","KEY_WIN_OEM_FJ_JISHO","KEY_WIN_OEM_FJ_MASSHOU","KEY_WIN_OEM_FJ_TOUROKU","KEY_WIN_OEM_FJ_LOYA","KEY_WIN_OEM_FJ_ROYA","KEY_CIRCUMFLEX","KEY_EXCLAMATION","KEY_DOUBLE_QUOTE","KEY_HASH","KEY_DOLLAR","KEY_PERCENT","KEY_AMPERSAND","KEY_UNDERSCORE","KEY_OPEN_PAREN","KEY_CLOSE_PAREN","KEY_ASTERISK","KEY_PLUS","KEY_PIPE","KEY_HYPHEN_MINUS","KEY_OPEN_CURLY_BRACKET","KEY_CLOSE_CURLY_BRACKET","KEY_TILDE","KEY_VOLUME_MUTE","KEY_VOLUME_DOWN","KEY_VOLUME_UP","KEY_SEMICOLON_2","KEY_EQUALS_2","KEY_COMMA","KEY_MINUS","KEY_PERIOD","KEY_SLASH","KEY_BACK_QUOTE","KEY_OPEN_BRACKET","KEY_BACK_SLASH","KEY_CLOSE_BRACKET","KEY_QUOTE","KEY_META_2","KEY_ALTGR","KEY_WIN_ICO_HELP","KEY_WIN_ICO_00","KEY_WIN_ICO_CLEAR","KEY_WIN_OEM_RESET","KEY_WIN_OEM_JUMP","KEY_WIN_OEM_PA1","KEY_WIN_OEM_PA2","KEY_WIN_OEM_PA3","KEY_WIN_OEM_WSCTRL","KEY_WIN_OEM_CUSEL","KEY_WIN_OEM_ATTN","KEY_WIN_OEM_FINISH","KEY_WIN_OEM_COPY","KEY_WIN_OEM_AUTO","KEY_WIN_OEM_ENLW","KEY_WIN_OEM_BACKTAB","KEY_ATTN","KEY_CRSEL","KEY_EXSEL","KEY_EREOF","KEY_PLAY","KEY_ZOOM","KEY_PA1","KEY_WIN_OEM_CLEAR","MainMenuScreen","AdventureScreen","DeathScreen","InventoryScreen","InteractModalScreen","CursorScreen","LoadSectorScreen","EquipmentScreen","ListSelectionScreen","CharacterScreen","AbilityScreen","ConfirmationScreen","WaitScreen","ChannelScreen","setScreen","screenType","onLeave","onEnter","screenCtx","replaceScreen","popScreen","onUpdate","Screen","computeFOV","setFocus","onDirectionInput","playerPosition","targetPosition","hostileEntities","areEntitiesHostile","melee","doorEntity","move","onPickUpCommand","lootable","onInteract","items","interactable","onInteractDirection","handleInput","saveGame","loadGame","drawTags","drawFaction","drawTemperature","wait","isStarted","newGame","inputCommand","UI_GLYPH_BORDER_TERM_L","UI_BORDER_FG1","UI_BORDER_FG2","UI_GLYPH_BORDER_TERM_R","UI_GLYPH_BORDER_T","UI_GLYPH_BORDER_TL","UI_GLYPH_BORDER_TR","UI_GLYPH_BORDER_L","UI_GLYPH_BORDER_R","UI_GLYPH_BORDER_BL","UI_GLYPH_BORDER_B","UI_GLYPH_BORDER_BR","drawUIBox","drawUIWindow","title","titleText","titleWidth","titleOffset","iconWidth","gameOver","SelectableList","setItems","selectItem","selected","up","down","ypos","textLen","_items","_idx","refreshList","isBack","interaction","top","listPadding","xpos","weaponDmg","hasMod","NOOP","getOpts","worldToScreen","faction","getDisplay","tmpC","tmpF","prevousSector","nextSector","renderLoadingText","sectorId","entry","loadGameData","onSectorLoaded","prevText","nextText","selectSlot","onGetRowName","defaultRowRender","cancel","yOffset","nextLevelReqXp","healthMax","speedPrcnt","pad","modDir","PADDING_RIGHT","PADDING_HEIGHT","stance","xOffset","description","textW","confirmText","cancelText","onSelection","toggleSelection","option","confirm","bottom","textWidth","curTime","renderChanneling","center","maxLength","fract","getSetupData","serialized","setup","owned","teardown","actionQueue","turns","destroyEntities","cloneEntity","initiateTeardown","initiateSetup","prompt","filename","deleteFile","localStorage","setItem","JSON","stringify","file","startsWith","removeItem","saveSectorPositionData","positionData","saveSectorTemperatureData","temperatureData","saveSectorEntityData","loadSectorEntityData","getItem","parse","loadSectorPositionData","loadSectorTemperatureData","loadSavefileData","prevTurn","curTurn","positions","FastMap","getRandomEmptyPosition","sector","includeGround","ground","x2","y2","getEntitiesInRect","getEntitiesInRange","diameter","getNeighborEntities","isOutOfbounds","onPlayerOutOfBounds","enterSector","northSector","southSector","eastSector","westSector","_data","_idHash","delete","fov","FOV","isSquareVisible","setVisible","explorable","bitmaskGlyph","refreshMaskAndNeighbors","visibility","Util","util","Color","Text","FRAC","RNG","_seed","_s0","_s1","_s2","_c","getSeed","setSeed","seed","getUniform","getUniformInt","lowerBound","upperBound","getNormal","mean","stddev","u","getPercentage","shuffle","getWeightedValue","total","part","getState","setState","BACKENDS","Hex","Rect","Tile","TileGL","Term","DEFAULT_OPTIONS","DEFAULT_WIDTH","DEFAULT_HEIGHT","transpose","layout","fontSize","spacing","border","forceSquareRatio","fontFamily","fontStyle","fg","tileMap","tileSet","tileColorize","_dirty","_options","assign","setOptions","DEBUG","_tick","_backend","schedule","what","colors","ctor","getOptions","getContainer","computeSize","availWidth","availHeight","computeFontSize","computeTileSize","eventToPosition","touches","clientX","clientY","maxWidth","cx","cy","lines","tokens","token","isSpace","isPrevSpace","isFullWidth","isPrevFullWidth","cc","cch","_draw","clearBefore","Canvas","_spacingX","_spacingY","_hexSize","px","reverse","_ctx","_fill","chars","concat","fillText","hexSizeWidth","hexSizeHeight","hexSize","oldFont","measureText","ratio","_normalizedEventToPosition","nodeSize","beginPath","moveTo","lineTo","fill","_updateSize","charWidth","xprop","yprop","Backend","textAlign","rect","getBoundingClientRect","_canvasCache","_drawWithCache","_drawNoCache","hash","boxWidth","boxHeight","widthFraction","_colorCanvas","clearRect","fgs","tile","context","_uniforms","_gl","_initWebGL","alert","preserveDrawingBuffer","_updateTexture","gl","scissorY","scissor","COLOR_BUFFER_BIT","uniform2fv","uniform1f","uniform4fv","drawArrays","TRIANGLE_STRIP","program","vss","fss","vs","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","fs","FRAGMENT_SHADER","p","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","VS","FS","useProgram","Float32Array","buf","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","createQuad","UNIFORMS","getUniformLocation","_program","enable","BLEND","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","SCISSOR_TEST","canvasSize","viewport","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","REPEAT","TEXTURE_WRAP_T","pixelStorei","UNPACK_FLIP_Y_WEBGL","texImage2D","RGBA","UNSIGNED_BYTE","colorCache","Number","$","fromString","cached","CACHE","color1","add_","multiply","multiply_","interpolate","color2","factor","interpolateHSL","hsl1","rgb2hsl","hsl2","hsl2rgb","randomize","hue2rgb","q","toRGB","clamped","toHex","toString","padStart","termcolor","DST_COLORS","_offset","_cursor","_lastColor","avail","process","stdout","write","positionToAnsi","newColor","colorToAnsi","columns","RE_COLORS","TYPE_TEXT","TYPE_NEWLINE","TYPE_FG","TYPE_BG","measure","tokenize","lineWidth","offset","lineLength","lastTokenWithSpace","breakInsideToken","nextIndex","breakIndex","lastTextToken","breakLines","tokenIndex","removeBreakChar","newBreakToken","newTextToken","DIRS","4","8","6","KEYS","VK_CANCEL","VK_HELP","VK_BACK_SPACE","VK_TAB","VK_CLEAR","VK_RETURN","VK_ENTER","VK_SHIFT","VK_CONTROL","VK_ALT","VK_PAUSE","VK_CAPS_LOCK","VK_ESCAPE","VK_SPACE","VK_PAGE_UP","VK_PAGE_DOWN","VK_END","VK_HOME","VK_LEFT","VK_UP","VK_RIGHT","VK_DOWN","VK_PRINTSCREEN","VK_INSERT","VK_DELETE","VK_0","VK_1","VK_2","VK_3","VK_4","VK_5","VK_6","VK_7","VK_8","VK_9","VK_COLON","VK_SEMICOLON","VK_LESS_THAN","VK_EQUALS","VK_GREATER_THAN","VK_QUESTION_MARK","VK_AT","VK_A","VK_B","VK_C","VK_D","VK_E","VK_F","VK_G","VK_H","VK_I","VK_J","VK_K","VK_L","VK_M","VK_N","VK_O","VK_P","VK_Q","VK_R","VK_S","VK_T","VK_U","VK_V","VK_W","VK_X","VK_Y","VK_Z","VK_CONTEXT_MENU","VK_NUMPAD0","VK_NUMPAD1","VK_NUMPAD2","VK_NUMPAD3","VK_NUMPAD4","VK_NUMPAD5","VK_NUMPAD6","VK_NUMPAD7","VK_NUMPAD8","VK_NUMPAD9","VK_MULTIPLY","VK_ADD","VK_SEPARATOR","VK_SUBTRACT","VK_DECIMAL","VK_DIVIDE","VK_F1","VK_F2","VK_F3","VK_F4","VK_F5","VK_F6","VK_F7","VK_F8","VK_F9","VK_F10","VK_F11","VK_F12","VK_F13","VK_F14","VK_F15","VK_F16","VK_F17","VK_F18","VK_F19","VK_F20","VK_F21","VK_F22","VK_F23","VK_F24","VK_NUM_LOCK","VK_SCROLL_LOCK","VK_CIRCUMFLEX","VK_EXCLAMATION","VK_DOUBLE_QUOTE","VK_HASH","VK_DOLLAR","VK_PERCENT","VK_AMPERSAND","VK_UNDERSCORE","VK_OPEN_PAREN","VK_CLOSE_PAREN","VK_ASTERISK","VK_PLUS","VK_PIPE","VK_HYPHEN_MINUS","VK_OPEN_CURLY_BRACKET","VK_CLOSE_CURLY_BRACKET","VK_TILDE","VK_COMMA","VK_PERIOD","VK_SLASH","VK_BACK_QUOTE","VK_OPEN_BRACKET","VK_BACK_SLASH","VK_CLOSE_BRACKET","VK_QUOTE","VK_META","VK_ALTGR","VK_WIN","VK_KANA","VK_HANGUL","VK_EISU","VK_JUNJA","VK_FINAL","VK_HANJA","VK_KANJI","VK_CONVERT","VK_NONCONVERT","VK_ACCEPT","VK_MODECHANGE","VK_SELECT","VK_PRINT","VK_EXECUTE","VK_SLEEP","StringGenerator","words","order","prior","_boundary","String","fromCharCode","_suffix","_prefix","_priorValues","generate","_sample","_join","observe","_split","subcontext","_observeEvent","getStats","priorCount","dataCount","eventCount","_backoff","available","EventQueue","_time","_events","MinHeap","getTime","getEventTime","heap","timestamp","lessThan","loc","updateUp","updateDown","last","parentNode","leftChildNode","rightChildNode","existNode","swap","minNode","numbers","validnumbers","minimal","leftChild","rightChild","debugPrint","Simple","Speed","Action","Scheduler","repeat","_current","_repeat","getTimeOf","getSpeed","_defaultDuration","setDuration","DiscreteShadowcasting","PreciseShadowcasting","RecursiveShadowcasting","callback","_lightPasses","A","blocks","DATA","_getCircle","angle","_visibleCoords","v1","lightPassesCallback","topology","dirs","countFactor","startOffset","A1","A2","SHADOWS","neighborCount","_checkVisibility","index1","edge1","index2","edge2","visibleLength","P","P1","P2","OCTANTS","_renderOctant","compute180","previousOctant","nextPreviousOctant","nextOctant","compute90","octant","_castVisibility","visSlopeStart","visSlopeEnd","radius","xx","xy","yx","yy","newStart","mapX","mapY","slopeStart","slopeEnd","Arena","Uniform","Cellular","Digger","EllerMaze","DividedMaze","IceyMaze","Rogue","w","_fillMap","Dungeon","roomWidth","roomHeight","roomDugPercentage","timeLimit","_map","_dug","_roomAttempts","_corridorAttempts","_connected","_unconnected","_digCallback","_canBeDugCallback","_isWallCallback","t1","_rooms","_generateRooms","_generateCorridors","room","_generateRoom","Room","_corridors","clearDoors","connected","room1","_closestRoom","room2","_connectRooms","rooms","dist","getCenter","dirIndex1","dirIndex2","center1","center2","diffX","diffY","getLeft","getRight","getTop","getBottom","_placeInWall","_digLine","rotation","mid","mid1","mid2","addDoor","dirIndex","lastBadIndex","points","corridor","Corridor","getRooms","getCorridors","Feature","doorX","doorY","_x1","_y1","_x2","_y2","_doors","getDoors","addDoors","isWallCallback","debug","canBeDugCallback","digCallback","endX","endY","_startX","_startY","_endX","_endY","_endsWithAWall","corridorLength","nx","ny","ok","firstCornerBad","secondCornerBad","createPriorityWalls","priorityWallCallback","born","survive","_dirs","probability","newMap","widthStep","widthStart","ncount","_getNeighbors","_serviceCallback","connectionCallback","allFreeSpace","notConnected","widthStarts","_freeSpace","_pointKey","_findConnected","_getFromTo","local","_tunnelToConnected6","_tunnelToConnected","k","pp","connectedKeys","notConnectedKeys","_getClosest","point","minPoint","minDist","stack","keepNotConnected","tests","pkey","stepWidth","FEATURES","dugPercentage","_features","_featureAttempts","_walls","_priorityWallCallback","area","_firstRoom","priorityWalls","wall","_findWall","_getDiggingDirection","featureAttempts","_tryFeature","_removeSurroundingWalls","_addDoors","prio1","prio2","featureName","feature","createRandomAt","deltas","addToList","removeFromList","_stack","_process","_partitionRoom","availX","availY","walls","solid","hole","regularity","_regularity","done","_randomize","_isFree","connectedCells","cellWidth","cellHeight","_calculateRoomSize","_initRooms","_connectUnconnectedRooms","_createRandomRoomConnections","_createRooms","_createCorridors","ncgx","ncgy","otherRoom","dirToCheck","cgx","cgy","found","validRoom","cw","dirIdx","newI","newJ","roomw","roomh","cwp","chp","sxOffset","syOffset","ii","jj","_getWallPosition","aRoom","aDirection","rx","ry","_drawCorridor","startPosition","endPosition","tempDist","xDir","yDir","moves","xAbs","yAbs","firstHalf","secondHalf","connection","otherWall","Simplex","F2","G2","Noise","gradients","_gradients","permutations","_perms","_indexes","xin","yin","gi","i1","j1","perms","indexes","n0","n1","n2","t0","grad","t2","Dijkstra","AStar","Path","toX","toY","passableCallback","_computed","_todo","_add","fromX","fromY","_compute","neighbor","_toX","_toY","_passableCallback","_done","_fromX","_fromY","_distance","f","itemF","scheduler","_scheduler","_lock","lock","act","Lighting","reflectivityCallback","_reflectivityCallback","passes","emissionThreshold","_lights","_reflectivityCache","_fovCache","setFOV","_fov","setLight","clearLights","lightingCallback","doneCells","emittingCells","litCells","_emitLight","_computeEmitters","litKey","_emitLightFromCell","reflectivity","emission","_updateFOV","fovKey","formFactor","key1","vis","emitterData","emitter","particleEmitter","isExpired","targetCount","setRelation","getFactionById","isHostile","factionA","factionB","_relationKey","idA","idB","relations","getRelation","entityA","entityB","memberA","memberB","onWindowResize","clampX","innerWidth","renderedTileWidth","clampY","innerHeight","renderedTileHeight","topLeftWorldX","padding","_focusX","topLeftWorldY","_focusY","setZoom","setPadding","getScreenRect","fpsElement","getElementsByClassName","frames","frameCount","innerText","getSector","WorldData","getStartingSector","exploredSectorIds","Sector","getSectorByCoord","getExits","exits","connectionsNorth","connectionsWest","generator","getGenerator","populate","ForestGenerator","ForestStrongholdGenerator","ForestCabinsGenerator","ForestTownGenerator","SectorGenerator","UniformScheme","theme","TILE_THEME_FOREST","mediumRooms","TILE_THEME_CABIN","includeWalls","distancedRooms","getUnassignedTiles","digExits","digExit","exit","closest","closestDistance","isType","TILE_TYPE_FLOOR","getClosestTile","setTileType","TILE_TYPE_WALL","isOnEdge","tileTypeMatches","getRoomForTile","addExit","TILE_TYPE_OUT_OF_BOUNDS","TileData","TILE_THEME_CASTLE","createTileData","ForestTheme","CastleTheme","CabinTheme","getThemePopulator","TileThemePopulator","getEntities","populateTile","trySpawn","tileArr","attempts","getRandomEmptyTile","interiorTiles","chest","TileScheme","TileContainer","MapGenerator","digPercentage","createRoom","defaultType","getTile","setTileTheme","getTileType","addRoom","RoomData","combineOther","cloneTo","setTheme","relativeExits","endWidth","endHeight","borders","interior","addRelativeExit","containsPoint","intersects","c1","c2","c3","c4","bytes","crypto","getRandomValues","customRandom","alphabet","getRandom","LN2","step","customAlphabet","byte","urlAlphabet","populateRoom","exitOffset","castle","DenseCastleScheme","curId","createNodeId","splitNodeVertical","cut","leftId","rightId","isLeaf","parentId","siblingId","splitNodeHorizontal","topId","bottomId","minRoomWidth","minRoomHeight","maxRoomWidth","maxRoomHeight","splitIgnoreChance","loopiness","nodes","graph","sibling","doorCandidates","hasSib","tryAddLoop","north","south","east","west","ScatteredScheme","minCount","edges","borderTiles","isTopLeftCorner","isBottomLeftCorner","isBottomRightCorner","isTopRightCorner","addBorder","doors","walkways","generatePath","doorA","doorB","attempt","maxAttempts","roomPadding","maxCount","minWidth","minHeight","maxHeight","createBox","overlaps","box","messages","msgs","consoleHeight","Track","intro","isPlaying","host","pathname","track","tracks","currentTrack","rv","sharpTrapQuery","turnDelta","trapEntity","combustible","sparkChance","dieChance","isOutOfFuel","grid","MemoryGrid","getAmbientTemperature","ambient","getAmbientCapacity","capacity","getCapacity","hasCap","hasFire","cap","thermalCapacity","copyToPrevious","avg","avgArray","sumArray","f0","f1","lerp2","getMaskNeighbors","refreshMask","sumMask","refreshAll","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","getter","__esModule","getPrototypeOf","__proto__","ns","getOwnPropertyNames","defineProperty","globalThis","Function","toStringTag"],"mappings":"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","file":"main.53b099f53f667e14518e.js","sourcesContent":["var getProto = Object.getPrototypeOf ? (obj) => Object.getPrototypeOf(obj) : (obj) => obj.__proto__;\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(key => def[key] = () => value[key]);\n\t}\n\tdef['default'] = () => value;\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","import { loadImages } from './utils/ImageLoader';\nimport { Howler } from 'howler';\n\nloadImages().then(() => {\n    const { game } = require('./core/Game');\n\n    window.game = game;\n    window.ecs = game.ecs;\n\n    game.start();\n});\n\nHowler.volume(0);\n","const loadImage = (img) =>\n    new Promise((resolve, reject) => {\n        if (img.complete) {\n            resolve();\n        }\n\n        img.addEventListener('load', () => {\n            resolve();\n        });\n\n        img.addEventListener('error', (error) => {\n            reject(error);\n        });\n    });\n\nexport const loadImages = () => {\n    const imgs = Array.from(document.querySelectorAll('img'));\n\n    return Promise.all(imgs.map(loadImage));\n};\n","/*!\n *  howler.js v2.2.1\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Handle stopping all sounds globally.\n     */\n    stop: function() {\n      var self = this || Howler;\n\n      // Loop through all Howls and stop them.\n      for (var i=0; i<self._howls.length; i++) {\n        self._howls[i].stop();\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var checkOpera = self._navigator && self._navigator.userAgent.match(/OPR\\/([0-6].)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!(audioTest.canPlayType('audio/wav; codecs=\"1\"') || audioTest.canPlayType('audio/wav')).replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        m4b: !!(audioTest.canPlayType('audio/x-m4b;') || audioTest.canPlayType('audio/m4b;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        webm: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      if (self._audioUnlocked || !self.ctx) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        while (self._html5AudioPool.length < self.html5PoolSize) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n            break;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      //.Check if the audio is locked and throw a warning.\n      var testPlay = new Audio().play();\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay.catch(function() {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n\n        // Handle updating the state of the audio context after suspending.\n        var handleSuspension = function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        };\n\n        // Either the state gets suspended or it is interrupted.\n        // Either way, we need to update the state to suspended.\n        self.ctx.suspend().then(handleSuspension, handleSuspension);\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self.ctx.state !== 'interrupted' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended' || self.state === 'running' && self.ctx.state === 'interrupted') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean' || o.preload === 'metadata') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhr = {\n        method: o.xhr && o.xhr.method ? o.xhr.method : 'GET',\n        headers: o.xhr && o.xhr.headers ? o.xhr.headers : null,\n        withCredentials: o.xhr && o.xhr.withCredentials ? o.xhr.withCredentials : false,\n      };\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload && self._preload !== 'none') {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running' && Howler.ctx.state !== 'interrupted') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n\n          var listener = function() {\n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = Math.min(Math.max(0, parseFloat(from)), 1);\n      to = Math.min(Math.max(0, parseFloat(to)), 1);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Make sure the volume is in the right bounds.\n        if (diff < 0) {\n          vol = Math.max(to, vol);\n        } else {\n          vol = Math.min(to, vol);\n        }\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return self;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (typeof seek === 'number' && (self._state !== 'loaded' || self._playLock)) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            self._emit('seek', id);\n\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n          sounds[i]._node.removeEventListener('ended', sounds[i]._endFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else if (!Howler.noAudio) {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Listen for the 'ended' event on the sound to account for edge-case where\n        // a finite sound has a duration of Infinity.\n        self._endFn = self._endListener.bind(self);\n        self._node.addEventListener('ended', self._endFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = parent._preload === true ? 'auto' : parent._preload;\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    },\n\n    /**\n     * HTML5 Audio ended listener callback.\n     */\n    _endListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Only handle the `ended`` event if the duration is Infinity.\n      if (parent._duration === Infinity) {\n        // Update the parent duration to match the real audio duration.\n        // Round up the duration to account for the lower precision in HTML5 Audio.\n        parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n        // Update the sprite that corresponds to the real duration.\n        if (parent._sprite.__default[1] === Infinity) {\n          parent._sprite.__default[1] = parent._duration * 1000;\n        }\n\n        // Run the regular ended method.\n        parent._ended(self);\n      }\n\n      // Clear the event listener since the duration is now correct.\n      self._node.removeEventListener('ended', self._endFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open(self._xhr.method, url, true);\n      xhr.withCredentials = self._xhr.withCredentials;\n      xhr.responseType = 'arraybuffer';\n\n      // Apply any custom headers to the request.\n      if (self._xhr.headers) {\n        Object.keys(self._xhr.headers).forEach(function(key) {\n          xhr.setRequestHeader(key, self._xhr.headers[key]);\n        });\n      }\n\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  }\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Add to global in Node.js (for testing, etc).\n  if (typeof global !== 'undefined') {\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  } else if (typeof window !== 'undefined') {  // Define globally in case AMD is not available or unused.\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.2.1\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n      }\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upX.setTargetAtTime(xUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upY.setTargetAtTime(yUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upZ.setTargetAtTime(zUp, Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n      }\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              if (typeof sound._panner.positionX !== 'undefined') {\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\n              } else {\n                sound._panner.setPosition(pan, 0, 0);\n              }\n            } else {\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.positionX !== 'undefined') {\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setPosition(x, y, z);\n            }\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.orientationX !== 'undefined') {\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Update the panner values or create a new panner if none exists.\n        var panner = sound._panner;\n        if (panner) {\n          panner.coneInnerAngle = pa.coneInnerAngle;\n          panner.coneOuterAngle = pa.coneOuterAngle;\n          panner.coneOuterGain = pa.coneOuterGain;\n          panner.distanceModel = pa.distanceModel;\n          panner.maxDistance = pa.maxDistance;\n          panner.refDistance = pa.refDistance;\n          panner.rolloffFactor = pa.rolloffFactor;\n          panner.panningModel = pa.panningModel;\n        } else {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      } else if (self._panner) {\n        // Disconnect the panner.\n        self._panner.disconnect(0);\n        self._panner = undefined;\n        parent._refreshBuffer(self);\n      }\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n\n      if (typeof sound._panner.positionX !== 'undefined') {\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      }\n\n      if (typeof sound._panner.orientationX !== 'undefined') {\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n      }\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id, true);\n    }\n  };\n})();\n","import Renderer from './rendering/RenderManager';\nimport InputController from './input/InputController';\nimport ActionSystem from '../systems/ActionSystem';\nimport RenderSystem from '../systems/RenderSystem';\nimport UISystem from '../systems/UISystem';\nimport MouseManager from './input/MouseManager';\nimport CommandManager from './input/CommandManager';\nimport ScreenManager from './screens/ScreenManager';\nimport PlayerManager from './PlayerManager';\nimport ECS from '../ecs';\nimport GameStateManager from './GameStateManager';\nimport ClockManager from './ClockManager';\nimport MapManager from './MapManager';\nimport FOVSystem from '../systems/FOVSystem';\nimport DeathSystem from '../systems/DeathSystem';\nimport ParticleSystem from '../systems/ParticleSystem';\nimport FactionManager from './FactionManager';\nimport CameraManager from './CameraManager';\nimport FPSMonitoringSystem from '../systems/FPSMonitoringSystem';\nimport { WorldManager } from './WorldManager';\nimport ConsoleManager from './ConsoleManager';\nimport DestroySystem from '../systems/DestroySystem';\nimport MusicManager from './MusicManager';\nimport StatusSystem from '../systems/StatusSystem';\nimport LiquidSystem from '../systems/LiquidSystem';\nimport TrapSystem from '../systems/TrapSystem';\nimport FireSystem from '../systems/FireSystem';\nimport TemperatureSystem from '../systems/TemperatureSystem';\nimport AbilitySystem from '../systems/AbilitySystem';\nimport BitmaskManager from './BitmaskManager';\n\nexport default class Game {\n    #lastUpdate;\n\n    get ecs() {\n        return this.engine.engine;\n    }\n\n    constructor() {\n        this.engine = new ECS(this);\n        this.music = new MusicManager(this);\n        this.mouse = new MouseManager(this);\n        this.clock = new ClockManager(this);\n        this.renderer = new Renderer(this);\n        this.state = new GameStateManager(this);\n        this.world = new WorldManager(this);\n        this.map = new MapManager(this);\n        this.camera = new CameraManager(this);\n        this.factions = new FactionManager(this);\n        this.player = new PlayerManager(this);\n        this.commands = new CommandManager(this);\n        this.screens = new ScreenManager(this);\n        this.input = new InputController(this);\n        this.console = new ConsoleManager(this);\n        this.bitmasks = new BitmaskManager(this);\n\n        this.actionSystem = new ActionSystem(this);\n        this.deathSystem = new DeathSystem(this);\n        this.statusSystem = new StatusSystem(this);\n        this.FOVSystem = new FOVSystem(this);\n        this.renderSystem = new RenderSystem(this);\n        this.UISystem = new UISystem(this);\n        this.particles = new ParticleSystem(this);\n        this.fps = new FPSMonitoringSystem(this);\n        this.destroySystem = new DestroySystem(this);\n        this.liquidSystem = new LiquidSystem(this);\n        this.trapSystem = new TrapSystem(this);\n        this.fireSystem = new FireSystem(this);\n        this.temperature = new TemperatureSystem(this);\n        this.abilities = new AbilitySystem(this);\n    }\n\n    start() {\n        this.#lastUpdate = Date.now();\n        this.boundLoop = this.loop.bind(this);\n        requestAnimationFrame(this.loop.bind(this));\n    }\n\n    updateAdventureSystems(dt) {\n        for (let i = 0; i < 20; i++) {\n            this.clock.update(dt);\n            const playerTurn = this.actionSystem.update(dt);\n\n            if (playerTurn) {\n                this.updatePlayerSystems(dt);\n            }\n\n            this.liquidSystem.update(dt);\n            this.trapSystem.update(dt);\n            this.fireSystem.update(dt);\n            this.temperature.update(dt);\n            this.statusSystem.update(dt);\n            this.abilities.update(dt);\n            this.deathSystem.update(dt);\n            this.destroySystem.update(dt);\n\n            if (playerTurn) {\n                return;\n            }\n        }\n    }\n\n    updatePlayerSystems(dt) {\n        this.FOVSystem.update(dt);\n        this.renderSystem.update(dt);\n        this.particles.update(dt);\n        this.UISystem.update(dt);\n        this.map.update(dt);\n        this.console.render(dt);\n    }\n\n    loop(t) {\n        const now = Date.now();\n        const dt = now - this.#lastUpdate;\n\n        this.screens.update(dt);\n        this.fps.update(dt);\n        this.renderer.render();\n\n        this.#lastUpdate = now;\n\n        requestAnimationFrame(this.boundLoop);\n    }\n}\n\nexport const game = new Game();\n","import Manager from '../Manager';\nimport Display from './Display';\nimport spritesheets from './spritesheets';\n\nexport default class Renderer extends Manager {\n    tileWidth = 16;\n    tileHeight = 16;\n    #spritesheets = {};\n    #display = null;\n\n    get display() {\n        return this.#display;\n    }\n\n    get canvas() {\n        return this.display.canvas;\n    }\n\n    constructor(game) {\n        super(game);\n\n        spritesheets().forEach((spritesheet) => {\n            this.#spritesheets[spritesheet.name] = spritesheet;\n        });\n\n        this.#display = new Display({\n            width: 20,\n            height: 20,\n            tileWidth: this.tileWidth,\n            tileHeight: this.tileHeight,\n        });\n\n        document.body.appendChild(this.display.canvas);\n    }\n\n    resizeDisplay(width, height, zoom) {\n        this.display.setSize(width, height, zoom);\n    }\n\n    draw(x, y, char, fg1 = '#adb8bc', fg2 = '#333', bg) {\n        const sprite = this.#spritesheets.tiles.getSprite(char);\n\n        this.display.draw(x, y, sprite, fg1, fg2, bg);\n    }\n\n    drawUI(x, y, char, fg1 = '#adb8bc', fg2 = '#333', bg) {\n        const sprite = this.#spritesheets.ui.getSprite(char);\n\n        this.display.draw(x, y, sprite, fg1, fg2, bg);\n    }\n\n    computeTextWidth(text) {\n        return text.length * 0.5;\n    }\n\n    computeTextWidthTile(text) {\n        return Math.ceil(this.computeTextWidth(text));\n    }\n\n    drawTextWrapping(x, y, width, text, fg1, fg2, bg) {\n        if (this.computeTextWidthTile(text) < width) {\n            return this.drawText(x, y, text, fg1, fg2, bg);\n        }\n\n        let left;\n        let right;\n        let lastSpace = -1;\n\n        for (let i = 0; i < text.length; i++) {\n            const nextLeft = text.substr(0, i);\n\n            if (this.computeTextWidthTile(nextLeft) >= width) {\n                break;\n            }\n\n            if (text.charAt(i) === ' ') {\n                left = nextLeft;\n                right = text.substr(i, text.length - left.length).trimLeft();\n                lastSpace = i;\n            }\n        }\n\n        if (lastSpace >= 0) {\n            this.drawText(x, y, left, fg1, fg2, bg);\n            this.drawTextWrapping(x, y + 1, width, right, fg1, fg2, bg);\n        }\n    }\n\n    drawText(x, y, text, fg1 = '#adb8bc', fg2 = '#333', bg) {\n        for (let i = 0; i < text.length; i++) {\n            const sprite = this.#spritesheets.font.getSprite(text.charAt(i));\n\n            this.display.draw(x + 0.5 * i, y, sprite, fg1, fg2, bg);\n        }\n    }\n\n    drawTextCenter(y, text, fg1 = '#adb8bc', fg2 = '#333', bg) {\n        const len = this.computeTextWidth(text);\n\n        this.drawText(\n            Math.ceil((this.game.camera.width - len) / 2),\n            y,\n            text,\n            fg1,\n            fg2,\n            bg\n        );\n    }\n\n    clear() {\n        this.display.clear();\n    }\n\n    clearArea(x, y, width, height) {\n        this.display.clearArea(x, y, width, height);\n    }\n\n    pxToTile(xPx, yPx) {\n        const x = Math.trunc(xPx / this.tileWidth);\n        const y = Math.trunc(yPx / this.tileHeight);\n\n        return { x, y };\n    }\n\n    render() {\n        this.display.render();\n    }\n}\n","export default class Manager {\n    #game;\n\n    get game() {\n        return this.#game;\n    }\n\n    constructor(game) {\n        this.#game = game;\n    }\n\n    onNewGame() {}\n    getSaveGameData() {}\n}\n","import Grid from '../../utils/Grid';\n\nexport default class Display {\n    ctx;\n    canvas;\n    width;\n    height;\n    zoom = 1;\n    tileWidth;\n    tileHeight;\n    cells;\n    clearColor = '#1f1313';\n\n    constructor({ width, height, tileWidth, tileHeight }) {\n        this.tileWidth = tileWidth;\n        this.tileHeight = tileHeight;\n\n        this.cells = new Grid(width * 2, height, () => null);\n        this.cells.suppressOOBWarn = true;\n\n        this.canvas = document.createElement('canvas');\n        this.ctx = this.canvas.getContext('2d', { alpha: false });\n        this.ctx.globalCompositeOperation = 'destination-over';\n\n        this.ctx.font = `${this.tileHeight}px monospace`;\n        this.ctx.textBaseline = 'top';\n\n        this.setSize(width, height);\n    }\n\n    setSize(width, height, zoom) {\n        this.width = width;\n        this.height = height;\n        this.zoom = zoom;\n\n        const widthPx = this.tileWidth * this.width;\n        const heightPx = this.tileHeight * this.height;\n\n        this.canvas.style.cssText = `width: ${widthPx}px; height: ${heightPx}px; transform: scale(${this.zoom})`;\n        this.canvas.width = widthPx;\n        this.canvas.height = heightPx;\n\n        this.cells.clearAndResize(width * 2, height);\n    }\n\n    draw(x, y, sprite, fg1, fg2, bg) {\n        this.cells.set(x * 2, y, {\n            img: sprite.colorize(fg1, fg2),\n            width: sprite.width,\n            height: sprite.height,\n            bg,\n            x,\n            y,\n        });\n    }\n\n    clear() {\n        this.ctx.fillStyle = this.clearColor;\n        this.ctx.fillRect(\n            0,\n            0,\n            this.tileWidth * this.width,\n            this.tileHeight * this.height\n        );\n        this.cells.clear();\n    }\n\n    clearArea(x, y, width, height) {\n        this.ctx.fillStyle = this.clearColor;\n        this.ctx.fillRect(\n            x * this.tileWidth,\n            y * this.tileHeight,\n            this.tileWidth * width,\n            this.tileHeight * height\n        );\n\n        const offsetX = x * 2;\n\n        for (let i = 0; i < width; i++) {\n            for (let j = 0; j < height; j++) {\n                const cellX = offsetX + i * 2;\n                const cellY = y + j;\n\n                this.cells.set(cellX, cellY, undefined);\n                this.cells.set(cellX + 1, cellY, undefined);\n            }\n        }\n    }\n\n    render() {\n        this.cells.data\n            .filter((c) => c)\n            .forEach((cell) => {\n                const pixelX = cell.x * this.tileWidth;\n                const pixelY = cell.y * this.tileHeight;\n\n                if (cell.bg) {\n                    this.ctx.fillStyle = cell.bg;\n                    this.ctx.fillRect(pixelX, pixelY, cell.width, cell.height);\n                }\n\n                if (cell.img) {\n                    this.ctx.drawImage(cell.img, pixelX, pixelY);\n                }\n            });\n    }\n}\n","export default class Grid {\n    _width = 0;\n    _height = 0;\n    data = [];\n    suppressOOBWarn = false;\n    defaultValueGenerator = () => null;\n\n    get width() {\n        return this._width;\n    }\n\n    get height() {\n        return this._height;\n    }\n\n    get size() {\n        return this._width * this._height;\n    }\n\n    constructor(width, height, defaultValueGenerator = () => null) {\n        this._width = width;\n        this._height = height;\n        this.defaultValueGenerator = defaultValueGenerator;\n\n        this.clear();\n    }\n\n    idx(x, y) {\n        return y * this._width + x;\n    }\n\n    coord(idx) {\n        return {\n            x: Math.trunc(idx % this._width),\n            y: Math.trunc(idx / this._width),\n        };\n    }\n\n    clear() {\n        this.data = [];\n\n        for (let i = 0; i < this.size; i++) {\n            const { x, y } = this.coord(i);\n\n            this.data[i] = this.defaultValueGenerator(x, y);\n        }\n    }\n\n    setAll(value) {\n        this.data = [];\n\n        for (let i = 0; i < this.size; i++) {\n            this.data[i] = value;\n        }\n    }\n\n    set(x, y, value) {\n        if (this.isOutOfBounds(x, y)) {\n            if (!this.suppressOOBWarn) {\n                console.warn(\n                    `Trying to set out-of-bounds coordinates (${x}, ${y}) to value ${value}`\n                );\n            }\n            return;\n        }\n\n        const idx = this.idx(x, y);\n\n        this.data[idx] = value;\n    }\n\n    serialize() {\n        const entries = [...this.data];\n\n        return {\n            width: this.width,\n            height: this.height,\n            entries,\n        };\n    }\n\n    deserialize(data) {\n        this._width = data.width;\n        this._height = data.height;\n        this.data = data.entries;\n    }\n\n    get(x, y) {\n        if (this.isOutOfBounds(x, y)) {\n            return this.defaultValueGenerator();\n        }\n\n        return this.data[this.idx(x, y)];\n    }\n\n    isOutOfBounds(x, y) {\n        return x < 0 || y < 0 || x >= this._width || y >= this.height;\n    }\n\n    getNeighbors(x, y) {\n        return [\n            this.get(x - 1, y - 1), // TOP LEFT\n            this.get(x, y - 1), // TOP\n            this.get(x + 1, y - 1), // TOP RIGHT\n            this.get(x - 1, y), // LEFT\n            this.get(x + 1, y), // RIGHT\n            this.get(x - 1, y + 1), // BOTTOM LEFT\n            this.get(x, y + 1), // BOTTOM\n            this.get(x + 1, y + 1), // BOTTOM RIGHT\n        ];\n    }\n\n    clearAndResize(width, height) {\n        this._width = width;\n        this._height = height;\n        this.clear();\n    }\n}\n","import SpriteSheet from './SpriteSheet';\n\nexport default () => {\n    const tileImage = document.getElementById('spritesheet-tiles');\n    const fontImage = document.getElementById('spritesheet-font');\n    const uiImage = document.getElementById('spritesheet-ui');\n\n    return [\n        new SpriteSheet('tiles', tileImage),\n        new SpriteSheet('font', fontImage),\n        new SpriteSheet('ui', uiImage),\n    ];\n};\n","import cp437 from './cp437';\nimport Sprite from './Sprite';\n\nexport default class SpriteSheet {\n    #name = null;\n    #defaultGlyph = '?';\n    #sprites = {};\n\n    get name() {\n        return this.#name;\n    }\n\n    get width() {\n        return this.image.width;\n    }\n\n    get height() {\n        return this.image.height;\n    }\n\n    get spriteCountX() {\n        return 16;\n    }\n\n    get spriteCountY() {\n        return 16;\n    }\n\n    constructor(name, image) {\n        this.#name = name;\n        this.image = image;\n\n        this.spriteWidth = this.image.width / this.spriteCountX;\n        this.spriteHeight = this.image.height / this.spriteCountY;\n\n        cp437.forEach((row, i) => {\n            row.forEach((glyph, j) => {\n                this.#sprites[glyph] = new Sprite(glyph, this, j, i);\n            });\n        });\n    }\n\n    getSprite(glyph) {\n        if (this.#sprites[glyph]) {\n            return this.#sprites[glyph];\n        }\n\n        return this.#sprites[this.#defaultGlyph];\n    }\n}\n","// prettier-ignore\nexport default [\n    ['NUL', '☺', '☻', '♥', '♦', '♣', '♠', '•', '◘', '○', '◙', '♂', '♀', '♪', '♫', '☼'],\n    ['►', '◄', '↕', '‼', '¶', '§', '▬', '↨', '↑', '↓', '→', '←', '∟', '↔', '▲', '▼'],\n    [' ', '!', '\"', '#', '$', '%', '&', '\\'', '(', ')', '*', '+', ',', '-', '.', '/'],\n    ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', ':', ';', '<', '=', '>', '?'],\n    ['@', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O'],\n    ['P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '[', '\\\\', ']', '^', '_'],\n    ['`', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o'],\n    ['p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '{', '|', '}', '~', '⌂'],\n    ['Ç', 'ü', 'é', 'â', 'ä', 'à', 'å', 'ç', 'ê', 'ë', 'è', 'ï', 'î', 'ì', 'Ä', 'Å'],\n    ['É', 'æ', 'Æ', 'ô', 'ö', 'ò', 'û', 'ù', 'ÿ', 'Ö', 'Ü', '¢', '£', '¥', '₧', 'ƒ'],\n    ['á', 'í', 'ó', 'ú', 'ñ', 'Ñ', 'ª', 'º', '¿', '⌐', '¬', '½', '¼', '¡', '«', '»'],\n    ['░', '▒', '▓', '│', '┤', '╡', '╢', '╖', '╕', '╣', '║', '╗', '╝', '╜', '╛', '┐'],\n    ['└', '┴', '┬', '├', '─', '┼', '╞', '╟', '╚', '╔', '╩', '╦', '╠', '═', '╬', '╧'],\n    ['╨', '╤', '╥', '╙', '╘', '╒', '╓', '╫', '╪', '┘', '┌', '█', '▄', '▌', '▐', '▀'],\n    ['α', 'ß', 'Γ', 'π', 'Σ', 'σ', 'µ', 'τ', 'Φ', 'Θ', 'Ω', 'δ', '∞', 'φ', 'ε', '∩'],\n    ['≡', '±', '≥', '≤', '⌠', '⌡', '÷', '≈', '°', '∙', '·', '√', 'ⁿ', '²', '■', 'NBSP'],\n];\n","import { parseColor } from '../../utils/ColorParser';\nimport { isBlack, isWhite } from '../../utils/ColorUtil';\n\nexport default class Sprite {\n    #ctx = null;\n    #glyph = null;\n    #sheet = null;\n    #x = null;\n    #y = null;\n    _cache = {};\n\n    get glyph() {\n        return this.#glyph;\n    }\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get sheet() {\n        return this.#sheet;\n    }\n\n    get image() {\n        return this.sheet.image;\n    }\n\n    get sourceX() {\n        return this.sheet.spriteWidth * this.x;\n    }\n\n    get sourceY() {\n        return this.sheet.spriteHeight * this.y;\n    }\n\n    get width() {\n        return this.sheet.spriteWidth;\n    }\n\n    get height() {\n        return this.sheet.spriteHeight;\n    }\n\n    constructor(glyph, sheet, x, y) {\n        this.#glyph = glyph;\n        this.#sheet = sheet;\n        this.#x = x;\n        this.#y = y;\n\n        const canvas = document.createElement('canvas');\n\n        canvas.width = this.width;\n        canvas.height = this.height;\n\n        this.#ctx = canvas.getContext('2d');\n\n        this.#ctx.drawImage(\n            this.sheet.image,\n            this.sourceX,\n            this.sourceY,\n            this.width,\n            this.height,\n            0,\n            0,\n            this.width,\n            this.height\n        );\n    }\n\n    colorize(primaryCss, secondaryCss) {\n        const primary = parseColor(primaryCss);\n        const secondary = parseColor(secondaryCss);\n\n        const key = `${primary.key}-${secondary.key}`;\n\n        if (this._cache.hasOwnProperty(key)) {\n            return this._cache[key];\n        }\n\n        const pixels = this.#ctx.getImageData(0, 0, this.width, this.height);\n\n        for (let i = 0; i < pixels.data.length; i += 4) {\n            const r = pixels.data[i + 0];\n            const g = pixels.data[i + 1];\n            const b = pixels.data[i + 2];\n            const a = pixels.data[i + 3];\n\n            if (isBlack(r, g, b)) {\n                pixels.data[i] = primary[0];\n                pixels.data[i + 1] = primary[1];\n                pixels.data[i + 2] = primary[2];\n                pixels.data[i + 3] = a;\n            } else if (isWhite(r, g, b)) {\n                pixels.data[i] = secondary[0];\n                pixels.data[i + 1] = secondary[1];\n                pixels.data[i + 2] = secondary[2];\n                pixels.data[i + 3] = a;\n            }\n        }\n\n        const cvs = document.createElement('canvas');\n\n        cvs.width = this.width;\n        cvs.height = this.height;\n\n        cvs.getContext('2d').putImageData(pixels, 0, 0);\n\n        this._cache[key] = cvs;\n\n        return cvs;\n    }\n}\n","import colorParse from 'color-parse';\n\nconst cache = {};\n\nexport const parseColor = (colorStr) => {\n    if (!cache.hasOwnProperty(colorStr)) {\n        const parsed = colorParse(colorStr).values;\n        const data = [parsed[0], parsed[1], parsed[2], parsed.alpha];\n\n        data.key = `${data[0]},${data[1]},${data[2]},${data[3]}`;\n\n        cache[colorStr] = data;\n    }\n\n    return cache[colorStr];\n};\n","/**\r\n * @module color-parse\r\n */\r\nimport names from 'color-name'\r\n\r\nexport default parse\r\n\r\n/**\r\n * Base hues\r\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\r\n */\r\n//FIXME: use external hue detector\r\nvar baseHues = {\r\n\tred: 0,\r\n\torange: 60,\r\n\tyellow: 120,\r\n\tgreen: 180,\r\n\tblue: 240,\r\n\tpurple: 300\r\n}\r\n\r\n/**\r\n * Parse color from the string passed\r\n *\r\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\r\n */\r\nfunction parse (cstr) {\r\n\tvar m, parts = [], alpha = 1, space\r\n\r\n\tif (typeof cstr === 'string') {\r\n\t\t//keyword\r\n\t\tif (names[cstr]) {\r\n\t\t\tparts = names[cstr].slice()\r\n\t\t\tspace = 'rgb'\r\n\t\t}\r\n\r\n\t\t//reserved words\r\n\t\telse if (cstr === 'transparent') {\r\n\t\t\talpha = 0\r\n\t\t\tspace = 'rgb'\r\n\t\t\tparts = [0,0,0]\r\n\t\t}\r\n\r\n\t\t//hex\r\n\t\telse if (/^#[A-Fa-f0-9]+$/.test(cstr)) {\r\n\t\t\tvar base = cstr.slice(1)\r\n\t\t\tvar size = base.length\r\n\t\t\tvar isShort = size <= 4\r\n\t\t\talpha = 1\r\n\r\n\t\t\tif (isShort) {\r\n\t\t\t\tparts = [\r\n\t\t\t\t\tparseInt(base[0] + base[0], 16),\r\n\t\t\t\t\tparseInt(base[1] + base[1], 16),\r\n\t\t\t\t\tparseInt(base[2] + base[2], 16)\r\n\t\t\t\t]\r\n\t\t\t\tif (size === 4) {\r\n\t\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tparts = [\r\n\t\t\t\t\tparseInt(base[0] + base[1], 16),\r\n\t\t\t\t\tparseInt(base[2] + base[3], 16),\r\n\t\t\t\t\tparseInt(base[4] + base[5], 16)\r\n\t\t\t\t]\r\n\t\t\t\tif (size === 8) {\r\n\t\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!parts[0]) parts[0] = 0\r\n\t\t\tif (!parts[1]) parts[1] = 0\r\n\t\t\tif (!parts[2]) parts[2] = 0\r\n\r\n\t\t\tspace = 'rgb'\r\n\t\t}\r\n\r\n\t\t//color space\r\n\t\telse if (m = /^((?:rgb|hs[lvb]|hwb|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms)a?)\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\r\n\t\t\tvar name = m[1]\r\n\t\t\tvar isRGB = name === 'rgb'\r\n\t\t\tvar base = name.replace(/a$/, '')\r\n\t\t\tspace = base\r\n\t\t\tvar size = base === 'cmyk' ? 4 : base === 'gray' ? 1 : 3\r\n\t\t\tparts = m[2].trim()\r\n\t\t\t\t.split(/\\s*[,\\/]\\s*|\\s+/)\r\n\t\t\t\t.map(function (x, i) {\r\n\t\t\t\t\t//<percentage>\r\n\t\t\t\t\tif (/%$/.test(x)) {\r\n\t\t\t\t\t\t//alpha\r\n\t\t\t\t\t\tif (i === size)\treturn parseFloat(x) / 100\r\n\t\t\t\t\t\t//rgb\r\n\t\t\t\t\t\tif (base === 'rgb') return parseFloat(x) * 255 / 100\r\n\t\t\t\t\t\treturn parseFloat(x)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//hue\r\n\t\t\t\t\telse if (base[i] === 'h') {\r\n\t\t\t\t\t\t//<deg>\r\n\t\t\t\t\t\tif (/deg$/.test(x)) {\r\n\t\t\t\t\t\t\treturn parseFloat(x)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//<base-hue>\r\n\t\t\t\t\t\telse if (baseHues[x] !== undefined) {\r\n\t\t\t\t\t\t\treturn baseHues[x]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn parseFloat(x)\r\n\t\t\t\t})\r\n\r\n\t\t\tif (name === base) parts.push(1)\r\n\t\t\talpha = (isRGB) ? 1 : (parts[size] === undefined) ? 1 : parts[size]\r\n\t\t\tparts = parts.slice(0, size)\r\n\t\t}\r\n\r\n\t\t//named channels case\r\n\t\telse if (cstr.length > 10 && /[0-9](?:\\s|\\/)/.test(cstr)) {\r\n\t\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\r\n\t\t\t\treturn parseFloat(value)\r\n\t\t\t})\r\n\r\n\t\t\tspace = cstr.match(/([a-z])/ig).join('').toLowerCase()\r\n\t\t}\r\n\t}\r\n\r\n\t//numeric case\r\n\telse if (!isNaN(cstr)) {\r\n\t\tspace = 'rgb'\r\n\t\tparts = [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff]\r\n\t}\r\n\r\n\t//array-like\r\n\telse if (Array.isArray(cstr) || cstr.length) {\r\n\t\tparts = [cstr[0], cstr[1], cstr[2]]\r\n\t\tspace = 'rgb'\r\n\t\talpha = cstr.length === 4 ? cstr[3] : 1\r\n\t}\r\n\r\n\t//object case - detects css cases of rgb and hsl\r\n\telse if (cstr instanceof Object) {\r\n\t\tif (cstr.r != null || cstr.red != null || cstr.R != null) {\r\n\t\t\tspace = 'rgb'\r\n\t\t\tparts = [\r\n\t\t\t\tcstr.r || cstr.red || cstr.R || 0,\r\n\t\t\t\tcstr.g || cstr.green || cstr.G || 0,\r\n\t\t\t\tcstr.b || cstr.blue || cstr.B || 0\r\n\t\t\t]\r\n\t\t}\r\n\t\telse {\r\n\t\t\tspace = 'hsl'\r\n\t\t\tparts = [\r\n\t\t\t\tcstr.h || cstr.hue || cstr.H || 0,\r\n\t\t\t\tcstr.s || cstr.saturation || cstr.S || 0,\r\n\t\t\t\tcstr.l || cstr.lightness || cstr.L || cstr.b || cstr.brightness\r\n\t\t\t]\r\n\t\t}\r\n\r\n\t\talpha = cstr.a || cstr.alpha || cstr.opacity || 1\r\n\r\n\t\tif (cstr.opacity != null) alpha /= 100\r\n\t}\r\n\r\n\treturn {\r\n\t\tspace: space,\r\n\t\tvalues: parts,\r\n\t\talpha: alpha\r\n\t}\r\n}\r\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","export const HSLToRGB = (h, s, l) => {\n    s /= 100;\n    l /= 100;\n\n    let c = (1 - Math.abs(2 * l - 1)) * s;\n    let x = c * (1 - Math.abs(((h / 60) % 2) - 1));\n    let m = l - c / 2;\n    let r = 0;\n    let g = 0;\n    let b = 0;\n\n    if (0 <= h && h < 60) {\n        r = c;\n        g = x;\n        b = 0;\n    } else if (60 <= h && h < 120) {\n        r = x;\n        g = c;\n        b = 0;\n    } else if (120 <= h && h < 180) {\n        r = 0;\n        g = c;\n        b = x;\n    } else if (180 <= h && h < 240) {\n        r = 0;\n        g = x;\n        b = c;\n    } else if (240 <= h && h < 300) {\n        r = x;\n        g = 0;\n        b = c;\n    } else if (300 <= h && h < 360) {\n        r = c;\n        g = 0;\n        b = x;\n    }\n\n    return [\n        Math.round((r + m) * 255),\n        Math.round((g + m) * 255),\n        Math.round((b + m) * 255),\n    ];\n};\n\nexport const lerpHSL = (a, b, t) => {\n    const deg = Math.trunc(lerp(a[0], b[0], t));\n    const sat = Math.trunc(lerp(a[1], b[1], t));\n    const light = Math.trunc(lerp(a[2], b[2], t));\n\n    return HSLToRGB(deg, sat, light);\n};\n\nexport const isWhite = (r, g, b) => r === 255 && g === 255 && b === 255;\nexport const isBlack = (r, g, b) => r === 0 && g === 0 && b === 0;\n","import InputKeyboardEvent from './events/InputKeyboardEvent';\nimport InputMouseEvent from './events/InputMouseEvent';\nimport Manager from '../Manager';\n\nexport default class InputController extends Manager {\n    constructor(game) {\n        super(game);\n        document.addEventListener('keydown', this.onKeydown.bind(this));\n\n        const container = this.game.renderer.canvas;\n\n        container.addEventListener('click', this.onMouseClick.bind(this));\n        container.addEventListener('mousemove', this.onMouseMove.bind(this));\n        container.addEventListener('mouseenter', this.onMouseEnter.bind(this));\n        container.addEventListener('mouseleave', this.onMouseLeave.bind(this));\n    }\n\n    onKeydown(e) {\n        const evt = new InputKeyboardEvent({\n            key: e.keyCode,\n            shift: e.shiftKey,\n            ctrl: e.ctrlKey,\n            alt: e.altKey,\n            meta: e.metaKey,\n        });\n\n        e.preventDefault();\n\n        this.game.commands.onInputEvent(evt);\n    }\n\n    onMouseClick(e) {\n        const xPx = e.offsetX;\n        const yPx = e.offsetY;\n        const { x, y } = this.game.renderer.pxToTile(xPx, yPx);\n\n        const evt = new InputMouseEvent({\n            key: e.button,\n            x,\n            y,\n            shift: e.shiftKey,\n            ctrl: e.ctrlKey,\n            alt: e.altKey,\n            meta: e.metaKey,\n            xPx,\n            yPx,\n        });\n\n        this.game.commands.onInputEvent(evt);\n    }\n\n    onMouseMove(e) {\n        const xPx = e.offsetX;\n        const yPx = e.offsetY;\n        const { x, y } = this.game.renderer.pxToTile(xPx, yPx);\n\n        this.game.mouse.updatePosition(x, y);\n    }\n\n    onMouseEnter(e) {\n        this.game.mouse.updateMouseEnter();\n    }\n\n    onMouseLeave(e) {\n        this.game.mouse.updateMouseLeave();\n    }\n}\n","import InputEvent from './InputEvent';\n\nexport default class InputKeyboardEvent extends InputEvent {}\n","export default class InputEvent {\n    key = false;\n    shift = false;\n    ctrl = false;\n    alt = false;\n    meta = false;\n\n    constructor(data) {\n        this.key = data.key;\n        this.shift = data.shift;\n        this.ctrl = data.ctrl;\n        this.alt = data.alt;\n        this.meta = data.meta;\n    }\n}\n","import InputEvent from './InputEvent';\n\nexport default class InputMouseEvent extends InputEvent {\n    x = false;\n    y = false;\n    tileX = false;\n    tileY = false;\n\n    constructor(data) {\n        super(data);\n        this.x = data.x;\n        this.y = data.y;\n        this.tileX = data.tileX;\n        this.tileY = data.tileY;\n    }\n}\n","import { SCREEN_WAIT } from '../core/screens/ScreenType';\nimport {\n    Actor,\n    IsDead,\n    IsDestroying,\n} from '../ecs/components';\nimport System from './System';\n\nexport default class ActionSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n\n        this.#query = game.ecs.createQuery({\n            all: [Actor],\n            none: [IsDestroying, IsDead],\n        });\n    }\n\n    update(dt) {\n        const entities = this.#query.get();\n        const sorted = Array.from(entities);\n\n        sorted.sort((a, b) => (a.actor.energy < b.actor.energy ? 1 : -1));\n\n        let entity = sorted[0];\n\n        if (entity && !entity.actor.hasEnergy) {\n            this.game.clock.incrementTick(-1 * entity.actor.energy);\n\n            entities.forEach((e) => {\n                e.actor.addEnergy(this.game.clock.tickDelta);\n            });\n        }\n\n        while (entity && entity.actor.hasEnergy) {\n            if (entity.isIncapacitated) {\n                entity.fireEvent('energy-consumed', 100);\n                if (entity.isPlayer) {\n                    this.game.screens.pushScreen(SCREEN_WAIT, {\n                        time: 250\n                    });\n                    return true;\n                }\n                continue;\n            }\n\n            if (entity.isPlayer) {\n                const action = this.game.player.getNextAction();\n\n                if (action) {\n                    action();\n                }\n\n                return true;\n            }\n\n            entity.fireEvent('take-action');\n            entity = sorted.shift();\n        }\n\n        return false;\n    }\n}\n","export const SCREEN_MAIN_MENU = 0;\nexport const SCREEN_ADVENTURE = 1;\nexport const SCREEN_DEATH = 2;\nexport const SCREEN_INVENTORY = 3;\nexport const SCREEN_INTERACT_MODAL = 4;\nexport const SCREEN_CURSOR = 5;\nexport const SCREEN_LOAD_SECTOR = 6;\nexport const SCREEN_EQUIPMENT = 7;\nexport const SCREEN_LIST_SELECT = 8;\nexport const SCREEN_CHARACTER = 9;\nexport const SCREEN_ABILITIES = 10;\nexport const SCREEN_CONFIRM = 11;\nexport const SCREEN_WAIT = 12;\nexport const SCREEN_CHANNEL = 13;\n","import { Component } from 'geotic';\n\nexport class Actor extends Component {\n    static properties = {\n        energy: 0,\n    };\n\n    get hasEnergy() {\n        return this.energy >= 0;\n    }\n\n    onEnergyConsumed(evt) {\n        this.reduceEnergy(evt.data);\n    }\n\n    onTick(evt) {\n        this.addEnergy(1);\n    }\n\n    addEnergy(value) {\n        this.energy += value;\n\n        if (this.energy >= 0) {\n            this.energy = 0;\n        }\n    }\n\n    reduceEnergy(value) {\n        this.addEnergy(value * -1);\n    }\n}\n","'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[\\p{Lu}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[\\p{Ll}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLocaleLowerCase() === character && character.toLocaleUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toLocaleUpperCase() === character && character.toLocaleLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\t...{pascalCase: false},\n\t\t...options\n\t};\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toLocaleUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toLocaleUpperCase() : input.toLocaleLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLocaleLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLocaleLowerCase()\n\t\t.replace(/[_.\\- ]+([\\p{Alpha}\\p{N}_]|$)/gu, (_, p1) => p1.toLocaleUpperCase())\n\t\t.replace(/\\d+([\\p{Alpha}\\p{N}_]|$)/gu, m => m.toLocaleUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import camelcaseSlow from 'camelcase';\r\n\r\nconst camelCache = {};\r\n\r\nexport const camelString = (value) => {\r\n    if (!camelCache.hasOwnProperty(value)) {\r\n        camelCache[value] = camelcaseSlow(value);\r\n    }\r\n\r\n    return camelCache[value];\r\n};\r\n\r\nconst pascalCache = new Map();\r\n\r\nexport const pascalString = (value) => {\r\n    if (!pascalCache.has(value)) {\r\n        pascalCache.set(value, camelcaseSlow(value, { pascalCase: true }));\r\n    }\r\n\r\n    return pascalCache.get(value);\r\n};\r\n","export default class Property {\r\n    component;\r\n\r\n    constructor(component) {\r\n        this.component = component;\r\n    }\r\n\r\n    get ecs() {\r\n        return this.component.ecs;\r\n    }\r\n\r\n    get descriptor() {\r\n        return {\r\n            enumerable: true,\r\n            get: () => this.get(),\r\n            set: (v) => this.set(v),\r\n        };\r\n    }\r\n\r\n    get() {\r\n        return undefined;\r\n    }\r\n\r\n    set(value) {}\r\n\r\n    serialize() {\r\n        return undefined;\r\n    }\r\n\r\n    onDestroyed() {}\r\n\r\n    cleanupReference(entity) {}\r\n}\r\n","import Property from './Property';\r\n\r\nexport default class SimpleProperty extends Property {\r\n    value = null;\r\n\r\n    set(value) {\r\n        this.value = value;\r\n    }\r\n\r\n    get() {\r\n        return this.value;\r\n    }\r\n\r\n    serialize() {\r\n        return this.value;\r\n    }\r\n}\r\n","import Property from './Property';\r\n\r\nexport default class EntityProperty extends Property {\r\n    id;\r\n\r\n    set(value) {\r\n        if (this.id && (!value || value.id !== this.id || value !== this.id)) {\r\n            this.ecs.entities.removeRef(this.id, this);\r\n        }\r\n\r\n        if (value && value.id) {\r\n            this.ecs.entities.addRef(value.id, this);\r\n            this.id = value.id;\r\n            return;\r\n        }\r\n\r\n        if (typeof value === 'string') {\r\n            this.ecs.entities.addRef(value, this);\r\n            this.id = value;\r\n            return;\r\n        }\r\n\r\n        this.id = undefined;\r\n    }\r\n\r\n    get() {\r\n        return this.id && this.component.ecs.getEntity(this.id);\r\n    }\r\n\r\n    serialize() {\r\n        return this.id;\r\n    }\r\n\r\n    onDestroyed() {\r\n        if (this.id) {\r\n            this.ecs.entities.removeRef(this.id, this);\r\n        }\r\n    }\r\n\r\n    cleanupReference(entity) {\r\n        if (this.id === entity.id) {\r\n            this.id = undefined;\r\n        } else {\r\n            console.warn(\r\n                `Property in unclean state. A reference to an entity \"${entity.id}\" was never cleaned up.`,\r\n                entity\r\n            );\r\n        }\r\n    }\r\n}\r\n","import Property from './Property';\r\n\r\nexport default class EntityArrayProperty extends Property {\r\n    proxy = [];\r\n\r\n    constructor(component) {\r\n        super(component);\r\n        this.proxy = new Proxy([], {\r\n            get: (target, prop, receiver) => {\r\n                return Reflect.get(target, prop, receiver);\r\n            },\r\n            set: (target, prop, value, receiver) => {\r\n                if (isNaN(prop)) {\r\n                    return Reflect.set(target, prop, value, receiver);\r\n                }\r\n\r\n                const old = Reflect.get(target, prop, receiver);\r\n\r\n                if (typeof value === 'string') {\r\n                    value = this.ecs.entities.get(value);\r\n                }\r\n\r\n                if (old && old != value) {\r\n                    this.ecs.entities.removeRef(value, this);\r\n                }\r\n\r\n                if (value && value.id) {\r\n                    this.ecs.entities.addRef(value.id, this);\r\n\r\n                    return Reflect.set(target, prop, value, receiver);\r\n                }\r\n\r\n                return Reflect.set(target, prop, value, receiver);\r\n            },\r\n            deleteProperty: (target, prop) => {\r\n                if (isNaN(prop)) {\r\n                    return Reflect.deleteProperty(target, prop);\r\n                }\r\n\r\n                const value = Reflect.get(target, prop);\r\n                this.ecs.entities.removeRef(value, this);\r\n\r\n                return Reflect.deleteProperty(target, prop);\r\n            },\r\n        });\r\n    }\r\n\r\n    set(values = []) {\r\n        const len = Math.max(values.length, this.proxy.length);\r\n\r\n        for (let i = 0; i < len; i++) {\r\n            if (i in values) {\r\n                this.proxy[i] = values[i];\r\n            } else {\r\n                delete this.proxy[i];\r\n            }\r\n        }\r\n\r\n        this.proxy.length = values.length;\r\n    }\r\n\r\n    get() {\r\n        return this.proxy;\r\n    }\r\n\r\n    serialize() {\r\n        return this.proxy.map((ref) => ref.id);\r\n    }\r\n\r\n    onDestroyed() {\r\n        this.set([]);\r\n    }\r\n\r\n    cleanupReference(entity) {\r\n        this.set(this.proxy.filter((ref) => ref.id !== entity.id));\r\n    }\r\n}\r\n","import Property from './Property';\r\nimport SimpleProperty from './SimpleProperty';\r\nimport EntityProperty from './EntityProperty';\r\nimport EntityArrayProperty from './EntityArrayProperty';\r\n\r\nexport default class PropertyStrategy {\r\n    static create(component, value) {\r\n        switch (value) {\r\n            case '<Entity>':\r\n                return new EntityProperty(component);\r\n            case '<EntityArray>':\r\n                return new EntityArrayProperty(component);\r\n            default:\r\n                return new SimpleProperty(component);\r\n        }\r\n    }\r\n}\r\n","import { camelString } from './util/string-util';\r\nimport PropertyFactory from './Properties/PropertyFactory';\r\n\r\nexport default class Component {\r\n    entity = null;\r\n    ecs = null;\r\n    _props = {};\r\n    _isDestroyed = false;\r\n\r\n    static allowMultiple = false;\r\n    static keyProperty = null;\r\n    static properties = {};\r\n\r\n    static get type() {\r\n        return this.name;\r\n    }\r\n\r\n    get type() {\r\n        return this.constructor.name;\r\n    }\r\n\r\n    get isAttached() {\r\n        return Boolean(this.entity);\r\n    }\r\n\r\n    get isDestroyed() {\r\n        return this._isDestroyed;\r\n    }\r\n\r\n    get allowMultiple() {\r\n        return this.constructor.allowMultiple;\r\n    }\r\n\r\n    get keyProperty() {\r\n        return this.constructor.keyProperty;\r\n    }\r\n\r\n    get properties() {\r\n        const ob = {};\r\n\r\n        for (const [key, value] of Object.entries(this._props)) {\r\n            ob[key] = value.get();\r\n        }\r\n\r\n        return ob;\r\n    }\r\n\r\n    get key() {\r\n        return this[this.keyProperty];\r\n    }\r\n\r\n    constructor(ecs, properties = {}) {\r\n        this.ecs = ecs;\r\n        this._defineProxies(properties);\r\n    }\r\n\r\n    serialize() {\r\n        return Object.entries(this._props).reduce(\r\n            (o, [key, value]) => ({\r\n                ...o,\r\n                [key]: value.serialize(),\r\n            }),\r\n            {}\r\n        );\r\n    }\r\n\r\n    _onAttached(entity) {\r\n        this.entity = entity;\r\n        this.ecs.queries.onComponentAdded(entity, this);\r\n        this.onAttached();\r\n    }\r\n\r\n    _onDetached() {\r\n        if (this.isAttached) {\r\n            this.onDetached();\r\n            this.entity = null;\r\n        }\r\n    }\r\n\r\n    _onDestroyed() {\r\n        this._isDestroyed = true;\r\n        this.onDestroyed();\r\n\r\n        for (const prop of Object.values(this._props)) {\r\n            prop.onDestroyed();\r\n        }\r\n    }\r\n\r\n    onAttached() {}\r\n\r\n    onDetached() {}\r\n\r\n    onDestroyed() {}\r\n\r\n    remove(destroy = true) {\r\n        if (this.isAttached) {\r\n            this.entity.remove(this);\r\n        }\r\n        if (destroy) {\r\n            this._onDestroyed();\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.remove(true);\r\n    }\r\n\r\n    clone() {\r\n        return this.ecs.createComponent(this.type, this.serialize());\r\n    }\r\n\r\n    _onEvent(evt) {\r\n        this.onEvent(evt);\r\n\r\n        const handlerName = camelString(`on ${evt.name}`);\r\n\r\n        if (typeof this[handlerName] === 'function') {\r\n            this[handlerName](evt);\r\n        }\r\n    }\r\n\r\n    onEvent(evt) {}\r\n\r\n    _defaultPropertyValue(propertyName) {\r\n        const value = this.constructor.properties[propertyName];\r\n\r\n        if (value === '<EntityArray>') {\r\n            return [];\r\n        }\r\n\r\n        if (value === '<Entity>') {\r\n            return undefined;\r\n        }\r\n\r\n        return value;\r\n    }\r\n\r\n    _defineProxies(initialProperties) {\r\n        for (const key in this.constructor.properties) {\r\n            const initialValue = initialProperties.hasOwnProperty(key)\r\n                ? initialProperties[key]\r\n                : this._defaultPropertyValue(key);\r\n            const property = PropertyFactory.create(\r\n                this,\r\n                this.constructor.properties[key]\r\n            );\r\n\r\n            this._props[key] = property;\r\n            Object.defineProperty(this, key, property.descriptor);\r\n            property.set(initialValue);\r\n        }\r\n    }\r\n}\r\n","import Component from '../Component';\r\nimport { camelString } from '../util/string-util';\r\n\r\nexport default class ComponentRegistry {\r\n    _definitions = new Map();\r\n    _ecs = null;\r\n\r\n    constructor(ecs) {\r\n        this._ecs = ecs;\r\n    }\r\n\r\n    register(component) {\r\n        this._definitions.set(component.name, component);\r\n        camelString(component.name); // prime camelcase cache\r\n    }\r\n\r\n    getAccessor(type) {\r\n        return camelString(type);\r\n    }\r\n\r\n    get(typeOrClassOrComponent) {\r\n        const type = this._getType(typeOrClassOrComponent);\r\n\r\n        if (!type) {\r\n            console.warn(\r\n                `Cannot get component definition for type or class ${typeOrClassOrComponent} since it is neither a Component class or type (string)`\r\n            );\r\n            return null;\r\n        }\r\n\r\n        return this._definitions.get(type);\r\n    }\r\n\r\n    create(typeOrClass, properties = {}) {\r\n        const definition = this.get(typeOrClass);\r\n\r\n        if (definition) {\r\n            return new definition(this._ecs, properties);\r\n        }\r\n\r\n        console.warn(\r\n            `Could not create component definition for ${typeOrClass} since it is not registered`\r\n        );\r\n    }\r\n\r\n    _getType(typeOrClassOrComponent) {\r\n        if (typeof typeOrClassOrComponent === 'string') {\r\n            return typeOrClassOrComponent;\r\n        }\r\n\r\n        if (typeOrClassOrComponent instanceof Component) {\r\n            return typeOrClassOrComponent.type;\r\n        }\r\n\r\n        if (typeOrClassOrComponent.prototype instanceof Component) {\r\n            return typeOrClassOrComponent.name;\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n","'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn target.propertyIsEnumerable(symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n","import merge from 'deepmerge';\r\n\r\nexport default class PrefabComponent {\r\n    get type() {\r\n        return this.componentDef.type;\r\n    }\r\n\r\n    constructor(componentDef, properties = {}, overwrite = true) {\r\n        this.componentDef = componentDef;\r\n        this.properties = properties;\r\n        this.overwrite = overwrite;\r\n    }\r\n\r\n    applyToEntity(entity, initialProps = {}) {\r\n        if (!this.componentDef.allowMultiple && entity.has(this.componentDef)) {\r\n            if (this.overwrite) {\r\n                entity.remove(this.componentDef);\r\n            } else {\r\n                console.log(\r\n                    `Ignoring prefab component \"${this.type}\" since the entity \"${entity.id}\" already has one.`\r\n                );\r\n                return;\r\n            }\r\n        }\r\n\r\n        const props = merge(this.properties, initialProps);\r\n\r\n        entity.add(this.componentDef, props);\r\n    }\r\n}\r\n","export default class Prefab {\r\n    name = '';\r\n    inherit = [];\r\n    components = [];\r\n\r\n    constructor(ecs, name) {\r\n        this.ecs = ecs;\r\n        this.name = name;\r\n    }\r\n\r\n    addComponent(prefabComponent) {\r\n        this.components.push(prefabComponent);\r\n    }\r\n\r\n    applyToEntity(entity, initialProps = {}) {\r\n        this.inherit.forEach((parent) => {\r\n            parent.applyToEntity(entity, initialProps);\r\n        });\r\n\r\n        const arrComps = {};\r\n\r\n        this.components.forEach((component, i) => {\r\n            const definition = component.componentDef;\r\n            const accessor = this.ecs.components.getAccessor(definition.type);\r\n\r\n            let initialCompProps = {};\r\n\r\n            if (definition.allowMultiple) {\r\n                if (definition.keyProperty) {\r\n                    const key = component.properties[definition.keyProperty];\r\n\r\n                    if (initialProps[accessor] && initialProps[accessor][key]) {\r\n                        initialCompProps = initialProps[accessor][key];\r\n                    }\r\n                } else {\r\n                    if (!arrComps[accessor]) {\r\n                        arrComps[accessor] = 0;\r\n                    }\r\n\r\n                    if (\r\n                        initialProps[accessor] &&\r\n                        initialProps[accessor][arrComps[accessor]]\r\n                    ) {\r\n                        initialCompProps =\r\n                            initialProps[accessor][arrComps[accessor]];\r\n                    }\r\n\r\n                    arrComps[accessor]++;\r\n                }\r\n            } else {\r\n                initialCompProps = initialProps[accessor];\r\n            }\r\n\r\n            component.applyToEntity(entity, initialCompProps);\r\n        });\r\n\r\n        return entity;\r\n    }\r\n}\r\n","import Component from '../Component';\r\nimport PrefabComponent from '../PrefabComponent';\r\nimport Prefab from '../Prefab';\r\n\r\nexport default class PrefabRegistry {\r\n    _prefabs = {};\r\n    _ecs = null;\r\n\r\n    constructor(ecs) {\r\n        this._ecs = ecs;\r\n    }\r\n\r\n    deserialize(data) {\r\n        const registered = this.get(data.name);\r\n\r\n        if (registered) {\r\n            return registered;\r\n        }\r\n\r\n        const prefab = new Prefab(this._ecs, data.name);\r\n\r\n        let inherit;\r\n\r\n        if (Array.isArray(data.inherit)) {\r\n            inherit = data.inherit;\r\n        } else if (typeof data.inherit === 'string') {\r\n            inherit = [data.inherit];\r\n        } else {\r\n            inherit = [];\r\n        }\r\n\r\n        prefab.inherit = inherit.map((parent) => {\r\n            const ref = this.get(parent);\r\n\r\n            if (!ref) {\r\n                console.warn(\r\n                    `Prefab \"${data.name}\" cannot inherit from Prefab \"${parent}\" because is not registered yet! Prefabs must be registered in the right order.`\r\n                );\r\n                return parent;\r\n            }\r\n\r\n            return ref;\r\n        });\r\n\r\n        const comps = data.components || [];\r\n\r\n        for (const componentData of comps) {\r\n            if (\r\n                typeof componentData === 'string' ||\r\n                componentData.prototype instanceof Component\r\n            ) {\r\n                const def = this._ecs.components.get(componentData);\r\n                if (def) {\r\n                    prefab.addComponent(new PrefabComponent(def));\r\n                }\r\n            } else if (typeof componentData === 'object') {\r\n                const type = componentData.type;\r\n                const def = this._ecs.components.get(type);\r\n                if (def) {\r\n                    prefab.addComponent(\r\n                        new PrefabComponent(\r\n                            def,\r\n                            componentData.properties,\r\n                            componentData.overwrite\r\n                        )\r\n                    );\r\n                }\r\n            } else {\r\n                console.warn(\r\n                    `Unrecognized component reference \"${componentData}\" in prefab \"${data.name}\". Ensure the component is registered before the prefab.`\r\n                );\r\n            }\r\n        }\r\n\r\n        this.register(prefab);\r\n\r\n        return prefab;\r\n    }\r\n\r\n    register(prefab) {\r\n        this._prefabs[prefab.name] = prefab;\r\n    }\r\n\r\n    get(nameOrClassOrPrefab) {\r\n        const name = PrefabRegistry._getName(nameOrClassOrPrefab);\r\n\r\n        return this._prefabs[name];\r\n    }\r\n\r\n    create(nameOrClass, initialProps = {}) {\r\n        const prefab = this.get(nameOrClass);\r\n\r\n        if (!prefab) {\r\n            console.warn(\r\n                `Could not instantiate prefab for ${nameOrClass} since it is not registered`\r\n            );\r\n\r\n            return;\r\n        }\r\n\r\n        const entity = this._ecs.createEntity();\r\n        prefab.applyToEntity(entity, initialProps);\r\n\r\n        return entity;\r\n    }\r\n\r\n    static _getName(nameOrClassOrPrefab) {\r\n        if (typeof nameOrClassOrPrefab === 'string') {\r\n            return nameOrClassOrPrefab;\r\n        }\r\n\r\n        if (nameOrClassOrPrefab instanceof Prefab) {\r\n            return nameOrClassOrPrefab.name;\r\n        }\r\n\r\n        if (nameOrClassOrPrefab.prototype instanceof Prefab) {\r\n            return nameOrClassOrPrefab.name;\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n","export default class EntityEvent {\r\n    data = {};\r\n    _prevented = false;\r\n    _handled = false;\r\n\r\n    get prevented() {\r\n        return this._prevented;\r\n    }\r\n\r\n    get handled() {\r\n        return this._handled;\r\n    }\r\n\r\n    constructor(name, data = {}) {\r\n        this.name = name;\r\n        this.data = data;\r\n    }\r\n\r\n    is(name) {\r\n        return this.name === name;\r\n    }\r\n\r\n    handle() {\r\n        this._handled = true;\r\n        this._prevented = true;\r\n    }\r\n\r\n    prevent() {\r\n        this._prevented = true;\r\n    }\r\n}\r\n","import Component from './Component';\r\nimport EntityEvent from './EntityEvent';\r\n\r\nexport default class Entity {\r\n    id = null;\r\n    components = {};\r\n    ecs = null;\r\n    _isDestroyed = false;\r\n\r\n    get isDestroyed() {\r\n        return this._isDestroyed;\r\n    }\r\n\r\n    constructor(ecs, id = null) {\r\n        this.ecs = ecs;\r\n        this.id = id || ecs.generateId();\r\n    }\r\n\r\n    has(typeOrClass, key = null) {\r\n        const type = this.ecs.components._getType(typeOrClass);\r\n        const accessor = this.ecs.components.getAccessor(type);\r\n        const hasType = this.hasOwnProperty(accessor);\r\n\r\n        if (hasType && key) {\r\n            return this[accessor].hasOwnProperty(key);\r\n        }\r\n\r\n        return hasType;\r\n    }\r\n\r\n    get(typeOrClass, key = null) {\r\n        const type = this.ecs.components._getType(typeOrClass);\r\n        const accessor = this.ecs.components.getAccessor(type);\r\n        const components = this[accessor];\r\n\r\n        if (components && key) {\r\n            return components[key];\r\n        }\r\n\r\n        return components;\r\n    }\r\n\r\n    destroy() {\r\n        this._isDestroyed = true;\r\n\r\n        for (const component of Object.values(this.components)) {\r\n            if (component instanceof Component) {\r\n                component.destroy();\r\n            } else {\r\n                for (const nestedComponent of Object.values(component)) {\r\n                    nestedComponent.destroy();\r\n                }\r\n            }\r\n        }\r\n\r\n        this.ecs.entities.onEntityDestroyed(this);\r\n    }\r\n\r\n    add(typeOrClass, properties = {}) {\r\n        if (typeOrClass instanceof Component) {\r\n            if (typeOrClass.isAttached) {\r\n                console.warn(\r\n                    `\"${typeOrClass.type}\" component cannot be added, since it is already attached to an entity.`\r\n                );\r\n                return false;\r\n            }\r\n\r\n            return this.attach(typeOrClass);\r\n        }\r\n\r\n        const component = this.ecs.components.create(typeOrClass, properties);\r\n\r\n        if (!component) {\r\n            console.warn(\r\n                `\"${typeOrClass}\" component cannot be added, since it is not registered.`\r\n            );\r\n            return false;\r\n        }\r\n\r\n        return this.attach(component);\r\n    }\r\n\r\n    attach(component) {\r\n        const accessor = this.ecs.components.getAccessor(component.type);\r\n\r\n        if (!component.allowMultiple) {\r\n            if (this.has(component.type)) {\r\n                console.warn(\r\n                    `\"${component.type}\" component has allowMultiple set to ${component.allowMultiple}. Trying to add a \"${component.type}\" component to an entity which already has one.`\r\n                );\r\n                return false;\r\n            }\r\n\r\n            this.components[accessor] = component;\r\n\r\n            Object.defineProperty(this, accessor, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                writable: false,\r\n                value: this.components[accessor],\r\n            });\r\n\r\n            component._onAttached(this);\r\n\r\n            return true;\r\n        }\r\n\r\n        if (!component.keyProperty) {\r\n            if (!this.components[accessor]) {\r\n                this.components[accessor] = [];\r\n                Object.defineProperty(this, accessor, {\r\n                    configurable: true,\r\n                    enumerable: true,\r\n                    writable: false,\r\n                    value: this.components[accessor],\r\n                });\r\n            }\r\n\r\n            this.components[accessor].push(component);\r\n\r\n            component._onAttached(this);\r\n\r\n            return true;\r\n        }\r\n\r\n        if (!component.key) {\r\n            console.warn(\r\n                `\"${component.type}\" component has a falsy key of \"${component.key}\". The keyProperty is set to \"${component.keyProperty}\".`\r\n            );\r\n            return false;\r\n        }\r\n\r\n        if (!this.components[accessor]) {\r\n            this.components[accessor] = {};\r\n            Object.defineProperty(this, accessor, {\r\n                configurable: true,\r\n                enumerable: true,\r\n                writable: false,\r\n                value: this.components[accessor],\r\n            });\r\n        }\r\n\r\n        this.components[accessor][component.key] = component;\r\n\r\n        component._onAttached(this);\r\n\r\n        return true;\r\n    }\r\n\r\n    owns(component) {\r\n        return component.entity === this;\r\n    }\r\n\r\n    remove(typeOrClassOrComponent, key = null) {\r\n        const isComponent = typeOrClassOrComponent instanceof Component;\r\n        key = isComponent ? typeOrClassOrComponent.key : key;\r\n\r\n        const definition = this.ecs.components.get(typeOrClassOrComponent);\r\n\r\n        const accessor = this.ecs.components.getAccessor(definition.type);\r\n\r\n        if (definition.allowMultiple) {\r\n            if (!definition.keyProperty) {\r\n                if (isComponent) {\r\n                    const all = this.components[accessor];\r\n\r\n                    if (!all) {\r\n                        console.warn(\r\n                            `Trying to remove a \"${definition.type}\" component from an entity, but it wasn't found.`\r\n                        );\r\n                        return;\r\n                    }\r\n\r\n                    const index = all.indexOf(typeOrClassOrComponent);\r\n\r\n                    if (index > -1) {\r\n                        all.splice(index, 1);\r\n                        typeOrClassOrComponent._onDetached();\r\n\r\n                        if (all.length === 0) {\r\n                            delete this[accessor];\r\n                            delete this.components[accessor];\r\n                        }\r\n\r\n                        this.ecs.queries.onComponentRemoved(this);\r\n\r\n                        return true;\r\n                    }\r\n                } else {\r\n                    for (const instance of this.components[accessor]) {\r\n                        instance._onDetached();\r\n                    }\r\n\r\n                    delete this[accessor];\r\n                    delete this.components[accessor];\r\n                    this.ecs.queries.onComponentRemoved(this);\r\n\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            if (!key) {\r\n                console.warn(\r\n                    `Trying to remove a \"${definition.type}\" component which allows multiple without specifying an key.`\r\n                );\r\n                return;\r\n            }\r\n\r\n            const all = this.components[accessor];\r\n            const component = all[key];\r\n\r\n            if (component) {\r\n                delete all[key];\r\n                component._onDetached();\r\n                if (Object.keys(all).length <= 0) {\r\n                    delete this[accessor];\r\n                    delete this.components[accessor];\r\n                }\r\n                this.ecs.queries.onComponentRemoved(this);\r\n\r\n                return component;\r\n            } else {\r\n                console.warn(\r\n                    `Trying to remove a \"${definition.type}\" component from an entity at \"${key}\", but it wasn't found.`\r\n                );\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (accessor in this) {\r\n            const component = this.components[accessor];\r\n\r\n            delete this[accessor];\r\n            delete this.components[accessor];\r\n            component._onDetached();\r\n            this.ecs.queries.onComponentRemoved(this);\r\n\r\n            return component;\r\n        }\r\n\r\n        console.warn(\r\n            `Trying to remove a \"${definition.type}\" component from an entity, but it wasn't found.`\r\n        );\r\n    }\r\n\r\n    serialize() {\r\n        return Object.entries(this.components).reduce(\r\n            (o, [key, value]) => {\r\n                if (value instanceof Component) {\r\n                    return {\r\n                        ...o,\r\n                        [key]: value.serialize(),\r\n                    };\r\n                }\r\n\r\n                if (Array.isArray(value)) {\r\n                    return {\r\n                        ...o,\r\n                        [key]: value.map((v) => v.serialize()),\r\n                    };\r\n                }\r\n\r\n                return {\r\n                    ...o,\r\n                    [key]: Object.entries(value).reduce(\r\n                        (o2, [k2, v2]) => ({\r\n                            ...o2,\r\n                            [k2]: v2.serialize(),\r\n                        }),\r\n                        {}\r\n                    ),\r\n                };\r\n            },\r\n            {\r\n                id: this.id,\r\n            }\r\n        );\r\n    }\r\n\r\n    fireEvent(name, data) {\r\n        const evt = new EntityEvent(name, data);\r\n\r\n        for (const component of Object.values(this.components)) {\r\n            if (component instanceof Component) {\r\n                component._onEvent(evt);\r\n\r\n                if (evt.prevented) {\r\n                    return evt;\r\n                }\r\n            } else {\r\n                for (const nestedComponent of Object.values(component)) {\r\n                    nestedComponent._onEvent(evt);\r\n\r\n                    if (evt.prevented) {\r\n                        return evt;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return evt;\r\n    }\r\n}\r\n","import { pascalString } from '../util/string-util';\r\nimport Entity from '../Entity';\r\n\r\nexport default class EntityRegistry {\r\n    _entities = new Map();\r\n    _ecs = null;\r\n    _refs = new Map();\r\n\r\n    constructor(ecs) {\r\n        this._ecs = ecs;\r\n    }\r\n\r\n    get all() {\r\n        return this._entities.values();\r\n    }\r\n\r\n    register(entity) {\r\n        this._entities.set(entity.id, entity);\r\n\r\n        return entity;\r\n    }\r\n\r\n    get(id) {\r\n        return this._entities.get(id);\r\n    }\r\n\r\n    createOrGetById(id) {\r\n        const entity = this.get(id);\r\n\r\n        if (entity) {\r\n            return entity;\r\n        }\r\n\r\n        return this.create(id);\r\n    }\r\n\r\n    create(id = undefined) {\r\n        const entity = new Entity(this._ecs, id);\r\n\r\n        this.register(entity);\r\n\r\n        this._ecs.queries.onEntityCreated(entity);\r\n\r\n        return entity;\r\n    }\r\n\r\n    destroy(entity) {\r\n        entity.destroy();\r\n    }\r\n\r\n    onEntityDestroyed(entity) {\r\n        this.cleanupRefs(entity);\r\n        this._entities.delete(entity.id);\r\n        this._ecs.queries.onEntityDestroyed(entity);\r\n    }\r\n\r\n    cleanupRefs(entity) {\r\n        const refs = this._refs.get(entity.id);\r\n\r\n        if (!refs) {\r\n            return;\r\n        }\r\n\r\n        for (const ref of refs) {\r\n            ref.cleanupReference(entity);\r\n        }\r\n\r\n        delete this._refs[entity.id];\r\n    }\r\n\r\n    addRef(entityId, property) {\r\n        if (!this._refs.has(entityId)) {\r\n            this._refs.set(entityId, new Set([property]));\r\n            return;\r\n        }\r\n\r\n        this._refs.get(entityId).add(property);\r\n    }\r\n\r\n    removeRef(entityId, property) {\r\n        if (this._refs.has(entityId)) {\r\n            this._refs.get(entityId).delete(property);\r\n        }\r\n    }\r\n\r\n    serialize(entities) {\r\n        const json = [];\r\n        const list = entities ? entities : this._entities;\r\n\r\n        list.forEach((entity) => {\r\n            json.push(entity.serialize());\r\n        });\r\n\r\n        return json;\r\n    }\r\n\r\n    deserialize(data) {\r\n        for (const entityData of data.entities) {\r\n            this.createOrGetById(entityData.id);\r\n        }\r\n\r\n        for (const entityData of data.entities) {\r\n            this.deserializeEntity(entityData);\r\n        }\r\n    }\r\n\r\n    deserializeEntity(data) {\r\n        const { id, ...componentData } = data;\r\n        const entity = this.createOrGetById(id);\r\n\r\n        Object.entries(componentData).forEach(([key, value]) => {\r\n            const type = pascalString(key);\r\n            const definition = this._ecs.components.get(type);\r\n\r\n            if (definition.allowMultiple) {\r\n                Object.values(value).forEach((d) => {\r\n                    entity.add(definition, d);\r\n                });\r\n            } else {\r\n                entity.add(definition, value);\r\n            }\r\n        });\r\n    }\r\n}\r\n","import merge from 'deepmerge';\r\n\r\nexport default class Query {\r\n    _ecs;\r\n    _filter;\r\n    _onEntityAddedCallbacks = [];\r\n    _onEntityRemovedCallbacks = [];\r\n    _cache = new Set();\r\n\r\n    constructor(ecs, filter = {}) {\r\n        this._ecs = ecs;\r\n        this._filter = merge({ any: [], all: [], none: [] }, filter);\r\n        this.bustCache();\r\n    }\r\n\r\n    isMatch(entity) {\r\n        const hasAny = this._filter.any.length\r\n            ? this._filter.any.some((c) => entity.has(c))\r\n            : true;\r\n        const hasAll = this._filter.all.every((c) => entity.has(c));\r\n        const hasNone = !this._filter.none.some((c) => entity.has(c));\r\n\r\n        return hasAny && hasAll && hasNone;\r\n    }\r\n\r\n    onEntityAdded(fn) {\r\n        this._onEntityAddedCallbacks.push(fn);\r\n    }\r\n\r\n    onEntityRemoved(fn) {\r\n        this._onEntityRemovedCallbacks.push(fn);\r\n    }\r\n\r\n    has(entity) {\r\n        return this._cache.has(entity);\r\n    }\r\n\r\n    candidate(entity) {\r\n        const isTracking = this.has(entity);\r\n\r\n        if (this.isMatch(entity)) {\r\n            if (!isTracking) {\r\n                this._cache.add(entity);\r\n                this._onEntityAddedCallbacks.forEach((cb) => cb(entity));\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        if (isTracking) {\r\n            this._cache.delete(entity);\r\n            this._onEntityRemovedCallbacks.forEach((cb) => cb(entity));\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    _onEntityCreated(entity) {\r\n        this.candidate(entity);\r\n    }\r\n\r\n    _onComponentAdded(entity) {\r\n        this.candidate(entity);\r\n    }\r\n\r\n    _onComponentRemoved(entity) {\r\n        this.candidate(entity);\r\n    }\r\n\r\n    _onEntityDestroyed(entity) {\r\n        if (this.has(entity)) {\r\n            this._cache.delete(entity);\r\n            this._onEntityRemovedCallbacks.forEach((cb) => cb(entity));\r\n        }\r\n    }\r\n\r\n    bustCache() {\r\n        this._cache.clear();\r\n\r\n        for (const entity of this._ecs.entities.all) {\r\n            this.candidate(entity);\r\n        }\r\n\r\n        return this._cache;\r\n    }\r\n\r\n    get() {\r\n        return this._cache;\r\n    }\r\n}\r\n","import Query from '../Query';\r\n\r\nexport default class QueryRegistry {\r\n    _ecs;\r\n    _queries = [];\r\n\r\n    constructor(ecs) {\r\n        this._ecs = ecs;\r\n    }\r\n\r\n    create(filters) {\r\n        const query = new Query(this._ecs, filters);\r\n\r\n        this._queries.push(query);\r\n\r\n        return query;\r\n    }\r\n\r\n    onComponentAdded(entity) {\r\n        this._queries.forEach((query) => query._onComponentAdded(entity));\r\n    }\r\n\r\n    onComponentRemoved(entity) {\r\n        this._queries.forEach((query) => query._onComponentRemoved(entity));\r\n    }\r\n\r\n    onEntityCreated(entity) {\r\n        this._queries.forEach((query) => query._onEntityCreated(entity));\r\n    }\r\n\r\n    onEntityDestroyed(entity) {\r\n        this._queries.forEach((query) => query._onEntityDestroyed(entity));\r\n    }\r\n}\r\n","import ComponentRegistry from './registries/ComponentRegistry';\r\nimport PrefabRegistry from './registries/PrefabRegistry';\r\nimport { nanoid } from 'nanoid/non-secure';\r\nimport EntityRegistry from './registries/EntityRegistry';\r\nimport QueryRegistry from './registries/QueryRegistry';\r\n\r\nexport default class Engine {\r\n    constructor() {\r\n        this.idGenerator = () => nanoid();\r\n        this.components = new ComponentRegistry(this);\r\n        this.prefabs = new PrefabRegistry(this);\r\n        this.entities = new EntityRegistry(this);\r\n        this.queries = new QueryRegistry(this);\r\n    }\r\n\r\n    generateId() {\r\n        return this.idGenerator();\r\n    }\r\n\r\n    createEntity(id) {\r\n        return this.entities.create(id);\r\n    }\r\n\r\n    createPrefab(nameOrClass, initialProps = {}) {\r\n        return this.prefabs.create(nameOrClass, initialProps);\r\n    }\r\n\r\n    destroyEntity(entity) {\r\n        return this.entities.destroy(entity);\r\n    }\r\n\r\n    registerPrefab(data) {\r\n        this.prefabs.deserialize(data);\r\n    }\r\n\r\n    registerComponent(component) {\r\n        this.components.register(component);\r\n    }\r\n\r\n    getEntity(id) {\r\n        return this.entities.get(id);\r\n    }\r\n\r\n    createComponent(type, properties) {\r\n        return this.components.create(type, properties);\r\n    }\r\n\r\n    createQuery(filters) {\r\n        return this.queries.create(filters);\r\n    }\r\n\r\n    serialize(entities) {\r\n        return {\r\n            entities: this.entities.serialize(entities),\r\n        };\r\n    }\r\n\r\n    deserialize(data) {\r\n        if (data.id) {\r\n            return this.entities.deserializeEntity(data);\r\n        }\r\n\r\n        return this.entities.deserialize(data);\r\n    }\r\n}\r\n","// This alphabet uses `A-Za-z0-9_-` symbols. The genetic algorithm helped\n// optimize the gzip compression for this alphabet.\nlet urlAlphabet =\n  'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW'\n\nlet customAlphabet = (alphabet, size) => {\n  return () => {\n    let id = ''\n    // A compact alternative for `for (var i = 0; i < step; i++)`.\n    let i = size\n    while (i--) {\n      // `| 0` is more compact and faster than `Math.floor()`.\n      id += alphabet[Math.random() * alphabet.length | 0]\n    }\n    return id\n  }\n}\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  let i = size\n  while (i--) {\n    // `| 0` is more compact and faster than `Math.floor()`.\n    id += urlAlphabet[Math.random() * 64 | 0]\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet }\n","import { Component } from 'geotic';\n\nexport class IsDestroying extends Component {\n    static properties = {\n        pass: 0,\n    };\n}\n","import { Component } from 'geotic';\nimport { SPWN_POOL_LIQUID } from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\nimport { drinkLiquid, liquids, LIQUID_BLOOD } from '../../enums/LiquidTypes';\nimport { IsDestroying } from './IsDestroying';\n\nexport class LiquidContainer extends Component {\n    static properties = {\n        content: LIQUID_BLOOD,\n        volume: 10,\n        maxVolume: 10,\n        overridePrimary: false,\n        overrideSecondary: false,\n        isPourable: false,\n        destroyOnEmpty: false,\n        isFreeFlowing: false,\n    };\n\n    get liquid() {\n        return !this.isEmpty && liquids[this.content];\n    }\n\n    get isEmpty() {\n        return isNaN(this.content) || this.volume <= 0;\n    }\n\n    get display() {\n        if (this.isEmpty) {\n            return `[empty] ${this.volume}/${this.maxVolume}`;\n        }\n\n        return `[${liquids[this.content].name}] ${this.volume}/${\n            this.maxVolume\n        }`;\n    }\n\n    get primaryColorOverride() {\n        if (this.overridePrimary && this.liquid) {\n            return this.liquid.primary;\n        }\n\n        return null;\n    }\n\n    get secondaryColorOverride() {\n        if (this.overrideSecondary && this.liquid) {\n            return this.liquid.secondary;\n        }\n\n        return null;\n    }\n\n    _checkDestroyOnEmpty() {\n        if (this.destroyOnEmpty && this.isEmpty && !this.entity.isDestroying) {\n            this.entity.add(IsDestroying);\n        }\n    }\n\n    pour(x, y, quantity) {\n        if (!this.isPourable) {\n            console.warn('The container connot be poured.');\n            return false;\n        }\n\n        if (this.volume <= 0) {\n            console.warn('The contianer is empty and cannot be poured.');\n            return false;\n        }\n\n        if (isNaN(quantity) || quantity >= this.volume) {\n            quantity = this.volume;\n        }\n\n        this.volume -= quantity;\n\n        spawn(SPWN_POOL_LIQUID, x, y, {\n            content: this.content,\n            volume: quantity,\n        });\n\n        this._checkDestroyOnEmpty();\n\n        return true;\n    }\n\n    combineFrom(other) {\n        if (this.content !== other.content) {\n            console.warn('Cannot combine different liquid types');\n\n            return false;\n        }\n\n        const sum = this.volume + other.volume;\n\n        if (sum > this.maxVolume) {\n            console.warn(\n                'Container is not large enought to combine both liquids'\n            );\n            this.volume = this.maxVolume;\n\n            other.volume -= sum - this.maxVolume;\n        } else {\n            this.volume += other.volume;\n\n            other.volume -= other.volume;\n        }\n\n        other._checkDestroyOnEmpty();\n\n        return true;\n    }\n\n    onTryPour(evt) {\n        if (this.isEmpty) {\n            console.warn('The container is empty.');\n            return;\n        }\n\n        const pos = evt.data.interactor.position.getPos();\n\n        this.pour(pos.x, pos.y, evt.data.volume);\n\n        evt.data.interactor.fireEvent('energy-consumed', 400);\n        evt.handle();\n    }\n\n    onTryDrink(evt) {\n        if (this.isEmpty) {\n            console.warn('The container is empty.');\n            return;\n        }\n\n        drinkLiquid(evt.data.interactor, this.content, this.volume);\n        this.volume = 0;\n        this._checkDestroyOnEmpty();\n\n        evt.data.interactor.fireEvent('energy-consumed', 700);\n        evt.handle();\n    }\n\n    onGetInteractions(evt) {\n        if (this.isEmpty) {\n            return;\n        }\n\n        evt.data.interactions.push({\n            name: 'Drink',\n            evt: 'try-drink',\n        });\n\n        if (this.isPourable) {\n            evt.data.interactions.push({\n                name: 'Pour',\n                evt: 'try-pour',\n            });\n        }\n    }\n}\n","export const SPWN_VIAL_HONEY = 'SPWN_VIAL_HONEY';\nexport const SPWN_VIAL_BLOOD = 'SPWN_VIAL_BLOOD';\nexport const SPWN_VIAL_WATER = 'SPWN_VIAL_WATER';\nexport const SPWN_STONE = 'SPWN_STONE';\nexport const SPWN_TWIG = 'SPWN_TWIG';\nexport const SPWN_ASH = 'SPWN_ASH';\nexport const SPWN_GOBLIN_GRUNT = 'SPWN_GOBLIN_GRUNT';\nexport const SPWN_GOBLIN_BRUISER = 'SPWN_GOBLIN_BRUISER';\nexport const SPWN_GOBLIN_STARGAZER = 'SPWN_GOBLIN_STARGAZER';\nexport const SPWN_HUMAN_WANDERER = 'SPWN_HUMAN_WANDERER';\nexport const SPWN_PINE_TREE = 'SPWN_PINE_TREE';\nexport const SPWN_WOOD_WALL = 'SPWN_WOOD_WALL';\nexport const SPWN_WOOD_DOOR = 'SPWN_WOOD_DOOR';\nexport const SPWN_WOOD_CHEST = 'SPWN_WOOD_CHEST';\nexport const SPWN_STONE_WALL = 'SPWN_STONE_WALL';\nexport const SPWN_DIRT_PATH = 'SPWN_DIRT_PATH';\nexport const SPWN_CORPSE = 'SPWN_CORPSE';\nexport const SPWN_POOL_LIQUID = 'SPWN_POOL_LIQUID';\nexport const SPWN_GLASS_SHARD = 'SPWN_GLASS_SHARD';\nexport const SPWN_AMULET = 'SPWN_AMULET';\nexport const SPWN_CLOTH_ARMOR = 'SPWN_CLOTH_ARMOR';\nexport const SPWN_LEATHER_BOOTS = 'SPWN_LEATHER_BOOTS';\nexport const SPWN_SHORTSWORD = 'SPWN_SHORTSWORD';\nexport const SPWN_GREATSWORD = 'SPWN_GREATSWORD';\nexport const SPWN_BATTLE_AXE = 'SPWN_BATTLE_AXE';\nexport const SPWN_HATCHET = 'SPWN_HATCHET';\nexport const SPWN_MACE = 'SPWN_MACE';\nexport const SPWN_WOOD_CLUB = 'SPWN_WOOD_CLUB';\nexport const SPWN_GROUND_GRASS = 'SPWN_GROUND_GRASS';\nexport const SPWN_GROUND_STONE = 'SPWN_GROUND_STONE';\nexport const SPWN_HEAVY_PLATE_ARMOR = 'SPWN_HEAVY_PLATE_ARMOR';\nexport const SPWN_LEATHER_ARMOR = 'SPWN_LEATHER_ARMOR';\nexport const SPWN_CLOTH_HOOD = 'SPWN_CLOTH_HOOD';\nexport const SPWN_WIZARD_CAP = 'SPWN_WIZARD_CAP';\nexport const SPWN_HELM = 'SPWN_HELM';\n","import { game } from '../core/Game';\n\nimport * as VialHoney from './spawnables/SpawnableVialHoney';\nimport * as VialBlood from './spawnables/SpawnableVialBlood';\nimport * as VialWater from './spawnables/SpawnableVialWater';\nimport * as GoblinGrunt from './spawnables/SpawnableGoblinGrunt';\nimport * as GoblinBruiser from './spawnables/SpawnableGoblinBruiser';\nimport * as GoblinStargazer from './spawnables/SpawnableGoblinStargazer';\nimport * as PineTree from './spawnables/SpawnablePineTree';\nimport * as HumanWanderer from './spawnables/SpawnableHumanWanderer';\nimport * as PoolLiquid from './spawnables/SpawnablePoolLiquid';\nimport * as Grass from './spawnables/SpawnableGrass';\n\nconst simplePrefab = (prefabName) => (data) =>\n    game.ecs.createPrefab(prefabName, data);\n\nconst spawnables = {\n    SPWN_VIAL_HONEY: VialHoney.createSpawnable,\n    SPWN_VIAL_BLOOD: VialBlood.createSpawnable,\n    SPWN_VIAL_WATER: VialWater.createSpawnable,\n    SPWN_STONE: simplePrefab('Stone'),\n    SPWN_WOOD_WALL: simplePrefab('WoodWall'),\n    SPWN_WOOD_DOOR: simplePrefab('Door'),\n    SPWN_WOOD_CHEST: simplePrefab('Chest'),\n    SPWN_STONE_WALL: simplePrefab('Wall'),\n    SPWN_DIRT_PATH: simplePrefab('DirtPathway'),\n    SPWN_CORPSE: simplePrefab('Corpse'),\n    SPWN_GLASS_SHARD: simplePrefab('GlassShard'),\n    SPWN_AMULET: simplePrefab('Amulet'),\n    SPWN_CLOTH_ARMOR: simplePrefab('ClothArmor'),\n    SPWN_HEAVY_PLATE_ARMOR: simplePrefab('PlateArmor'),\n    SPWN_LEATHER_ARMOR: simplePrefab('LeatherArmor'),\n    SPWN_LEATHER_BOOTS: simplePrefab('Boots'),\n    SPWN_SHORTSWORD: simplePrefab('Shortsword'),\n    SPWN_GREATSWORD: simplePrefab('Greatsword'),\n    SPWN_BATTLE_AXE: simplePrefab('BattleAxe'),\n    SPWN_HATCHET: simplePrefab('Hatchet'),\n    SPWN_MACE: simplePrefab('Mace'),\n    SPWN_WOOD_CLUB: simplePrefab('WoodClub'),\n    SPWN_GROUND_GRASS: Grass.createSpawnable,\n    SPWN_GROUND_STONE: simplePrefab('StoneGround'),\n    SPWN_CLOTH_HOOD: simplePrefab('ClothHood'),\n    SPWN_WIZARD_CAP: simplePrefab('WizardCap'),\n    SPWN_HELM: simplePrefab('Helm'),\n    SPWN_TWIG: simplePrefab('Twig'),\n    SPWN_ASH: simplePrefab('Ash'),\n    SPWN_GOBLIN_GRUNT: GoblinGrunt.createSpawnable,\n    SPWN_GOBLIN_BRUISER: GoblinBruiser.createSpawnable,\n    SPWN_GOBLIN_STARGAZER: GoblinStargazer.createSpawnable,\n    SPWN_HUMAN_WANDERER: HumanWanderer.createSpawnable,\n    SPWN_PINE_TREE: PineTree.createSpawnable,\n    SPWN_POOL_LIQUID: PoolLiquid.createSpawnable,\n};\n\nexport const spawn = (key, x, y, data = {}) => {\n    const entity = spawnables[key](data, x, y);\n\n    if (!isNaN(x) && !isNaN(y) && entity.position) {\n        entity.position.setPos(x, y);\n    }\n\n    return entity;\n};\n","import { game } from '../../core/Game';\nimport { LIQUID_HONEY } from '../../enums/LiquidTypes';\n\nexport const createSpawnable = () => {\n    const vial = game.ecs.createPrefab('Vial');\n\n    vial.liquidContainer.content = LIQUID_HONEY;\n\n    return vial;\n};\n","import { game } from '../core/Game';\n\nexport const LIQUID_WATER = 0;\nexport const LIQUID_BLOOD = 1;\nexport const LIQUID_HONEY = 3;\nexport const LIQUID_OIL = 4;\n\nexport const liquids = {\n    [LIQUID_WATER]: {\n        name: 'water',\n        colorDesc: 'watery',\n        primary: '#66a3dc',\n        secondary: '#8bb9d5',\n        onDrink: (entity) => {\n            console.log('Mmm. earth juice. yummy');\n        },\n    },\n    [LIQUID_BLOOD]: {\n        name: 'blood',\n        colorDesc: 'bloody',\n        primary: '#ce2a36',\n        secondary: '#e0c1c2',\n        onDrink: (entity, volume) => {\n            console.log('blood. this would make a good syrup');\n            entity.fireEvent('heal', {\n                value: volume * 1,\n            });\n        },\n    },\n    [LIQUID_HONEY]: {\n        name: 'honey',\n        colorDesc: 'gooey golden',\n        primary: '#d6aa3a',\n        secondary: '#f4d260',\n        onDrink: (entity, volume) => {\n            const pos = entity.position.getPos();\n\n            game.particles.createEmitter(pos.x, pos.y - 1, {\n                rate: 2\n            }, {\n                direction: {\n                    x: 0,\n                    y: -1,\n                },\n                glyphs: ['.', '○'],\n                fg1s: ['#d6aa3a'],\n                speed: 0.02,\n                lifetime: 500,\n            });\n\n            entity.fireEvent('heal', {\n                value: volume * 2,\n            });\n        },\n    },\n};\n\nexport const drinkLiquid = (entity, type, volume) => {\n    liquids[type].onDrink(entity, volume);\n};\n","import { game } from '../../core/Game';\nimport { LIQUID_BLOOD } from '../../enums/LiquidTypes';\n\nexport const createSpawnable = () => {\n    const vial = game.ecs.createPrefab('Vial');\n\n    vial.liquidContainer.content = LIQUID_BLOOD;\n\n    return vial;\n};\n","import { game } from '../../core/Game';\nimport { LIQUID_WATER } from '../../enums/LiquidTypes';\n\nexport const createSpawnable = () => {\n    const vial = game.ecs.createPrefab('Vial');\n\n    vial.liquidContainer.content = LIQUID_WATER;\n\n    return vial;\n};\n","import { BoredGoalType } from '../../ai/GoalTypes';\nimport { game } from '../../core/Game';\nimport { SPWN_SHORTSWORD } from '../Spawnables';\nimport { spawn } from '../Spawner';\n\nexport const createSpawnable = () => {\n    const goblin = game.ecs.createPrefab('Goblin');\n\n    goblin.brain.pushGoal(BoredGoalType.create());\n\n    const sword = spawn(SPWN_SHORTSWORD);\n\n    goblin.equipmentSlot.handRight.equip(sword);\n\n    return goblin;\n};\n","import { GoalType } from './GoalType';\nimport { SUCCESS } from '../GoalActionResult';\nimport { KillSomethingGoalType } from './KillSomethingGoalType';\n\nexport class BoredGoalType extends GoalType {\n    static name = 'Bored';\n\n    static isFinished = (entity, goal) => {\n        return false;\n    };\n\n    static takeAction = (entity, goal) => {\n        // do i detect any hostiles?\n        const targets = new Set();\n\n        entity.fireEvent('try-detect-hostiles', {\n            targets,\n        });\n\n        if (targets.size > 0) {\n            const target = [...targets][0];\n\n            const killGoal = KillSomethingGoalType.createAsSubGoal(goal, {\n                target: target.id,\n            });\n\n            entity.brain.pushGoal(killGoal);\n\n            entity.fireEvent('take-action');\n\n            return SUCCESS;\n        }\n\n        // is there anything i want to do since i'm bored?\n        const boredomGoal = entity.fireEvent('boredom');\n\n        if (boredomGoal.data.goal) {\n            entity.brain.pushGoal(boredomGoal.data.goal);\n            entity.fireEvent('take-action');\n\n            return SUCCESS;\n        }\n\n        // nothing to do, just idle\n        entity.fireEvent('energy-consumed', 1000);\n\n        return SUCCESS;\n    };\n}\n","import { FAILURE } from '../GoalActionResult';\nimport { game } from '../../core/Game';\n\nexport class GoalType {\n    static name = 'Unknown';\n\n    static isFinished(entity, goal) {\n        return false;\n    }\n\n    static takeAction(entity, goal) {\n        return FAILURE;\n    }\n\n    static createAsSubGoal(originalIntent, properties = {}) {\n        return this.create({\n            ...properties,\n            originalIntent: originalIntent.entity.id,\n        });\n    }\n\n    static create(properties = {}) {\n        return game.ecs.createPrefab('Goal', {\n            goal: {\n                name: this.name,\n                ...properties,\n            },\n        }).goal;\n    }\n}\n","export const SUCCESS = 'SUCCESS';\nexport const FAILURE = 'FAILURE';\nexport const INVALID = 'INVALID';\n","import { GoalType } from './GoalType';\nimport { FAILURE, SUCCESS } from '../GoalActionResult';\nimport { computeAStar } from '../../utils/AStar';\nimport { game } from '../../core/Game';\nimport { diagonalDistance } from '../../utils/diagonalDistance';\nimport { MoveGoalType } from './MoveGoalType';\n\nexport class KillSomethingGoalType extends GoalType {\n    static name = 'KillSomething';\n\n    static isFinished = (entity, goal) => {\n        return !goal.target || goal.target.isDead || goal.target.isDestroyed;\n    };\n\n    static takeAction = (entity, goal) => {\n        // try melee\n        let evt = entity.fireEvent('try-melee', {\n            target: goal.target,\n        });\n\n        if (evt.handled) {\n            return SUCCESS;\n        }\n\n        const start = entity.position.getPos();\n        const targetPos = goal.target.position.getPos();\n\n        // try pathing to target\n        const result = computeAStar({\n            start,\n            goal: targetPos,\n            cost: (a, b) => {\n                if (game.map.isOutOfbounds(b.x, b.y)) {\n                    return Infinity;\n                }\n\n                if (b.x === targetPos.x && b.y === targetPos.y) {\n                    return diagonalDistance(a, b);\n                }\n\n                const entities = game.map.getEntitiesAt(b.x, b.y);\n\n                if (entities.some((e) => e.blocker)) {\n                    return Infinity;\n                }\n\n                if (\n                    entities.some(\n                        (e) =>\n                            e.id !== entity.id && e.body && !e.isIncapacitated\n                    )\n                ) {\n                    return Infinity;\n                }\n\n                if (entities.some((e) => e.sharpTrap)) {\n                    return 8;\n                }\n\n                return diagonalDistance(a, b);\n            },\n        });\n\n        if (result.success && result.cost < 55) {\n            const segment = result.path[1];\n            const delta = {\n                x: segment.x - start.x,\n                y: segment.y - start.y,\n            };\n            const moveGoal = MoveGoalType.createAsSubGoal(goal, {\n                data: delta,\n            });\n\n            entity.brain.pushGoal(moveGoal);\n\n            entity.fireEvent('take-action');\n\n            return SUCCESS;\n        }\n\n        // try defense\n        // try ranged\n        // try items\n        // try movement\n        // fail to intent\n\n        entity.fireEvent('energy-consumed', 1000);\n\n        return FAILURE;\n    };\n}\n","import { diagonalDistance } from './diagonalDistance';\nimport { manhattanDistance } from './ManhattanDistance';\nimport PriorityQueue from './PriorityQueue';\n\nconst getNeighbors = (x, y, allowDiagonals = true) => {\n    const neighbors = [\n        {\n            x: x,\n            y: y - 1,\n        },\n        {\n            x: x - 1,\n            y: y,\n        },\n        {\n            x: x + 1,\n            y: y,\n        },\n        {\n            x: x,\n            y: y + 1,\n        },\n    ];\n\n    if (allowDiagonals) {\n        neighbors.push(\n            {\n                x: x - 1,\n                y: y - 1,\n            },\n            {\n                x: x + 1,\n                y: y - 1,\n            },\n            {\n                x: x - 1,\n                y: y + 1,\n            },\n            {\n                x: x + 1,\n                y: y + 1,\n            }\n        );\n    }\n\n    return neighbors;\n};\n\nconst key = (pos) => `${pos.x},${pos.y}`;\n\nconst defaultSettings = {\n    start: {},\n    goal: {},\n    cost: () => {},\n    allowDiagonals: true,\n};\n\nexport const computeAStar = (settings = defaultSettings) => {\n    const heuristic = settings.allowDiagonals\n        ? diagonalDistance\n        : manhattanDistance;\n    const start = settings.start;\n    const goal = settings.goal;\n    const cost = settings.cost;\n\n    const open = new PriorityQueue();\n    const cameFrom = {};\n    const costSoFar = {};\n    const startKey = key(start);\n    const goalKey = key(goal);\n\n    const result = {\n        success: false,\n        path: [],\n        costs: [],\n        cost: Infinity,\n        start,\n        goal,\n    };\n\n    if (cost(start, goal) === Infinity) {\n        return result;\n    }\n\n    open.put(\n        {\n            key: startKey,\n            pos: start,\n        },\n        0\n    );\n\n    costSoFar[startKey] = 0;\n\n    while (!open.isEmpty()) {\n        const { key: currentKey, pos: current } = open.pop();\n\n        if (currentKey === goalKey) {\n            result.success = true;\n            break;\n        }\n\n        const neighbors = getNeighbors(\n            current.x,\n            current.y,\n            settings.allowDiagonals\n        );\n\n        for (let next of neighbors) {\n            const nextKey = key(next);\n            const graphCost = nextKey === goalKey ? 0 : cost(current, next);\n\n            if (graphCost === Infinity) {\n                continue;\n            }\n\n            const newCost = costSoFar[currentKey] + graphCost;\n\n            if (!(nextKey in costSoFar) || newCost < costSoFar[nextKey]) {\n                costSoFar[nextKey] = newCost;\n\n                const priority = newCost + heuristic(next, goal);\n\n                open.put(\n                    {\n                        key: nextKey,\n                        pos: next,\n                    },\n                    priority\n                );\n\n                cameFrom[nextKey] = current;\n            }\n        }\n    }\n\n    if (!result.success) {\n        return result;\n    }\n\n    result.path = [goal];\n    result.cost = costSoFar[goalKey];\n    result.costs = [costSoFar[goalKey]];\n\n    let previous = cameFrom[key(goal)];\n\n    while (previous) {\n        const previousKey = key(previous);\n\n        result.path.unshift(previous);\n        result.costs.unshift(costSoFar[previousKey]);\n\n        previous = cameFrom[previousKey];\n    }\n\n    return result;\n};\n","export const diagonalDistance = (a, b) => {\n    const dx = Math.abs(a.x - b.x);\n    const dy = Math.abs(a.y - b.y);\n\n    return 1 * (dx + dy) + (1.41 - 2 * 1) * Math.min(dx, dy);\n};\n","export const manhattanDistance = (a, b) => {\n    return Math.abs(a.x - b.x) + Math.abs(a.y - b.y);\n};\n","const createItem = (value, priority) => ({ value, priority });\n\nexport default class PriorityQueue {\n    #items = [];\n\n    isEmpty() {\n        return this.#items.length <= 0;\n    }\n\n    pop() {\n        if (!this.isEmpty()) {\n            return this.#items.shift().value;\n        }\n    }\n\n    peek() {\n        if (!this.isEmpty()) {\n            return this.#items[0].value;\n        }\n    }\n\n    put(value, priority) {\n        const item = createItem(value, priority);\n\n        for (let i = 0; i < this.#items.length; i++) {\n            if (this.#items[i].priority > item.priority) {\n                this.#items.splice(i, 0, item);\n                return;\n            }\n        }\n\n        this.#items.push(item);\n    }\n}\n","import { GoalType } from './GoalType';\nimport { SUCCESS, FAILURE } from '../GoalActionResult';\n\nexport class MoveGoalType extends GoalType {\n    static name = 'Move';\n\n    static isFinished = (entity, goal) => {\n        return goal.complete;\n    };\n\n    static takeAction = (entity, goal) => {\n        const evt = entity.fireEvent('try-move', {\n            x: goal.data.x,\n            y: goal.data.y,\n        });\n\n        if (evt.handled) {\n            goal.complete = true;\n\n            return SUCCESS;\n        }\n\n        return FAILURE;\n    };\n}\n","import { GoalType } from './GoalType';\nimport { SUCCESS, FAILURE } from '../GoalActionResult';\n\nexport class EatFoodGoalType extends GoalType {\n    static name = 'EatFood';\n\n    static isFinished = (entity, goal) => {\n        return goal.complete;\n    };\n\n    static takeAction = (entity, goal) => {\n        const evt = entity.fireEvent('try-eat-food', {\n            food: 10000,\n        });\n\n        if (evt.handled) {\n            goal.complete = true;\n\n            return SUCCESS;\n        }\n\n        return FAILURE;\n    };\n}\n","import { BoredGoalType } from '../../ai/GoalTypes';\nimport { game } from '../../core/Game';\nimport { SPWN_WOOD_CLUB } from '../Spawnables';\nimport { spawn } from '../Spawner';\n\nexport const createSpawnable = () => {\n    const bruiser = game.ecs.createPrefab('GoblinBruiser');\n\n    bruiser.brain.pushGoal(BoredGoalType.create());\n\n    const club = spawn(SPWN_WOOD_CLUB);\n\n    bruiser.equipmentSlot.handRight.equip(club);\n\n    return bruiser;\n};\n","import { BoredGoalType } from '../../ai/GoalTypes';\nimport { game } from '../../core/Game';\nimport { SPWN_WOOD_CLUB } from '../Spawnables';\nimport { spawn } from '../Spawner';\n\nexport const createSpawnable = () => {\n    const bruiser = game.ecs.createPrefab('GoblinStargazer');\n\n    bruiser.brain.pushGoal(BoredGoalType.create());\n\n    // const club = spawn(SPWN_WOOD_CLUB);\n\n    // bruiser.equipmentSlot.handRight.equip(club);\n\n    return bruiser;\n};\n","import { game } from '../../core/Game';\nimport { pickRandom } from '../../utils/rand';\n\nexport const createSpawnable = () => {\n    const type = pickRandom(['PineTree', 'SmallPineTree']);\n    const tree = game.ecs.createPrefab(type);\n\n    return tree;\n};\n","export const pickRandom = (arr) => {\n    return arr[Math.floor(Math.random() * arr.length)];\n};\n\nexport const randomInt = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nexport const randomBool = () => {\n    return pickRandom([true, false]);\n};\n\nexport const randomWeightedBool = (weight = 0.5) => {\n    return Math.random() <= weight;\n};\n","import { BoredGoalType } from '../../ai/GoalTypes';\nimport { game } from '../../core/Game';\n\nexport const createSpawnable = () => {\n    const wanderer = game.ecs.createPrefab('HumanWanderer');\n\n    wanderer.brain.pushGoal(BoredGoalType.create());\n\n    return wanderer;\n};\n","import { game } from '../../core/Game';\n\nexport const createSpawnable = (data) => {\n    return game.ecs.createPrefab('Pool', {\n        liquidContainer: {\n            content: data.content,\n            volume: data.volume,\n        },\n    });\n};\n","import { game } from '../../core/Game';\nimport { pickRandom } from '../../utils/rand';\n\nexport const createSpawnable = () => {\n    const grass = game.ecs.createPrefab('Grass');\n    const ch = pickRandom(['≡', '±', '≥', '≤']);\n\n    grass.glyph.ch = ch;\n\n    return grass;\n};\n","import { Component } from 'geotic';\nimport { Blocker } from './Blocker';\nimport { Shadowcaster } from './Shadowcaster';\n\nexport class Door extends Component {\n    static properties = {\n        isOpen: false,\n        chOpen: \"'\",\n        chClosed: '+',\n    };\n\n    get ch() {\n        return this.isOpen ? this.chOpen : this.chClosed;\n    }\n\n    get display() {\n        return this.isOpen ? '[open]' : '[closed]';\n    }\n\n    openDoor() {\n        if (this.isOpen) {\n            return false;\n        }\n\n        this.isOpen = true;\n\n        const glyph = this.entity.glyph;\n\n        if (glyph) {\n            glyph.ch = this.ch;\n        }\n\n        this.entity.blocker.destroy();\n        this.entity.shadowcaster.destroy();\n\n        return true;\n    }\n\n    closeDoor() {\n        if (!this.isOpen) {\n            return false;\n        }\n        // todo: check if entity blocking door\n\n        this.isOpen = false;\n\n        const glyph = this.entity.glyph;\n\n        if (glyph) {\n            glyph.ch = this.ch;\n        }\n\n        this.entity.add(Blocker);\n        this.entity.add(Shadowcaster);\n\n        return true;\n    }\n\n    onGetInteractions(evt) {\n        if (this.isOpen) {\n            evt.data.interactions.push({\n                name: 'Close door',\n                evt: 'try-close-door',\n            });\n        } else {\n            evt.data.interactions.push({\n                name: 'Open door',\n                evt: 'try-open-door',\n            });\n        }\n    }\n\n    onTryCloseDoor(evt) {\n        if (this.closeDoor()) {\n            evt.data.interactor.fireEvent('energy-consumed', 800);\n        }\n        evt.handle();\n    }\n\n    onTryOpenDoor(evt) {\n        if (this.openDoor()) {\n            evt.data.interactor.fireEvent('energy-consumed', 800);\n        }\n        evt.handle();\n    }\n\n    onProjectileHit(evt) {\n        if (!this.isOpen) {\n            evt.data.stopProjectile = true;\n            evt.data.deflectProjectile = false;\n        }\n\n        this.openDoor();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Blocker extends Component {\n    onProjectileHit(evt) {\n        // https://github.com/ddmills/geotic/issues/22\n        if (!this.isAttached) {\n            return;\n        }\n\n        evt.data.stopProjectile = true;\n        evt.data.deflectProjectile = true;\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Shadowcaster extends Component {}\n","import { Component } from 'geotic';\nimport { Inventory } from './Inventory';\nimport { IsInventoried } from './IsInventoried';\n\nexport class Loot extends Component {\n    take(newOwner) {\n        if (this.entity.isInventoried) {\n            if (this.entity.isInventoried.isOwnedBy(newOwner)) {\n                return true;\n            }\n\n            const owner = this.entity.isInventoried.owner;\n\n            owner.inventory.removeLoot(this.entity);\n        }\n\n        newOwner.inventory.addLoot(this.entity);\n\n        return true;\n    }\n\n    onGetInteractions(evt) {\n        const interactor = evt.data.interactor;\n        const isInventoried = this.entity.has(IsInventoried);\n\n        if (!interactor.has(Inventory)) {\n            return;\n        }\n\n        if (isInventoried) {\n            if (interactor.inventory.hasLoot(this.entity)) {\n                evt.data.interactions.push({\n                    name: 'Drop',\n                    evt: 'try-drop',\n                });\n            } else {\n                evt.data.interactions.push({\n                    name: 'Take',\n                    evt: 'try-take',\n                });\n            }\n        } else {\n            evt.data.interactions.push({\n                name: 'Pickup',\n                evt: 'try-pick-up',\n            });\n        }\n    }\n\n    onEquipped(evt) {\n        if (!evt.data.interactor.has(Inventory)) {\n            return;\n        }\n\n        if (evt.data.interactor.inventory.hasLoot(this.entity)) {\n            return;\n        }\n\n        evt.data.interactor.inventory.addLoot(this.entity);\n    }\n\n    onTryPickUp(evt) {\n        this.take(evt.data.interactor);\n\n        evt.data.interactor.fireEvent('energy-consumed', 100);\n        evt.handle();\n    }\n\n    onTryTake(evt) {\n        this.take(evt.data.interactor);\n\n        evt.data.interactor.fireEvent('energy-consumed', 100);\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { SCREEN_INVENTORY } from '../../core/screens/ScreenType';\nimport { IsInventoried } from './IsInventoried';\nimport { Stackable } from './Stackable';\n\nexport class Inventory extends Component {\n    static properties = {\n        content: '<EntityArray>',\n        isOpenable: true,\n    };\n\n    onDestroyed() {\n        this.content.forEach((entity) => entity.destroy());\n    }\n\n    onQueryOwnership(evt) {\n        this.content.forEach((entity) => {\n            evt.data.result.add(entity);\n            entity.fireEvent('query-ownership', { result: evt.data.result });\n        });\n    }\n\n    getStackable(stackableIdentifier) {\n        return this.content.find((entity) => {\n            return (\n                entity.has(Stackable) &&\n                entity.stackable.identifier === stackableIdentifier\n            );\n        });\n    }\n\n    addLoot(loot) {\n        if (loot.has(Stackable)) {\n            const existing = this.getStackable(loot.stackable.identifier);\n\n            if (existing) {\n                existing.stackable.addOther(loot);\n\n                return;\n            }\n        }\n\n        loot.add(IsInventoried, {\n            owner: this.entity,\n        });\n\n        this.content.push(loot);\n    }\n\n    hasLoot(loot) {\n        const idx = this.content.indexOf(loot);\n\n        return idx >= 0;\n    }\n\n    removeLoot(loot, quantity) {\n        const isStackable = loot.has(Stackable);\n\n        if (isStackable && !isNaN(quantity)) {\n            loot.stackable.split(quantity);\n\n            return this.removeLoot(loot);\n        }\n\n        const idx = this.content.indexOf(loot);\n\n        if (idx >= 0) {\n            this.content.splice(idx, 1);\n            loot.isInventoried.destroy();\n        }\n\n        return loot;\n    }\n\n    dropLoot(loot, quantity) {\n        const ob = this.removeLoot(loot, quantity);\n        const pos = this.entity.position.getPos();\n\n        ob.position.setPos(pos.x, pos.y);\n\n        ob.fireEvent('dropped', {\n            dropper: this.entity,\n        });\n\n        return ob;\n    }\n\n    onTryOpen(evt) {\n        game.screens.replaceScreen(SCREEN_INVENTORY, {\n            accessible: this.entity,\n            accessor: evt.data.interactor,\n        });\n        evt.handle();\n    }\n\n    onGetInteractions(evt) {\n        if (this.isOpenable) {\n            evt.data.interactions.push({\n                name: 'Open',\n                evt: 'try-open',\n            });\n        }\n    }\n}\n","import { Component } from 'geotic';\nimport { Stackable } from './Stackable';\n\nexport class IsInventoried extends Component {\n    static properties = {\n        owner: '<Entity>',\n    };\n\n    isOwnedBy(entity) {\n        return this.owner && this.owner.id === entity.id;\n    }\n\n    onQueryOwnership(evt) {\n        evt.data.result.add(this.entity);\n    }\n\n    onTryDrop(evt) {\n        this.owner.inventory.dropLoot(this.entity);\n\n        evt.data.interactor.fireEvent('energy-consumed', 200);\n\n        evt.handle();\n    }\n\n    onThrown(evt) {\n        const isStackable = this.entity.has(Stackable);\n        const quantity = isStackable ? 1 : null;\n\n        this.owner.inventory.removeLoot(this.entity, quantity);\n    }\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { STACKABLE_DEFAULT } from '../../enums/Stackables';\nimport { IsDestroying } from './IsDestroying';\nimport { IsInventoried } from './IsInventoried';\n\nexport class Stackable extends Component {\n    static properties = {\n        identifier: STACKABLE_DEFAULT,\n        quantity: 1,\n    };\n\n    get display() {\n        return `x ${this.quantity}`;\n    }\n\n    increment(amount) {\n        this.quantity += amount;\n    }\n\n    addOther(other) {\n        this.increment(other.stackable.quantity);\n        other.stackable.quantity = 0;\n        other.add(IsDestroying);\n    }\n\n    split(quantity) {\n        if (quantity >= this.quantity) {\n            quantity = this.quantity;\n            return this.entity;\n        }\n\n        const clone = game.engine.cloneEntity(this.entity);\n        clone.stackable.quantity -= quantity;\n\n        this.quantity = quantity;\n\n        if (clone.has(IsInventoried)) {\n            // make sure inventory contents are still \"correct\"\n            clone.isInventoried.owner.inventory.content.push(clone);\n        }\n\n        return clone;\n    }\n}\n","export const STACKABLE_DEFAULT = 'STACKABLE_DEFAULT';\nexport const STACKABLE_STONE = 'STACKABLE_STONE';\nexport const STACKABLE_ASH = 'STACKABLE_ASH';\nexport const STACKABLE_GLASS_SHARD = 'STACKABLE_GLASS_SHARD';\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { SCREEN_ADVENTURE, SCREEN_CURSOR } from '../../core/screens/ScreenType';\nimport { SKILL_THROWING, getSkillValue } from '../../data/Skills';\nimport Attack from '../../data/Attack';\nimport { DMG_TYPE_BLUDGEONING } from '../../data/DamageTypes';\nimport { getStat, STAT_STRENGTH } from '../../data/Stats';\nimport { bresenhamLine } from '../../utils/BresenhamLine';\nimport { randomInt } from '../../utils/rand';\nimport { Inventory } from './Inventory';\nimport { simpleLineRenderer } from '../../utils/cursor/SimpleLineRenderer';\n\nexport class Throwable extends Component {\n    static properties = {\n        die: 4,\n        modifier: 0,\n        cost: 500,\n        damageType: DMG_TYPE_BLUDGEONING,\n    };\n\n    onGetInteractions(evt) {\n        if (!evt.data.interactor.has(Inventory)) {\n            return;\n        }\n\n        if (!evt.data.interactor.inventory.hasLoot(this.entity)) {\n            return;\n        }\n\n        evt.data.interactions.push({\n            name: 'Throw',\n            evt: 'try-throw',\n        });\n    }\n\n    throw(trajectory, initiator) {\n        this.entity.fireEvent('thrown', {\n            initiator,\n            trajectory,\n        });\n\n        for (let i = 0; i < trajectory.length; i++) {\n            if (i == 0) {\n                continue;\n            }\n\n            const position = trajectory[i];\n            const entities = position.entities;\n\n            let stopped = false;\n            let deflected = false;\n\n            const hit = entities.find((entity) => {\n                const evt = entity.fireEvent('projectile-hit', {\n                    initiator,\n                    trajectory,\n                    projectile: this.entity,\n                });\n\n                stopped = evt.data.stopProjectile;\n                deflected = evt.data.deflectProjectile;\n\n                return stopped || deflected;\n            });\n\n            if (hit) {\n                if (deflected) {\n                    const prev = trajectory[i - 1];\n\n                    this.entity.position.setPos(prev.x, prev.y);\n                    this.entity.fireEvent('collide-ground', {\n                        initiator,\n                        x: prev.x,\n                        y: prev.y,\n                    });\n                } else {\n                    this.entity.position.setPos(position.x, position.y);\n                    this.entity.fireEvent('collide', {\n                        initiator,\n                        hit,\n                        x: position.x,\n                        y: position.y,\n                    });\n\n                    const str = getStat(STAT_STRENGTH, initiator);\n                    const die = randomInt(1, this.die);\n                    const damage = die + str + this.modifier;\n                    const attack = new Attack({\n                        attacker: initiator,\n                        defender: hit,\n                        weaponName: this.entity.moniker.display,\n                        damage,\n                        damageType: this.damageType,\n                        ignoreDodge: true,\n                    });\n\n                    hit.fireEvent('attacked', { attack });\n                }\n\n                break;\n            } else if (i === trajectory.length - 1) {\n                this.entity.position.setPos(position.x, position.y);\n                this.entity.fireEvent('collide-ground', {\n                    initiator,\n                    x: position.x,\n                    y: position.y,\n                });\n            }\n        }\n    }\n\n    onTryThrow(evt) {\n        const range = getSkillValue(SKILL_THROWING, evt.data.interactor);\n\n        game.screens.pushScreen(SCREEN_CURSOR, {\n            renderer: simpleLineRenderer(),\n            start: evt.data.interactor.position.getPos(),\n            onResult: (cursor) => {\n                game.screens.setScreen(SCREEN_ADVENTURE);\n\n                this.entity.position.setPos(cursor.start.x, cursor.start.y);\n\n                const line = bresenhamLine(\n                    cursor.start.x,\n                    cursor.start.y,\n                    cursor.position.x,\n                    cursor.position.y\n                );\n                const trajectory = line.slice(0, range + 1).map((pos) => ({\n                    x: pos.x,\n                    y: pos.y,\n                    entities: game.map.getEntitiesAt(pos.x, pos.y),\n                }));\n\n                evt.data.interactor.fireEvent('energy-consumed', this.cost);\n\n                this.throw(trajectory, evt.data.interactor);\n            },\n            onCancel: () => {\n                game.screens.popScreen();\n            },\n        });\n    }\n}\n","import ArmorSkill from './skills/ArmorSkill';\r\nimport SpeedSkill from './skills/SpeedSkill';\r\nimport ThrowingSkill from './skills/ThrowingSkill';\r\nimport DodgeSkill from './skills/DodgeSkill';\r\n\r\nexport const SKILL_SPEED = 'SKILL_SPEED';\r\nexport const SKILL_THROWING = 'SKILL_THROWING';\r\nexport const SKILL_ARMOR = 'SKILL_ARMOR';\r\nexport const SKILL_DODGE = 'SKILL_DODGE';\r\n\r\nconst lookup = {\r\n    [SKILL_ARMOR]: new ArmorSkill(),\r\n    [SKILL_SPEED]: new SpeedSkill(),\r\n    [SKILL_THROWING]: new ThrowingSkill(),\r\n    [SKILL_DODGE]: new DodgeSkill(),\r\n};\r\n\r\nexport const getSkill = (key) => lookup[key];\r\nexport const getSkillName = (key) => lookup[key].name;\r\nexport const getSkillValue = (key, entity) => lookup[key].compute(entity);\r\nexport const getSkillEquippedMod = (key, entity) => {\r\n    const modifiers = [];\r\n\r\n    entity.fireEvent(`query-skill-mod-equipped`, {\r\n        skill: key,\r\n        modifiers,\r\n    });\r\n\r\n    return modifiers;\r\n};\r\nexport const getAllSkillEquippedMods = (entity) => {\r\n    return Object.keys(lookup).reduce(\r\n        (mods, skill) => ({\r\n            ...mods,\r\n            [skill]: getSkillEquippedMod(skill, entity),\r\n        }),\r\n        {}\r\n    );\r\n};\r\nexport const getAllSkillEquippedModSums = (entity) => {\r\n    const mods = getAllSkillEquippedMods(entity);\r\n\r\n    return Object.keys(mods).reduce(\r\n        (all, skill) => ({\r\n            ...all,\r\n            [skill]: mods[skill].reduce((sum, mod) => sum + mod.mod, 0),\r\n        }),\r\n        {}\r\n    );\r\n};\r\n","import { SKILL_ARMOR } from '../Skills';\nimport Skill from './Skill';\n\nexport const getArmorBlockPercent = (skill = 0) => {\n    const base = 10;\n\n    return 1 - base / (skill + base);\n};\n\nexport const getArmorBlockPercentDisplay = (skill = 0) => {\n    const prcnt = getArmorBlockPercent(skill);\n\n    return Math.floor(prcnt * 100);\n};\n\nexport default class ArmorSkill extends Skill {\n    constructor() {\n        super(SKILL_ARMOR, 'armor');\n    }\n}\n","import { getStat } from '../Stats';\n\nexport default class Skill {\n    key = -1;\n    name = 'skill';\n    baseStat = null;\n\n    constructor(key, name, baseStat) {\n        this.key = key;\n        this.name = name;\n        this.baseStat = baseStat;\n    }\n\n    getModifiers(entity) {\n        const evt = entity.fireEvent(`query-skill-mod`, {\n            name: this.name,\n            skill: this.key,\n            modifiers: [],\n        });\n\n        return evt.data.modifiers;\n    }\n\n    getModifierSum(entity) {\n        const modifiers = this.getModifiers(entity);\n\n        return modifiers.reduce((sum, cur) => sum + cur.mod, 0);\n    }\n\n    compute(entity) {\n        const stat = this.baseStat ? getStat(this.baseStat, entity) : 0;\n        const modifier = this.getModifierSum(entity);\n\n        return stat + modifier;\n    }\n}\n","import { randomInt } from '../utils/rand';\n\nexport const STAT_STRENGTH = 'STAT_STRENGTH';\nexport const STAT_FINESSE = 'STAT_FINESSE';\nexport const STAT_ATHLETICISM = 'STAT_ATHLETICISM';\nexport const STAT_TRICKERY = 'STAT_TRICKERY';\nexport const STAT_FAITH = 'STAT_FAITH';\n\nconst lookup = {\n    [STAT_STRENGTH]: {\n        name: 'strength',\n    },\n    [STAT_FINESSE]: {\n        name: 'finesse',\n    },\n    [STAT_ATHLETICISM]: {\n        name: 'athleticism',\n    },\n    [STAT_TRICKERY]: {\n        name: 'trickery',\n    },\n    [STAT_FAITH]: {\n        name: 'faith',\n    },\n};\n\nexport const getStatName = (stat) => lookup[stat].name;\nexport const getStat = (stat, entity) => {\n    const name = lookup[stat].name;\n\n    return entity.stats[name]();\n};\nexport const rollStat = (stat, entity) => {\n    return randomInt(1, 20) + getStat(stat, entity);\n};\nexport const statCheck = (stat, entity, target) => {\n    return rollStat(stat, entity) >= target;\n};\n","import { SKILL_SPEED } from '../Skills';\nimport { STAT_ATHLETICISM } from '../Stats';\nimport Skill from './Skill';\n\nexport const getSpeedPercent = (skill = 0) => {\n    const base = 5;\n    const cost = base / (base + skill);\n\n    return cost;\n};\n\nexport const getSpeedPercentDisplay = (skill = 0) => {\n    const prcnt = getSpeedPercent(skill);\n\n    return Math.floor(prcnt * 100);\n};\n\nexport default class SpeedSkill extends Skill {\n    constructor() {\n        super(SKILL_SPEED, 'speed', STAT_ATHLETICISM);\n    }\n}\n","import { SKILL_THROWING } from '../Skills';\nimport { getStat, STAT_ATHLETICISM } from '../Stats';\nimport Skill from './Skill';\n\nexport default class ThrowingSkill extends Skill {\n    constructor() {\n        super(SKILL_THROWING, 'throwing', STAT_ATHLETICISM);\n    }\n\n    compute(entity) {\n        const base = getStat(STAT_ATHLETICISM, entity);\n        const modifier = this.getModifierSum(entity);\n\n        return Math.max(0, base + modifier) + 6;\n    }\n}\n","import { SKILL_DODGE } from '../Skills';\nimport { STAT_FINESSE } from '../Stats';\nimport Skill from './Skill';\n\nexport const getDodgePercent = (skill = 0) => {\n    const base = 5;\n    const unscaled = 1 - base / (skill + base);\n\n    return Math.floor(unscaled * 100);\n};\n\nexport default class DodgeSkill extends Skill {\n    constructor() {\n        super(SKILL_DODGE, 'dodge', STAT_FINESSE);\n    }\n}\n","export default class Attack {\n    constructor(data) {\n        this.attacker = data.attacker;\n        this.defender = data.defender;\n        this.weaponName = data.weaponName;\n        this.damage = data.damage;\n        this.damageType = data.damageType;\n        this.ignoreDodge = data.ignoreDodge;\n    }\n}\n","export const DMG_TYPE_BLUDGEONING = 'DMG_TYPE_BLUDGEONING';\nexport const DMG_TYPE_PIERCING = 'DMG_TYPE_PIERCING';\nexport const DMG_TYPE_SLASHING = 'DMG_TYPE_SLASHING';\nexport const DMG_TYPE_NECROTIC = 'DMG_TYPE_NECROTIC';\n\nconst lookup = {\n    [DMG_TYPE_BLUDGEONING]: {\n        name: 'Bludgeoning',\n        verb: 'bludgeons',\n    },\n    [DMG_TYPE_PIERCING]: {\n        name: 'Piercing',\n        verb: 'pierces',\n    },\n    [DMG_TYPE_SLASHING]: {\n        name: 'Slashing',\n        verb: 'slashes',\n    },\n    [DMG_TYPE_NECROTIC]: {\n        name: 'Necrotic',\n        verb: 'saps',\n    },\n};\n\nexport const getDmgTypeName = (type) => lookup[type].name;\nexport const getDmgTypeVerb = (type) => lookup[type].verb;\n","export const bresenhamLine = (x0, y0, x1, y1) => {\n    const dx = Math.abs(x1 - x0);\n    const dy = Math.abs(y1 - y0);\n    const sx = x0 < x1 ? 1 : -1;\n    const sy = y0 < y1 ? 1 : -1;\n    const result = [];\n\n    let err = dx - dy;\n\n    while (true) {\n        result.push({\n            x: x0,\n            y: y0,\n        });\n\n        if (x0 === x1 && y0 === y1) {\n            break;\n        }\n\n        const e2 = 2 * err;\n\n        if (e2 > -dy) {\n            err -= dy;\n            x0 += sx;\n        }\n        if (e2 < dx) {\n            err += dx;\n            y0 += sy;\n        }\n    }\n\n    return result;\n};\n\nexport const bresenhamLineExclusive = (x0, y0, x1, y1) => {\n    const line = bresenhamLine(x0, y0, x1, y1);\n\n    line.shift();\n    line.pop();\n\n    return line;\n};\n","import { game } from '../../core/Game';\n\nconst truthy = () => true;\n\nexport const simpleLineRenderer = (options = {}) => {\n    const isValid = options.isValid || truthy;\n\n    return {\n        isValid,\n        render: (opts) => {\n            opts.line.forEach(({ x, y }, idx) => {\n                if (idx === 0) {\n                    return;\n                }\n\n                const color = isValid({\n                    ...opts,\n                    x,\n                    y\n                }, idx) ? 'blue' : 'red';\n                const screen = game.camera.worldToScreen(x, y);\n\n                game.renderer.draw(screen.x, screen.y, '•', color);\n            });\n        },\n    };\n};\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { SPWN_GLASS_SHARD } from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\nimport { CONSOLE_EVENT_SHATTER } from '../../enums/ConsoleEvents';\nimport { IsDestroying } from './IsDestroying';\nimport { LiquidContainer } from './LiquidContainer';\n\nexport class FragileGlass extends Component {\n    shatter(x, y) {\n        spawn(SPWN_GLASS_SHARD, x, y, {\n            stackable: {\n                quantity: 3,\n            },\n        });\n\n        if (this.entity.has(LiquidContainer)) {\n            if (this.entity.liquidContainer.pour(x, y)) {\n                game.console.event(CONSOLE_EVENT_SHATTER, {\n                    target: this.entity,\n                    liquid: this.entity.liquidContainer.content,\n                });\n            }\n        } else {\n            game.console.event(CONSOLE_EVENT_SHATTER, {\n                target: this.entity,\n            });\n        }\n\n        this.entity.add(IsDestroying);\n    }\n\n    onCollideGround(evt) {\n        this.shatter(evt.data.x, evt.data.y);\n    }\n\n    onCollide(evt) {\n        this.shatter(evt.data.x, evt.data.y);\n    }\n}\n","import { getDmgTypeVerb } from '../data/DamageTypes';\nimport { IsPlayer, Moniker, IsVisible } from '../ecs/components';\nimport { liquids } from './LiquidTypes';\n\nexport const CONSOLE_EVENT_DAMAGE = 0;\nexport const CONSOLE_EVENT_DEAD = 1;\nexport const CONSOLE_EVENT_SHATTER = 2;\nexport const CONSOLE_EVENT_MISS = 3;\nexport const CONSOLE_EVENT_BLOCK = 4;\nexport const CONSOLE_EVENT_TRAP_SHARP = 5;\nexport const CONSOLE_EVENT_LEVEL = 6;\n\nconst getMonikerSubject = (entity) => {\n    if (entity.has(Moniker)) {\n        return `The ${entity.moniker.simpleDisplay.toLowerCase()}`;\n    }\n\n    return `The thing`;\n};\n\nconst getMonikerIndirectObject = (entity) => {\n    if (entity.isPlayer) {\n        return 'you';\n    }\n\n    if (entity.has(Moniker)) {\n        return `the ${entity.moniker.simpleDisplay.toLowerCase()}`;\n    }\n};\n\nconst mapping = {\n    [CONSOLE_EVENT_LEVEL]: {\n        message(data) {\n            const entity = getMonikerSubject(data.entity);\n\n            return `${entity} gained a level (${data.level})!`;\n        },\n        shouldAppear(data) {\n            return data.entity.isPlayer || data.entity.isVisible;\n        },\n    },\n    [CONSOLE_EVENT_MISS]: {\n        message(data) {\n            const attacker = getMonikerIndirectObject(data.attacker);\n            const defender = getMonikerSubject(data.defender);\n\n            return `${defender} dodged an attack from ${attacker} (${data.dodgePrcnt}%)`;\n        },\n        shouldAppear(data) {\n            return data.defender.isPlayer || data.attacker.isVisible;\n        },\n    },\n    [CONSOLE_EVENT_DAMAGE]: {\n        message(data) {\n            const source = getMonikerSubject(data.source);\n            const target = getMonikerIndirectObject(data.target);\n            const dmgVerb = getDmgTypeVerb(data.damageType);\n            const dmg = data.damage;\n            const blocked = data.blocked;\n\n            const blockText =\n                blocked > 0 ? `. (${blocked} damage was blocked)` : '';\n\n            return `${source} ${dmgVerb} ${target} for ${dmg} hp${blockText}`;\n        },\n        shouldAppear(data) {\n            return data.target.isPlayer || data.target.isVisible;\n        },\n    },\n    [CONSOLE_EVENT_DEAD]: {\n        message(data) {\n            const source = getMonikerSubject(data.source);\n            const target = getMonikerIndirectObject(data.target);\n            const dmgVerb = getDmgTypeVerb(data.damageType);\n\n            return `${source} ${dmgVerb} ${target} to death`;\n        },\n        shouldAppear(data) {\n            return data.target.isPlayer || data.target.isVisible;\n        },\n    },\n    [CONSOLE_EVENT_SHATTER]: {\n        message(data) {\n            if (isNaN(data.liquid)) {\n                return `${getMonikerSubject(data.target)} shatters!`;\n            } else {\n                return `${getMonikerSubject(\n                    data.target\n                )} shatters and spills its ${\n                    liquids[data.liquid].colorDesc\n                } content!`;\n            }\n        },\n        shouldAppear(data) {\n            return data.target.isVisible;\n        },\n    },\n    [CONSOLE_EVENT_TRAP_SHARP]: {\n        message(data) {\n            return `${getMonikerSubject(\n                data.entity\n            )} cuts themselves on ${getMonikerIndirectObject(\n                data.trap\n            )} and begins bleeding`;\n        },\n        shouldAppear(data) {\n            return data.trap.isVisible;\n        },\n    },\n};\n\nexport const getMessage = (evt, data) => {\n    return mapping[evt].message(data);\n};\n\nexport const shouldAppear = (evt, data) => {\n    return mapping[evt].shouldAppear(data);\n};\n","import { Component } from 'geotic';\nimport { INVALID, FAILURE } from '../../ai/GoalActionResult';\n\nexport class Brain extends Component {\n    static properties = {\n        goals: '<EntityArray>',\n    };\n\n    onDestroyed() {\n        this.goals.forEach((entity) => {\n            entity.destroy();\n        });\n    }\n\n    onTakeAction(evt) {\n        while (this.peekGoal() && this.peekGoal().isFinished()) {\n            this.popGoal().entity.destroy();\n        }\n\n        const currentGoal = this.peekGoal();\n        const result = currentGoal.takeAction();\n\n        if (result === FAILURE) {\n            this.removeGoal(currentGoal);\n        } else if (result === INVALID) {\n            this.removeGoal(currentGoal);\n            this.entity.fireEvent('take-action');\n        }\n\n        evt.handle();\n    }\n\n    removeGoal(goal) {\n        const goalsToDestroy = [];\n\n        this.goals = this.goals.filter((g) => {\n            const isSelf = Boolean(g.id === goal.entity.id);\n            const isSiblingGoal = Boolean(\n                g.goal.originalIntent &&\n                    g.goal.originalIntent.id === goal.originalIntent.id\n            );\n\n            if (isSelf || isSiblingGoal) {\n                goalsToDestroy.push(g.goal);\n                return false;\n            }\n\n            return true;\n        });\n\n        goalsToDestroy.forEach((g) => g.entity.destroy());\n    }\n\n    pushGoal(goal) {\n        if (!(goal instanceof Component)) {\n            throw new Error('Pushing non-component goal!', goal);\n        }\n\n        goal.parent = this.entity;\n\n        return this.goals.push(goal.entity);\n    }\n\n    popGoal() {\n        return this.goals.pop().goal;\n    }\n\n    peekGoal() {\n        return this.goals[this.goals.length - 1].goal;\n    }\n}\n","import { Component } from 'geotic';\nimport { SPWN_CORPSE } from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\n\nexport class Body extends Component {\n    static properties = {\n        corpseSpawnable: SPWN_CORPSE,\n    };\n\n    onDeath(evt) {\n        if (!this.entity.has('Position')) {\n            return;\n        }\n\n        const pos = this.entity.position.getPos();\n        const corpse = spawn(this.corpseSpawnable, pos.x, pos.y);\n\n        if (this.entity.has('Moniker')) {\n            corpse.moniker.name = `${this.entity.moniker.name} corpse`;\n        }\n    }\n\n    onProjectileHit(evt) {\n        evt.data.stopProjectile = true;\n    }\n}\n","import { Component } from 'geotic';\nimport * as GoalEvaluator from '../../ai/GoalEvaluator';\n\nexport class Goal extends Component {\n    static properties = {\n        name: 'Bored',\n        originalIntent: '<Entity>',\n        parent: '<Entity>',\n        target: '<Entity>',\n        complete: false,\n        data: {},\n    };\n\n    isFinished() {\n        return GoalEvaluator.isFinished(this.parent, this);\n    }\n\n    takeAction() {\n        return GoalEvaluator.takeAction(this.parent, this);\n    }\n}\n","import * as GoalTypes from './GoalTypes';\n\nconst goalTypeMap = {};\n\nObject.values(GoalTypes).forEach((goalType) => {\n    goalTypeMap[goalType.name] = goalType;\n});\n\nconst getGoalType = (name) => {\n    const type = goalTypeMap[name];\n\n    if (!type) {\n        console.warn(`GoalType (${name}) not found!`);\n    }\n\n    return type;\n};\n\nexport const isFinished = (entity, goal) => {\n    const type = getGoalType(goal.name);\n\n    return type.isFinished(entity, goal);\n};\n\nexport const takeAction = (entity, goal) => {\n    const type = getGoalType(goal.name);\n\n    return type.takeAction(entity, goal);\n};\n","import { Component } from 'geotic';\nimport { Door } from './Door';\nimport { LiquidContainer } from './LiquidContainer';\nimport { Stackable } from './Stackable';\n\nexport class Moniker extends Component {\n    static properties = {\n        name: 'Unknown',\n    };\n\n    get simpleDisplay() {\n        return this.name;\n    }\n\n    get display() {\n        const hasLiquid = this.entity.has(LiquidContainer);\n\n        if (hasLiquid) {\n            const disp = this.entity.liquidContainer.display;\n\n            return `${this.name} ${disp}`;\n        }\n\n        const hasStackable = this.entity.has(Stackable);\n\n        if (hasStackable) {\n            const disp = this.entity.stackable.display;\n\n            return `${this.name} ${disp}`;\n        }\n\n        const hasDoor = this.entity.has(Door);\n\n        if (hasDoor) {\n            const disp = this.entity.door.display;\n\n            return `${this.name} ${disp}`;\n        }\n\n        return this.name;\n    }\n}\n","import { Component } from 'geotic';\nimport { Moniker } from './Moniker';\n\nexport class Logger extends Component {\n    get moniker() {\n        return this.entity.has(Moniker)\n            ? this.entity.moniker.display\n            : 'Unknown';\n    }\n\n    onLog(evt) {\n        console.log(`[${this.moniker}]`, evt.data);\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Position extends Component {\n    getPos() {\n        return window.game.map.getPosition(this.entity.id);\n    }\n\n    setPos(x, y) {\n        return window.game.map.setPosition(x, y, this.entity.id);\n    }\n\n    equals(x, y) {\n        const pos = this.getPos();\n\n        return pos.x === x && pos.y === y;\n    }\n}\n","import { Component } from 'geotic';\nimport { LiquidContainer } from './LiquidContainer';\n\nexport class Glyph extends Component {\n    static properties = {\n        fg1: '#ddd',\n        fg2: '#666',\n        bg: null,\n        ch: '?',\n        z: 1000,\n    };\n\n    get primary() {\n        if (this.entity.has(LiquidContainer)) {\n            const col = this.entity.liquidContainer.primaryColorOverride;\n\n            if (col) {\n                return col;\n            }\n        }\n\n        return this.fg1;\n    }\n\n    get secondary() {\n        if (this.entity.has(LiquidContainer)) {\n            const col = this.entity.liquidContainer.secondaryColorOverride;\n\n            if (col) {\n                return col;\n            }\n        }\n\n        return this.fg2;\n    }\n\n    get background() {\n        return this.bg;\n    }\n\n    get char() {\n        return this.ch;\n    }\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { SKILL_SPEED, getSkillValue } from '../../data/Skills';\nimport { Blocker } from './Blocker';\n\nexport class Legs extends Component {\n    onTryMove(evt) {\n        const position = this.entity.position.getPos();\n        const targetX = position.x + evt.data.x;\n        const targetY = position.y + evt.data.y;\n\n        const targetTileEntities = game.map.getEntitiesAt(targetX, targetY);\n\n        if (targetTileEntities.some((entity) => entity.has(Blocker))) {\n            return;\n        }\n\n        const nonHostile = targetTileEntities.find((entity) => {\n            return (\n                entity.factionMember &&\n                !game.factions.areEntitiesHostile(entity, this.entity)\n            );\n        });\n\n        // swap locations\n        if (nonHostile) {\n            nonHostile.position.setPos(position.x, position.y);\n        }\n\n        const speed = getSkillValue(SKILL_SPEED, this.entity);\n        const cost = (20 / (20 + speed)) * 1000;\n\n        this.entity.fireEvent('energy-consumed', cost);\n        this.entity.position.setPos(targetX, targetY);\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class IsPlayer extends Component {}\n","import { Component } from 'geotic';\nimport { MoveGoalType } from '../../ai/GoalTypes';\nimport { directionDelta } from '../../enums/Directions';\n\nexport class Wandering extends Component {\n    onBoredom(evt) {\n        if (Math.random() > 0.5) {\n            return;\n        }\n\n        const direction = Math.floor(Math.random() * 9);\n        const delta = directionDelta(direction);\n\n        evt.data.goal = MoveGoalType.create({\n            data: delta,\n        });\n        evt.handle();\n    }\n}\n","const directions = [\n    {\n        key: 0,\n        shortName: 'NW',\n        fullName: 'Northwest',\n        delta: {\n            x: -1,\n            y: -1,\n        },\n    },\n    {\n        key: 1,\n        shortName: 'N',\n        fullName: 'North',\n        delta: {\n            x: 0,\n            y: -1,\n        },\n    },\n    {\n        key: 2,\n        shortName: 'NE',\n        fullName: 'Northeast',\n        delta: {\n            x: 1,\n            y: -1,\n        },\n    },\n    {\n        key: 3,\n        shortName: 'W',\n        fullName: 'West',\n        delta: {\n            x: -1,\n            y: 0,\n        },\n    },\n    {\n        key: 4,\n        shortName: 'Z',\n        fullName: 'Here',\n        delta: {\n            x: 0,\n            y: 0,\n        },\n        adjacent: [],\n    },\n    {\n        key: 5,\n        shortName: 'E',\n        fullName: 'East',\n        delta: {\n            x: 1,\n            y: 0,\n        },\n    },\n    {\n        key: 6,\n        shortName: 'SW',\n        fullName: 'Southwest',\n        delta: {\n            x: -1,\n            y: 1,\n        },\n    },\n    {\n        key: 7,\n        shortName: 'S',\n        fullName: 'South',\n        delta: {\n            x: 0,\n            y: 1,\n        },\n    },\n    {\n        key: 8,\n        shortName: 'SE',\n        fullName: 'Southeast',\n        delta: {\n            x: 1,\n            y: 1,\n        },\n    },\n];\n\nexport const DIR_NW = 0;\nexport const DIR_N = 1;\nexport const DIR_NE = 2;\nexport const DIR_W = 3;\nexport const DIR_Z = 4;\nexport const DIR_E = 5;\nexport const DIR_SW = 6;\nexport const DIR_S = 7;\nexport const DIR_SE = 8;\n\ndirections[DIR_NW].adjacent = [DIR_N, DIR_W];\ndirections[DIR_N].adjacent = [DIR_NW, DIR_NE];\ndirections[DIR_NE].adjacent = [DIR_N, DIR_E];\ndirections[DIR_W].adjacent = [DIR_NW, DIR_SW];\ndirections[DIR_E].adjacent = [DIR_NE, DIR_SE];\ndirections[DIR_SW].adjacent = [DIR_W, DIR_S];\ndirections[DIR_S].adjacent = [DIR_SW, DIR_SE];\ndirections[DIR_SE].adjacent = [DIR_S, DIR_E];\n\nexport const allDirections = () => [\n    DIR_NW,\n    DIR_N,\n    DIR_NE,\n    DIR_W,\n    DIR_E,\n    DIR_SW,\n    DIR_S,\n    DIR_SE,\n];\n\nexport const shortName = (direction) => directions[direction].shortName;\n\nexport const fullName = (direction) => directions[direction].fullName;\n\nexport const directionDelta = (direction) => directions[direction].delta;\n\nexport const adjacent = (direction) => directions[direction].adjacent;\n\nexport const getAdjacentDeltas = (direction) => adjacent(direction).map(directionDelta);\n\nexport const directionFromDelta = (x, y) => {\n    return Object.values(directions).find((dir) => {\n        return dir.delta.x === x && dir.delta.y === y;\n    });\n};\n","import { Component } from 'geotic';\n\nexport class IsVisible extends Component {\n    static properties = {\n        amount: 0,\n        range: 0,\n    };\n}\n","import { Component } from 'geotic';\n\nexport class Explorable extends Component {}\n","import { Component } from 'geotic';\n\nexport class Explored extends Component {}\n","import { Component } from 'geotic';\r\nimport { game } from '../../core/Game';\r\nimport { SKILL_ARMOR, SKILL_DODGE, getSkillValue } from '../../data/Skills';\r\nimport { getArmorBlockPercent } from '../../data/skills/ArmorSkill';\r\nimport { getDodgePercent } from '../../data/skills/DodgeSkill';\r\nimport {\r\n    CONSOLE_EVENT_DAMAGE,\r\n    CONSOLE_EVENT_DEAD,\r\n    CONSOLE_EVENT_MISS,\r\n} from '../../enums/ConsoleEvents';\r\nimport { randomInt } from '../../utils/rand';\r\nimport { IsDead } from './IsDead';\r\n\r\nexport class Health extends Component {\r\n    static properties = {\r\n        value: 32,\r\n        max: 32,\r\n    };\r\n\r\n    applyDamage(damage) {\r\n        this.value -= damage;\r\n\r\n        if (this.value <= 0) {\r\n            this.value = 0;\r\n            this.entity.add(IsDead);\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    onAttacked(evt) {\r\n        const attack = evt.data.attack;\r\n        const attacker = attack.attacker;\r\n        const defender = attack.defender;\r\n        const dodge = getSkillValue(SKILL_DODGE, defender);\r\n        const dodgePrcnt = getDodgePercent(dodge);\r\n\r\n        if (!attack.ignoreDodge && randomInt(1, 100) <= dodgePrcnt) {\r\n            game.console.event(CONSOLE_EVENT_MISS, {\r\n                defender,\r\n                attacker,\r\n                dodgePrcnt,\r\n            });\r\n\r\n            evt.data.damage = 0;\r\n            evt.data.isDodged = true;\r\n            evt.data.isKilled = false;\r\n            evt.handle();\r\n\r\n            return;\r\n        }\r\n\r\n        evt.data.isDodged = false;\r\n\r\n        const armor = getSkillValue(SKILL_ARMOR, defender);\r\n        const armorPrcnt = getArmorBlockPercent(armor);\r\n        const blocked = Math.floor(attack.damage * armorPrcnt);\r\n        const damage = attack.damage - blocked;\r\n        evt.data.damage = damage;\r\n\r\n        const isKilled = this.applyDamage(damage);\r\n        evt.data.isKilled = isKilled;\r\n\r\n        if (isKilled) {\r\n            game.console.event(CONSOLE_EVENT_DEAD, {\r\n                target: defender,\r\n                source: attacker,\r\n                damage,\r\n                damageType: attack.damageType,\r\n            });\r\n\r\n            attacker.fireEvent('enemy-killed', {\r\n                enemy: defender,\r\n            });\r\n\r\n            evt.handle();\r\n\r\n            return;\r\n        }\r\n\r\n        game.console.event(CONSOLE_EVENT_DAMAGE, {\r\n            target: defender,\r\n            source: attacker,\r\n            damage,\r\n            damageType: attack.damageType,\r\n            blocked,\r\n        });\r\n\r\n        const pos = this.entity.position.getPos();\r\n\r\n        game.particles.createParticle(pos.x, pos.y, {\r\n            lifetime: 140,\r\n            fg1s: ['#8d4c4f', '#730d14'],\r\n            glyphs: ['*'],\r\n        });\r\n\r\n        evt.handle();\r\n    }\r\n\r\n    onHeal(evt) {\r\n        this.value += evt.data.value;\r\n\r\n        if (this.value > this.max) {\r\n            this.value = this.max;\r\n        }\r\n\r\n        evt.handle();\r\n    }\r\n}\r\n","import { Component } from 'geotic';\n\nexport class IsDead extends Component {}\n","import { Component } from 'geotic';\nimport { getFactionByName } from '../../enums/Factions';\n\nexport class FactionMember extends Component {\n    static properties = {\n        name: 'Neutral',\n    };\n\n    get faction() {\n        return getFactionByName(this.name);\n    }\n}\n","import Faction from '../data/Faction';\n\nexport const FACTION_PLAYER = 0;\nexport const FACTION_VILLAGER = 1;\nexport const FACTION_GOBLIN = 2;\nexport const FACTION_NATURE = 3;\n\nexport const factions = {\n    player: new Faction({\n        id: FACTION_PLAYER,\n        name: 'player',\n        display: 'Player',\n    }),\n    villager: new Faction({\n        id: FACTION_VILLAGER,\n        name: 'villager',\n        display: 'Villager',\n    }),\n    goblin: new Faction({\n        id: FACTION_GOBLIN,\n        name: 'goblin',\n        display: 'Goblin',\n    }),\n    nature: new Faction({\n        id: FACTION_NATURE,\n        name: 'nature',\n        display: 'Nature',\n    }),\n};\n\nexport const getFactionByName = (name) => factions[name];\n","export default class Faction {\n    id = 0;\n    name = 'faction';\n    display = 'Faction';\n\n    constructor(properties) {\n        this.id = properties.id;\n        this.name = properties.name;\n        this.display = properties.display;\n    }\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { bresenhamLine } from '../../utils/BresenhamLine';\nimport { Shadowcaster } from './Shadowcaster';\n\nexport class Eyes extends Component {\n    static properties = {\n        range: 5,\n    };\n\n    canSee(entity) {\n        const start = this.entity.position.getPos();\n        const end = entity.position.getPos();\n\n        const line = bresenhamLine(start.x, start.y, end.x, end.y);\n\n        if (line.length > this.range) {\n            return false;\n        }\n\n        return !line.some((segment) => {\n            return game.map\n                .getEntitiesAt(segment.x, segment.y)\n                .some((entity) => entity.has(Shadowcaster));\n        });\n    }\n\n    onTryDetectHostiles(evt) {\n        const position = game.map.getPosition(this.entity.id);\n\n        if (!position) {\n            return;\n        }\n\n        // get within square area\n        const targets = game.map\n            .getEntitiesInRange(position.x, position.y, this.range)\n            .filter((e) => {\n                if (!e.actor) {\n                    return false;\n                }\n                if (e.isDead) {\n                    return false;\n                }\n                if (!game.factions.areEntitiesHostile(this.entity, e)) {\n                    return false;\n                }\n\n                return this.canSee(e);\n            });\n\n        if (targets.length > 0) {\n            targets.forEach((e) => {\n                evt.data.targets.add(e);\n            });\n            evt.handle();\n        }\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Particle extends Component {\n    static properties = {\n        lifetime: 200,\n        fg1s: ['#8d4c4f', '#730d14'],\n        fg2s: [],\n        bgs: [],\n        glyphs: ['·'],\n        speed: 0.05,\n        age: 0,\n        x: 0,\n        y: 0,\n        startX: 0,\n        startY: 0,\n        direction: {\n            x: 0,\n            y: 0,\n        },\n    };\n\n    get isExpired() {\n        return this.age >= this.lifetime;\n    }\n\n    get percent() {\n        return this.age / this.lifetime;\n    }\n\n    frame(arr = []) {\n        const len = arr.length;\n        const chunks = 1 / len;\n\n        return Math.trunc(this.percent / chunks);\n    }\n\n    get glyph() {\n        const frame = this.frame(this.glyphs);\n\n        return this.glyphs[frame];\n    }\n\n    get fg1() {\n        const frame = this.frame(this.fg1s);\n\n        return this.fg1s[frame];\n    }\n\n    get fg2() {\n        const frame = this.frame(this.fg2s);\n\n        return this.fg2s[frame];\n    }\n\n    get bg() {\n        const frame = this.frame(this.bgs);\n\n        return this.bgs[frame];\n    }\n}\n","import { Component } from 'geotic';\nimport { Particle } from './Particle';\n\nexport class ParticleEmitter extends Component {\n    static properties = {\n        particleData: {},\n        duration: 800,\n        rate: 2,\n        age: 0,\n        x: 0,\n        y: 0,\n        count: 0,\n    };\n\n    get isExpired() {\n        return this.age >= this.duration;\n    }\n\n    get percent() {\n        return this.age / this.duration;\n    }\n\n    createParticle() {\n        const particle = this.ecs.createEntity();\n\n        particle.add(Particle, {\n            ...this.particleData,\n            x: this.x,\n            y: this.y,\n        });\n\n        this.count += 1;\n\n        return particle;\n    }\n\n    frame(arr = []) {\n        const len = arr.length;\n        const chunks = 1 / len;\n\n        return Math.trunc(this.percent / chunks);\n    }\n}\n","import { Component } from 'geotic';\nimport { spawnLoot } from '../../data/tables/LootSpawn';\n\nexport class LootDropper extends Component {\n    static properties = {\n        tables: [],\n    };\n\n    onDeath(evt) {\n        const pos = this.entity.position.getPos();\n\n        spawnLoot(this.tables, pos.x, pos.y);\n    }\n}\n","import WeightedTable from '../../utils/WeightedTable';\nimport { spawn } from '../Spawner';\nimport LootTableGoblin from './loot/LootTableGoblin';\nimport LootTableForest from './loot/LootTableForest';\nimport LootTableBruiser from './loot/LootTableBruiser';\n\nconst tables = {\n    TBL_LOOT_GOBLIN: LootTableGoblin,\n    TBL_LOOT_FOREST: LootTableForest,\n    TBL_LOOT_BRUISER: LootTableBruiser\n};\n\nexport const getTable = (tableKey) => tables[tableKey];\n\nexport const pickLoot = (tableKeys = []) => {\n    const tables = tableKeys.map(getTable);\n    const table = WeightedTable.combine(tables);\n\n    return table.pick();\n};\n\nexport const spawnLoot = (tableKeys = [], x, y) => {\n    const spawnable = pickLoot(tableKeys);\n\n    return spawn(spawnable, x, y);\n};\n","import { randomInt } from './rand';\n\nexport default class WeightedTable {\n    rows = [];\n\n    get sum() {\n        return this.rows.reduce((sum, cur) => sum + cur.weight, 0);\n    }\n\n    pick() {\n        const r = randomInt(0, this.sum);\n\n        let currentW = 0;\n        const row = this.rows.find((row) => {\n            currentW += row.weight;\n\n            return currentW >= r;\n        });\n\n        if (row) {\n            return row.value;\n        }\n    }\n\n    chance(value) {\n        const row = this.get(value);\n\n        if (!row) {\n            return 0;\n        }\n\n        return row.weight / this.sum;\n    }\n\n    get(value) {\n        return this.rows.find((row) => row.value === value);\n    }\n\n    add(weight, value) {\n        const existing = this.get(value);\n\n        if (!existing) {\n            this.rows.push({\n                weight,\n                value,\n            });\n        } else {\n            // take maximum weight\n            const maxWeight = Math.max(existing.weight, weight);\n\n            existing.weight = maxWeight;\n        }\n\n        this.rows.sort((a, b) => a.weight - b.weight);\n    }\n\n    static combine(tables = []) {\n        const table = new WeightedTable();\n\n        tables.forEach((other) => {\n            other.rows.forEach((row) => table.add(row.weight, row.value));\n        });\n\n        return table;\n    }\n}\n","import WeightedTable from '../../../utils/WeightedTable';\nimport {\n    SPWN_AMULET,\n    SPWN_CLOTH_ARMOR,\n    SPWN_SHORTSWORD,\n    SPWN_STONE,\n    SPWN_VIAL_HONEY,\n} from '../../Spawnables';\n\nconst goblins = new WeightedTable();\n\ngoblins.add(3, SPWN_STONE);\ngoblins.add(2, SPWN_VIAL_HONEY);\ngoblins.add(5, SPWN_AMULET);\ngoblins.add(4, SPWN_CLOTH_ARMOR);\ngoblins.add(6, SPWN_SHORTSWORD);\n\nexport default goblins;\n","import WeightedTable from '../../../utils/WeightedTable';\nimport { SPWN_STONE, SPWN_VIAL_HONEY } from '../../Spawnables';\n\nconst forest = new WeightedTable();\n\nforest.add(3, SPWN_STONE);\nforest.add(2, SPWN_VIAL_HONEY);\n\nexport default forest;\n","import WeightedTable from '../../../utils/WeightedTable';\nimport {\n    SPWN_VIAL_HONEY,\n    SPWN_WOOD_CLUB,\n} from '../../Spawnables';\n\nconst bruiser = new WeightedTable();\n\nbruiser.add(10, SPWN_WOOD_CLUB);\nbruiser.add(5, SPWN_VIAL_HONEY);\n\nexport default bruiser;\n","import { Component } from 'geotic';\n\nexport class IsEquipped extends Component {\n    static properties = {\n        slotKey: '',\n        owner: '<Entity>',\n    };\n\n    get slot() {\n        return this.owner.equipmentSlot[this.slotKey];\n    }\n\n    onDropped(evt) {\n        this.slot.unequip();\n    }\n\n    onThrown(evt) {\n        this.slot.unequip();\n    }\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { SCREEN_LIST_SELECT } from '../../core/screens/ScreenType';\nimport { EQ_SLOT_BODY } from '../../data/EquipmentSlotType';\nimport { IsEquipped } from './IsEquipped';\n\nexport class Equipment extends Component {\n    static properties = {\n        slotTypes: [EQ_SLOT_BODY],\n    };\n\n    onTryEquip(evt) {\n        const slots = Object.values(evt.data.interactor.equipmentSlot).filter(\n            (slot) => {\n                return this.slotTypes.includes(slot.slotType);\n            }\n        );\n\n        game.screens.pushScreen(SCREEN_LIST_SELECT, {\n            header: this.entity.moniker.display,\n            icon: this.entity.glyph,\n            leadText: 'Select a slot',\n            list: slots,\n            onRenderRow: (slot, x, y, isSelected) => {\n                let text = slot.name;\n\n                if (!slot.isEmpty) {\n                    text += ` [${slot.content.moniker.display}]`;\n                }\n\n                if (isSelected) {\n                    game.renderer.drawText(x, y, `→ ${text}`, 'yellow');\n                } else {\n                    game.renderer.drawText(x, y, `- ${text}`);\n                }\n            },\n            onSelect: (slot) => {\n                slot.unequip();\n                slot.equip(this.entity);\n                evt.data.interactor.fireEvent('energy-consumed', 200);\n                evt.handle();\n                game.screens.popScreen();\n            },\n        });\n    }\n\n    onTryUnequip(evt) {\n        const slotKey = this.entity.isEquipped.slotKey;\n        const slot = evt.data.interactor.equipmentSlot[slotKey];\n\n        if (slot) {\n            slot.content = null;\n        }\n\n        evt.data.interactor.fireEvent('energy-consumed', 200);\n\n        this.entity.isEquipped.destroy();\n        evt.handle();\n    }\n\n    onGetInteractions(evt) {\n        if (this.entity.has(IsEquipped)) {\n            evt.data.interactions.push({\n                name: `Unequip [${this.entity.isEquipped.slot.name}]`,\n                evt: 'try-unequip',\n            });\n        } else {\n            evt.data.interactions.push({\n                name: 'Equip',\n                evt: 'try-equip',\n            });\n        }\n    }\n}\n","export const EQ_SLOT_HEAD = 'EQ_SLOT_HEAD';\nexport const EQ_SLOT_NECK = 'EQ_SLOT_NECK';\nexport const EQ_SLOT_BODY = 'EQ_SLOT_BODY';\nexport const EQ_SLOT_FEET = 'EQ_SLOT_FEET';\nexport const EQ_SLOT_ARM = 'EQ_SLOT_ARM';\nexport const EQ_SLOT_HAND = 'EQ_SLOT_HAND';\n","import { Component } from 'geotic';\nimport { EQ_SLOT_BODY } from '../../data/EquipmentSlotType';\nimport { getWeaponType, WPN_TYPE_UNARMED } from '../../data/WeaponTypes';\nimport { IsEquipped } from './IsEquipped';\n\nexport class EquipmentSlot extends Component {\n    static allowMultiple = true;\n    static keyProperty = 'key';\n    static properties = {\n        name: 'Body',\n        key: 'body',\n        slotType: EQ_SLOT_BODY,\n        content: '<Entity>',\n        isPrimary: false,\n        isOffhand: false,\n    };\n\n    get isEmpty() {\n        return !this.content;\n    }\n\n    onDestroyed() {\n        if (!this.isEmpty) {\n            this.content.destroy();\n        }\n    }\n\n    unequip() {\n        if (this.isEmpty) {\n            return false;\n        }\n\n        const content = this.content;\n\n        this.content = null;\n\n        content.isEquipped.destroy();\n        content.fireEvent('unequipped', {\n            interactor: this.entity,\n        });\n    }\n\n    equip(equipment) {\n        equipment.loot.take(this.entity);\n\n        equipment.add(IsEquipped, {\n            slotKey: this.key,\n            owner: this.entity,\n        });\n\n        this.content = equipment;\n\n        equipment.fireEvent('equipped', {\n            interactor: this.entity,\n        });\n    }\n\n    onTryMelee(evt) {\n        if (!this.isPrimary) {\n            return;\n        }\n\n        const map = window.game.map;\n        const targetPos = evt.data.target.position.getPos();\n        const selfPos = this.entity.position.getPos();\n        const isAdjacent = map.isAdjacent(\n            selfPos.x,\n            selfPos.y,\n            targetPos.x,\n            targetPos.y\n        );\n\n        if (!isAdjacent) {\n            return;\n        }\n\n        if (this.isEmpty) {\n            const weaponType = getWeaponType(WPN_TYPE_UNARMED);\n\n            weaponType.attack(this.entity, evt.data.target);\n\n            this.entity.fireEvent('energy-consumed', 600);\n\n            evt.handle();\n            return;\n        }\n\n        this.content.fireEvent('try-use-melee', {\n            interactor: this.entity,\n            target: evt.data.target,\n        });\n\n        evt.handle();\n    }\n\n    onQuerySkillMod(evt) {\n        if (this.isEmpty) {\n            return;\n        }\n\n        this.content.fireEvent(`query-skill-mod-equipped`, {\n            skill: evt.data.skill,\n            modifiers: evt.data.modifiers,\n        });\n    }\n}\n","import {\n    DMG_TYPE_BLUDGEONING,\n    DMG_TYPE_PIERCING,\n    DMG_TYPE_SLASHING,\n} from './DamageTypes';\nimport {\n    WPN_FAMILY_AXE,\n    WPN_FAMILY_BLADE,\n    WPN_FAMILY_HAMMER,\n    WPN_FAMILY_POLEARM,\n} from './WeaponFamilies';\nimport WpnTypeBattleAxe from './weapons/WpnTypeBattleAxe';\nimport WpnTypeGreatsword from './weapons/WpnTypeGreatsword';\nimport WpnTypeMace from './weapons/WpnTypeMace';\nimport WpnTypeShortsword from './weapons/WpnTypeShortsword';\nimport WpnTypeUnarmed from './weapons/WpnTypeUnarmed';\n\n// hammer family\nexport const WPN_TYPE_WAR_HAMMER = 'WPN_TYPE_WAR_HAMMER';\nexport const WPN_TYPE_SLEDGE_HAMMER = 'WPN_TYPE_SLEDGE_HAMMER';\n// cudgel family\nexport const WPN_TYPE_CLUB = 'WPN_TYPE_CLUB';\nexport const WPN_TYPE_MACE = 'WPN_TYPE_MACE';\n// axe family\nexport const WPN_TYPE_HEAVY_AXE = 'WPN_TYPE_HEAVY_AXE';\nexport const WPN_TYPE_BATTLE_AXE = 'WPN_TYPE_BATTLE_AXE';\n// blade family\nexport const WPN_TYPE_GREATSWORD = 'WPN_TYPE_GREATSWORD';\nexport const WPN_TYPE_SHORTSWORD = 'WPN_TYPE_SHORTSWORD';\nexport const WPN_TYPE_DAGGER = 'WPN_TYPE_DAGGER';\n// polearm family\nexport const WPN_TYPE_STAFF = 'WPN_TYPE_STAFF';\nexport const WPN_TYPE_HALBERD = 'WPN_TYPE_HALBERD';\nexport const WPN_TYPE_JAVELIN = 'WPN_TYPE_JAVELIN';\n// unarmed family\nexport const WPN_TYPE_UNARMED = 'WPN_TYPE_UNARMED';\n\nconst lookup = {\n    [WPN_TYPE_UNARMED]: new WpnTypeUnarmed(),\n    [WPN_TYPE_WAR_HAMMER]: {\n        name: 'War hammer',\n        family: WPN_FAMILY_HAMMER,\n        key: WPN_TYPE_WAR_HAMMER,\n        damageType: DMG_TYPE_BLUDGEONING,\n    },\n    [WPN_TYPE_SLEDGE_HAMMER]: {\n        name: 'Sledge hammer',\n        family: WPN_FAMILY_HAMMER,\n        key: WPN_TYPE_SLEDGE_HAMMER,\n        damageType: DMG_TYPE_BLUDGEONING,\n    },\n    [WPN_TYPE_CLUB]: {\n        name: 'Club',\n        family: WPN_FAMILY_HAMMER,\n        key: WPN_TYPE_CLUB,\n        damageType: DMG_TYPE_BLUDGEONING,\n    },\n    [WPN_TYPE_MACE]: {\n        name: 'Mace',\n        family: WPN_FAMILY_HAMMER,\n        key: WPN_TYPE_MACE,\n        damageType: DMG_TYPE_BLUDGEONING,\n    },\n    [WPN_TYPE_HEAVY_AXE]: {\n        name: 'Heavy axe',\n        family: WPN_FAMILY_AXE,\n        key: WPN_TYPE_HEAVY_AXE,\n        damageType: DMG_TYPE_SLASHING,\n    },\n    [WPN_TYPE_BATTLE_AXE]: new WpnTypeBattleAxe(),\n    [WPN_TYPE_GREATSWORD]: new WpnTypeGreatsword(),\n    [WPN_TYPE_SHORTSWORD]: new WpnTypeShortsword(),\n    [WPN_TYPE_MACE]: new WpnTypeMace(),\n    [WPN_TYPE_DAGGER]: {\n        name: 'Dagger',\n        family: WPN_FAMILY_BLADE,\n        key: WPN_TYPE_DAGGER,\n        damageType: DMG_TYPE_SLASHING,\n    },\n    [WPN_TYPE_STAFF]: {\n        name: 'Staff',\n        family: WPN_FAMILY_POLEARM,\n        key: WPN_TYPE_STAFF,\n        damageType: DMG_TYPE_BLUDGEONING,\n    },\n    [WPN_TYPE_HALBERD]: {\n        name: 'Halberd',\n        family: WPN_FAMILY_POLEARM,\n        key: WPN_TYPE_HALBERD,\n        damageType: DMG_TYPE_PIERCING,\n    },\n    [WPN_TYPE_JAVELIN]: {\n        name: 'Javelin',\n        family: WPN_FAMILY_POLEARM,\n        key: WPN_TYPE_JAVELIN,\n        damageType: DMG_TYPE_PIERCING,\n    },\n};\n\nexport const getWeaponType = (type) => lookup[type];\nexport const getWeaponTypeName = (type) => lookup[type].name;\nexport const getWeaponTypeFamily = (type) => lookup[type].family;\nexport const getWeaponTypeDmgType = (type) => lookup[type].damageType;\n","export const WPN_FAMILY_HAMMER = 'WPN_FAMILY_HAMMER';\nexport const WPN_FAMILY_AXE = 'WPN_FAMILY_AXE';\nexport const WPN_FAMILY_BLADE = 'WPN_FAMILY_BLADE';\nexport const WPN_FAMILY_ARCHERY = 'WPN_FAMILY_ARCHERY';\nexport const WPN_FAMILY_POLEARM = 'WPN_FAMILY_POLEARM';\nexport const WPN_FAMILY_UNARMED = 'WPN_FAMILY_UNARMED';\nexport const WPN_FAMILY_CUDGEL = 'WPN_FAMILY_CUDGEL';\n\nconst lookup = {\n    [WPN_FAMILY_HAMMER]: {\n        name: 'Hammer',\n    },\n    [WPN_FAMILY_AXE]: {\n        name: 'Axe',\n    },\n    [WPN_FAMILY_BLADE]: {\n        name: 'Blade',\n    },\n    [WPN_FAMILY_ARCHERY]: {\n        name: 'Archery',\n    },\n    [WPN_FAMILY_POLEARM]: {\n        name: 'Polearm',\n    },\n    [WPN_FAMILY_UNARMED]: {\n        name: 'Unarmed',\n    },\n    [WPN_FAMILY_CUDGEL]: {\n        name: 'Cudgel',\n    },\n};\n\nexport const getWeaponFamilyName = (family) => lookup[family].name;\n","import { randomBool } from '../../utils/rand';\nimport Attack from '../Attack';\nimport { DMG_TYPE_SLASHING } from '../DamageTypes';\nimport { getStat, STAT_STRENGTH } from '../Stats';\nimport { WPN_FAMILY_AXE } from '../WeaponFamilies';\nimport { WPN_TYPE_BATTLE_AXE } from '../WeaponTypes';\nimport WeaponType from './WeaponType';\n\nexport default class WpnTypeBattleAxe extends WeaponType {\n    constructor() {\n        super({\n            key: WPN_TYPE_BATTLE_AXE,\n            name: 'Battle axe',\n            family: WPN_FAMILY_AXE,\n            damageType: DMG_TYPE_SLASHING,\n        });\n    }\n\n    _createAttack(attacker, defender, weapon) {\n        const str = getStat(STAT_STRENGTH, attacker);\n        const die = weapon.roll();\n        const damage = die + str;\n\n        return new Attack({\n            attacker,\n            defender,\n            weaponName: weapon.name,\n            damage,\n            damageType: this.damageType,\n        });\n    }\n\n    attack(attacker, defender, weapon) {\n        const attack = this._createAttack(attacker, defender, weapon);\n        const result = defender.fireEvent('attacked', { attack });\n        const attacks = [attack];\n\n        if (!result.data.isDodged && !result.data.isKilled && randomBool()) {\n            const secondAttack = this._createAttack(attacker, defender, weapon);\n\n            attacks.push(secondAttack);\n\n            defender.fireEvent('attacked', { attack });\n        }\n\n        return attacks;\n    }\n}\n","import { getDmgTypeName } from '../DamageTypes';\nimport { getStat, STAT_STRENGTH } from '../Stats';\nimport { getWeaponFamilyName } from '../WeaponFamilies';\n\nexport default class WeaponType {\n    constructor(data) {\n        this.name = data.name;\n        this.family = data.family;\n        this.key = data.key;\n        this.damageType = data.damageType;\n    }\n\n    weaponDamageText(user, weapon) {\n        let text = `1d${weapon.die}`;\n        const str = getStat(STAT_STRENGTH, user);\n        const mod = weapon.modifier + str;\n\n        if (mod) {\n            if (mod > 0) {\n                text += ` + ${mod}`;\n            } else {\n                text += ` - ${Math.abs(mod)}`;\n            }\n        }\n\n        return text;\n    }\n\n    getShortDescription(user, weapon) {\n        const fam = getWeaponFamilyName(this.family);\n\n        return `${fam}, ${this.weaponDamageText(user, weapon)}`;\n    }\n\n    getAttacks(attacker, defender, weapon) {\n        return [];\n    }\n\n    attack(attacker, defender, weapon) {\n        const attacks = this.getAttacks(attacker, defender, weapon);\n\n        return attacks.map((attack) => {\n            attack.defender.fireEvent('attacked', { attack });\n        });\n    }\n}\n","import { game } from '../../core/Game';\nimport { getAdjacentDeltas, directionFromDelta } from '../../enums/Directions';\nimport Attack from '../Attack';\nimport { DMG_TYPE_SLASHING } from '../DamageTypes';\nimport { getStat, STAT_STRENGTH } from '../Stats';\nimport { WPN_FAMILY_BLADE } from '../WeaponFamilies';\nimport { WPN_TYPE_GREATSWORD } from '../WeaponTypes';\nimport WeaponType from './WeaponType';\n\nexport default class WpnTypeGreatsword extends WeaponType {\n    constructor() {\n        super({\n            key: WPN_TYPE_GREATSWORD,\n            name: 'Greatsword',\n            family: WPN_FAMILY_BLADE,\n            damageType: DMG_TYPE_SLASHING,\n        });\n    }\n\n    _getNeighborAttacks(attacker, defender, weapon, damage) {\n        const attackerPos = attacker.position.getPos();\n        const defenderPos = defender.position.getPos();\n        const deltaX = defenderPos.x - attackerPos.x;\n        const deltaY = defenderPos.y - attackerPos.y;\n        const direction = directionFromDelta(deltaX, deltaY);\n        const adjacentDeltas = getAdjacentDeltas(direction.key);\n\n        return adjacentDeltas\n            .map((delta) =>\n                game.map.getEntitiesAt(\n                    attackerPos.x + delta.x,\n                    attackerPos.y + delta.y\n                )\n            )\n            .flat()\n            .filter((e) => game.factions.areEntitiesHostile(e, attacker))\n            .map((hostile) => {\n                return new Attack({\n                    attacker,\n                    ignoreDodge: true,\n                    defender: hostile,\n                    weaponName: weapon.name,\n                    damage: Math.floor(damage / 2),\n                    damageType: this.damageType,\n                });\n            });\n    }\n\n    _tryAttackDefender(attacker, defender, weapon, damage) {\n        const attack = new Attack({\n            attacker,\n            defender,\n            weaponName: weapon.name,\n            damage,\n            damageType: this.damageType,\n        });\n\n        return defender.fireEvent('attacked', { attack });\n    }\n\n    attack(attacker, defender, weapon) {\n        const str = getStat(STAT_STRENGTH, attacker);\n        const die = weapon.roll();\n        const damage = die + str;\n        const result = this._tryAttackDefender(\n            attacker,\n            defender,\n            weapon,\n            damage\n        );\n\n        const attacks = [result];\n\n        if (!result.data.isDodged) {\n            const neighborAttacks = this._getNeighborAttacks(\n                attacker,\n                defender,\n                weapon,\n                damage\n            );\n\n            neighborAttacks.forEach((attack) => {\n                attacks.push(attack);\n                attack.defender.fireEvent('attacked', { attack });\n            });\n        }\n\n        return attacks;\n    }\n}\n","import { randomBool, randomWeightedBool } from '../../utils/rand';\nimport Attack from '../Attack';\nimport { DMG_TYPE_BLUDGEONING } from '../DamageTypes';\nimport { getStat, STAT_STRENGTH } from '../Stats';\nimport { addStatus, STATUS_STUNNED } from '../Statuses';\nimport { WPN_FAMILY_CUDGEL } from '../WeaponFamilies';\nimport { WPN_TYPE_MACE } from '../WeaponTypes';\nimport WeaponType from './WeaponType';\n\nexport default class WpnTypeMace extends WeaponType {\n    constructor() {\n        super({\n            key: WPN_TYPE_MACE,\n            name: 'Mace',\n            family: WPN_FAMILY_CUDGEL,\n            damageType: DMG_TYPE_BLUDGEONING,\n        });\n    }\n\n    _createAttack(attacker, defender, weapon) {\n        const str = getStat(STAT_STRENGTH, attacker);\n        const die = weapon.roll();\n        const damage = die + str;\n\n        return new Attack({\n            attacker,\n            defender,\n            weaponName: weapon.name,\n            damage,\n            damageType: this.damageType,\n        });\n    }\n\n    attack(attacker, defender, weapon) {\n        const attack = this._createAttack(attacker, defender, weapon);\n        const result = defender.fireEvent('attacked', { attack });\n        const attacks = [attack];\n\n        if (\n            !result.data.isDodged &&\n            !result.data.isKilled &&\n            randomWeightedBool(0.2)\n        ) {\n            addStatus(STATUS_STUNNED, defender, {\n                duration: 1000\n            });\n        }\n\n        return attacks;\n    }\n}\n","import { Status } from '../ecs/components';\nimport StatusBleeding from './statuses/StatusBleeding';\nimport StatusStunned from './statuses/StatusStunned';\n\nexport const STATUS_BLEEDING = 'STATUS_BLEEDING';\nexport const STATUS_STUNNED = 'STATUS_STUNNED';\n\nconst lookup = {\n    STATUS_BLEEDING: new StatusBleeding(),\n    STATUS_STUNNED: new StatusStunned(),\n};\n\nexport const getStatus = (key) => lookup[key];\nexport const addStatus = (key, entity, properties = {}) => {\n    return entity.add(Status, {\n        ...properties,\n        key,\n    });\n};\n","import { LIQUID_BLOOD } from '../../enums/LiquidTypes';\nimport { STATUS_TYPE_CONDITION } from '../../enums/StatusTypes';\nimport { SPWN_POOL_LIQUID } from '../Spawnables';\nimport { spawn } from '../Spawner';\nimport { STATUS_BLEEDING } from '../Statuses';\nimport Status from './Status';\n\nexport default class StatusBleeding extends Status {\n    constructor() {\n        const glyph = {\n            fg1: '#f42323',\n            fg2: '#411010',\n            bg: null,\n            ch: 's',\n        };\n        super(STATUS_BLEEDING, 'Bleeding', STATUS_TYPE_CONDITION, glyph);\n        this.isDot = true;\n    }\n\n    getDmgPerTurn(potency) {\n        return 3 * potency + 0.5;\n    }\n\n    getPipCount(potency) {\n        return Math.round(2 * potency);\n    }\n\n    update(ticks, entity, status) {\n        const tick = Math.min(ticks, status.remainingLifetime());\n        const dmgPerTurn = this.getDmgPerTurn(status.potency);\n        const damage = dmgPerTurn * (tick / 1000);\n\n        entity.health.applyDamage(damage);\n\n        const position = entity.position.getPos();\n\n        spawn(SPWN_POOL_LIQUID, position.x, position.y, {\n            content: LIQUID_BLOOD,\n            volume: Math.ceil(damage * 6),\n        });\n\n        status.lifetime += tick;\n    }\n}\n","export const STATUS_TYPE_CONDITION = 'STATUS_TYPE_CONDITION';\n","export default class Status {\n    isDot = false;\n\n    getPipCount(potency) {\n        return 0;\n    }\n\n    constructor(key, name, type, glyph) {\n        this.key = key;\n        this.name = name;\n        this.type = type;\n        this.glyph = glyph;\n    }\n}\n","import { game } from '../../core/Game';\nimport { IsIncapacitated } from '../../ecs/components';\nimport { STATUS_TYPE_CONDITION } from '../../enums/StatusTypes';\nimport { STATUS_STUNNED } from '../Statuses';\nimport Status from './Status';\n\nexport default class StatusStunned extends Status {\n    constructor() {\n        const glyph = {\n            fg1: '#daa53a',\n            fg2: '#f2da97',\n            bg: null,\n            ch: '|',\n        };\n        super(STATUS_STUNNED, 'Stunned', STATUS_TYPE_CONDITION, glyph);\n    }\n\n    update(ticks, entity, status) {\n        status.lifetime += ticks;\n\n        if (!entity.isIncapacitated) {\n            entity.add(IsIncapacitated);\n\n            const pos = entity.position.getPos();\n\n            game.particles.createParticle(pos.x, pos.y, {\n                lifetime: 140,\n                fg1s: ['yellow'],\n                glyphs: ['*'],\n            });\n        }\n\n        if (status.isCompleted()) {\n            entity.isIncapacitated.destroy();\n        }\n    }\n}\n","import Attack from '../Attack';\nimport { DMG_TYPE_SLASHING } from '../DamageTypes';\nimport { getStat, STAT_STRENGTH } from '../Stats';\nimport { WPN_FAMILY_BLADE } from '../WeaponFamilies';\nimport { WPN_TYPE_SHORTSWORD } from '../WeaponTypes';\nimport WeaponType from './WeaponType';\n\nexport default class WpnTypeShortsword extends WeaponType {\n    constructor() {\n        super({\n            key: WPN_TYPE_SHORTSWORD,\n            name: 'Shortsword',\n            family: WPN_FAMILY_BLADE,\n            damageType: DMG_TYPE_SLASHING,\n        });\n    }\n\n    getAttacks(attacker, defender, weapon) {\n        const str = getStat(STAT_STRENGTH, attacker);\n        const die = weapon.roll();\n        const damage = die + str;\n\n        return [\n            new Attack({\n                attacker,\n                defender,\n                weaponName: weapon.name,\n                damage,\n                damageType: this.damageType,\n            }),\n        ];\n    }\n}\n","import { pickRandom, randomInt } from '../../utils/rand';\nimport Attack from '../Attack';\nimport { DMG_TYPE_BLUDGEONING } from '../DamageTypes';\nimport { getStat, STAT_STRENGTH } from '../Stats';\nimport { WPN_FAMILY_UNARMED } from '../WeaponFamilies';\nimport { WPN_TYPE_UNARMED } from '../WeaponTypes';\nimport WeaponType from './WeaponType';\n\nexport default class WpnTypeUnarmed extends WeaponType {\n    constructor() {\n        super({\n            key: WPN_TYPE_UNARMED,\n            name: 'Unarmed',\n            family: WPN_FAMILY_UNARMED,\n            damageType: DMG_TYPE_BLUDGEONING,\n        });\n    }\n\n    getAttacks(attacker, defender, weapon) {\n        const str = getStat(STAT_STRENGTH, attacker);\n        const die = randomInt(1, 4);\n        const damage = die + str;\n\n        return [\n            new Attack({\n                attacker,\n                defender,\n                weaponName: pickRandom(['punch', 'kick']),\n                damage,\n                damageType: this.damageType,\n            }),\n        ];\n    }\n}\n","import { Component } from 'geotic';\nimport { capitalize } from 'rot-js/lib/util';\nimport {\n    getStatName,\n    STAT_ATHLETICISM,\n    STAT_FINESSE,\n    STAT_STRENGTH,\n    STAT_TRICKERY,\n    STAT_FAITH,\n} from '../../data/Stats';\n\nexport class Stats extends Component {\n    static properties = {\n        baseStrength: 0,\n        baseFinesse: 0,\n        baseAthleticism: 0,\n        baseTrickery: 0,\n        baseFaith: 0,\n    };\n\n    _sumMods(modifiers) {\n        return modifiers.reduce((sum, cur) => sum + cur.mod, 0);\n    }\n\n    getStatModifiers(stat) {\n        const evt = this.entity.fireEvent(`query-stat-mod`, {\n            name: getStatName(stat),\n            stat,\n            modifiers: [],\n        });\n\n        return evt.data.modifiers;\n    }\n\n    getStatModifierSum(stat) {\n        const mods = this.getStatModifiers(stat);\n\n        return this._sumMods(mods);\n    }\n\n    data(stat) {\n        const name = getStatName(stat);\n        const modifiers = this.getStatModifiers(stat);\n        const base = this[`base${capitalize(name)}`];\n        const modSum = this._sumMods(modifiers);\n        const sum = base + modSum;\n\n        return {\n            stat,\n            name,\n            modifiers,\n            base,\n            sum,\n            modSum,\n        };\n    }\n\n    all() {\n        return {\n            strength: this.data(STAT_STRENGTH),\n            finesse: this.data(STAT_FINESSE),\n            athleticism: this.data(STAT_ATHLETICISM),\n            trickery: this.data(STAT_TRICKERY),\n            faith: this.data(STAT_FAITH),\n        };\n    }\n\n    strength() {\n        const mod = this.getStatModifierSum(STAT_STRENGTH);\n\n        return this.baseStrength + mod;\n    }\n\n    finesse() {\n        const mod = this.getStatModifierSum(STAT_FINESSE);\n\n        return this.baseFinesse + mod;\n    }\n\n    athleticism() {\n        const mod = this.getStatModifierSum(STAT_ATHLETICISM);\n\n        return this.baseAthleticism + mod;\n    }\n\n    trickery() {\n        const mod = this.getStatModifierSum(STAT_TRICKERY);\n\n        return this.baseTrickery + mod;\n    }\n\n    faith() {\n        const mod = this.getStatModifierSum(STAT_FAITH);\n\n        return this.baseFaith + mod;\n    }\n}\n","/**\n * Always positive modulus\n * @param x Operand\n * @param n Modulus\n * @returns x modulo n\n */\nexport function mod(x, n) {\n    return (x % n + n) % n;\n}\nexport function clamp(val, min = 0, max = 1) {\n    if (val < min)\n        return min;\n    if (val > max)\n        return max;\n    return val;\n}\nexport function capitalize(string) {\n    return string.charAt(0).toUpperCase() + string.substring(1);\n}\n/**\n * Format a string in a flexible way. Scans for %s strings and replaces them with arguments. List of patterns is modifiable via String.format.map.\n * @param {string} template\n * @param {any} [argv]\n */\nexport function format(template, ...args) {\n    let map = format.map;\n    let replacer = function (match, group1, group2, index) {\n        if (template.charAt(index - 1) == \"%\") {\n            return match.substring(1);\n        }\n        if (!args.length) {\n            return match;\n        }\n        let obj = args[0];\n        let group = group1 || group2;\n        let parts = group.split(\",\");\n        let name = parts.shift() || \"\";\n        let method = map[name.toLowerCase()];\n        if (!method) {\n            return match;\n        }\n        obj = args.shift();\n        let replaced = obj[method].apply(obj, parts);\n        let first = name.charAt(0);\n        if (first != first.toLowerCase()) {\n            replaced = capitalize(replaced);\n        }\n        return replaced;\n    };\n    return template.replace(/%(?:([a-z]+)|(?:{([^}]+)}))/gi, replacer);\n}\nformat.map = {\n    \"s\": \"toString\"\n};\n","import { Component } from 'geotic';\nimport { SKILL_SPEED } from '../../data/Skills';\nimport { getRaceData, RACE_HUMAN } from '../../data/Races';\n\nexport class Race extends Component {\n    static properties = {\n        key: RACE_HUMAN,\n    };\n\n    data() {\n        return getRaceData(this.key);\n    }\n\n    get name() {\n        return this.data().name;\n    }\n\n    get speed() {\n        return this.data().speed;\n    }\n\n    getModifier(stat) {\n        return this.data()[stat];\n    }\n\n    onQueryStatMod(evt) {\n        const mod = this.getModifier(evt.data.stat);\n\n        if (mod !== 0) {\n            evt.data.modifiers.push({\n                source: this.name,\n                mod,\n            });\n        }\n    }\n\n    onQuerySkillMod(evt) {\n        if (evt.data.skill === SKILL_SPEED) {\n            const mod = this.speed;\n\n            evt.data.modifiers.push({\n                source: this.name,\n                mod,\n            });\n        }\n    }\n}\n","import RaceData from './RaceData';\n\nexport const RACE_HUMAN = 'RACE_HUMAN';\nexport const RACE_GOBLIN = 'RACE_GOBLIN';\n\nconst lookup = {\n    [RACE_HUMAN]: new RaceData({\n        name: 'Human',\n        key: RACE_HUMAN,\n        speed: 1,\n        STAT_STRENGTH: 1,\n        STAT_FINESSE: 1,\n        STAT_ATHLETICISM: 1,\n        STAT_TRICKERY: 1,\n        STAT_FAITH: 0,\n    }),\n    [RACE_GOBLIN]: new RaceData({\n        name: 'Goblin',\n        key: RACE_GOBLIN,\n        speed: 2,\n        STAT_STRENGTH: -1,\n        STAT_FINESSE: 2,\n        STAT_ATHLETICISM: 1,\n        STAT_TRICKERY: 2,\n        STAT_FAITH: 0,\n    }),\n};\n\nexport const getRaceData = (name) => lookup[name];\n","export default class RaceData {\n    name = '';\n    speed = 1;\n    key = 1;\n    STAT_STRENGTH = 0;\n    STAT_FINESSE = 0;\n    STAT_ATHLETICISM = 0;\n    STAT_TRICKERY = 0;\n    STAT_FAITH = 0;\n\n    constructor(data) {\n        this.name = data.name || '';\n        this.speed = data.speed || 1;\n        this.key = data.key;\n\n        this.STAT_STRENGTH = data.STAT_STRENGTH || 0;\n        this.STAT_FINESSE = data.STAT_FINESSE || 0;\n        this.STAT_ATHLETICISM = data.STAT_ATHLETICISM || 0;\n        this.STAT_TRICKERY = data.STAT_TRICKERY || 0;\n        this.STAT_FAITH = data.STAT_FAITH || 0;\n    }\n}\n","import { Component } from 'geotic';\nimport {\n    getWeaponType,\n    getWeaponTypeDmgType,\n    getWeaponTypeFamily,\n    getWeaponTypeName,\n} from '../../data/WeaponTypes';\nimport { randomInt } from '../../utils/rand';\n\nexport class Weapon extends Component {\n    static properties = {\n        weaponType: 'WPN_TYPE_DAGGER',\n        die: 6,\n        modifier: 0,\n        cost: 600,\n    };\n\n    get name() {\n        return getWeaponTypeName(this.weaponType);\n    }\n\n    get family() {\n        return getWeaponTypeFamily(this.weaponType);\n    }\n\n    get damageType() {\n        return getWeaponTypeDmgType(this.weaponType);\n    }\n\n    getShortDescription(user) {\n        return getWeaponType(this.weaponType).getShortDescription(user, this);\n    }\n\n    roll() {\n        const r = randomInt(1, this.die);\n\n        return r + this.modifier;\n    }\n\n    onTryUseMelee(evt) {\n        const weaponType = getWeaponType(this.weaponType);\n\n        weaponType.attack(evt.data.interactor, evt.data.target, this);\n\n        evt.data.interactor.fireEvent('energy-consumed', this.cost);\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\nimport { STATUS_BLEEDING } from '../../data/Statuses';\n\nexport class Status extends Component {\n    static allowMultiple = true;\n    static properties = {\n        key: STATUS_BLEEDING,\n        duration: 4000,\n        lifetime: 0,\n        potency: 0.5,\n    };\n\n    remainingLifetime() {\n        return this.duration - this.lifetime;\n    }\n\n    isCompleted() {\n        return this.lifetime >= this.duration;\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Ground extends Component {}\n","import { Component } from 'geotic';\n\nexport class IsIncapacitated extends Component {}\n","import { Component } from 'geotic';\nimport { statCheck, STAT_FINESSE } from '../../data/Stats';\n\nexport class SharpTrap extends Component {\n    static properties = {\n        challenge: 15,\n    };\n\n    test(entity) {\n        return statCheck(STAT_FINESSE, entity, this.challenge);\n    }\n}\n","import { Component } from 'geotic';\n\nexport class EquippedSkillMod extends Component {\n    static allowMultiple = true;\n    static properties = {\n        SKILL_ARMOR: 0,\n        SKILL_SPEED: 0,\n        SKILL_THROWING: 0,\n        SKILL_DODGE: 0,\n    };\n\n    onQuerySkillModEquipped(evt) {\n        const mod = this[evt.data.skill];\n\n        if (mod) {\n            evt.data.modifiers.push({\n                source: this.entity.moniker.name,\n                mod,\n            });\n        }\n    }\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { randomWeightedBool } from '../../utils/rand';\nimport { Fire } from './Fire';\n\nexport class Combustible extends Component {\n    static properties = {\n        fuel: 200,\n        flashPoint: 200,\n        spawnableRemains: null,\n        burnRate: 5,\n    };\n\n    get isOnFire() {\n        return !!this.entity.fire;\n    }\n\n    get isOutOfFuel() {\n        return this.fuel <= 0;\n    }\n\n    getTemperature() {\n        const pos = this.entity.position.getPos();\n\n        return game.temperature.getTemperature(pos.x, pos.y);\n    }\n\n    setTemperature(value) {\n        const pos = this.entity.position.getPos();\n\n        return game.temperature.setTemperature(pos.x, pos.y, value);\n    }\n\n    getDieOutChance() {\n        return 0.01;\n    }\n\n    getSparkChance() {\n        return this.getTemperature() / 1000;\n    }\n\n    getCatchChance(intensity) {\n        if (this.fuel <= 0) {\n            return 0;\n        }\n\n        const temperature = this.getTemperature();\n\n        return (temperature * intensity) / 1000;\n    }\n\n    onSpark(evt) {\n        if (this.isOnFire) {\n            return;\n        }\n\n        const intensity = evt.data.intensity;\n\n        if (randomWeightedBool(this.getCatchChance(intensity))) {\n            this.entity.add(Fire, {\n                intensity,\n            });\n            this.setTemperature(this.flashPoint);\n        }\n    }\n\n    onTryIgnite(evt) {\n        this.entity.add(Fire, {\n            intensity: 3,\n        });\n        this.setTemperature(this.flashPoint);\n    }\n\n    onGetInteractions(evt) {\n        if (!this.isOnFire && !this.entity.isInventoried) {\n            evt.data.interactions.push({\n                name: 'Ignite',\n                evt: 'try-ignite',\n                intensity: 3,\n            });\n        }\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Fire extends Component {\n    static properties = {\n        intensity: 3,\n    };\n\n    extinguish() {\n        this.destroy();\n    }\n\n    onTryExtinguish(evt) {\n        this.extinguish();\n    }\n\n    onGetInteractions(evt) {\n        evt.data.interactions.push({\n            name: 'Extinguish',\n            evt: 'try-extinguish',\n        });\n    }\n}\n","import { Component } from 'geotic';\n\nexport class ThermalCapacity extends Component {\n    static properties = {\n        value: 0.5,\n    };\n}\n","import { Component } from 'geotic';\n\nexport class Abilities extends Component {\n    static properties = {\n        known: [],\n        state: {},\n    };\n\n    onQueryAbilities(evt) {\n        evt.data.abilities.push(...this.known);\n    }\n}\n","import { Component } from 'geotic';\nimport { getAbility } from '../../data/Abilities';\n\nexport class AbilityStatus extends Component {\n    static allowMultiple = true;\n    static keyProperty = 'key';\n    static properties = {\n        key: 'ABILITY_SPRINT',\n        isCoolingDown: false,\n        isToggledOn: true,\n        cooldownDuration: 50000,\n        currentCooldownDuration: 0,\n        duration: 10000,\n        currentDuration: 0,\n        channelDuration: 0,\n        currentChannelDuration: 0,\n        statMods: {},\n        skillMods: {},\n    };\n\n    get ability() {\n        return getAbility(this.key);\n    }\n\n    get remainingCooldownDuration() {\n        if (!this.isCoolingDown) {\n            return Infinity;\n        }\n\n        return this.cooldownDuration - this.currentCooldownDuration;\n    }\n\n    get remainingDuration() {\n        if (this.isCoolingDown) {\n            return 0;\n        }\n\n        return this.duration - this.currentDuration;\n    }\n\n    get isChanneling() {\n        return !this.isCoolingDown && this.currentChannelDuration < this.channelDuration;\n    }\n\n    get isComplete() {\n        return this.currentDuration >= this.duration || (this.ability.isToggleable && !this.isToggledOn);\n    }\n\n    get isCooldownComplete() {\n        return (\n            this.isCoolingDown &&\n            this.currentCooldownDuration >= this.cooldownDuration\n        );\n    }\n\n    startCooldown() {\n        this.isCoolingDown = true;\n        this.isToggledOn = false;\n    }\n\n    onQuerySkillMod(evt) {\n        if (this.isComplete) {\n            return;\n        }\n\n        const mod = this.skillMods[evt.data.skill];\n\n        if (mod) {\n            evt.data.modifiers.push({\n                source: this.ability.name,\n                mod,\n            });\n        }\n    }\n\n    onQueryStatMod(evt) {\n        if (this.isCoolingDown) {\n            return;\n        }\n\n        const mod = this.statMods[evt.data.stat];\n\n        if (mod) {\n            evt.data.modifiers.push({\n                source: this.ability.name,\n                mod,\n            });\n        }\n    }\n}\n","import PrayerOfProtectionAbility from './abilities/prayers/PrayerOfProtectionAbility';\nimport BlinkAbility from './abilities/spells/BlinkAbility';\nimport CrimsonWellAbility from './abilities/spells/CrimsonWellAbility';\nimport RageAbility from './abilities/stances/RageAbility';\nimport SprintAbility from './abilities/stances/SprintAbility';\nimport JumpAbility from './abilities/stunts/JumpAbility';\n\nexport const ABILITY_SPRINT = 'ABILITY_SPRINT';\nexport const ABILITY_RAGE = 'ABILITY_RAGE';\nexport const ABILITY_CRIMSON_WELL = 'ABILITY_CRIMSON_WELL';\nexport const ABILITY_BLINK = 'ABILITY_BLINK';\nexport const ABILITY_JUMP = 'ABILITY_JUMP';\nexport const ABILITY_PRAYER_PROTECTION = 'ABILITY_PRAYER_PROTECTION';\n\nconst lookup = {\n    ABILITY_SPRINT: new SprintAbility(),\n    ABILITY_RAGE: new RageAbility(),\n    ABILITY_CRIMSON_WELL: new CrimsonWellAbility(),\n    ABILITY_BLINK: new BlinkAbility(),\n    ABILITY_JUMP: new JumpAbility(),\n    ABILITY_PRAYER_PROTECTION: new PrayerOfProtectionAbility(),\n};\n\nexport const getAbility = (key) => lookup[key];\nexport const getAbilityStatus = (key, entity) => {\n    if (entity.abilityStatus) {\n        return entity.abilityStatus[key];\n    }\n};\nexport const getStance = (entity) => {\n    if (!entity.abilityStatus) {\n        return;\n    }\n\n    return Object.values(entity.abilityStatus).find((status) => {\n        return status.ability.isStance && !status.isCoolingDown && !status.isComplete;\n    });\n};\nexport const getChanneling = (entity) => {\n    if (!entity.abilityStatus) {\n        return;\n    }\n\n    return Object.values(entity.abilityStatus).find((status) => {\n        return status.ability.isChanneled && status.isChanneling;\n    });\n};\n","import { ABILITY_TYPE_PRAYER } from '../../../enums/AbilityTypes';\nimport { allDirections, directionDelta } from '../../../enums/Directions';\nimport { ABILITY_PRAYER_PROTECTION } from '../../Abilities';\nimport { getStat, STAT_FAITH } from '../../Stats';\nimport SimpleChannelAbility from '../SimpleChannelAbility';\n\nexport default class PrayerOfProtectionAbility extends SimpleChannelAbility {\n    key = ABILITY_PRAYER_PROTECTION;\n    type = ABILITY_TYPE_PRAYER;\n    name = 'Prayer of Protection';\n\n    getCooldownDuration(entity) {\n        return 20000;\n    }\n\n    getChannelDuration(entity) {\n        return 5000;\n    }\n\n    getArmorModifier(entity) {\n        return Math.max(2, getStat(STAT_FAITH, entity));\n    }\n\n    getDescription(entity) {\n        const armor = this.getArmorModifier(entity);\n\n        return `Grant +${armor} bonus armor. [FTH]`;\n    }\n\n    getSkillMods(entity) {\n        return {\n            SKILL_ARMOR: this.getArmorModifier(entity),\n        };\n    }\n\n    onChannelComplete(status) {\n        const pos = status.entity.position.getPos();\n\n        allDirections().forEach((dir) => {\n            game.particles.createEmitter(pos.x, pos.y, {\n                rate: 3,\n            }, {\n                glyphs: ['·', 'o', 'O'],\n                fg1s: ['yellow'],\n                speed: .05,\n                direction: directionDelta(dir),\n                lifetime: 3000,\n            });\n        });\n    }\n}\n","export const ABILITY_TYPE_STANCE = 0;\nexport const ABILITY_TYPE_SHOUT = 1;\nexport const ABILITY_TYPE_STUNT = 2;\nexport const ABILITY_TYPE_SPELL = 3;\nexport const ABILITY_TYPE_PRAYER = 4;\n\nconst lookup = {\n    [ABILITY_TYPE_STANCE]: {\n        name: 'Stance',\n    },\n    [ABILITY_TYPE_SHOUT]: {\n        name: 'Shout',\n    },\n    [ABILITY_TYPE_STUNT]: {\n        name: 'Stunt',\n    },\n    [ABILITY_TYPE_SPELL]: {\n        name: 'Spell',\n    },\n    [ABILITY_TYPE_PRAYER]: {\n        name: 'Prayer',\n    },\n};\n\nexport const getAbilityTypeName = (key) => lookup[key].name;\n","import { game } from '../../core/Game';\nimport { AbilityStatus } from '../../ecs/components';\nimport Ability from './Ability';\n\nexport default class SimpleChannelAbility extends Ability {\n    isToggleable = false;\n    isChanneled = true;\n\n    getDuration(entity) {\n        return 5000;\n    }\n\n    getCooldownDuration(entity) {\n        return 50000;\n    }\n\n    getChannelDuration(entity) {\n        return 10000;\n    }\n\n    execute(entity, data) {\n        entity.add(AbilityStatus, {\n            key: this.key,\n            isCoolingDown: false,\n            channelDuration: this.getChannelDuration(entity),\n            currentChannelDuration: 0,\n            cooldownDuration: this.getCooldownDuration(entity),\n            statMods: this.getStatMods(entity),\n            skillMods: this.getSkillMods(entity),\n        });\n    }\n}\n","import { game } from '../../core/Game';\nimport { SCREEN_WAIT } from '../../core/screens/ScreenType';\nimport { AbilityStatus } from '../../ecs/components';\nimport { ABILITY_TYPE_STANCE } from '../../enums/AbilityTypes';\nimport { getAbilityStatus } from '../Abilities';\n\nexport default class Ability {\n    key = '';\n    type = 0;\n    name = '';\n    isToggleable = false;\n    isChanneled = false;\n\n    get isStance() {\n        return this.type === ABILITY_TYPE_STANCE;\n    }\n\n    getDescription(entity) {\n        return '';\n    }\n\n    getCooldownDuration(entity) {\n        return 5000;\n    }\n\n    getChannelDuration(entity) {\n        return 0;\n    }\n\n    constructor(key, type, name) {\n        this.key = key;\n        this.type = type;\n        this.name = name;\n    }\n\n    onChannelComplete(status) {\n    }\n\n    initiate(entity, options) {\n        options.onConfirm();\n    }\n\n    execute(entity, data) {\n        entity.add(AbilityStatus, {\n            key: this.key,\n            isCoolingDown: true,\n            cooldownDuration: this.getCooldownDuration(entity),\n        });\n    }\n\n    getStatMods(entity) {\n        return {};\n    }\n\n    getSkillMods(entity) {\n        return {};\n    }\n\n    toggleOn(entity) {\n        entity.add(AbilityStatus, {\n            key: this.key,\n            isToggledOn: true,\n            isCoolingDown: false,\n            duration: this.getDuration(entity),\n            cooldownDuration: this.getCooldownDuration(entity),\n            statMods: this.getStatMods(entity),\n            skillMods: this.getSkillMods(entity),\n        });\n\n        return true;\n    }\n\n    toggleOff(entity, status) {\n        status.startCooldown();\n    }\n\n    channel(energy, status) {\n        status.currentChannelDuration += energy;\n\n        if (status.currentChannelDuration >= status.channelDuration) {\n            energy = status.channelDuration - (status.currentChannelDuration - energy)\n            status.currentChannelDuration = status.channelDuration;\n            status.startCooldown();\n            this.onChannelComplete(status);\n        }\n\n        const entity = status.entity;\n\n        entity.fireEvent('energy-consumed', energy);\n\n        return energy;\n    }\n\n    cancelChannel(status) {\n        status.currentDuration = status.duration;\n        status.startCooldown();\n    }\n\n    update(dt, status) {\n        if (status.isCoolingDown) {\n            status.currentCooldownDuration += dt;\n\n            if (status.currentCooldownDuration > status.cooldownDuration) {\n                status.currentCooldownDuration = status.cooldownDuration;\n            }\n        } else if (status.isComplete) {\n            status.startCooldown();\n        }\n\n        if (status.isChanneling) {\n            return;\n        }\n\n        if (!status.isComplete) {\n            status.currentDuration += dt;\n        }\n\n        if (status.isCooldownComplete) {\n            status.destroy();\n        }\n    }\n\n    getDisplayText(entity) {\n        const status = getAbilityStatus(this.key, entity);\n\n        if (status && status.isCoolingDown) {\n            const cd = (status.remainingCooldownDuration / 1000).toFixed(1);\n\n            return {\n                text: `${this.name} [${cd}]`,\n                isEnabled: false,\n            };\n        }\n\n        if (this.isToggleable) {\n            if (status && status.isToggledOn) {\n                return {\n                    text: `${this.name} [toggle OFF]`,\n                    isEnabled: true,\n                };\n            } else {\n                return {\n                    text: `${this.name} [toggle ON]`,\n                    isEnabled: true,\n                };\n            }\n        }\n\n        return {\n            text: this.name,\n            isEnabled: true,\n        };\n    }\n}\n","import { game } from '../../../core/Game';\nimport { SCREEN_CURSOR } from '../../../core/screens/ScreenType';\nimport { ABILITY_TYPE_SPELL } from '../../../enums/AbilityTypes';\nimport { simpleCursorRenderer } from '../../../utils/cursor/SimpleCursorRenderer';\nimport { ABILITY_BLINK } from '../../Abilities';\nimport Ability from '../Ability';\n\nexport default class BlinkAbility extends Ability {\n    key = ABILITY_BLINK;\n    type = ABILITY_TYPE_SPELL;\n    name = 'Blink';\n\n    getCooldownDuration(entity) {\n        return 20000;\n    }\n\n    getDescription(entity) {\n        return `Teleport to a visible location.`;\n    }\n\n    initiate(entity, options) {\n        game.screens.pushScreen(SCREEN_CURSOR, {\n            renderer: simpleCursorRenderer({\n                isValid: ({ x, y }) => {\n                    // must be visible\n                    const visible = game.map\n                        .getEntitiesAt(x, y, true)\n                        .filter((e) => e.isVisible);\n\n                    // must be at least one entity visible\n                    if (visible.length <= 0) {\n                        return false;\n                    }\n\n                    // must not be any blocker or beings\n                    return !visible.some((e) => e.blocker || e.body);\n                },\n            }),\n            onResult: (result) => {\n                game.screens.popScreen();\n                options.onConfirm(result);\n            },\n            onCancel: () => {\n                game.screens.popScreen();\n                options.onCancel();\n            },\n        });\n    }\n\n    execute(entity, data) {\n        super.execute(entity, data);\n\n        const prevPos = entity.position.getPos();\n        const nextPos = data.position;\n\n        game.particles.createEmitter(prevPos.x, prevPos.y, {\n            rate: 2,\n        }, {\n            glyphs: ['O', 'o', '·'],\n            fg1s: ['purple'],\n            speed: 1,\n            lifetime: 300,\n        });\n\n        entity.position.setPos(data.position.x, data.position.y);\n\n        game.particles.createEmitter(nextPos.x, nextPos.y, {\n            rate: 2,\n        }, {\n            glyphs: ['·', 'o', 'O'],\n            fg1s: ['purple'],\n            speed: 1,\n            lifetime: 300,\n        });\n    }\n}\n","import { game } from '../../core/Game';\n\nconst truthy = () => true;\n\nexport const simpleCursorRenderer = (options = {}) => {\n    const isValid = options.isValid || truthy;\n\n    return {\n        isValid,\n        render: (opts) => {\n            const color = isValid(opts) ? 'blue' : 'red';\n            const screen = game.camera.worldToScreen(opts.x, opts.y);\n\n            game.renderer.draw(screen.x, screen.y, 'X', color);\n        },\n    };\n};\n","import { game } from '../../../core/Game';\nimport { ABILITY_TYPE_SPELL } from '../../../enums/AbilityTypes';\nimport { ABILITY_CRIMSON_WELL, getAbilityStatus } from '../../Abilities';\nimport Attack from '../../Attack';\nimport { DMG_TYPE_NECROTIC } from '../../DamageTypes';\nimport { addStatus, STATUS_BLEEDING } from '../../Statuses';\nimport SimpleDurationAbility from '../SimpleDurationAbility';\n\nexport default class CrimsonWellAbility extends SimpleDurationAbility {\n    key = ABILITY_CRIMSON_WELL;\n    type = ABILITY_TYPE_SPELL;\n    name = 'Crimson Well';\n\n    getDuration(entity) {\n        return 8000;\n    }\n\n    getCooldownDuration(entity) {\n        return 50000;\n    }\n\n    getDescription(entity) {\n        return `Siphon the blood of nearby enemies. Lifesteal +${4} HP from adjacent enemies per turn. You gain bleeding for the duration.`;\n    }\n\n    execute(entity, data) {\n        super.execute(entity, data);\n        addStatus(STATUS_BLEEDING, entity, {\n            duration: this.getDuration(entity),\n            potency: 0.5,\n        });\n\n        const status = getAbilityStatus(this.key, entity);\n\n        this.performLifeteal(status);\n    }\n\n    performLifeteal(status) {\n        const entity = status.entity;\n        const pos = status.entity.position.getPos();\n        game.map\n            .getNeighborEntities(pos.x, pos.y)\n            .flat()\n            .filter((e) => game.factions.areEntitiesHostile(e, entity))\n            .map((hostile) => {\n                const attack = new Attack({\n                    attacker: entity,\n                    ignoreDodge: true,\n                    defender: hostile,\n                    weaponName: this.name,\n                    damage: 3,\n                    damageType: DMG_TYPE_NECROTIC,\n                });\n\n                const evt = hostile.fireEvent('attacked', { attack });\n\n                if (evt.data.damage > 0) {\n                    entity.fireEvent('heal', {\n                        value: evt.data.damage,\n                    });\n\n                    const enemyPos = hostile.position.getPos();\n                    game.particles.createEmitter(enemyPos.x, enemyPos.y, {\n                        rate: 2\n                    }, {\n                        glyphs: ['·', 'x'],\n                        fg1s: ['red'],\n                        speed: 0.01,\n                        lifetime: 120,\n                    });\n                }\n            });\n\n        game.particles.createEmitter(pos.x, pos.y, {\n            rate: 2\n        }, {\n            glyphs: ['x', '·'],\n            fg1s: ['red'],\n            speed: 0.01,\n            lifetime: 120,\n        });\n    }\n\n    update(dt, status) {\n        super.update(dt, status);\n\n        if (game.clock.turnDelta <= 0 || status.isComplete) {\n            return;\n        }\n\n        this.performLifeteal(status);\n    }\n}\n","import { AbilityStatus } from '../../ecs/components/AbilityStatus';\nimport { getAbilityStatus } from '../Abilities';\nimport Ability from './Ability';\n\nexport default class SimpleDurationAbility extends Ability {\n    getDuration(entity) {\n        return 20000;\n    }\n\n    getCooldownDuration(entity) {\n        return 50000;\n    }\n\n    execute(entity, data) {\n        const status = getAbilityStatus(this.key, entity);\n\n        if (status) {\n            return false;\n        }\n\n        entity.add(AbilityStatus, {\n            key: this.key,\n            isToggledOn: true,\n            isCoolingDown: true,\n            duration: this.getDuration(entity),\n            cooldownDuration: this.getCooldownDuration(entity),\n            statMods: this.getStatMods(entity),\n            skillMods: this.getSkillMods(entity),\n        });\n\n        return true;\n    }\n}\n","import { ABILITY_TYPE_STANCE } from '../../../enums/AbilityTypes';\nimport { ABILITY_RAGE } from '../../Abilities';\nimport { getStat, STAT_STRENGTH } from '../../Stats';\nimport SimpleToggledAbility from '../SimpleToggledAbility';\n\nexport default class RageAbility extends SimpleToggledAbility {\n    key = ABILITY_RAGE;\n    type = ABILITY_TYPE_STANCE;\n    name = 'Rage';\n\n    computeStrengthMod(entity) {\n        return getStat(STAT_STRENGTH, entity) * 3;\n    }\n\n    getDuration(entity) {\n        return 20000;\n    }\n\n    getCooldownDuration(entity) {\n        return 50000;\n    }\n\n    getDescription(entity) {\n        const str = this.computeStrengthMod(entity);\n\n        return `Enter a fit of rage. Gain +${str} STR and ${-2} dodge. [STR]`;\n    }\n\n    getSkillMods(entity) {\n        return {\n            SKILL_DODGE: -2,\n        };\n    }\n\n    getStatMods(entity) {\n        return {\n            STAT_STRENGTH: this.computeStrengthMod(entity),\n        };\n    }\n}\n","import { getAbilityStatus } from '../Abilities';\nimport Ability from './Ability';\n\nexport default class SimpleToggledAbility extends Ability {\n    isToggleable = true;\n\n    getDuration(entity) {\n        return 10000;\n    }\n\n    getCooldownDuration(entity) {\n        return 50000;\n    }\n\n    execute(entity, data) {\n        // const status = getAbilityStatus(this.key, entity);\n\n        // if (status) {\n        //     this.toggleOff(entity, status);\n        // } else {\n        //     this.toggleOn(entity);\n        // }\n    }\n}\n","import { ABILITY_TYPE_STANCE } from '../../../enums/AbilityTypes';\nimport { ABILITY_SPRINT } from '../../Abilities';\nimport { getStat, STAT_ATHLETICISM } from '../../Stats';\nimport SimpleToggledAbility from '../SimpleToggledAbility';\n\nexport default class SprintAbility extends SimpleToggledAbility {\n    key = ABILITY_SPRINT;\n    type = ABILITY_TYPE_STANCE;\n    name = 'Sprint';\n\n    computeSpeedMod(entity) {\n        return 5 + 2 * getStat(STAT_ATHLETICISM, entity);\n    }\n\n    getDuration(entity) {\n        return 20000;\n    }\n\n    getCooldownDuration(entity) {\n        return 50000;\n    }\n\n    getDescription(entity) {\n        const speed = this.computeSpeedMod(entity);\n\n        return `Gain +${speed} move speed. [ATH]`;\n    }\n\n    getSkillMods(entity) {\n        return {\n            SKILL_SPEED: this.computeSpeedMod(entity),\n        };\n    }\n}\n","import { game } from '../../../core/Game';\nimport { SCREEN_CURSOR } from '../../../core/screens/ScreenType';\nimport { ABILITY_TYPE_STUNT } from '../../../enums/AbilityTypes';\nimport { simpleLineRenderer } from '../../../utils/cursor/SimpleLineRenderer';\nimport { ABILITY_JUMP } from '../../Abilities';\nimport { getStat, STAT_ATHLETICISM } from '../../Stats';\nimport Ability from '../Ability';\n\nexport default class JumpAbility extends Ability {\n    key = ABILITY_JUMP;\n    type = ABILITY_TYPE_STUNT;\n    name = 'Jump';\n\n    getCooldownDuration(entity) {\n        return 20000;\n    }\n\n    getJumpDistance(entity) {\n        return Math.floor(Math.max(3, getStat(STAT_ATHLETICISM, entity)) / 3);\n    }\n\n    getDescription(entity) {\n        const distance = this.getJumpDistance(entity);\n        const word = distance > 1 ? 'tiles' : 'tile';\n\n        return `Jump up to ${distance} ${word} away. You cannot jump over other creatures. [ATH]`;\n    }\n\n    initiate(entity, options) {\n        const distance = this.getJumpDistance(entity);\n\n        game.screens.pushScreen(SCREEN_CURSOR, {\n            maxDistance: distance + 1,\n            renderer: simpleLineRenderer({\n                isValid: ({ x, y }, idx) => {\n                    // must be within range\n                    if (idx - 1 > distance) {\n                        return false;\n                    }\n\n                    // must be visible\n                    const visible = game.map\n                        .getEntitiesAt(x, y, true)\n                        .filter((e) => e.isVisible);\n\n                    // must be at least one entity visible\n                    if (visible.length <= 0) {\n                        return false;\n                    }\n\n                    // must not be any blocker or beings\n                    return !visible.some((e) => e.blocker || e.body);\n                },\n            }),\n            onResult: (result) => {\n                game.screens.popScreen();\n                options.onConfirm(result);\n            },\n            onCancel: () => {\n                game.screens.popScreen();\n                options.onCancel();\n            },\n        });\n    }\n\n    execute(entity, data) {\n        super.execute(entity, data);\n\n        entity.position.setPos(data.position.x, data.position.y);\n    }\n}\n","import { Component } from 'geotic';\nimport { BITMASK_WALL } from '../../data/bitmasks';\n\nexport class BitmaskGlyph extends Component {\n    static properties = {\n        key: BITMASK_WALL,\n        updateGlyph: true,\n        value: 0,\n    };\n}\n","export const BITMASK_WALL = 'BITMASK_WALL';\n\n\nconst map = {\n    BITMASK_WALL: (value) => {\n        switch (value) {\n            case 0:\n            case 2:\n            case 3:\n            case 6:\n            case 7:\n            case 17:\n            case 48:\n                return '╜';\n            case 8:\n            case 9:\n            case 12:\n            case 40:\n            case 41:\n            case 136:\n                return '╛';\n            case 16:\n            case 20:\n            case 144:\n            case 148:\n                return '╒';\n            case 1:\n            case 64:\n            case 66:\n            case 67:\n            case 70:\n            case 71:\n            case 96:\n            case 98:\n            case 99:\n            case 102:\n            case 192:\n            case 194:\n            case 195:\n            case 198:\n            case 226:\n                return '║';\n            case 10:\n                return '╝';\n            case 18:\n                return '╚';\n            case 72:\n                return '╗';\n            case 80:\n                return '╔';\n            case 26:\n            case 58:\n            case 154:\n                return '╩';\n            case 82:\n            case 83:\n            case 114:\n                return '╠';\n            case 74:\n            case 78:\n            case 202:\n                return '╣';\n            case 88:\n            case 92:\n                return '╦';\n            case 90:\n                return '╬';\n            default:\n                return '═';\n        };\n    }\n};\n\n\nexport const getMaskGlyph = (key, mask) => map[key](mask);\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { CONSOLE_EVENT_LEVEL } from '../../enums/ConsoleEvents';\n\nconst LEVEL_XP_CAP = 5000;\nconst LEVEL_INTENSITY = 16;\nconst LEVEL_DIFFERENCE_FACTOR = 20;\nconst SKILL_POINTS_PER_LEVEL = 1;\n\nexport class Level extends Component {\n    static properties = {\n        xp: 0,\n        level: 1,\n        skillPoints: 0,\n    };\n\n    get nextLevelReq() {\n        return Math.floor((this.level * LEVEL_XP_CAP) / (this.level + LEVEL_INTENSITY))\n    }\n\n    levelUp() {\n        this.level++;\n        this.skillPoints += SKILL_POINTS_PER_LEVEL;\n\n        game.console.event(CONSOLE_EVENT_LEVEL, {\n            entity: this.entity,\n            level: this.level,\n        });\n\n        const pos = this.entity.position.getPos();\n\n        game.particles.createEmitter(pos.x, pos.y, {\n            rate: 5,\n            duration: 1200,\n        }, {\n            glyphs: ['↑'],\n            fg1s: ['yellow'],\n            speed: .015,\n            direction: {\n                x: -1,\n                y: -5\n            },\n            lifetime: 3000,\n        });\n        game.particles.createEmitter(pos.x, pos.y, {\n            rate: 5,\n            duration: 1200,\n        }, {\n            glyphs: ['↑'],\n            fg1s: ['yellow'],\n            speed: .015,\n            direction: {\n                x: 0,\n                y: -5\n            },\n            lifetime: 3000,\n        });\n        game.particles.createEmitter(pos.x, pos.y, {\n            rate: 5,\n            duration: 1200,\n        }, {\n            glyphs: ['↑'],\n            fg1s: ['yellow'],\n            speed: .015,\n            direction: {\n                x: 1,\n                y: -5\n            },\n            lifetime: 3000,\n        });\n    }\n\n    addXP(xp) {\n        this.xp += xp;\n\n        if (this.xp >= this.nextLevelReq) {\n            this.xp -= this.nextLevelReq;\n\n            this.levelUp();\n        }\n    }\n\n    onEnemyKilled(evt) {\n        if (!evt.data.enemy.level) {\n            return;\n        }\n\n        const levelFactor = 5 + (evt.data.enemy.level.level - this.level);\n\n        if (levelFactor < 0) {\n            return;\n        }\n\n        this.addXP(levelFactor * LEVEL_DIFFERENCE_FACTOR);\n    }\n}\n","export default class System {\n    #game = null;\n\n    get game() {\n        return this.#game;\n    }\n\n    constructor(game) {\n        this.#game = game;\n    }\n\n    update(dt) {}\n}\n","import { game } from '../core/Game';\nimport { lerpHSL } from '../utils/ColorUtil';\nimport System from './System';\n\nconst RENDER_MODE_DEFAULT = 0;\nconst RENDER_MODE_TEMPERATURE = 1;\n\nconst temperatureGradient = (v) => {\n    const blue = [216, 40, 50];\n    const red = [0, 80, 50];\n    const rgb = lerpHSL(blue, red, Math.sqrt(v));\n\n    return `rgb(${rgb[0]},${rgb[1]},${rgb[2]})`;\n};\n\nconst modeLookup = {\n    [RENDER_MODE_DEFAULT]: (x, y, e) => {\n        if (e.isVisible) {\n            game.renderer.draw(\n                x,\n                y,\n                e.glyph.char,\n                e.glyph.primary,\n                e.glyph.secondary,\n                e.glyph.background\n            );\n        } else if (e.explored) {\n            game.renderer.draw(x, y, e.glyph.char, '#2c3538', '#2c3538');\n        }\n    },\n    [RENDER_MODE_TEMPERATURE]: (x, y, e, worldX, worldY) => {\n        const temp = game.temperature.getTemperature(worldX, worldY) / 200;\n        const bg = temperatureGradient(Math.min(1, temp));\n\n        if (e.isVisible) {\n            game.renderer.draw(\n                x,\n                y,\n                e.glyph.char,\n                e.glyph.primary,\n                e.glyph.secondary,\n                bg\n            );\n        } else {\n            game.renderer.draw(x, y, e.glyph.char, '#2c3538', '#2c3538', bg);\n        }\n    },\n};\n\nexport default class RenderSystem extends System {\n    mode = RENDER_MODE_DEFAULT;\n\n    renderTile(x, y) {\n        const world = this.game.camera.screenToWorld(x, y);\n\n        if (!this.game.camera.isInView(world.x, world.y)) {\n            return;\n        }\n\n        const entities = this.game.map\n            .getEntitiesAt(world.x, world.y, true)\n            .filter((e) => e.glyph && !e.isInventoried && !e.isDestroying);\n\n        if (entities.length <= 0) {\n            return;\n        }\n\n        let renderableZ = -1;\n        let renderable = null;\n\n        entities.forEach((e) => {\n            if (e.glyph.z >= renderableZ) {\n                renderable = e;\n                renderableZ = e.glyph.z;\n            }\n        });\n\n        modeLookup[this.mode](x, y, renderable, world.x, world.y);\n    }\n\n    render(dt) {\n        this.game.renderer.clear();\n\n        for (let x = 0; x < this.game.camera.width; x++) {\n            for (let y = 0; y < this.game.camera.height; y++) {\n                this.renderTile(x, y);\n            }\n        }\n    }\n\n    update(dt) {\n        this.render();\n    }\n}\n","import { getStatus } from '../data/Statuses';\nimport { Moniker, Actor, IsInventoried, IsVisible } from '../ecs/components';\nimport System from './System';\n\nexport default class UISystem extends System {\n    showTicks = false;\n    beingsQuery = null;\n\n    constructor(game) {\n        super(game);\n        this.beingsQuery = this.game.ecs.createQuery({\n            all: [Moniker, Actor, IsVisible],\n            none: [IsInventoried],\n        });\n    }\n\n    renderNearbyCreatures() {\n        const beings = this.beingsQuery.get();\n\n        const offsetX = 1;\n        let offsetY = 1;\n\n        beings.forEach((entity) => {\n            let moniker = entity.moniker.display;\n            let glyphOffset = offsetX;\n\n            if (entity.factionMember) {\n                const relation = this.game.factions.getEntityRelation(\n                    game.player.entity,\n                    entity\n                );\n                const glyph = this.game.factions.getAttitudeGlyph(relation);\n\n                this.game.renderer.drawUI(\n                    offsetX,\n                    offsetY,\n                    glyph.char,\n                    glyph.fg1,\n                    glyph.fg2\n                );\n\n                glyphOffset += 1.5;\n            }\n\n            this.game.renderer.drawText(glyphOffset, offsetY, moniker);\n\n            let statusOffset =\n                this.game.renderer.computeTextWidth(moniker) +\n                glyphOffset +\n                0.5;\n\n            let dotLevel = 0;\n\n            if (entity.status) {\n                entity.status.forEach((status) => {\n                    const statusType = getStatus(status.key);\n\n                    dotLevel += statusType.getPipCount(status.potency);\n\n                    this.game.renderer.drawUI(\n                        statusOffset,\n                        offsetY,\n                        statusType.glyph.ch,\n                        statusType.glyph.fg1,\n                        statusType.glyph.fg2\n                    );\n                    statusOffset++;\n                });\n            }\n\n            dotLevel = Math.min(3, dotLevel);\n\n            if (entity.health) {\n                offsetY++;\n\n                const health = entity.health;\n                const barWidth = 8;\n\n                const prcnt = health.value / health.max;\n                const healthWidth = Math.ceil(prcnt * barWidth * 2) / 2;\n                const middle = Math.floor(barWidth / 2) - 1;\n\n                const primaryHP = '#803636';\n                const secondaryHp = '#352323';\n\n                for (let i = 0; i < barWidth; i++) {\n                    const diff = healthWidth - i;\n                    if (dotLevel && i === middle) {\n                        if (diff === 0.5) {\n                            if (dotLevel === 1) {\n                                this.game.renderer.drawUI(\n                                    i + offsetX,\n                                    offsetY,\n                                    '#',\n                                    primaryHP,\n                                    secondaryHp\n                                );\n                            } else if (dotLevel === 2) {\n                                this.game.renderer.drawUI(\n                                    i + offsetX,\n                                    offsetY,\n                                    '\"',\n                                    primaryHP,\n                                    secondaryHp\n                                );\n                            } else if (dotLevel === 3) {\n                                this.game.renderer.drawUI(\n                                    i + offsetX,\n                                    offsetY,\n                                    '!',\n                                    primaryHP,\n                                    secondaryHp\n                                );\n                            }\n                        } else if (diff > 0) {\n                            if (dotLevel === 1) {\n                                this.game.renderer.drawUI(\n                                    i + offsetX,\n                                    offsetY,\n                                    '‼',\n                                    primaryHP,\n                                    secondaryHp\n                                );\n                            } else if (dotLevel === 2) {\n                                this.game.renderer.drawUI(\n                                    i + offsetX,\n                                    offsetY,\n                                    '↕',\n                                    primaryHP,\n                                    secondaryHp\n                                );\n                            } else if (dotLevel === 3) {\n                                this.game.renderer.drawUI(\n                                    i + offsetX,\n                                    offsetY,\n                                    '◄',\n                                    primaryHP,\n                                    secondaryHp\n                                );\n                            }\n                        } else {\n                            if (dotLevel === 1) {\n                                this.game.renderer.drawUI(\n                                    i + offsetX,\n                                    offsetY,\n                                    '‼',\n                                    secondaryHp,\n                                    primaryHP\n                                );\n                            } else if (dotLevel === 2) {\n                                this.game.renderer.drawUI(\n                                    i + offsetX,\n                                    offsetY,\n                                    '↕',\n                                    secondaryHp,\n                                    primaryHP\n                                );\n                            } else if (dotLevel === 3) {\n                                this.game.renderer.drawUI(\n                                    i + offsetX,\n                                    offsetY,\n                                    '◄',\n                                    secondaryHp,\n                                    primaryHP\n                                );\n                            }\n                        }\n                    } else if (diff === 0.5) {\n                        this.game.renderer.drawUI(\n                            i + offsetX,\n                            offsetY,\n                            ' ',\n                            primaryHP,\n                            secondaryHp\n                        );\n                    } else if (diff > 0) {\n                        this.game.renderer.drawUI(\n                            i + offsetX,\n                            offsetY,\n                            '►',\n                            primaryHP,\n                            secondaryHp\n                        );\n                    } else {\n                        this.game.renderer.drawUI(\n                            i + offsetX,\n                            offsetY,\n                            '►',\n                            secondaryHp\n                        );\n                    }\n                }\n            }\n\n            offsetY++;\n        });\n    }\n\n    update(dt) {\n        if (this.showTicks) {\n            const turn = this.game.clock.turn;\n            const subTurn = `${this.game.clock.subTurn.toFixed(0)}`.padEnd(\n                3,\n                '0'\n            );\n\n            const str = `${turn}.${subTurn}`;\n            const len = Math.ceil(this.game.renderer.computeTextWidth(str));\n            this.game.renderer.drawText(\n                this.game.camera.width - 1 - len,\n                1,\n                str\n            );\n        }\n\n        this.renderNearbyCreatures();\n    }\n}\n","import Manager from '../Manager';\n\nexport default class MouseManager extends Manager {\n    #x = 0;\n    #y = 0;\n    #hasMouse = false;\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get hasMouse() {\n        return this.#hasMouse;\n    }\n\n    updatePosition(x, y) {\n        this.#x = Math.max(0, x);\n        this.#y = Math.max(0, y);\n    }\n\n    updateMouseEnter() {\n        this.#hasMouse = true;\n    }\n\n    updateMouseLeave() {\n        this.#hasMouse = false;\n    }\n}\n","import { INPUT_DOMAIN_DEFAULT } from './InputDomainType';\nimport commands from './commands';\nimport Manager from '../Manager';\n\nexport default class CommandManager extends Manager {\n    _commands = {};\n    _domainStack = [INPUT_DOMAIN_DEFAULT];\n    _inputStack = [];\n\n    constructor(game) {\n        super(game);\n        commands.forEach((cmd) => this.registerCommand(cmd));\n    }\n\n    onInputEvent(evt) {\n        this._inputStack.push(evt);\n    }\n\n    getNextCommand() {\n        const evt = this._inputStack.shift();\n\n        if (evt) {\n            return this.getCommandForInputEvent(evt);\n        }\n    }\n\n    pushDomain(domain) {\n        this._domainStack.push(domain);\n    }\n\n    popDomain(domain) {\n        const index = this._domainStack.lastIndexOf(domain);\n\n        if (index > -1) {\n            this._domainStack.splice(index, 1);\n        }\n    }\n\n    getDomainCommands(domain) {\n        return this._commands[domain] || [];\n    }\n\n    getCommandForInputEvent(evt) {\n        for (let i = this._domainStack.length - 1; i >= 0; i--) {\n            const domain = this._domainStack[i];\n            const cmds = this.getDomainCommands(domain);\n            const cmd = cmds.find((cmd) => cmd.matches(evt));\n\n            if (cmd) {\n                return cmd;\n            }\n        }\n    }\n\n    registerCommand(command) {\n        if (!this._commands[command.domain]) {\n            this._commands[command.domain] = [];\n        }\n\n        this._commands[command.domain].push(command);\n    }\n}\n","export const INPUT_DOMAIN_DEFAULT = 0;\nexport const INPUT_DOMAIN_MAIN_MENU = 1;\nexport const INPUT_DOMAIN_ADVENTURE = 2;\nexport const INPUT_DOMAIN_LOOK = 3;\nexport const INPUT_DOMAIN_LIST = 4;\n","import {\n    INPUT_DOMAIN_MAIN_MENU,\n    INPUT_DOMAIN_DEFAULT,\n    INPUT_DOMAIN_ADVENTURE,\n} from './InputDomainType';\nimport InputCommand from './InputCommand';\nimport {\n    INPUT_CMD_WAIT,\n    INPUT_CMD_MOVE_NW,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_NE,\n    INPUT_CMD_MOVE_W,\n    INPUT_CMD_MOVE_E,\n    INPUT_CMD_MOVE_SW,\n    INPUT_CMD_MOVE_S,\n    INPUT_CMD_MOVE_SE,\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_SAVE,\n    INPUT_CMD_LOAD,\n    INPUT_CMD_LOOK,\n    INPUT_CMD_INTERACT,\n    INPUT_CMD_PICK_UP,\n    INPUT_CMD_INVENTORY,\n    INPUT_CMD_EQUIPMENT,\n    INPUT_CMD_CHARACTER,\n    INPUT_CMD_SELECT_NW,\n    INPUT_CMD_SELECT_N,\n    INPUT_CMD_SELECT_NE,\n    INPUT_CMD_SELECT_W,\n    INPUT_CMD_SELECT_E,\n    INPUT_CMD_SELECT_SW,\n    INPUT_CMD_SELECT_S,\n    INPUT_CMD_SELECT_SE,\n    INPUT_CMD_NEW_GAME,\n    INPUT_CMD_ABILITIES,\n} from './InputCommandType';\nimport {\n    KEY_S,\n    KEY_Q,\n    KEY_W,\n    KEY_E,\n    KEY_A,\n    KEY_D,\n    KEY_Z,\n    KEY_X,\n    KEY_C,\n    KEY_ENTER,\n    KEY_ESCAPE,\n    KEY_UP,\n    KEY_LEFT,\n    KEY_RIGHT,\n    KEY_DOWN,\n    KEY_SPACE,\n    KEY_L,\n    KEY_I,\n    KEY_G,\n    KEY_J,\n    KEY_N,\n    KEY_P,\n    KEY_Y,\n    KEY_T,\n} from './KeyCodes';\n\nconst cmd = (domain, type, name, isKeyboard, key, shift, ctrl, alt, meta) =>\n    new InputCommand({\n        domain,\n        type,\n        name,\n        isKeyboard,\n        key,\n        shift,\n        ctrl,\n        alt,\n        meta,\n    });\n\n// prettier-ignore\nexport default [\n    // DOMAIN                   CMD                             NAME                      KB    KEY           SHIFT  CTRL   ALT    META\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CONFIRM,              'confirm',                true, KEY_ENTER,    false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CONFIRM,              'confirm2',               true, KEY_SPACE,    false, true,  false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CANCEL,               'cancel',                 true, KEY_ESCAPE,   false, false, false, false),\n    cmd(INPUT_DOMAIN_MAIN_MENU, INPUT_CMD_SAVE,                 'save',                   true, KEY_S,        false, true,  false, false),\n    cmd(INPUT_DOMAIN_MAIN_MENU, INPUT_CMD_LOAD,                 'load',                   true, KEY_L,        false, true,  false, false),\n    cmd(INPUT_DOMAIN_MAIN_MENU, INPUT_CMD_NEW_GAME,             'new game',               true, KEY_N,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_WAIT,                 'wait',                   true, KEY_S,        false, false, false, false),\n\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_NW,              'move nw',                true, KEY_Q,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_N,               'move n',                 true, KEY_W,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_N,               'move n2',                true, KEY_UP,       false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_NE,              'move ne',                true, KEY_E,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_W,               'move w',                 true, KEY_A,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_W,               'move w2',                true, KEY_LEFT,     false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_E,               'move e',                 true, KEY_D,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_E,               'move e2',                true, KEY_RIGHT,    false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_SW,              'move sw',                true, KEY_Z,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_S,               'move s',                 true, KEY_X,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_S,               'move s2',                true, KEY_DOWN,     false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_SE,              'move se',                true, KEY_C,        false, false, false, false),\n\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_NW,            'select nw',              true, KEY_Q,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_N,             'select n',               true, KEY_W,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_N,             'select n2',              true, KEY_UP,       true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_NE,            'select ne',              true, KEY_E,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_W,             'select w',               true, KEY_A,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_W,             'select w2',              true, KEY_LEFT,     true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_E,             'select e',               true, KEY_D,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_E,             'select e2',              true, KEY_RIGHT,    true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_SW,            'select sw',              true, KEY_Z,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_S,             'select s',               true, KEY_X,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_S,             'select s2',              true, KEY_DOWN,     true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_SE,            'select se',              true, KEY_C,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_INTERACT,             'select',                 true, KEY_S,        true,  false, false, false),\n\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_LOOK,                 'look',                   true, KEY_L,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_PICK_UP,              'pick up',                true, KEY_G,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_INTERACT,             'interact',               true, KEY_J,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_INVENTORY,            'inventory',              true, KEY_I,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_EQUIPMENT,            'equipment',              true, KEY_P,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_CHARACTER,            'character',              true, KEY_Y,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_ABILITIES,            'abilities',              true, KEY_T,        false, false, false, false),\n];\n","import InputKeyboardEvent from './events/InputEvent';\n\nexport default class InputCommand {\n    constructor(data) {\n        this.domain = data.domain;\n        this.type = data.type;\n        this.name = data.name;\n        this.isKeyboard = data.isKeyboard;\n        this.key = data.key;\n        this.shift = data.shift;\n        this.ctrl = data.ctrl;\n        this.alt = data.alt;\n        this.meta = data.meta;\n    }\n\n    matches(inputEvent) {\n        const isKeyboard = inputEvent instanceof InputKeyboardEvent;\n\n        return (\n            this.isKeyboard == isKeyboard &&\n            this.key == inputEvent.key &&\n            this.shift == inputEvent.shift &&\n            this.ctrl == inputEvent.ctrl &&\n            this.alt == inputEvent.alt &&\n            this.meta == inputEvent.meta\n        );\n    }\n}\n","export const INPUT_CMD_MOVE_NW = 0;\nexport const INPUT_CMD_MOVE_N = 1;\nexport const INPUT_CMD_MOVE_NE = 2;\nexport const INPUT_CMD_MOVE_W = 3;\nexport const INPUT_CMD_MOVE_E = 4;\nexport const INPUT_CMD_MOVE_SW = 5;\nexport const INPUT_CMD_MOVE_S = 6;\nexport const INPUT_CMD_MOVE_SE = 7;\n\nexport const INPUT_CMD_WAIT = 8;\nexport const INPUT_CMD_CONFIRM = 9;\nexport const INPUT_CMD_CANCEL = 10;\nexport const INPUT_CMD_SAVE = 11;\nexport const INPUT_CMD_LOAD = 12;\nexport const INPUT_CMD_LOOK = 13;\n\nexport const INPUT_CMD_PICK_UP = 16;\nexport const INPUT_CMD_INTERACT = 17;\nexport const INPUT_CMD_INVENTORY = 19;\n\nexport const INPUT_CMD_SELECT_NW = 20;\nexport const INPUT_CMD_SELECT_N = 21;\nexport const INPUT_CMD_SELECT_NE = 22;\nexport const INPUT_CMD_SELECT_W = 23;\nexport const INPUT_CMD_SELECT_E = 24;\nexport const INPUT_CMD_SELECT_SW = 25;\nexport const INPUT_CMD_SELECT_S = 26;\nexport const INPUT_CMD_SELECT_SE = 27;\nexport const INPUT_CMD_NEW_GAME = 28;\n\nexport const INPUT_CMD_EQUIPMENT = 29;\nexport const INPUT_CMD_CHARACTER = 30;\nexport const INPUT_CMD_ABILITIES = 31;\n","export const KEY_CANCEL = 3;\nexport const KEY_HELP = 6;\nexport const KEY_BACK_SPACE = 8;\nexport const KEY_TAB = 9;\nexport const KEY_CLEAR = 12;\nexport const KEY_ENTER = 13;\nexport const KEY_ENTER_SPECIAL = 14;\nexport const KEY_SHIFT = 16;\nexport const KEY_CONTROL = 17;\nexport const KEY_ALT = 18;\nexport const KEY_PAUSE = 19;\nexport const KEY_CAPS_LOCK = 20;\nexport const KEY_KANA = 21;\nexport const KEY_EISU = 22;\nexport const KEY_JUNJA = 23;\nexport const KEY_FINAL = 24;\nexport const KEY_HANJA = 25;\nexport const KEY_ESCAPE = 27;\nexport const KEY_CONVERT = 28;\nexport const KEY_NONCONVERT = 29;\nexport const KEY_ACCEPT = 30;\nexport const KEY_MODECHANGE = 31;\nexport const KEY_SPACE = 32;\nexport const KEY_PAGE_UP = 33;\nexport const KEY_PAGE_DOWN = 34;\nexport const KEY_END = 35;\nexport const KEY_HOME = 36;\nexport const KEY_LEFT = 37;\nexport const KEY_UP = 38;\nexport const KEY_RIGHT = 39;\nexport const KEY_DOWN = 40;\nexport const KEY_SELECT = 41;\nexport const KEY_PRINT = 42;\nexport const KEY_EXECUTE = 43;\nexport const KEY_PRINTSCREEN = 44;\nexport const KEY_INSERT = 45;\nexport const KEY_DELETE = 46;\nexport const KEY_NUM_0 = 48;\nexport const KEY_NUM_1 = 49;\nexport const KEY_NUM_2 = 50;\nexport const KEY_NUM_3 = 51;\nexport const KEY_NUM_4 = 52;\nexport const KEY_NUM_5 = 53;\nexport const KEY_NUM_6 = 54;\nexport const KEY_NUM_7 = 55;\nexport const KEY_NUM_8 = 56;\nexport const KEY_NUM_9 = 57;\nexport const KEY_COLON = 58;\nexport const KEY_SEMICOLON = 59;\nexport const KEY_LESS_THAN = 60;\nexport const KEY_EQUALS = 61;\nexport const KEY_GREATER_THAN = 62;\nexport const KEY_QUESTION_MARK = 63;\nexport const KEY_AT = 64;\nexport const KEY_A = 65;\nexport const KEY_B = 66;\nexport const KEY_C = 67;\nexport const KEY_D = 68;\nexport const KEY_E = 69;\nexport const KEY_F = 70;\nexport const KEY_G = 71;\nexport const KEY_H = 72;\nexport const KEY_I = 73;\nexport const KEY_J = 74;\nexport const KEY_K = 75;\nexport const KEY_L = 76;\nexport const KEY_M = 77;\nexport const KEY_N = 78;\nexport const KEY_O = 79;\nexport const KEY_P = 80;\nexport const KEY_Q = 81;\nexport const KEY_R = 82;\nexport const KEY_S = 83;\nexport const KEY_T = 84;\nexport const KEY_U = 85;\nexport const KEY_V = 86;\nexport const KEY_W = 87;\nexport const KEY_X = 88;\nexport const KEY_Y = 89;\nexport const KEY_Z = 90;\nexport const KEY_META = 91; // windows key (windows) or command key (mac)\nexport const KEY_CONTEXT_MENU = 93;\nexport const KEY_SLEEP = 95;\nexport const KEY_NUMPAD_0 = 96;\nexport const KEY_NUMPAD_1 = 97;\nexport const KEY_NUMPAD_2 = 98;\nexport const KEY_NUMPAD_3 = 99;\nexport const KEY_NUMPAD_4 = 100;\nexport const KEY_NUMPAD_5 = 101;\nexport const KEY_NUMPAD_6 = 102;\nexport const KEY_NUMPAD_7 = 103;\nexport const KEY_NUMPAD_8 = 104;\nexport const KEY_NUMPAD_9 = 105;\nexport const KEY_MULTIPLY = 106;\nexport const KEY_ADD = 107;\nexport const KEY_SEPARATOR = 108;\nexport const KEY_SUBTRACT = 109;\nexport const KEY_DECIMAL = 110;\nexport const KEY_DIVIDE = 111;\nexport const KEY_F1 = 112;\nexport const KEY_F2 = 113;\nexport const KEY_F3 = 114;\nexport const KEY_F4 = 115;\nexport const KEY_F5 = 116;\nexport const KEY_F6 = 117;\nexport const KEY_F7 = 118;\nexport const KEY_F8 = 119;\nexport const KEY_F9 = 120;\nexport const KEY_F10 = 121;\nexport const KEY_F11 = 122;\nexport const KEY_F12 = 123;\nexport const KEY_F13 = 124;\nexport const KEY_F14 = 125;\nexport const KEY_F15 = 126;\nexport const KEY_F16 = 127;\nexport const KEY_F17 = 128;\nexport const KEY_F18 = 129;\nexport const KEY_F19 = 130;\nexport const KEY_F20 = 131;\nexport const KEY_F21 = 132;\nexport const KEY_F22 = 133;\nexport const KEY_F23 = 134;\nexport const KEY_F24 = 135;\nexport const KEY_NUM_LOCK = 144;\nexport const KEY_SCROLL_LOCK = 145;\nexport const KEY_WIN_OEM_FJ_JISHO = 146;\nexport const KEY_WIN_OEM_FJ_MASSHOU = 147;\nexport const KEY_WIN_OEM_FJ_TOUROKU = 148;\nexport const KEY_WIN_OEM_FJ_LOYA = 149;\nexport const KEY_WIN_OEM_FJ_ROYA = 150;\nexport const KEY_CIRCUMFLEX = 160;\nexport const KEY_EXCLAMATION = 161;\nexport const KEY_DOUBLE_QUOTE = 162;\nexport const KEY_HASH = 163;\nexport const KEY_DOLLAR = 164;\nexport const KEY_PERCENT = 165;\nexport const KEY_AMPERSAND = 166;\nexport const KEY_UNDERSCORE = 167;\nexport const KEY_OPEN_PAREN = 168;\nexport const KEY_CLOSE_PAREN = 169;\nexport const KEY_ASTERISK = 170;\nexport const KEY_PLUS = 171;\nexport const KEY_PIPE = 172;\nexport const KEY_HYPHEN_MINUS = 173;\nexport const KEY_OPEN_CURLY_BRACKET = 174;\nexport const KEY_CLOSE_CURLY_BRACKET = 175;\nexport const KEY_TILDE = 176;\nexport const KEY_VOLUME_MUTE = 181;\nexport const KEY_VOLUME_DOWN = 182;\nexport const KEY_VOLUME_UP = 183;\nexport const KEY_SEMICOLON_2 = 186;\nexport const KEY_EQUALS_2 = 187;\nexport const KEY_COMMA = 188;\nexport const KEY_MINUS = 189;\nexport const KEY_PERIOD = 190;\nexport const KEY_SLASH = 191;\nexport const KEY_BACK_QUOTE = 192;\nexport const KEY_OPEN_BRACKET = 219;\nexport const KEY_BACK_SLASH = 220;\nexport const KEY_CLOSE_BRACKET = 221;\nexport const KEY_QUOTE = 222;\nexport const KEY_META_2 = 224;\nexport const KEY_ALTGR = 225;\nexport const KEY_WIN_ICO_HELP = 227;\nexport const KEY_WIN_ICO_00 = 228;\nexport const KEY_WIN_ICO_CLEAR = 230;\nexport const KEY_WIN_OEM_RESET = 233;\nexport const KEY_WIN_OEM_JUMP = 234;\nexport const KEY_WIN_OEM_PA1 = 235;\nexport const KEY_WIN_OEM_PA2 = 236;\nexport const KEY_WIN_OEM_PA3 = 237;\nexport const KEY_WIN_OEM_WSCTRL = 238;\nexport const KEY_WIN_OEM_CUSEL = 239;\nexport const KEY_WIN_OEM_ATTN = 240;\nexport const KEY_WIN_OEM_FINISH = 241;\nexport const KEY_WIN_OEM_COPY = 242;\nexport const KEY_WIN_OEM_AUTO = 243;\nexport const KEY_WIN_OEM_ENLW = 244;\nexport const KEY_WIN_OEM_BACKTAB = 245;\nexport const KEY_ATTN = 246;\nexport const KEY_CRSEL = 247;\nexport const KEY_EXSEL = 248;\nexport const KEY_EREOF = 249;\nexport const KEY_PLAY = 250;\nexport const KEY_ZOOM = 251;\nexport const KEY_PA1 = 253;\nexport const KEY_WIN_OEM_CLEAR = 254;\n","import {\n    SCREEN_MAIN_MENU,\n    SCREEN_ADVENTURE,\n    SCREEN_DEATH,\n    SCREEN_INVENTORY,\n    SCREEN_INTERACT_MODAL,\n    SCREEN_CURSOR,\n    SCREEN_LOAD_SECTOR,\n    SCREEN_EQUIPMENT,\n    SCREEN_LIST_SELECT,\n    SCREEN_CHARACTER,\n    SCREEN_ABILITIES,\n    SCREEN_CONFIRM,\n    SCREEN_WAIT,\n    SCREEN_CHANNEL,\n} from './ScreenType';\nimport AdventureScreen from './screens/AdventureScreen';\nimport MainMenuScreen from './screens/MainMenuScreen';\nimport DeathScreen from './screens/DeathScreen';\nimport Manager from '../Manager';\nimport InventoryScreen from './screens/InventoryScreen';\nimport InteractModalScreen from './screens/InteractModalScreen';\nimport CursorScreen from './screens/CursorScreen';\nimport LoadSectorScreen from './screens/LoadSectorScreen';\nimport EquipmentScreen from './screens/EquipmentScreen';\nimport ListSelectionScreen from './screens/ListSelectionScreen';\nimport CharacterScreen from './screens/CharacterScreen';\nimport AbilityScreen from './screens/AbilityScreen';\nimport ConfirmationScreen from './screens/ConfirmationScreen';\nimport WaitScreen from './screens/WaitScreen';\nimport ChannelScreen from './screens/ChannelScreen';\n\nexport default class ScreenManager extends Manager {\n    #screens = {};\n    #screenStack = [];\n\n    constructor(game) {\n        super(game);\n        this.#screens = {\n            [SCREEN_MAIN_MENU]: new MainMenuScreen(game),\n            [SCREEN_ADVENTURE]: new AdventureScreen(game),\n            [SCREEN_DEATH]: new DeathScreen(game),\n            [SCREEN_INVENTORY]: new InventoryScreen(game),\n            [SCREEN_INTERACT_MODAL]: new InteractModalScreen(game),\n            [SCREEN_CURSOR]: new CursorScreen(game),\n            [SCREEN_LOAD_SECTOR]: new LoadSectorScreen(game),\n            [SCREEN_EQUIPMENT]: new EquipmentScreen(game),\n            [SCREEN_LIST_SELECT]: new ListSelectionScreen(game),\n            [SCREEN_CHARACTER]: new CharacterScreen(game),\n            [SCREEN_ABILITIES]: new AbilityScreen(game),\n            [SCREEN_CONFIRM]: new ConfirmationScreen(game),\n            [SCREEN_WAIT]: new WaitScreen(game),\n            [SCREEN_CHANNEL]: new ChannelScreen(game),\n        };\n        this.setScreen(SCREEN_MAIN_MENU);\n    }\n\n    get screenType() {\n        return this.#screenStack[this.#screenStack.length - 1].type;\n    }\n\n    get screenCtx() {\n        return this.#screenStack[this.#screenStack.length - 1].ctx;\n    }\n\n    get screen() {\n        return this.#screens[this.screenType];\n    }\n\n    setScreen(screenType, ctx = {}) {\n        while (this.#screenStack.length > 0) {\n            this.screen.onLeave(ctx);\n            this.#screenStack.pop();\n        }\n\n        this.#screenStack.push({\n            type: screenType,\n            ctx,\n        });\n        this.screen.onEnter(this.screenCtx);\n    }\n\n    replaceScreen(screenType, ctx = {}) {\n        this.screen.onLeave(ctx);\n        this.#screenStack.pop();\n        this.#screenStack.push({\n            type: screenType,\n            ctx,\n        });\n        this.screen.onEnter(this.screenCtx);\n    }\n\n    pushScreen(screenType, ctx = {}) {\n        this.screen.onLeave(ctx);\n        this.#screenStack.push({\n            type: screenType,\n            ctx,\n        });\n        this.screen.onEnter(this.screenCtx);\n    }\n\n    popScreen(ctx = {}) {\n        this.screen.onLeave(ctx);\n        this.#screenStack.pop();\n        this.screen.onEnter(this.screenCtx);\n    }\n\n    update(dt) {\n        this.screen.onUpdate(dt);\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_NE,\n    INPUT_CMD_MOVE_W,\n    INPUT_CMD_WAIT,\n    INPUT_CMD_MOVE_E,\n    INPUT_CMD_MOVE_SW,\n    INPUT_CMD_MOVE_S,\n    INPUT_CMD_MOVE_SE,\n    INPUT_CMD_MOVE_NW,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_SAVE,\n    INPUT_CMD_LOAD,\n    INPUT_CMD_LOOK,\n    INPUT_CMD_INTERACT,\n    INPUT_CMD_PICK_UP,\n    INPUT_CMD_INVENTORY,\n    INPUT_CMD_SELECT_NW,\n    INPUT_CMD_SELECT_N,\n    INPUT_CMD_SELECT_NE,\n    INPUT_CMD_SELECT_W,\n    INPUT_CMD_SELECT_E,\n    INPUT_CMD_SELECT_SW,\n    INPUT_CMD_SELECT_S,\n    INPUT_CMD_SELECT_SE,\n    INPUT_CMD_EQUIPMENT,\n    INPUT_CMD_CHARACTER,\n    INPUT_CMD_ABILITIES,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_ADVENTURE } from '../../input/InputDomainType';\nimport {\n    DIR_N,\n    DIR_W,\n    DIR_E,\n    DIR_S,\n    DIR_NW,\n    DIR_SW,\n    DIR_SE,\n    DIR_NE,\n    directionDelta,\n} from '../../../enums/Directions';\nimport {\n    SCREEN_CURSOR,\n    SCREEN_EQUIPMENT,\n    SCREEN_INTERACT_MODAL,\n    SCREEN_INVENTORY,\n    SCREEN_CHARACTER,\n    SCREEN_LIST_SELECT,\n    SCREEN_MAIN_MENU,\n    SCREEN_ABILITIES,\n} from '../ScreenType';\nimport { Door, Loot } from '../../../ecs/components';\nimport { simpleCursorRenderer } from '../../../utils/cursor/SimpleCursorRenderer';\n\nexport default class AdventureScreen extends Screen {\n    onEnter() {\n        this.game.commands.pushDomain(INPUT_DOMAIN_ADVENTURE);\n        this.game.FOVSystem.computeFOV();\n\n        const position = this.game.player.position;\n\n        this.game.camera.setFocus(position.x, position.y);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_ADVENTURE);\n    }\n\n    onDirectionInput(dir) {\n        const delta = directionDelta(dir);\n        const playerPosition = this.game.player.position;\n        const targetPosition = {\n            x: playerPosition.x + delta.x,\n            y: playerPosition.y + delta.y,\n        };\n        const entities = this.game.map.getEntitiesAt(\n            targetPosition.x,\n            targetPosition.y\n        );\n\n        const hostileEntities = entities.filter((e) =>\n            this.game.factions.areEntitiesHostile(e, this.game.player.entity)\n        );\n\n        if (hostileEntities.length > 0) {\n            this.game.player.melee(hostileEntities[0]);\n        } else {\n            const doorEntity = entities.find((e) => e.has(Door));\n\n            if (doorEntity && !doorEntity.door.isOpen) {\n                doorEntity.fireEvent('try-open-door', {\n                    interactor: this.game.player.entity,\n                });\n            } else {\n                this.game.player.move(dir);\n            }\n        }\n    }\n\n    onPickUpCommand() {\n        const position = this.game.player.position;\n        const entities = this.game.map.getEntitiesAt(position.x, position.y);\n\n        const lootable = entities.find((entity) => entity.has(Loot));\n\n        if (lootable) {\n            lootable.fireEvent('try-pick-up', {\n                interactor: this.game.player.entity,\n            });\n        } else {\n            console.log('there is nothing here to pick up.');\n        }\n    }\n\n    onInteract(x, y) {\n        const entities = this.game.map\n            .getEntitiesAt(x, y)\n            .filter((e) => !e.isPlayer);\n\n        const items = entities.filter((entity) => {\n            const evt = entity.fireEvent('get-interactions', {\n                interactor: this.game.player.entity,\n                interactions: [],\n            });\n\n            return evt.data.interactions.length > 0;\n        });\n\n        if (items.length <= 0) {\n            return;\n        }\n\n        if (items.length == 1) {\n            this.game.screens.pushScreen(SCREEN_INTERACT_MODAL, {\n                interactor: this.game.player.entity,\n                interactable: items[0],\n            });\n            return;\n        }\n\n        items.sort((a, b) => (a.glyph.z < b.glyph.z ? 1 : -1));\n\n        game.screens.pushScreen(SCREEN_LIST_SELECT, {\n            header: `Ground`,\n            leadText: 'Select an item to interact',\n            list: items,\n            onRenderRow: (item, x, y, isSelected) => {\n                const text = ` ${item.moniker.display}`;\n\n                this.game.renderer.draw(\n                    x + 1,\n                    y,\n                    item.glyph.char,\n                    item.glyph.primary,\n                    item.glyph.secondary,\n                    item.glyph.background\n                );\n\n                if (isSelected) {\n                    this.game.renderer.drawText(x, y, '→', 'yellow');\n                    this.game.renderer.drawText(x + 2, y, text, 'yellow');\n                } else {\n                    this.game.renderer.drawText(x, y, '-');\n                    this.game.renderer.drawText(x + 2, y, text);\n                }\n            },\n            onSelect: (item) => {\n                this.game.screens.replaceScreen(SCREEN_INTERACT_MODAL, {\n                    interactor: this.game.player.entity,\n                    interactable: item,\n                });\n            },\n        });\n    }\n\n    onInteractDirection(dir) {\n        const delta = directionDelta(dir);\n        const playerPosition = this.game.player.position;\n        const targetPosition = {\n            x: playerPosition.x + delta.x,\n            y: playerPosition.y + delta.y,\n        };\n\n        this.onInteract(targetPosition.x, targetPosition.y);\n    }\n\n    handleInput() {\n        const cmd = this.game.commands.getNextCommand();\n\n        if (!cmd) {\n            return;\n        }\n\n        if (cmd.type === INPUT_CMD_SAVE) {\n            this.game.state.saveGame();\n        }\n        if (cmd.type === INPUT_CMD_LOAD) {\n            this.game.state.loadGame();\n        }\n        if (cmd.type === INPUT_CMD_LOOK) {\n            game.screens.pushScreen(SCREEN_CURSOR, {\n                drawTags: true,\n                drawFaction: true,\n                drawTemperature: true,\n                renderer: simpleCursorRenderer(),\n                onResult: () => game.screens.popScreen(),\n                onCancel: () => game.screens.popScreen(),\n            });\n        }\n        if (cmd.type === INPUT_CMD_PICK_UP) {\n            this.onPickUpCommand();\n        }\n        if (cmd.type === INPUT_CMD_INTERACT) {\n            const pos = this.game.player.position;\n\n            this.onInteract(pos.x, pos.y);\n        }\n        if (cmd.type === INPUT_CMD_INVENTORY) {\n            this.game.screens.pushScreen(SCREEN_INVENTORY, {\n                accessible: this.game.player.entity,\n                accessor: this.game.player.entity,\n            });\n        }\n        if (cmd.type === INPUT_CMD_ABILITIES) {\n            this.game.screens.pushScreen(SCREEN_ABILITIES, {\n                character: this.game.player.entity,\n            });\n        }\n        if (cmd.type === INPUT_CMD_EQUIPMENT) {\n            this.game.screens.pushScreen(SCREEN_EQUIPMENT, {\n                accessor: this.game.player.entity,\n            });\n        }\n        if (cmd.type === INPUT_CMD_CHARACTER) {\n            this.game.screens.pushScreen(SCREEN_CHARACTER, {\n                character: this.game.player.entity,\n            });\n        }\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.game.screens.setScreen(SCREEN_MAIN_MENU);\n        }\n        if (cmd.type === INPUT_CMD_WAIT) {\n            this.game.player.wait();\n        }\n        if (cmd.type === INPUT_CMD_MOVE_NW) {\n            this.onDirectionInput(DIR_NW);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.onDirectionInput(DIR_N);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_NE) {\n            this.onDirectionInput(DIR_NE);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_W) {\n            this.onDirectionInput(DIR_W);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_E) {\n            this.onDirectionInput(DIR_E);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_SW) {\n            this.onDirectionInput(DIR_SW);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.onDirectionInput(DIR_S);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_SE) {\n            this.onDirectionInput(DIR_SE);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_NW) {\n            this.onInteractDirection(DIR_NW);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_N) {\n            this.onInteractDirection(DIR_N);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_NE) {\n            this.onInteractDirection(DIR_NE);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_W) {\n            this.onInteractDirection(DIR_W);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_E) {\n            this.onInteractDirection(DIR_E);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_SW) {\n            this.onInteractDirection(DIR_SW);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_S) {\n            this.onInteractDirection(DIR_S);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_SE) {\n            this.onInteractDirection(DIR_SE);\n        }\n    }\n\n    onUpdate(dt) {\n        this.handleInput();\n        this.game.updateAdventureSystems(dt);\n    }\n}\n","export default class Screen {\n    #game;\n\n    get game() {\n        return this.#game;\n    }\n\n    constructor(game) {\n        this.#game = game;\n    }\n\n    onEnter() {}\n\n    onLeave() {}\n\n    onUpdate(dt) {}\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_SAVE,\n    INPUT_CMD_LOAD,\n    INPUT_CMD_NEW_GAME,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport { SCREEN_ADVENTURE } from '../ScreenType';\nimport {\n    UI_GLYPH_BORDER_T,\n    UI_GLYPH_BORDER_TERM_L,\n    UI_GLYPH_BORDER_TERM_R,\n} from '../../../enums/UIGlyphs';\nimport { UI_BORDER_FG1, UI_BORDER_FG2 } from '../../../utils/UIWindowUtil';\n\nexport default class MainMenuScreen extends Screen {\n    onEnter() {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n\n        if (!this.game.state.isStarted) {\n            this.game.music.play('BARDS_TALE');\n        }\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    onConfirm() {\n        if (this.game.state.isStarted) {\n            this.game.screens.setScreen(SCREEN_ADVENTURE);\n        } else {\n            this.game.state.newGame();\n        }\n    }\n\n    inputCommand() {\n        const cmd = this.game.commands.getNextCommand();\n\n        if (!cmd) {\n            return;\n        }\n\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.onConfirm();\n        }\n\n        if (cmd.type === INPUT_CMD_SAVE) {\n            this.game.state.saveGame();\n        }\n\n        if (cmd.type === INPUT_CMD_LOAD) {\n            this.game.state.loadGame();\n        }\n\n        if (cmd.type === INPUT_CMD_NEW_GAME) {\n            this.game.state.newGame();\n        }\n    }\n\n    onUpdate(dt) {\n        this.inputCommand();\n        this.game.renderer.clear();\n        this.game.renderer.draw(2, 1, '@', '#adb8bc', '#66a3dc');\n        this.game.renderer.drawText(3, 1, ` Sleepy Crawler`, '#66a3dc');\n\n        for (let i = 1; i < this.game.camera.width - 1; i++) {\n            if (i === 1) {\n                this.game.renderer.drawUI(\n                    i,\n                    2,\n                    UI_GLYPH_BORDER_TERM_L,\n                    UI_BORDER_FG1,\n                    UI_BORDER_FG2\n                );\n            } else if (i === this.game.camera.width - 2) {\n                this.game.renderer.drawUI(\n                    i,\n                    2,\n                    UI_GLYPH_BORDER_TERM_R,\n                    UI_BORDER_FG1,\n                    UI_BORDER_FG2\n                );\n            } else {\n                this.game.renderer.drawUI(\n                    i,\n                    2,\n                    UI_GLYPH_BORDER_T,\n                    UI_BORDER_FG1,\n                    UI_BORDER_FG2\n                );\n            }\n        }\n\n        this.game.renderer.drawText(2, 4, `∙ Movement`);\n        this.game.renderer.drawText(3, 6, `▬Q  ↑W  ↨E`);\n        this.game.renderer.drawText(3, 7, `←A      →D`);\n        this.game.renderer.drawText(3, 8, `∟Z  ↓X  ↔C`);\n        this.game.renderer.drawText(\n            3,\n            10,\n            `hold [SHIFT] and a direction to interact`\n        );\n\n        this.game.renderer.drawText(2, 12, `∙ Look [L]`);\n        this.game.renderer.drawText(2, 13, `∙ Inventory [I]`);\n        this.game.renderer.drawText(2, 14, `∙ Player Character [P]`);\n        this.game.renderer.drawText(2, 15, `∙ Equipment [Y]`);\n        this.game.renderer.drawText(2, 16, `∙ Abilities [T]`);\n        this.game.renderer.drawText(2, 17, `∙ Confirm [ENTER]`);\n        this.game.renderer.drawText(2, 18, `∙ Cancel [ESC]`);\n\n        this.game.renderer.drawTextCenter(20, `set out into the forest...`);\n        this.game.renderer.drawTextCenter(22, `press [ENTER]`, '#213942');\n    }\n}\n","export const UI_GLYPH_BORDER_TL = '╨';\nexport const UI_GLYPH_BORDER_T = '╤';\nexport const UI_GLYPH_BORDER_TR = '╥';\nexport const UI_GLYPH_BORDER_L = 'α';\nexport const UI_GLYPH_BORDER_R = 'Γ';\nexport const UI_GLYPH_BORDER_BL = '≡';\nexport const UI_GLYPH_BORDER_B = '±';\nexport const UI_GLYPH_BORDER_BR = '≥';\nexport const UI_GLYPH_BORDER_TERM_R = '╙';\nexport const UI_GLYPH_BORDER_TERM_L = 'π';\n","import { game } from '../core/Game';\nimport {\n    UI_GLYPH_BORDER_T,\n    UI_GLYPH_BORDER_B,\n    UI_GLYPH_BORDER_L,\n    UI_GLYPH_BORDER_R,\n    UI_GLYPH_BORDER_TL,\n    UI_GLYPH_BORDER_TR,\n    UI_GLYPH_BORDER_BL,\n    UI_GLYPH_BORDER_BR,\n    UI_GLYPH_BORDER_TERM_R,\n    UI_GLYPH_BORDER_TERM_L,\n} from '../enums/UIGlyphs';\n\nexport const UI_BORDER_FG1 = '#405362';\nexport const UI_BORDER_FG2 = '#979545';\n\nexport const drawUIBox = (x, y, width, height) => {\n    game.renderer.clearArea(x, y, width + 1, height + 1);\n\n    for (let i = x; i < x + width; i++) {\n        game.renderer.drawUI(\n            i,\n            y,\n            UI_GLYPH_BORDER_T,\n            UI_BORDER_FG1,\n            UI_BORDER_FG2\n        );\n        game.renderer.drawUI(\n            i,\n            y + height,\n            UI_GLYPH_BORDER_B,\n            UI_BORDER_FG1,\n            UI_BORDER_FG2\n        );\n    }\n\n    for (let i = y; i < y + height; i++) {\n        game.renderer.drawUI(\n            x,\n            i,\n            UI_GLYPH_BORDER_L,\n            UI_BORDER_FG1,\n            UI_BORDER_FG2\n        );\n        game.renderer.drawUI(\n            x + width,\n            i,\n            UI_GLYPH_BORDER_R,\n            UI_BORDER_FG1,\n            UI_BORDER_FG2\n        );\n    }\n\n    game.renderer.drawUI(\n        x,\n        y,\n        UI_GLYPH_BORDER_TL,\n        UI_BORDER_FG1,\n        UI_BORDER_FG2\n    );\n    game.renderer.drawUI(\n        x + width,\n        y,\n        UI_GLYPH_BORDER_TR,\n        UI_BORDER_FG1,\n        UI_BORDER_FG2\n    );\n    game.renderer.drawUI(\n        x,\n        y + height,\n        UI_GLYPH_BORDER_BL,\n        UI_BORDER_FG1,\n        UI_BORDER_FG2\n    );\n    game.renderer.drawUI(\n        x + width,\n        y + height,\n        UI_GLYPH_BORDER_BR,\n        UI_BORDER_FG1,\n        UI_BORDER_FG2\n    );\n};\n\nexport const drawUIWindow = (x, y, width, height, title, icon) => {\n    drawUIBox(x, y, width, height);\n\n    const titleText = icon ? ` ${title}` : title;\n    const titleWidth = Math.ceil(game.renderer.computeTextWidth(titleText));\n\n    const titleOffset = x + 2;\n    const iconWidth = icon ? 1 : 0;\n\n    game.renderer.drawUI(\n        titleOffset - 1,\n        y,\n        UI_GLYPH_BORDER_TERM_R,\n        UI_BORDER_FG1,\n        UI_BORDER_FG2\n    );\n    game.renderer.drawUI(\n        titleOffset + iconWidth + titleWidth,\n        y,\n        UI_GLYPH_BORDER_TERM_L,\n        UI_BORDER_FG1,\n        UI_BORDER_FG2\n    );\n\n    if (icon) {\n        game.renderer.draw(\n            titleOffset,\n            y,\n            icon.char,\n            icon.primary,\n            icon.secondary,\n            icon.background\n        );\n    }\n\n    game.renderer.drawText(titleOffset + iconWidth, y, titleText);\n};\n","import Screen from './Screen';\nimport { INPUT_CMD_CONFIRM } from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport { SCREEN_MAIN_MENU } from '../ScreenType';\n\nexport default class DeathScreen extends Screen {\n    onEnter() {\n        this.game.state.gameOver();\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    handleInput() {\n        const cmd = this.game.commands.getNextCommand();\n\n        if (!cmd) {\n            return;\n        }\n\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.game.screens.setScreen(SCREEN_MAIN_MENU);\n        }\n    }\n\n    onUpdate(dt) {\n        this.handleInput();\n        this.game.renderSystem.update(dt);\n\n        const text = 'you have succumbed to the forest';\n\n        this.game.renderer.drawTextCenter(10, text, '#ce5454', '#ce5454');\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_S,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport { SCREEN_INTERACT_MODAL } from '../ScreenType';\nimport SelectableList from '../../../utils/SelectableList';\n\nexport default class InventoryScreen extends Screen {\n    #accessible;\n    #accessor;\n    list = new SelectableList();\n\n    onEnter(ctx) {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n        this.#accessible = ctx.accessible;\n        this.#accessor = ctx.accessor;\n        this.list.setItems(this.#accessible.inventory.content);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    selectItem() {\n        const interactable = this.list.selected;\n\n        if (interactable) {\n            this.game.screens.pushScreen(SCREEN_INTERACT_MODAL, {\n                interactable,\n                interactor: this.#accessor,\n            });\n        }\n    }\n\n    handleInput() {\n        const cmd = this.game.commands.getNextCommand();\n\n        if (!cmd) {\n            return;\n        }\n\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.game.screens.popScreen();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.list.up();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.list.down();\n        }\n\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.selectItem();\n        }\n    }\n\n    onUpdate(dt) {\n        this.handleInput();\n        this.game.renderer.clear();\n        this.game.renderer.drawTextCenter(\n            3,\n            `~ ${this.#accessible.moniker.display} Inventory ~`,\n            'yellow'\n        );\n\n        if (this.list.items.length === 0) {\n            this.game.renderer.drawTextCenter(6, 'There is nothing here.');\n        }\n\n        this.list.data.forEach(({ item, idx, isSelected }) => {\n            const ypos = idx + 5;\n\n            if (isSelected) {\n                this.game.renderer.drawText(1, ypos, '→', 'yellow');\n            } else {\n                this.game.renderer.drawText(1, ypos, '-');\n            }\n\n            this.game.renderer.draw(\n                2,\n                ypos,\n                item.glyph.char,\n                item.glyph.primary,\n                item.glyph.secondary,\n                item.glyph.background\n            );\n\n            const textLen = this.game.renderer.computeTextWidth(\n                item.moniker.display\n            );\n\n            this.game.renderer.drawText(4, ypos, item.moniker.display);\n\n            if (item.isEquipped) {\n                const slot = item.isEquipped.slot.name;\n\n                this.game.renderer.drawText(\n                    4 + textLen + 0.5,\n                    ypos,\n                    `[${slot}]`,\n                    '#2c3538'\n                );\n            }\n        });\n\n        this.game.renderer.drawText(1, 1, '← back [esc]');\n    }\n}\n","export default class SelectableList {\n    _items = [];\n    _idx = 0;\n\n    get selected() {\n        return this._items[this._idx];\n    }\n\n    get items() {\n        return this._items;\n    }\n\n    get data() {\n        return this._items.map((item, idx) => ({\n            item,\n            idx,\n            isSelected: idx === this._idx,\n        }));\n    }\n\n    get isEmpty() {\n        return this._items.length <= 0;\n    }\n\n    get length() {\n        return this._items.length;\n    }\n\n    constructor(items = [], idx = 0) {\n        this._idx = idx;\n        this.setItems(items);\n    }\n\n    setItems(items = []) {\n        this._items = items;\n        this._idx = Math.min(Math.max(this._idx, 0), this._items.length - 1);\n    }\n\n    up() {\n        this._idx--;\n\n        if (this._idx < 0) {\n            this._idx = this._items.length - 1;\n        }\n    }\n\n    down() {\n        this._idx++;\n\n        if (this._idx >= this._items.length) {\n            this._idx = 0;\n        }\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_S,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport SelectableList from '../../../utils/SelectableList';\nimport { getSkillName, getAllSkillEquippedModSums } from '../../../data/Skills';\nimport { drawUIWindow } from '../../../utils/UIWindowUtil';\n\nexport default class InteractModalScreen extends Screen {\n    #width = 18;\n    #height = 10;\n    #interactable;\n    #interactor;\n    list = new SelectableList();\n\n    get left() {\n        return Math.floor((this.game.camera.width - this.#width) / 2);\n    }\n\n    get top() {\n        return Math.floor((this.game.camera.height - this.#height) / 2);\n    }\n\n    onEnter(ctx) {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n        this.#interactable = ctx.interactable;\n        this.#interactor = ctx.interactor;\n\n        this.refreshList();\n    }\n\n    refreshList() {\n        const evt = this.#interactable.fireEvent('get-interactions', {\n            interactor: this.#interactor,\n            interactions: [],\n        });\n\n        this.list.setItems([\n            ...evt.data.interactions,\n            {\n                name: 'Back',\n                isBack: true,\n            },\n        ]);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    selectItem() {\n        const interaction = this.list.selected;\n\n        if (interaction.isBack) {\n            this.game.screens.popScreen();\n            return;\n        }\n\n        this.#interactable.fireEvent(interaction.evt, {\n            interactor: this.#interactor,\n        });\n\n        if (this.#interactable.isDestroyed) {\n            this.game.screens.popScreen();\n\n            return;\n        }\n\n        this.refreshList();\n    }\n\n    handleInput() {\n        const cmd = this.game.commands.getNextCommand();\n\n        if (!cmd) {\n            return;\n        }\n\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.game.screens.popScreen();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.list.up();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.list.down();\n        }\n\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.selectItem();\n        }\n    }\n\n    onUpdate(dt) {\n        this.handleInput();\n\n        drawUIWindow(\n            this.left,\n            this.top,\n            this.#width,\n            this.#height,\n            this.#interactable.moniker.display,\n            this.#interactable.glyph\n        );\n\n        let listPadding = 2;\n        const xpos = this.left + 2;\n\n        if (this.#interactable.weapon) {\n            const weaponDmg = this.#interactable.weapon.getShortDescription(\n                this.#interactor\n            );\n\n            this.game.renderer.drawText(\n                xpos,\n                this.top + listPadding,\n                weaponDmg\n            );\n\n            listPadding += 2;\n        }\n\n        const modifiers = getAllSkillEquippedModSums(this.#interactable);\n        let hasMod = false;\n\n        Object.keys(modifiers).forEach((skill) => {\n            const modifier = modifiers[skill];\n\n            if (modifier === 0) {\n                return;\n            }\n\n            hasMod = true;\n\n            const name = getSkillName(skill);\n            const ypos = this.top + listPadding;\n\n            this.game.renderer.drawText(xpos, ypos, name);\n            const len = this.game.renderer.computeTextWidth(name);\n\n            if (modifier > 0) {\n                this.game.renderer.drawText(\n                    xpos + len,\n                    ypos,\n                    ` +${modifier}`,\n                    'green'\n                );\n            } else {\n                this.game.renderer.drawText(\n                    xpos + len,\n                    ypos,\n                    ` -${modifier}`,\n                    'red'\n                );\n            }\n\n            listPadding++;\n        });\n\n        if (hasMod) {\n            listPadding++;\n        }\n\n        this.list.data.forEach(({ item, idx, isSelected }) => {\n            const ypos = idx + this.top + listPadding;\n\n            if (isSelected) {\n                this.game.renderer.drawText(\n                    xpos,\n                    ypos,\n                    `→ ${item.name}`,\n                    'yellow'\n                );\n            } else {\n                this.game.renderer.drawText(xpos, ypos, `- ${item.name}`);\n            }\n        });\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_NE,\n    INPUT_CMD_MOVE_W,\n    INPUT_CMD_MOVE_E,\n    INPUT_CMD_MOVE_SW,\n    INPUT_CMD_MOVE_S,\n    INPUT_CMD_MOVE_SE,\n    INPUT_CMD_MOVE_NW,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_CONFIRM,\n} from '../../input/InputCommandType';\nimport {\n    DIR_N,\n    DIR_W,\n    DIR_E,\n    DIR_S,\n    DIR_NW,\n    DIR_SW,\n    DIR_SE,\n    DIR_NE,\n    directionDelta,\n} from '../../../enums/Directions';\nimport { bresenhamLine } from '../../../utils/BresenhamLine';\nimport { FactionMember } from '../../../ecs/components';\nimport { drawTags } from '../../../utils/UITags';\nimport { simpleCursorRenderer } from '../../../utils/cursor/SimpleCursorRenderer';\n\nconst NOOP = () => {};\n\nexport default class CursorScreen extends Screen {\n    x = 0;\n    y = 0;\n    maxDistance = Infinity;\n    start = {};\n    drawTags = false;\n    drawFaction = false;\n    drawTemperature = false;\n    onResult = NOOP;\n    onCancel = NOOP;\n\n    onEnter(ctx) {\n        this.game.renderer.clear();\n        this.game.FOVSystem.computeFOV();\n\n        this.start = ctx.start || this.game.player.position;\n        this.drawTags = ctx.drawTags || false;\n        this.drawFaction = ctx.drawFaction || false;\n        this.drawTemperature = ctx.drawTemperature || false;\n        this.onResult = ctx.onResult || NOOP;\n        this.onCancel = ctx.onCancel || NOOP;\n        this.renderer = ctx.renderer || simpleCursorRenderer();\n        this.maxDistance = ctx.maxDistance || Infinity;\n\n        this.x = this.start.x;\n        this.y = this.start.y;\n    }\n\n    onDirectionInput(direction) {\n        const delta = directionDelta(direction);\n\n        if (Math.abs(this.start.x - (this.x + delta.x)) <= this.maxDistance) {\n            this.x += delta.x;\n        }\n        if (Math.abs(this.start.y - (this.y + delta.y)) <= this.maxDistance) {\n            this.y += delta.y;\n        }\n    }\n\n    onConfirm() {\n        const opts = this.getOpts();\n\n        if (this.renderer.isValid(opts)) {\n            this.onResult(opts);\n        }\n    }\n\n    onCancel() {\n        this.onCancel();\n    }\n\n    handleInput() {\n        const cmd = this.game.commands.getNextCommand();\n\n        if (!cmd) {\n            return;\n        }\n\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.onConfirm();\n        }\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.onCancel();\n        }\n        if (cmd.type === INPUT_CMD_MOVE_NW) {\n            this.onDirectionInput(DIR_NW);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.onDirectionInput(DIR_N);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_NE) {\n            this.onDirectionInput(DIR_NE);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_W) {\n            this.onDirectionInput(DIR_W);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_E) {\n            this.onDirectionInput(DIR_E);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_SW) {\n            this.onDirectionInput(DIR_SW);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.onDirectionInput(DIR_S);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_SE) {\n            this.onDirectionInput(DIR_SE);\n        }\n    }\n\n    getOpts() {\n        return {\n            start: {\n                x: this.start.x,\n                y: this.start.y,\n            },\n            position: {\n                x: this.x,\n                y: this.y,\n            },\n            x: this.x,\n            y: this.y,\n            screen: this.game.camera.worldToScreen(this.x, this.y),\n            line: bresenhamLine(this.start.x, this.start.y, this.x, this.y),\n        };\n    }\n\n    onUpdate(dt) {\n        this.handleInput();\n        this.game.updateAdventureSystems(dt);\n\n        this.renderer.render(this.getOpts());\n\n        if (this.drawTags) {\n            drawTags(this.x, this.y);\n        }\n\n        if (this.drawFaction) {\n            const target = this.game.map\n                .getEntitiesAt(this.x, this.y)\n                .filter((e) => e.isVisible && e.factionMember)\n                .pop();\n\n            const player = this.game.player.entity;\n\n            if (target) {\n                const faction = target.factionMember.faction;\n                const relation = this.game.factions.getEntityRelation(\n                    player,\n                    target\n                );\n\n                let disp = this.game.factions.getDisplay(relation);\n\n                this.game.renderer.drawTextCenter(\n                    1,\n                    `${faction.display} Faction [${disp}]`\n                );\n            }\n        }\n\n        if (this.drawTemperature) {\n            const tmpC = this.game.temperature.getTemperature(this.x, this.y);\n            const tmpF = (tmpC * 9) / 5 + 32;\n\n            this.game.renderer.drawText(\n                this.game.camera.width - 12,\n                this.game.camera.height - 1,\n                `${Math.round(tmpF)}°F (${Math.round(tmpC)}°C)`\n            );\n        }\n    }\n}\n","import { game } from '../core/Game';\n\nexport const drawTags = (x, y) => {\n    const entities = game.map\n        .getEntitiesAt(x, y)\n        .filter((e) => e.moniker && e.isVisible);\n    const screen = game.camera.worldToScreen(x, y);\n\n    if (screen.x < game.camera.width / 2) {\n        entities.forEach((entity, i) => {\n            const c = i === 0 ? '◄' : ' ';\n            game.renderer.drawText(screen.x + 1, screen.y + i, `${c}█`, '#ddd');\n            game.renderer.drawText(\n                screen.x + 2,\n                screen.y + i,\n                entity.moniker.display + ' ',\n                '#111133',\n                'white',\n                '#ddd'\n            );\n        });\n    } else {\n        entities.forEach((entity, i) => {\n            const c = i === 0 ? '►' : ' ';\n            game.renderer.drawText(screen.x - 1, screen.y + i, `█${c}`, '#ddd');\n            const len = game.renderer.computeTextWidth(entity.moniker.display);\n            game.renderer.drawText(\n                screen.x - len - 1.5,\n                screen.y + i,\n                ' ' + entity.moniker.display,\n                '#111133',\n                'white',\n                '#ddd'\n            );\n        });\n    }\n};\n","import { SCREEN_ADVENTURE } from '../ScreenType';\nimport Screen from './Screen';\n\nexport default class LoadSectorScreen extends Screen {\n    #prevousSector;\n    #nextSector;\n\n    onEnter(ctx) {\n        this.#prevousSector = ctx.prevousSector;\n        this.#nextSector = ctx.nextSector;\n\n        this.renderLoadingText();\n\n        if (ctx.prevousSector) {\n            const data = this.game.state.saveGame();\n\n            data.world.sectorId = ctx.nextSector.id;\n            data.map.playerPosition = ctx.entry;\n\n            this.game.state.loadGameData(data);\n\n            return;\n        }\n\n        this.game.world.onSectorLoaded(ctx.nextSector, ctx.entry);\n        this.game.map.onSectorLoaded(ctx.nextSector, ctx.entry);\n        this.game.music.onSectorLoaded(ctx.nextSector, ctx.entry);\n        this.game.temperature.onSectorLoaded(ctx.nextSector, ctx.entry);\n\n        this.game.screens.setScreen(SCREEN_ADVENTURE);\n    }\n\n    renderLoadingText() {\n        this.game.renderer.clear();\n        if (this.#prevousSector) {\n            const prevText = `You are leaving sector ${this.#prevousSector.id}`;\n            this.game.renderer.drawTextCenter(11, prevText, '#ce5454');\n        } else {\n            const nextText = `You are entering sector ${this.#nextSector.id}`;\n            this.game.renderer.drawTextCenter(11, nextText, '#ce5454');\n        }\n    }\n\n    onUpdate(dt) {\n        this.renderLoadingText();\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_S,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport { SCREEN_INTERACT_MODAL } from '../ScreenType';\nimport SelectableList from '../../../utils/SelectableList';\n\nexport default class EquipmentScreen extends Screen {\n    #accessor;\n    list = new SelectableList();\n\n    onEnter(ctx) {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n        this.#accessor = ctx.accessor;\n        this.list.setItems(Object.values(this.#accessor.equipmentSlot));\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    selectSlot() {\n        const interactable = this.list.selected.content;\n\n        if (interactable) {\n            this.game.screens.pushScreen(SCREEN_INTERACT_MODAL, {\n                interactable,\n                interactor: this.#accessor,\n            });\n        }\n    }\n\n    handleInput() {\n        const cmd = this.game.commands.getNextCommand();\n\n        if (!cmd) {\n            return;\n        }\n\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.game.screens.popScreen();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.list.up();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.list.down();\n        }\n\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.selectSlot();\n        }\n    }\n\n    onUpdate(dt) {\n        this.handleInput();\n        this.game.renderer.clear();\n        this.game.renderer.drawTextCenter(\n            3,\n            `~ ${this.#accessor.moniker.display} Equipment ~`,\n            'purple'\n        );\n\n        if (this.list.isEmpty) {\n            this.game.renderer.drawTextCenter(6, 'There is nothing here.');\n        }\n\n        this.list.data.forEach(({ item, idx, isSelected }) => {\n            const slot = item;\n            const ypos = idx + 5;\n            const selectedColor = 'yellow';\n\n            if (isSelected) {\n                this.game.renderer.drawText(\n                    1,\n                    ypos,\n                    `→ ${slot.name}`,\n                    selectedColor\n                );\n                this.game.renderer.drawText(14, ypos, '→', selectedColor);\n            } else {\n                this.game.renderer.drawText(1, ypos, `- ${slot.name}`);\n                this.game.renderer.drawText(14, ypos, '-', '#2c3538');\n            }\n\n            if (slot.isEmpty) {\n                this.game.renderer.drawText(15, ypos, '[empty]', '#2c3538');\n            } else {\n                const content = slot.content;\n                this.game.renderer.draw(\n                    15,\n                    ypos,\n                    content.glyph.char,\n                    content.glyph.primary,\n                    content.glyph.secondary,\n                    content.glyph.background\n                );\n                this.game.renderer.drawText(\n                    16,\n                    ypos,\n                    ` ${content.moniker.display}`\n                );\n            }\n        });\n\n        this.game.renderer.drawText(1, 1, '← back [esc]');\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_S,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport SelectableList from '../../../utils/SelectableList';\nimport { drawUIWindow } from '../../../utils/UIWindowUtil';\n\nconst NOOP = () => {};\n\nexport default class ListSelectionScreen extends Screen {\n    width = 18;\n    height = 10;\n    list = new SelectableList();\n    header = '';\n    icon = null;\n    leadText = null;\n\n    get left() {\n        return Math.floor((this.game.camera.width - this.width) / 2);\n    }\n\n    get top() {\n        return Math.floor((this.game.camera.height - this.height) / 2);\n    }\n\n    onEnter(ctx) {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n        this.list.setItems(ctx.list || []);\n        this.header = ctx.header || 'Select';\n        this.icon = ctx.icon || null;\n        this.leadText = ctx.leadText || null;\n        this.onSelect = ctx.onSelect || NOOP;\n        this.onCancel = ctx.onCancel || NOOP;\n        this.onGetRowName = ctx.onGetRowName || NOOP;\n        this.onRenderRow = ctx.onRenderRow || this.defaultRowRender.bind(this);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    selectItem() {\n        this.onSelect(this.list.selected);\n    }\n\n    cancel() {\n        this.onCancel();\n        this.game.screens.popScreen();\n    }\n\n    handleInput() {\n        const cmd = this.game.commands.getNextCommand();\n\n        if (!cmd) {\n            return;\n        }\n\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.cancel();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.list.up();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.list.down();\n        }\n\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.selectItem();\n        }\n    }\n\n    defaultRowRender(row, x, y, isSelected) {\n        const text = this.onGetRowName(row, x, y, isSelected);\n\n        if (isSelected) {\n            this.game.renderer.drawText(x, y, `→ ${text}`, 'yellow');\n        } else {\n            this.game.renderer.drawText(x, y, `- ${text}`);\n        }\n    }\n\n    onUpdate(dt) {\n        this.handleInput();\n\n        drawUIWindow(\n            this.left,\n            this.top,\n            this.width,\n            this.height,\n            this.header,\n            this.icon\n        );\n\n        let yOffset = this.top + 2;\n\n        const xpos = this.left + 2;\n\n        if (this.leadText) {\n            this.game.renderer.drawText(xpos, yOffset, this.leadText);\n\n            yOffset += 2;\n        }\n\n        this.list.data.forEach(({ item, idx, isSelected }) => {\n            const ypos = yOffset + idx;\n\n            this.onRenderRow(item, xpos, ypos, isSelected, idx);\n        });\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_S,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport SelectableList from '../../../utils/SelectableList';\nimport {\n    SKILL_ARMOR,\n    SKILL_DODGE,\n    SKILL_SPEED,\n    getSkillValue,\n} from '../../../data/Skills';\nimport { getSpeedPercentDisplay } from '../../../data/skills/SpeedSkill';\nimport { getArmorBlockPercentDisplay } from '../../../data/skills/ArmorSkill';\nimport { getDodgePercent } from '../../../data/skills/DodgeSkill';\n\nexport default class CharacterScreen extends Screen {\n    character;\n\n    onEnter(ctx) {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n        this.character = ctx.character;\n\n        const stats = this.character.stats.all();\n\n        this.list = new SelectableList(Object.values(stats));\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    handleInput() {\n        const cmd = this.game.commands.getNextCommand();\n\n        if (!cmd) {\n            return;\n        }\n\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.game.screens.popScreen();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.list.up();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.list.down();\n        }\n\n        // if (cmd.type === INPUT_CMD_CONFIRM) {\n        //     this.selectItem();\n        // }\n    }\n\n    onUpdate(dt) {\n        this.handleInput();\n\n        this.game.renderer.clear();\n        this.game.renderer.drawTextCenter(\n            3,\n            `~ ${this.character.moniker.display} Character ~`,\n            'orange'\n        );\n\n        const level = this.character.level.level;\n        const xp = this.character.level.xp;\n        const nextLevelReqXp = this.character.level.nextLevelReq;\n\n        let offsetY = 5;\n\n        this.game.renderer.drawText(2, offsetY, 'level');\n        this.game.renderer.drawText(10, offsetY, `${level}`);\n\n        offsetY++;\n\n        this.game.renderer.drawText(2, offsetY, 'xp');\n        this.game.renderer.drawText(10, offsetY, `${xp}/${nextLevelReqXp}`);\n\n        offsetY++;\n        offsetY++;\n\n        const health = Math.ceil(this.character.health.value);\n        const healthMax = this.character.health.max;\n\n        this.game.renderer.drawText(2, offsetY, 'health');\n        this.game.renderer.drawText(10, offsetY, `${health}/${healthMax}`);\n\n        offsetY++;\n\n        const speed = getSkillValue(SKILL_SPEED, this.character);\n        const speedPrcnt = getSpeedPercentDisplay(speed);\n\n        this.game.renderer.drawText(2, offsetY, 'speed');\n        this.game.renderer.drawText(\n            10,\n            offsetY,\n            `+${speed} (${100 - speedPrcnt}% less movement cost)`\n        );\n\n        offsetY++;\n\n        const armor = getSkillValue(SKILL_ARMOR, this.character);\n        const armorPrcnt = getArmorBlockPercentDisplay(armor);\n\n        this.game.renderer.drawText(2, offsetY, 'armor');\n        this.game.renderer.drawText(\n            10,\n            offsetY,\n            `+${armor} (${armorPrcnt}% less melee damage taken)`\n        );\n\n        offsetY++;\n\n        const dodge = getSkillValue(SKILL_DODGE, this.character);\n        const dodgePrcnt = getDodgePercent(dodge);\n\n        this.game.renderer.drawText(2, offsetY, 'dodge');\n        this.game.renderer.drawText(\n            10,\n            offsetY,\n            `+${dodge} (${dodgePrcnt}% chance to avoid a melee attack)`\n        );\n\n        offsetY++;\n\n        let pad = 0;\n\n        this.list.data.forEach(({ item, idx, isSelected }) => {\n            const stat = item;\n            const ypos = idx + 13 + pad;\n            const modDir = stat.modSum >= 0 ? '+' : '-';\n\n            if (isSelected) {\n                this.game.renderer.drawText(\n                    1,\n                    ypos,\n                    `→ ${stat.name}`,\n                    'yellow'\n                );\n                this.game.renderer.drawText(\n                    10,\n                    ypos,\n                    `${modDir}${stat.sum}`,\n                    'yellow'\n                );\n\n                stat.modifiers.forEach((mod, i) => {\n                    if (mod.mod > 0) {\n                        this.game.renderer.drawText(\n                            3,\n                            ypos + i + 1,\n                            `+${mod.mod} (${mod.source})`,\n                            'green'\n                        );\n                    } else {\n                        this.game.renderer.drawText(\n                            3,\n                            ypos + i + 1,\n                            `-${Math.abs(mod.mod)} (${mod.source})`,\n                            'red'\n                        );\n                    }\n                });\n\n                pad += stat.modifiers.length;\n            } else {\n                this.game.renderer.drawText(1, ypos, `- ${stat.name}`);\n                this.game.renderer.drawText(10, ypos, `${modDir}${stat.sum}`);\n            }\n        });\n\n        this.game.renderer.drawText(1, 1, '← back [esc]');\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_S,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport SelectableList from '../../../utils/SelectableList';\nimport { drawUIWindow } from '../../../utils/UIWindowUtil';\nimport { getAbility, getAbilityStatus, getStance } from '../../../data/Abilities';\nimport { getAbilityTypeName } from '../../../enums/AbilityTypes';\nimport { SCREEN_CHANNEL, SCREEN_CONFIRM } from '../ScreenType';\n\nexport default class AbilityScreen extends Screen {\n    width = 18;\n    PADDING_RIGHT = 1;\n    PADDING_HEIGHT = 4;\n    character;\n    list = new SelectableList();\n\n    get left() {\n        return Math.floor(\n            this.game.camera.width - this.width - this.PADDING_RIGHT\n        );\n    }\n\n    get top() {\n        return this.PADDING_HEIGHT;\n    }\n\n    get height() {\n        return Math.floor(this.game.camera.height - this.PADDING_HEIGHT * 2);\n    }\n\n    onEnter(ctx) {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n        this.character = ctx.character;\n\n        this.refreshList();\n    }\n\n    refreshList() {\n        const evt = this.character.fireEvent('query-abilities', {\n            abilities: [],\n        });\n\n        this.list.setItems([\n            ...evt.data.abilities.map((type) => getAbility(type)),\n            {\n                name: 'Back',\n                isBack: true,\n            },\n        ]);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    selectItem() {\n        const ability = this.list.selected;\n\n        if (ability.isBack) {\n            this.game.screens.popScreen();\n            return;\n        }\n\n        const status = getAbilityStatus(ability.key, this.character);\n\n        // is the ability on cooldown? IGNORE IT\n        if (status && status.isCoolingDown) {\n            return;\n        }\n\n        // is the ability toggled on?\n        if (status && status.isToggledOn) {\n            ability.toggleOff(this.character, status);\n            this.game.screens.popScreen();\n            return;\n        }\n\n        // is the ability a stance?\n        if (ability.isStance) {\n            const stance = getStance(this.character);\n\n            if (stance) {\n                this.game.screens.pushScreen(SCREEN_CONFIRM, {\n                    header: 'Switch stance?',\n                    leadText: `Only one stance can be active at a time. Do you want to switch from ${stance.ability.name} to ${ability.name}?`,\n                    onConfirm: () => {\n                        stance.ability.toggleOff(this.character, stance);\n                        ability.toggleOn(this.character);\n                        this.game.screens.popScreen();\n                    },\n                });\n                return;\n            }\n        }\n\n        if (!status && ability.isToggleable) {\n            ability.toggleOn(this.character);\n            this.game.screens.popScreen();\n            return;\n        }\n\n        ability.initiate(this.character, {\n            onConfirm: (data) => {\n                ability.execute(this.character, data);\n\n                this.game.screens.popScreen();\n\n                if (ability.isChanneled && this.character.isPlayer) {\n                    this.game.screens.pushScreen(SCREEN_CHANNEL, {\n                        entity: this.character\n                    });\n                }\n            },\n            onCancel: () => {},\n        });\n    }\n\n    handleInput() {\n        const cmd = this.game.commands.getNextCommand();\n\n        if (!cmd) {\n            return;\n        }\n\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.game.screens.popScreen();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.list.up();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.list.down();\n        }\n\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.selectItem();\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.updateAdventureSystems(dt);\n        this.handleInput();\n\n        drawUIWindow(\n            this.left,\n            this.top,\n            this.width,\n            this.height,\n            'Abilities',\n            this.character.glyph\n        );\n\n        let yOffset = this.top + 2;\n        let xOffset = this.left + 2;\n\n        this.list.data.forEach(({ item: ability, idx, isSelected }) => {\n            if (ability.isBack) {\n                if (isSelected) {\n                    this.game.renderer.drawText(\n                        xOffset,\n                        yOffset + idx,\n                        '→ Back',\n                        'yellow'\n                    );\n                } else {\n                    this.game.renderer.drawText(\n                        xOffset,\n                        yOffset + idx,\n                        '- Back'\n                    );\n                }\n                return;\n            }\n\n            const display = ability.getDisplayText(this.character);\n\n            if (isSelected) {\n                if (display.isEnabled) {\n                    this.game.renderer.drawText(\n                        xOffset,\n                        yOffset + idx,\n                        `→ ${display.text}`,\n                        'yellow'\n                    );\n                } else {\n                    this.game.renderer.drawText(\n                        xOffset,\n                        yOffset + idx,\n                        `→ ${display.text}`,\n                        'gray'\n                    );\n                }\n            } else {\n                if (display.isEnabled) {\n                    this.game.renderer.drawText(\n                        xOffset,\n                        yOffset + idx,\n                        `- ${display.text}`\n                    );\n                } else {\n                    this.game.renderer.drawText(\n                        xOffset,\n                        yOffset + idx,\n                        `- ${display.text}`,\n                        'gray'\n                    );\n                }\n            }\n        });\n\n        const ability = this.list.selected;\n\n        if (ability.isBack) {\n            return;\n        }\n\n        const description = `${getAbilityTypeName(\n            ability.type\n        )}. ${ability.getDescription(this.character)}`;\n\n        this.game.renderer.drawTextWrapping(\n            xOffset,\n            yOffset + this.list.length + 1,\n            this.width - 2,\n            description\n        );\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_S,\n    INPUT_CMD_MOVE_E,\n    INPUT_CMD_MOVE_W,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport { drawUIWindow } from '../../../utils/UIWindowUtil';\n\nconst NOOP = () => {};\n\nconst OPT_YES = 1;\nconst OPT_NO = 0;\n\nexport default class ConfirmationScreen extends Screen {\n    width = 18;\n    option = 0;\n\n    get height() {\n        if (!this.leadText) {\n            return 4;\n        }\n\n        const textW = this.game.renderer.computeTextWidthTile(this.leadText);\n\n        return Math.ceil(textW / (this.width - 2) + 6);\n    }\n\n    get left() {\n        return Math.floor((this.game.camera.width - this.width) / 2);\n    }\n\n    get top() {\n        return Math.floor((this.game.camera.height - this.height) / 2);\n    }\n\n    get bottom() {\n        return this.top + this.height;\n    }\n\n    get right() {\n        return this.left + this.width;\n    }\n\n    onEnter(ctx) {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n\n        this.header = ctx.header || 'Are you sure?';\n        this.onConfirm = ctx.onConfirm || NOOP;\n        this.onCancel = ctx.onCancel || NOOP;\n        this.onResult = ctx.onResult || NOOP;\n        this.confirmText = ctx.confirmText || 'confirm';\n        this.cancelText = ctx.cancelText || 'cancel';\n        this.leadText = ctx.leadText || '';\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    onSelection(result) {\n        this.game.screens.popScreen();\n\n        if (result) {\n            this.onConfirm();\n        } else {\n            this.onCancel();\n        }\n\n        this.onResult(result);\n    }\n\n    toggleSelection() {\n        this.option = this.option ? OPT_NO : OPT_YES;\n    }\n\n    handleInput() {\n        const cmd = this.game.commands.getNextCommand();\n\n        if (!cmd) {\n            return;\n        }\n\n        if (\n            [\n                INPUT_CMD_MOVE_N,\n                INPUT_CMD_MOVE_E,\n                INPUT_CMD_MOVE_S,\n                INPUT_CMD_MOVE_W,\n            ].includes(cmd.type)\n        ) {\n            this.toggleSelection();\n        }\n\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.onSelection(OPT_NO);\n        }\n\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.onSelection(this.option);\n        }\n    }\n\n    onUpdate(dt) {\n        this.handleInput();\n\n        drawUIWindow(this.left, this.top, this.width, this.height, this.header);\n\n        if (this.leadText) {\n            this.game.renderer.drawTextWrapping(\n                this.left + 2,\n                this.top + 2,\n                this.width - 2,\n                this.leadText\n            );\n        }\n\n        const cancel = this.option\n            ? `- ${this.cancelText}`\n            : `→ ${this.cancelText}`;\n        const confirm = this.option\n            ? `→ ${this.confirmText}`\n            : `- ${this.confirmText}`;\n\n        this.game.renderer.drawText(\n            this.left + 3,\n            this.bottom - 2,\n            cancel,\n            this.option ? undefined : 'yellow'\n        );\n\n        const textWidth = this.game.renderer.computeTextWidth(confirm);\n\n        this.game.renderer.drawText(\n            this.right - 2 - textWidth,\n            this.bottom - 2,\n            confirm,\n            this.option ? 'yellow' : undefined\n        );\n    }\n}\n","import Screen from './Screen';\nimport { INPUT_DOMAIN_ADVENTURE } from '../../input/InputDomainType';\n\nexport default class WaitScreen extends Screen {\n    time = 1000;\n    curTime = 0;\n\n    onEnter(ctx) {\n        this.time = ctx.time || 1000;\n        this.curTime = 0;\n        this.game.commands.pushDomain(INPUT_DOMAIN_ADVENTURE);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_ADVENTURE);\n    }\n\n    handleInput() {\n        const cmd = this.game.commands.getNextCommand();\n\n        if (!cmd) {\n            return;\n        }\n    }\n\n    onUpdate(dt) {\n        this.curTime += dt;\n\n        if (this.curTime >= this.time) {\n            this.game.screens.popScreen();\n            return;\n        }\n\n        this.handleInput();\n    }\n}\n","import Screen from './Screen';\nimport { INPUT_DOMAIN_ADVENTURE } from '../../input/InputDomainType';\nimport { INPUT_CMD_CANCEL, INPUT_CMD_WAIT } from '../../input/InputCommandType';\nimport { getChanneling } from '../../../data/Abilities';\n\nexport default class ChannelScreen extends Screen {\n    onEnter(ctx) {\n        this.entity = ctx.entity;\n        this.channel = getChanneling(this.entity);\n        this.game.commands.pushDomain(INPUT_DOMAIN_ADVENTURE);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_ADVENTURE);\n    }\n\n    handleInput() {\n        const cmd = this.game.commands.getNextCommand();\n\n        if (!cmd) {\n            return;\n        }\n\n        if (cmd.type === INPUT_CMD_WAIT) {\n            this.channel.ability.channel(200, this.channel);\n        }\n\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.channel.ability.cancelChannel(this.channel);\n        }\n    }\n\n    renderChanneling() {\n        const percent = this.channel.currentChannelDuration / this.channel.channelDuration;\n        const maxLength = 16;\n        const length = Math.ceil(percent * maxLength * 2) / 2;\n        const center = Math.floor(this.game.camera.width / 2) - (maxLength / 2);\n        const bottom = this.game.camera.height - 6;\n\n        const fract = `(${(Math.floor(this.channel.currentChannelDuration / 100) / 10).toFixed(1)}/${Math.ceil(this.channel.channelDuration/ 100) / 10})`;\n        this.game.renderer.drawTextCenter(bottom, `Channeling ${this.channel.ability.name} ${fract}`);\n        this.game.renderer.drawTextCenter(bottom + 2, 'press [S] to channel or [ESC] to cancel', '#53575b');\n\n        for (let i = 0; i < maxLength; i++) {\n            const diff = length - i;\n\n            if (diff == .5) {\n                this.game.renderer.drawUI(center + i, bottom - 1, ' ', '#4685bc', '#2f3438');\n            } else if (diff > 0) {\n                this.game.renderer.drawUI(center + i, bottom - 1, '►', '#4685bc');\n            } else {\n                this.game.renderer.drawUI(center + i, bottom - 1, '►', '#2f3438');\n            }\n        }\n    }\n\n    onUpdate(dt) {\n        this.handleInput();\n\n        this.game.updateAdventureSystems(dt);\n        this.renderChanneling();\n\n        if (!this.channel.isChanneling) {\n            this.game.screens.popScreen();\n        }\n    }\n}\n","import Manager from './Manager';\nimport { directionDelta } from '../enums/Directions';\n\nexport default class PlayerManager extends Manager {\n    #entityId = null;\n    actionQueue = [];\n\n    get entity() {\n        return this.game.ecs.getEntity(this.#entityId);\n    }\n\n    get id() {\n        return this.#entityId;\n    }\n\n    get isTurn() {\n        return this.entity.actor.hasEnergy;\n    }\n\n    get position() {\n        return this.entity.position.getPos();\n    }\n\n    getSetupData() {\n        // TODO\n        // player.fireEvent('query-owned-entities', { ids });\n        // player.fireEvent('dereference-unowned-entities');\n        // serialize all \"owned\"\n        const entity = this.game.ecs.createPrefab('Player');\n        const entityId = entity.id;\n        const serialized = entity.serialize();\n\n        entity.destroy();\n\n        return {\n            entityId,\n            entity: serialized, // TODO inventory\n        };\n    }\n\n    setup(data) {\n        this.#entityId = data.entityId;\n        this.game.ecs.deserialize(data.entity);\n    }\n\n    getSaveGameData() {\n        const entityId = this.entity.id;\n\n        // gather all entities for player\n        const evt = this.entity.fireEvent('query-ownership', {\n            result: new Set([this.entity]),\n        });\n        const owned = Array.from(evt.data.result);\n        const serialized = this.game.ecs.serialize(owned);\n\n        owned.forEach((e) => e.destroy());\n\n        return {\n            entityId,\n            entity: serialized, // TODO inventory\n        };\n    }\n\n    teardown() {\n        if (this.entity) {\n            this.entity.destroy();\n        }\n        this.#entityId = null; // TODO does this need to destroy()?\n    }\n\n    getNextAction() {\n        return this.actionQueue.shift();\n    }\n\n    move(direction) {\n        this.actionQueue.push(() => {\n            const delta = directionDelta(direction);\n\n            this.entity.fireEvent('try-move', delta);\n        });\n    }\n\n    melee(target) {\n        this.actionQueue.push(() => {\n            if (target.isDestroyed || target.isDead) {\n                console.warn(`Melee action on destroyed target ${target}`);\n\n                return;\n            }\n\n            this.entity.fireEvent('try-melee', {\n                target,\n            });\n        });\n    }\n\n    wait(turns = 1) {\n        this.actionQueue.push(() => {\n            this.entity.fireEvent('energy-consumed', turns * 1000);\n        });\n    }\n}\n","import { Engine } from 'geotic';\n\nimport * as components from './components';\nimport * as prefabs from './prefabs';\nimport Manager from '../core/Manager';\n\nexport default class ECS extends Manager {\n    #engine;\n\n    get engine() {\n        return this.#engine;\n    }\n\n    constructor(game) {\n        super(game);\n        this.#engine = new Engine();\n\n        Object.values(components).forEach((component) => {\n            this.#engine.registerComponent(component);\n        });\n\n        Object.values(prefabs).forEach((prefab) => {\n            this.#engine.registerPrefab(prefab);\n        });\n    }\n\n    teardown() {\n        this.destroyEntities();\n    }\n\n    destroyEntities() {\n        for (let entity of this.#engine.entities.all) {\n            entity.destroy();\n        }\n    }\n\n    cloneEntity(entity) {\n        const data = entity.serialize();\n\n        data.id = this.engine.generateId();\n\n        this.engine.deserialize(data);\n\n        return this.engine.getEntity(data.id);\n    }\n}\n","import Manager from './Manager';\n\nexport default class GameStateManager extends Manager {\n    #isStarted = false;\n    #filename = 'test';\n\n    get filename() {\n        return this.#filename;\n    }\n\n    get isStarted() {\n        return this.#isStarted;\n    }\n\n    gameOver() {\n        this.#isStarted = false;\n    }\n\n    initiateTeardown() {\n        this.#isStarted = false;\n\n        this.game.player.teardown();\n        this.game.map.teardown();\n        this.game.engine.teardown();\n        this.game.world.teardown();\n        this.game.temperature.teardown();\n        this.game.console.teardown();\n    }\n\n    initiateSetup(data) {\n        this.#isStarted = true;\n\n        this.game.clock.setup(data.clock);\n        this.game.player.setup(data.player);\n        this.game.world.setup(data.world);\n        this.game.map.setup(data.map);\n    }\n\n    newGame() {\n        this.#filename = prompt('Enter save name', 'test');\n\n        if (!this.filename) {\n            return;\n        }\n\n        this.deleteFile(this.filename);\n        this.initiateTeardown();\n\n        const data = {\n            filename: this.filename,\n            clock: this.game.clock.getSetupData(),\n            player: this.game.player.getSetupData(),\n            world: this.game.world.getSetupData(),\n            map: this.game.map.getSetupData(),\n        };\n\n        this.initiateSetup(data);\n    }\n\n    saveGame() {\n        if (!this.isStarted) {\n            console.warn(\"cannot save game since it's not started\");\n            return;\n        }\n\n        const data = {\n            filename: this.filename,\n            clock: this.game.clock.getSaveGameData(),\n            map: this.game.map.getSaveGameData(),\n            player: this.game.player.getSaveGameData(),\n            world: this.game.world.getSaveGameData(),\n            temperature: this.game.temperature.getSaveGameData(),\n        };\n\n        console.log('save data', data);\n\n        localStorage.setItem(this.filename, JSON.stringify(data));\n\n        return data;\n    }\n\n    deleteFile(filename) {\n        const files = Object.keys(localStorage);\n\n        files.forEach((file) => {\n            if (file.startsWith(`${filename}-`)) {\n                localStorage.removeItem(file);\n            }\n        });\n    }\n\n    saveSectorPositionData(sectorId, positionData) {\n        localStorage.setItem(\n            `${this.filename}-${sectorId}-positions`,\n            JSON.stringify(positionData)\n        );\n    }\n\n    saveSectorTemperatureData(sectorId, temperatureData) {\n        localStorage.setItem(\n            `${this.filename}-${sectorId}-temperatures`,\n            JSON.stringify(temperatureData)\n        );\n    }\n\n    saveSectorEntityData(sectorId, entityData) {\n        localStorage.setItem(\n            `${this.filename}-${sectorId}-entities`,\n            JSON.stringify(entityData)\n        );\n    }\n\n    loadSectorEntityData(sectorId) {\n        const json = localStorage.getItem(\n            `${this.filename}-${sectorId}-entities`\n        );\n\n        return json && JSON.parse(json);\n    }\n\n    loadSectorPositionData(sectorId) {\n        const json = localStorage.getItem(\n            `${this.filename}-${sectorId}-positions`\n        );\n\n        return json && JSON.parse(json);\n    }\n\n    loadSectorTemperatureData(sectorId) {\n        const json = localStorage.getItem(\n            `${this.filename}-${sectorId}-temperatures`\n        );\n\n        return json && JSON.parse(json);\n    }\n\n    loadSavefileData(filename) {\n        const json = localStorage.getItem(filename);\n\n        return json && JSON.parse(json);\n    }\n\n    loadGame() {\n        const filename = prompt('Enter save filename to load', 'test');\n\n        const data = this.loadSavefileData(filename);\n\n        if (!data) {\n            console.warn(`save file ${filename} not found`);\n        }\n\n        this.#filename = filename;\n\n        console.log('Loading game', data);\n\n        this.initiateTeardown();\n        this.initiateSetup(data);\n    }\n\n    loadGameData(data) {\n        this.initiateTeardown();\n        this.initiateSetup(data);\n    }\n}\n","import Manager from './Manager';\n\nexport default class ClockManager extends Manager {\n    #tick = 0;\n    #tickDelta = 0;\n    #turnDelta = 0;\n\n    get tick() {\n        return this.#tick;\n    }\n\n    get tickDelta() {\n        return this.#tickDelta;\n    }\n\n    get turnDelta() {\n        return this.#turnDelta;\n    }\n\n    get turn() {\n        return Math.floor(this.#tick / 1000);\n    }\n\n    get subTurn() {\n        return this.#tick - this.turn * 1000;\n    }\n\n    getSetupData() {\n        return {\n            tick: 0,\n            tickDelta: 0,\n        };\n    }\n\n    getSaveGameData() {\n        return {\n            tick: this.tick,\n            tickDelta: this.tickDelta,\n        };\n    }\n\n    setup(data) {\n        this.#tick = data.tick;\n        this.#tickDelta = data.tickDelta;\n    }\n\n    incrementTick(delta) {\n        const prevTurn = this.turn;\n\n        this.#tickDelta = delta;\n        this.#tick += delta;\n\n        const curTurn = this.turn;\n\n        this.#turnDelta = curTurn - prevTurn;\n    }\n\n    update(dt) {\n        this.#tickDelta = 0;\n        this.#turnDelta = 0;\n    }\n}\n","import Manager from './Manager';\nimport FastMap from '../utils/FastMap';\nimport { IsInventoried, Position } from '../ecs/components';\n\nexport default class MapManager extends Manager {\n    #playerOutOfBounds = null;\n    positions;\n    #width = 24;\n    #height = 24;\n\n    get width() {\n        return this.#width;\n    }\n\n    get height() {\n        return this.#height;\n    }\n\n    constructor(game) {\n        super(game);\n\n        this.query = this.game.ecs.createQuery({\n            all: [Position],\n            none: [IsInventoried],\n        });\n\n        this.positions = new FastMap(this.width, this.height);\n\n        this.query.onEntityAdded((e) => {\n            this.positions.set(0, 0, e.id);\n        });\n\n        this.query.onEntityRemoved((e) => {\n            this.positions.remove(e.id);\n        });\n    }\n\n    getSetupData() {\n        return {};\n    }\n\n    teardown() {\n        this.#playerOutOfBounds = false;\n        this.positions.clear();\n    }\n\n    setup(data) {\n        if (data.playerPosition) {\n            this.game.player.entity.position.setPos(\n                data.playerPosition.x,\n                data.playerPosition.y\n            );\n        } else {\n            const position = this.getRandomEmptyPosition();\n            this.game.player.entity.position.setPos(position.x, position.y);\n        }\n\n        this.game.FOVSystem.computeFOV();\n    }\n\n    getSaveGameData() {\n        const data = this.positions.serialize();\n\n        this.game.state.saveSectorPositionData(this.game.world.sectorId, data);\n\n        return {\n            playerPosition: this.game.player.position,\n        };\n    }\n\n    onSectorLoaded(sector) {\n        this.#playerOutOfBounds = false;\n\n        const data = this.game.state.loadSectorPositionData(sector.id);\n\n        if (data) {\n            this.positions.deserialize(data);\n        }\n    }\n\n    getPosition(entityId) {\n        return this.positions.getPosition(entityId);\n    }\n\n    setPosition(x, y, entityId) {\n        if (this.positions.isOutOfBounds(x, y)) {\n            if (this.game.player.id === entityId) {\n                this.#playerOutOfBounds = { x, y };\n            }\n\n            return;\n        }\n\n        this.positions.set(x, y, entityId);\n\n        if (entityId === this.game.player.id) {\n            this.game.camera.setFocus(x, y);\n        }\n    }\n\n    getEntitiesAt(x, y, includeGround = false) {\n        return this.positions.get(x, y).reduce((entities, id) => {\n            const e = this.game.ecs.getEntity(id);\n\n            if (!e.isInventoried && (includeGround ? true : !e.ground)) {\n                entities.push(e);\n            }\n\n            return entities;\n        }, []);\n    }\n\n    isAdjacent(x1, y1, x2, y2) {\n        return Math.abs(x1 - x2) <= 1 && Math.abs(y1 - y2) <= 1;\n    }\n\n    getEntitiesInRect(x, y, width, height) {\n        const entities = [];\n\n        for (let i = x; i < x + width + 1; i++) {\n            for (let j = y; j < y + height + 1; j++) {\n                entities.push(...this.getEntitiesAt(i, j));\n            }\n        }\n\n        return entities;\n    }\n\n    getEntitiesInRange(x, y, range) {\n        const diameter = range * 2;\n\n        return this.getEntitiesInRect(x - range, y - range, diameter, diameter);\n    }\n\n    getNeighborEntities(x, y) {\n        return [\n            this.getEntitiesAt(x - 1, y - 1), // TOP LEFT\n            this.getEntitiesAt(x, y - 1), // TOP\n            this.getEntitiesAt(x + 1, y - 1), // TOP RIGHT\n            this.getEntitiesAt(x - 1, y), // LEFT\n            this.getEntitiesAt(x + 1, y), // RIGHT\n            this.getEntitiesAt(x - 1, y + 1), // BOTTOM LEFT\n            this.getEntitiesAt(x, y + 1), // BOTTOM\n            this.getEntitiesAt(x + 1, y + 1), // BOTTOM RIGHT\n        ];\n    }\n\n    getRandomEmptyPosition() {\n        let x, y;\n        do {\n            x = Math.trunc(Math.random() * this.width);\n            y = Math.trunc(Math.random() * this.height);\n        } while (this.getEntitiesAt(x, y, false).length > 0);\n\n        return { x, y };\n    }\n\n    isOutOfbounds(x, y) {\n        return x < 0 || y < 0 || x >= this.width || y >= this.height;\n    }\n\n    onPlayerOutOfBounds(x, y) {\n        if (y < 0) {\n            this.game.world.enterSector(this.game.world.sector.northSector, {\n                x,\n                y: this.height - 1,\n            });\n        }\n        if (y >= this.height) {\n            this.game.world.enterSector(this.game.world.sector.southSector, {\n                x,\n                y: 0,\n            });\n        }\n        if (x >= this.width) {\n            this.game.world.enterSector(this.game.world.sector.eastSector, {\n                x: 0,\n                y,\n            });\n        }\n        if (x < 0) {\n            this.game.world.enterSector(this.game.world.sector.westSector, {\n                x: this.width - 1,\n                y,\n            });\n        }\n    }\n\n    update(dt) {\n        if (this.#playerOutOfBounds) {\n            this.onPlayerOutOfBounds(\n                this.#playerOutOfBounds.x,\n                this.#playerOutOfBounds.y\n            );\n        }\n    }\n}\n","export default class FastMap {\n    _width = 0;\n    _height = 0;\n    _data = [];\n    _idHash = new Map();\n\n    get width() {\n        return this._width;\n    }\n\n    get height() {\n        return this._height;\n    }\n\n    get size() {\n        return this._width * this._height;\n    }\n\n    constructor(width, height) {\n        this._width = width;\n        this._height = height;\n\n        for (let i = 0; i < this.size; i++) {\n            this._data[i] = new Set();\n        }\n    }\n\n    idx(x, y) {\n        return y * this.width + x;\n    }\n\n    coord(idx) {\n        return {\n            x: Math.trunc(idx % this.width),\n            y: Math.trunc(idx / this.width),\n        };\n    }\n\n    clear() {\n        this._idHash.clear();\n\n        for (let i = 0; i < this.size; i++) {\n            this._data[i].clear();\n        }\n    }\n\n    serialize() {\n        const entries = this._data.map((d) => Array.from(d));\n\n        return {\n            width: this.width,\n            height: this.height,\n            entries,\n        };\n    }\n\n    deserialize(data) {\n        this._width = data.width;\n        this._height = data.height;\n        this._idHash = new Map();\n\n        for (let i = 0; i < data.entries.length; i++) {\n            const coord = this.coord(i);\n            this._data[i] = new Set(data.entries[i]);\n\n            data.entries[i].forEach((id) => {\n                this._idHash.set(id, coord);\n            });\n        }\n    }\n\n    set(x, y, id) {\n        if (this.isOutOfBounds(x, y)) {\n            console.warn(\n                `Trying to set an entity ${id} position out-of-bounds ${x}, ${y}`\n            );\n            return;\n        }\n\n        const idx = this.idx(x, y);\n\n        this.remove(id);\n\n        this._idHash.set(id, { x, y });\n        this._data[idx].add(id);\n    }\n\n    get(x, y) {\n        if (this.isOutOfBounds(x, y)) {\n            return [];\n        }\n\n        return Array.from(this._data[this.idx(x, y)]);\n    }\n\n    has(id) {\n        return this._idHash.has(id);\n    }\n\n    getPosition(id) {\n        const pos = this._idHash.get(id);\n\n        if (!pos) {\n            console.warn('Cannot get position', id);\n        }\n\n        return pos;\n    }\n\n    remove(id) {\n        if (!this.has(id)) {\n            return;\n        }\n\n        const pos = this.getPosition(id);\n        const idx = this.idx(pos.x, pos.y);\n\n        this._idHash.delete(id);\n        this._data[idx].delete(id);\n    }\n\n    isOutOfBounds(x, y) {\n        return x < 0 || y < 0 || x >= this.width || y >= this.height;\n    }\n}\n","import { FOV } from 'rot-js';\nimport {\n    Explorable,\n    Explored,\n    Shadowcaster,\n    IsVisible,\n} from '../ecs/components';\nimport System from './System';\n\nexport default class FOVSystem extends System {\n    constructor(game) {\n        super(game);\n\n        this.fov = new FOV.PreciseShadowcasting((x, y) =>\n            this.isSquareVisible(x, y)\n        );\n\n        this.query = this.game.ecs.createQuery({\n            all: [IsVisible],\n        });\n    }\n\n    isSquareVisible(x, y) {\n        return !this.game.map\n            .getEntitiesAt(x, y)\n            .some((e) => e.has(Shadowcaster));\n    }\n\n    setVisible(x, y, amount, range) {\n        this.game.map.getEntitiesAt(x, y, true).forEach((e) => {\n            e.add(IsVisible, {\n                range,\n                amount,\n            });\n            if (e.explorable && !e.explored) {\n                e.add(Explored);\n                if (e.bitmaskGlyph) {\n                    this.game.bitmasks.refreshMaskAndNeighbors(e);\n                }\n            }\n        });\n    }\n\n    computeFOV() {\n        this.query.get().forEach((e) => e.isVisible.destroy());\n\n        const pos = this.game.player.position;\n\n        this.fov.compute(pos.x, pos.y, 8, (x, y, r, visibility) => {\n            this.setVisible(x, y, visibility, r);\n        });\n    }\n\n    update(dt) {\n        if (this.game.clock.tickDelta) {\n            this.computeFOV();\n        }\n    }\n}\n","export { default as RNG } from \"./rng.js\";\nexport { default as Display } from \"./display/display.js\";\nexport { default as StringGenerator } from \"./stringgenerator.js\";\nexport { default as EventQueue } from \"./eventqueue.js\";\nexport { default as Scheduler } from \"./scheduler/index.js\";\nexport { default as FOV } from \"./fov/index.js\";\nexport { default as Map } from \"./map/index.js\";\nexport { default as Noise } from \"./noise/index.js\";\nexport { default as Path } from \"./path/index.js\";\nexport { default as Engine } from \"./engine.js\";\nexport { default as Lighting } from \"./lighting.js\";\nexport { DEFAULT_WIDTH, DEFAULT_HEIGHT, DIRS, KEYS } from \"./constants.js\";\nimport * as util from \"./util.js\";\nexport const Util = util;\nimport * as color from \"./color.js\";\nexport const Color = color;\nimport * as text from \"./text.js\";\nexport const Text = text;\n","/**\n * This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\n * Alea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.\n */\nconst FRAC = 2.3283064365386963e-10; /* 2^-32 */\nclass RNG {\n    constructor() {\n        this._seed = 0;\n        this._s0 = 0;\n        this._s1 = 0;\n        this._s2 = 0;\n        this._c = 0;\n    }\n    getSeed() { return this._seed; }\n    /**\n     * Seed the number generator\n     */\n    setSeed(seed) {\n        seed = (seed < 1 ? 1 / seed : seed);\n        this._seed = seed;\n        this._s0 = (seed >>> 0) * FRAC;\n        seed = (seed * 69069 + 1) >>> 0;\n        this._s1 = seed * FRAC;\n        seed = (seed * 69069 + 1) >>> 0;\n        this._s2 = seed * FRAC;\n        this._c = 1;\n        return this;\n    }\n    /**\n     * @returns Pseudorandom value [0,1), uniformly distributed\n     */\n    getUniform() {\n        let t = 2091639 * this._s0 + this._c * FRAC;\n        this._s0 = this._s1;\n        this._s1 = this._s2;\n        this._c = t | 0;\n        this._s2 = t - this._c;\n        return this._s2;\n    }\n    /**\n     * @param lowerBound The lower end of the range to return a value from, inclusive\n     * @param upperBound The upper end of the range to return a value from, inclusive\n     * @returns Pseudorandom value [lowerBound, upperBound], using ROT.RNG.getUniform() to distribute the value\n     */\n    getUniformInt(lowerBound, upperBound) {\n        let max = Math.max(lowerBound, upperBound);\n        let min = Math.min(lowerBound, upperBound);\n        return Math.floor(this.getUniform() * (max - min + 1)) + min;\n    }\n    /**\n     * @param mean Mean value\n     * @param stddev Standard deviation. ~95% of the absolute values will be lower than 2*stddev.\n     * @returns A normally distributed pseudorandom value\n     */\n    getNormal(mean = 0, stddev = 1) {\n        let u, v, r;\n        do {\n            u = 2 * this.getUniform() - 1;\n            v = 2 * this.getUniform() - 1;\n            r = u * u + v * v;\n        } while (r > 1 || r == 0);\n        let gauss = u * Math.sqrt(-2 * Math.log(r) / r);\n        return mean + gauss * stddev;\n    }\n    /**\n     * @returns Pseudorandom value [1,100] inclusive, uniformly distributed\n     */\n    getPercentage() {\n        return 1 + Math.floor(this.getUniform() * 100);\n    }\n    /**\n     * @returns Randomly picked item, null when length=0\n     */\n    getItem(array) {\n        if (!array.length) {\n            return null;\n        }\n        return array[Math.floor(this.getUniform() * array.length)];\n    }\n    /**\n     * @returns New array with randomized items\n     */\n    shuffle(array) {\n        let result = [];\n        let clone = array.slice();\n        while (clone.length) {\n            let index = clone.indexOf(this.getItem(clone));\n            result.push(clone.splice(index, 1)[0]);\n        }\n        return result;\n    }\n    /**\n     * @param data key=whatever, value=weight (relative probability)\n     * @returns whatever\n     */\n    getWeightedValue(data) {\n        let total = 0;\n        for (let id in data) {\n            total += data[id];\n        }\n        let random = this.getUniform() * total;\n        let id, part = 0;\n        for (id in data) {\n            part += data[id];\n            if (random < part) {\n                return id;\n            }\n        }\n        // If by some floating-point annoyance we have\n        // random >= total, just return the last id.\n        return id;\n    }\n    /**\n     * Get RNG state. Useful for storing the state and re-setting it via setState.\n     * @returns Internal state\n     */\n    getState() { return [this._s0, this._s1, this._s2, this._c]; }\n    /**\n     * Set a previously retrieved state.\n     */\n    setState(state) {\n        this._s0 = state[0];\n        this._s1 = state[1];\n        this._s2 = state[2];\n        this._c = state[3];\n        return this;\n    }\n    /**\n     * Returns a cloned RNG\n     */\n    clone() {\n        let clone = new RNG();\n        return clone.setState(this.getState());\n    }\n}\nexport default new RNG().setSeed(Date.now());\n","import Hex from \"./hex.js\";\nimport Rect from \"./rect.js\";\nimport Tile from \"./tile.js\";\nimport TileGL from \"./tile-gl.js\";\nimport Term from \"./term.js\";\nimport * as Text from \"../text.js\";\nimport { DEFAULT_WIDTH, DEFAULT_HEIGHT } from \"../constants.js\";\nconst BACKENDS = {\n    \"hex\": Hex,\n    \"rect\": Rect,\n    \"tile\": Tile,\n    \"tile-gl\": TileGL,\n    \"term\": Term\n};\nconst DEFAULT_OPTIONS = {\n    width: DEFAULT_WIDTH,\n    height: DEFAULT_HEIGHT,\n    transpose: false,\n    layout: \"rect\",\n    fontSize: 15,\n    spacing: 1,\n    border: 0,\n    forceSquareRatio: false,\n    fontFamily: \"monospace\",\n    fontStyle: \"\",\n    fg: \"#ccc\",\n    bg: \"#000\",\n    tileWidth: 32,\n    tileHeight: 32,\n    tileMap: {},\n    tileSet: null,\n    tileColorize: false\n};\n/**\n * @class Visual map display\n */\nlet Display = /** @class */ (() => {\n    class Display {\n        constructor(options = {}) {\n            this._data = {};\n            this._dirty = false; // false = nothing, true = all, object = dirty cells\n            this._options = {};\n            options = Object.assign({}, DEFAULT_OPTIONS, options);\n            this.setOptions(options);\n            this.DEBUG = this.DEBUG.bind(this);\n            this._tick = this._tick.bind(this);\n            this._backend.schedule(this._tick);\n        }\n        /**\n         * Debug helper, ideal as a map generator callback. Always bound to this.\n         * @param {int} x\n         * @param {int} y\n         * @param {int} what\n         */\n        DEBUG(x, y, what) {\n            let colors = [this._options.bg, this._options.fg];\n            this.draw(x, y, null, null, colors[what % colors.length]);\n        }\n        /**\n         * Clear the whole display (cover it with background color)\n         */\n        clear() {\n            this._data = {};\n            this._dirty = true;\n        }\n        /**\n         * @see ROT.Display\n         */\n        setOptions(options) {\n            Object.assign(this._options, options);\n            if (options.width || options.height || options.fontSize || options.fontFamily || options.spacing || options.layout) {\n                if (options.layout) {\n                    let ctor = BACKENDS[options.layout];\n                    this._backend = new ctor();\n                }\n                this._backend.setOptions(this._options);\n                this._dirty = true;\n            }\n            return this;\n        }\n        /**\n         * Returns currently set options\n         */\n        getOptions() { return this._options; }\n        /**\n         * Returns the DOM node of this display\n         */\n        getContainer() { return this._backend.getContainer(); }\n        /**\n         * Compute the maximum width/height to fit into a set of given constraints\n         * @param {int} availWidth Maximum allowed pixel width\n         * @param {int} availHeight Maximum allowed pixel height\n         * @returns {int[2]} cellWidth,cellHeight\n         */\n        computeSize(availWidth, availHeight) {\n            return this._backend.computeSize(availWidth, availHeight);\n        }\n        /**\n         * Compute the maximum font size to fit into a set of given constraints\n         * @param {int} availWidth Maximum allowed pixel width\n         * @param {int} availHeight Maximum allowed pixel height\n         * @returns {int} fontSize\n         */\n        computeFontSize(availWidth, availHeight) {\n            return this._backend.computeFontSize(availWidth, availHeight);\n        }\n        computeTileSize(availWidth, availHeight) {\n            let width = Math.floor(availWidth / this._options.width);\n            let height = Math.floor(availHeight / this._options.height);\n            return [width, height];\n        }\n        /**\n         * Convert a DOM event (mouse or touch) to map coordinates. Uses first touch for multi-touch.\n         * @param {Event} e event\n         * @returns {int[2]} -1 for values outside of the canvas\n         */\n        eventToPosition(e) {\n            let x, y;\n            if (\"touches\" in e) {\n                x = e.touches[0].clientX;\n                y = e.touches[0].clientY;\n            }\n            else {\n                x = e.clientX;\n                y = e.clientY;\n            }\n            return this._backend.eventToPosition(x, y);\n        }\n        /**\n         * @param {int} x\n         * @param {int} y\n         * @param {string || string[]} ch One or more chars (will be overlapping themselves)\n         * @param {string} [fg] foreground color\n         * @param {string} [bg] background color\n         */\n        draw(x, y, ch, fg, bg) {\n            if (!fg) {\n                fg = this._options.fg;\n            }\n            if (!bg) {\n                bg = this._options.bg;\n            }\n            let key = `${x},${y}`;\n            this._data[key] = [x, y, ch, fg, bg];\n            if (this._dirty === true) {\n                return;\n            } // will already redraw everything \n            if (!this._dirty) {\n                this._dirty = {};\n            } // first!\n            this._dirty[key] = true;\n        }\n        /**\n         * Draws a text at given position. Optionally wraps at a maximum length. Currently does not work with hex layout.\n         * @param {int} x\n         * @param {int} y\n         * @param {string} text May contain color/background format specifiers, %c{name}/%b{name}, both optional. %c{}/%b{} resets to default.\n         * @param {int} [maxWidth] wrap at what width?\n         * @returns {int} lines drawn\n         */\n        drawText(x, y, text, maxWidth) {\n            let fg = null;\n            let bg = null;\n            let cx = x;\n            let cy = y;\n            let lines = 1;\n            if (!maxWidth) {\n                maxWidth = this._options.width - x;\n            }\n            let tokens = Text.tokenize(text, maxWidth);\n            while (tokens.length) { // interpret tokenized opcode stream\n                let token = tokens.shift();\n                switch (token.type) {\n                    case Text.TYPE_TEXT:\n                        let isSpace = false, isPrevSpace = false, isFullWidth = false, isPrevFullWidth = false;\n                        for (let i = 0; i < token.value.length; i++) {\n                            let cc = token.value.charCodeAt(i);\n                            let c = token.value.charAt(i);\n                            if (this._options.layout === \"term\") {\n                                let cch = cc >> 8;\n                                let isCJK = cch === 0x11 || (cch >= 0x2e && cch <= 0x9f) || (cch >= 0xac && cch <= 0xd7) || (cc >= 0xA960 && cc <= 0xA97F);\n                                if (isCJK) {\n                                    this.draw(cx + 0, cy, c, fg, bg);\n                                    this.draw(cx + 1, cy, \"\\t\", fg, bg);\n                                    cx += 2;\n                                    continue;\n                                }\n                            }\n                            // Assign to `true` when the current char is full-width.\n                            isFullWidth = (cc > 0xff00 && cc < 0xff61) || (cc > 0xffdc && cc < 0xffe8) || cc > 0xffee;\n                            // Current char is space, whatever full-width or half-width both are OK.\n                            isSpace = (c.charCodeAt(0) == 0x20 || c.charCodeAt(0) == 0x3000);\n                            // The previous char is full-width and\n                            // current char is nether half-width nor a space.\n                            if (isPrevFullWidth && !isFullWidth && !isSpace) {\n                                cx++;\n                            } // add an extra position\n                            // The current char is full-width and\n                            // the previous char is not a space.\n                            if (isFullWidth && !isPrevSpace) {\n                                cx++;\n                            } // add an extra position\n                            this.draw(cx++, cy, c, fg, bg);\n                            isPrevSpace = isSpace;\n                            isPrevFullWidth = isFullWidth;\n                        }\n                        break;\n                    case Text.TYPE_FG:\n                        fg = token.value || null;\n                        break;\n                    case Text.TYPE_BG:\n                        bg = token.value || null;\n                        break;\n                    case Text.TYPE_NEWLINE:\n                        cx = x;\n                        cy++;\n                        lines++;\n                        break;\n                }\n            }\n            return lines;\n        }\n        /**\n         * Timer tick: update dirty parts\n         */\n        _tick() {\n            this._backend.schedule(this._tick);\n            if (!this._dirty) {\n                return;\n            }\n            if (this._dirty === true) { // draw all\n                this._backend.clear();\n                for (let id in this._data) {\n                    this._draw(id, false);\n                } // redraw cached data \n            }\n            else { // draw only dirty \n                for (let key in this._dirty) {\n                    this._draw(key, true);\n                }\n            }\n            this._dirty = false;\n        }\n        /**\n         * @param {string} key What to draw\n         * @param {bool} clearBefore Is it necessary to clean before?\n         */\n        _draw(key, clearBefore) {\n            let data = this._data[key];\n            if (data[4] != this._options.bg) {\n                clearBefore = true;\n            }\n            this._backend.draw(data, clearBefore);\n        }\n    }\n    Display.Rect = Rect;\n    Display.Hex = Hex;\n    Display.Tile = Tile;\n    Display.TileGL = TileGL;\n    Display.Term = Term;\n    return Display;\n})();\nexport default Display;\n","import Canvas from \"./canvas.js\";\nimport { mod } from \"../util.js\";\n/**\n * @class Hexagonal backend\n * @private\n */\nexport default class Hex extends Canvas {\n    constructor() {\n        super();\n        this._spacingX = 0;\n        this._spacingY = 0;\n        this._hexSize = 0;\n    }\n    draw(data, clearBefore) {\n        let [x, y, ch, fg, bg] = data;\n        let px = [\n            (x + 1) * this._spacingX,\n            y * this._spacingY + this._hexSize\n        ];\n        if (this._options.transpose) {\n            px.reverse();\n        }\n        if (clearBefore) {\n            this._ctx.fillStyle = bg;\n            this._fill(px[0], px[1]);\n        }\n        if (!ch) {\n            return;\n        }\n        this._ctx.fillStyle = fg;\n        let chars = [].concat(ch);\n        for (let i = 0; i < chars.length; i++) {\n            this._ctx.fillText(chars[i], px[0], Math.ceil(px[1]));\n        }\n    }\n    computeSize(availWidth, availHeight) {\n        if (this._options.transpose) {\n            availWidth += availHeight;\n            availHeight = availWidth - availHeight;\n            availWidth -= availHeight;\n        }\n        let width = Math.floor(availWidth / this._spacingX) - 1;\n        let height = Math.floor((availHeight - 2 * this._hexSize) / this._spacingY + 1);\n        return [width, height];\n    }\n    computeFontSize(availWidth, availHeight) {\n        if (this._options.transpose) {\n            availWidth += availHeight;\n            availHeight = availWidth - availHeight;\n            availWidth -= availHeight;\n        }\n        let hexSizeWidth = 2 * availWidth / ((this._options.width + 1) * Math.sqrt(3)) - 1;\n        let hexSizeHeight = availHeight / (2 + 1.5 * (this._options.height - 1));\n        let hexSize = Math.min(hexSizeWidth, hexSizeHeight);\n        // compute char ratio\n        let oldFont = this._ctx.font;\n        this._ctx.font = \"100px \" + this._options.fontFamily;\n        let width = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._ctx.font = oldFont;\n        let ratio = width / 100;\n        hexSize = Math.floor(hexSize) + 1; // closest larger hexSize\n        // FIXME char size computation does not respect transposed hexes\n        let fontSize = 2 * hexSize / (this._options.spacing * (1 + ratio / Math.sqrt(3)));\n        // closest smaller fontSize\n        return Math.ceil(fontSize) - 1;\n    }\n    _normalizedEventToPosition(x, y) {\n        let nodeSize;\n        if (this._options.transpose) {\n            x += y;\n            y = x - y;\n            x -= y;\n            nodeSize = this._ctx.canvas.width;\n        }\n        else {\n            nodeSize = this._ctx.canvas.height;\n        }\n        let size = nodeSize / this._options.height;\n        y = Math.floor(y / size);\n        if (mod(y, 2)) { /* odd row */\n            x -= this._spacingX;\n            x = 1 + 2 * Math.floor(x / (2 * this._spacingX));\n        }\n        else {\n            x = 2 * Math.floor(x / (2 * this._spacingX));\n        }\n        return [x, y];\n    }\n    /**\n     * Arguments are pixel values. If \"transposed\" mode is enabled, then these two are already swapped.\n     */\n    _fill(cx, cy) {\n        let a = this._hexSize;\n        let b = this._options.border;\n        const ctx = this._ctx;\n        ctx.beginPath();\n        if (this._options.transpose) {\n            ctx.moveTo(cx - a + b, cy);\n            ctx.lineTo(cx - a / 2 + b, cy + this._spacingX - b);\n            ctx.lineTo(cx + a / 2 - b, cy + this._spacingX - b);\n            ctx.lineTo(cx + a - b, cy);\n            ctx.lineTo(cx + a / 2 - b, cy - this._spacingX + b);\n            ctx.lineTo(cx - a / 2 + b, cy - this._spacingX + b);\n            ctx.lineTo(cx - a + b, cy);\n        }\n        else {\n            ctx.moveTo(cx, cy - a + b);\n            ctx.lineTo(cx + this._spacingX - b, cy - a / 2 + b);\n            ctx.lineTo(cx + this._spacingX - b, cy + a / 2 - b);\n            ctx.lineTo(cx, cy + a - b);\n            ctx.lineTo(cx - this._spacingX + b, cy + a / 2 - b);\n            ctx.lineTo(cx - this._spacingX + b, cy - a / 2 + b);\n            ctx.lineTo(cx, cy - a + b);\n        }\n        ctx.fill();\n    }\n    _updateSize() {\n        const opts = this._options;\n        const charWidth = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._hexSize = Math.floor(opts.spacing * (opts.fontSize + charWidth / Math.sqrt(3)) / 2);\n        this._spacingX = this._hexSize * Math.sqrt(3) / 2;\n        this._spacingY = this._hexSize * 1.5;\n        let xprop;\n        let yprop;\n        if (opts.transpose) {\n            xprop = \"height\";\n            yprop = \"width\";\n        }\n        else {\n            xprop = \"width\";\n            yprop = \"height\";\n        }\n        this._ctx.canvas[xprop] = Math.ceil((opts.width + 1) * this._spacingX);\n        this._ctx.canvas[yprop] = Math.ceil((opts.height - 1) * this._spacingY + 2 * this._hexSize);\n    }\n}\n","import Backend from \"./backend.js\";\nexport default class Canvas extends Backend {\n    constructor() {\n        super();\n        this._ctx = document.createElement(\"canvas\").getContext(\"2d\");\n    }\n    schedule(cb) { requestAnimationFrame(cb); }\n    getContainer() { return this._ctx.canvas; }\n    setOptions(opts) {\n        super.setOptions(opts);\n        const style = (opts.fontStyle ? `${opts.fontStyle} ` : ``);\n        const font = `${style} ${opts.fontSize}px ${opts.fontFamily}`;\n        this._ctx.font = font;\n        this._updateSize();\n        this._ctx.font = font;\n        this._ctx.textAlign = \"center\";\n        this._ctx.textBaseline = \"middle\";\n    }\n    clear() {\n        this._ctx.fillStyle = this._options.bg;\n        this._ctx.fillRect(0, 0, this._ctx.canvas.width, this._ctx.canvas.height);\n    }\n    eventToPosition(x, y) {\n        let canvas = this._ctx.canvas;\n        let rect = canvas.getBoundingClientRect();\n        x -= rect.left;\n        y -= rect.top;\n        x *= canvas.width / rect.width;\n        y *= canvas.height / rect.height;\n        if (x < 0 || y < 0 || x >= canvas.width || y >= canvas.height) {\n            return [-1, -1];\n        }\n        return this._normalizedEventToPosition(x, y);\n    }\n}\n","/**\n * @class Abstract display backend module\n * @private\n */\nexport default class Backend {\n    getContainer() { return null; }\n    setOptions(options) { this._options = options; }\n}\n","import Canvas from \"./canvas.js\";\n/**\n * @class Rectangular backend\n * @private\n */\nlet Rect = /** @class */ (() => {\n    class Rect extends Canvas {\n        constructor() {\n            super();\n            this._spacingX = 0;\n            this._spacingY = 0;\n            this._canvasCache = {};\n        }\n        setOptions(options) {\n            super.setOptions(options);\n            this._canvasCache = {};\n        }\n        draw(data, clearBefore) {\n            if (Rect.cache) {\n                this._drawWithCache(data);\n            }\n            else {\n                this._drawNoCache(data, clearBefore);\n            }\n        }\n        _drawWithCache(data) {\n            let [x, y, ch, fg, bg] = data;\n            let hash = \"\" + ch + fg + bg;\n            let canvas;\n            if (hash in this._canvasCache) {\n                canvas = this._canvasCache[hash];\n            }\n            else {\n                let b = this._options.border;\n                canvas = document.createElement(\"canvas\");\n                let ctx = canvas.getContext(\"2d\");\n                canvas.width = this._spacingX;\n                canvas.height = this._spacingY;\n                ctx.fillStyle = bg;\n                ctx.fillRect(b, b, canvas.width - b, canvas.height - b);\n                if (ch) {\n                    ctx.fillStyle = fg;\n                    ctx.font = this._ctx.font;\n                    ctx.textAlign = \"center\";\n                    ctx.textBaseline = \"middle\";\n                    let chars = [].concat(ch);\n                    for (let i = 0; i < chars.length; i++) {\n                        ctx.fillText(chars[i], this._spacingX / 2, Math.ceil(this._spacingY / 2));\n                    }\n                }\n                this._canvasCache[hash] = canvas;\n            }\n            this._ctx.drawImage(canvas, x * this._spacingX, y * this._spacingY);\n        }\n        _drawNoCache(data, clearBefore) {\n            let [x, y, ch, fg, bg] = data;\n            if (clearBefore) {\n                let b = this._options.border;\n                this._ctx.fillStyle = bg;\n                this._ctx.fillRect(x * this._spacingX + b, y * this._spacingY + b, this._spacingX - b, this._spacingY - b);\n            }\n            if (!ch) {\n                return;\n            }\n            this._ctx.fillStyle = fg;\n            let chars = [].concat(ch);\n            for (let i = 0; i < chars.length; i++) {\n                this._ctx.fillText(chars[i], (x + 0.5) * this._spacingX, Math.ceil((y + 0.5) * this._spacingY));\n            }\n        }\n        computeSize(availWidth, availHeight) {\n            let width = Math.floor(availWidth / this._spacingX);\n            let height = Math.floor(availHeight / this._spacingY);\n            return [width, height];\n        }\n        computeFontSize(availWidth, availHeight) {\n            let boxWidth = Math.floor(availWidth / this._options.width);\n            let boxHeight = Math.floor(availHeight / this._options.height);\n            /* compute char ratio */\n            let oldFont = this._ctx.font;\n            this._ctx.font = \"100px \" + this._options.fontFamily;\n            let width = Math.ceil(this._ctx.measureText(\"W\").width);\n            this._ctx.font = oldFont;\n            let ratio = width / 100;\n            let widthFraction = ratio * boxHeight / boxWidth;\n            if (widthFraction > 1) { /* too wide with current aspect ratio */\n                boxHeight = Math.floor(boxHeight / widthFraction);\n            }\n            return Math.floor(boxHeight / this._options.spacing);\n        }\n        _normalizedEventToPosition(x, y) {\n            return [Math.floor(x / this._spacingX), Math.floor(y / this._spacingY)];\n        }\n        _updateSize() {\n            const opts = this._options;\n            const charWidth = Math.ceil(this._ctx.measureText(\"W\").width);\n            this._spacingX = Math.ceil(opts.spacing * charWidth);\n            this._spacingY = Math.ceil(opts.spacing * opts.fontSize);\n            if (opts.forceSquareRatio) {\n                this._spacingX = this._spacingY = Math.max(this._spacingX, this._spacingY);\n            }\n            this._ctx.canvas.width = opts.width * this._spacingX;\n            this._ctx.canvas.height = opts.height * this._spacingY;\n        }\n    }\n    Rect.cache = false;\n    return Rect;\n})();\nexport default Rect;\n","import Canvas from \"./canvas.js\";\n/**\n * @class Tile backend\n * @private\n */\nexport default class Tile extends Canvas {\n    constructor() {\n        super();\n        this._colorCanvas = document.createElement(\"canvas\");\n    }\n    draw(data, clearBefore) {\n        let [x, y, ch, fg, bg] = data;\n        let tileWidth = this._options.tileWidth;\n        let tileHeight = this._options.tileHeight;\n        if (clearBefore) {\n            if (this._options.tileColorize) {\n                this._ctx.clearRect(x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n            else {\n                this._ctx.fillStyle = bg;\n                this._ctx.fillRect(x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n        }\n        if (!ch) {\n            return;\n        }\n        let chars = [].concat(ch);\n        let fgs = [].concat(fg);\n        let bgs = [].concat(bg);\n        for (let i = 0; i < chars.length; i++) {\n            let tile = this._options.tileMap[chars[i]];\n            if (!tile) {\n                throw new Error(`Char \"${chars[i]}\" not found in tileMap`);\n            }\n            if (this._options.tileColorize) { // apply colorization\n                let canvas = this._colorCanvas;\n                let context = canvas.getContext(\"2d\");\n                context.globalCompositeOperation = \"source-over\";\n                context.clearRect(0, 0, tileWidth, tileHeight);\n                let fg = fgs[i];\n                let bg = bgs[i];\n                context.drawImage(this._options.tileSet, tile[0], tile[1], tileWidth, tileHeight, 0, 0, tileWidth, tileHeight);\n                if (fg != \"transparent\") {\n                    context.fillStyle = fg;\n                    context.globalCompositeOperation = \"source-atop\";\n                    context.fillRect(0, 0, tileWidth, tileHeight);\n                }\n                if (bg != \"transparent\") {\n                    context.fillStyle = bg;\n                    context.globalCompositeOperation = \"destination-over\";\n                    context.fillRect(0, 0, tileWidth, tileHeight);\n                }\n                this._ctx.drawImage(canvas, x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n            else { // no colorizing, easy\n                this._ctx.drawImage(this._options.tileSet, tile[0], tile[1], tileWidth, tileHeight, x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n        }\n    }\n    computeSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._options.tileWidth);\n        let height = Math.floor(availHeight / this._options.tileHeight);\n        return [width, height];\n    }\n    computeFontSize() {\n        throw new Error(\"Tile backend does not understand font size\");\n    }\n    _normalizedEventToPosition(x, y) {\n        return [Math.floor(x / this._options.tileWidth), Math.floor(y / this._options.tileHeight)];\n    }\n    _updateSize() {\n        const opts = this._options;\n        this._ctx.canvas.width = opts.width * opts.tileWidth;\n        this._ctx.canvas.height = opts.height * opts.tileHeight;\n        this._colorCanvas.width = opts.tileWidth;\n        this._colorCanvas.height = opts.tileHeight;\n    }\n}\n","import Backend from \"./backend.js\";\nimport * as Color from \"../color.js\";\n/**\n * @class Tile backend\n * @private\n */\nexport default class TileGL extends Backend {\n    constructor() {\n        super();\n        this._uniforms = {};\n        try {\n            this._gl = this._initWebGL();\n        }\n        catch (e) {\n            alert(e.message);\n        }\n    }\n    static isSupported() {\n        return !!document.createElement(\"canvas\").getContext(\"webgl2\", { preserveDrawingBuffer: true });\n    }\n    schedule(cb) { requestAnimationFrame(cb); }\n    getContainer() { return this._gl.canvas; }\n    setOptions(opts) {\n        super.setOptions(opts);\n        this._updateSize();\n        let tileSet = this._options.tileSet;\n        if (tileSet && \"complete\" in tileSet && !tileSet.complete) {\n            tileSet.addEventListener(\"load\", () => this._updateTexture(tileSet));\n        }\n        else {\n            this._updateTexture(tileSet);\n        }\n    }\n    draw(data, clearBefore) {\n        const gl = this._gl;\n        const opts = this._options;\n        let [x, y, ch, fg, bg] = data;\n        let scissorY = gl.canvas.height - (y + 1) * opts.tileHeight;\n        gl.scissor(x * opts.tileWidth, scissorY, opts.tileWidth, opts.tileHeight);\n        if (clearBefore) {\n            if (opts.tileColorize) {\n                gl.clearColor(0, 0, 0, 0);\n            }\n            else {\n                gl.clearColor(...parseColor(bg));\n            }\n            gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n        if (!ch) {\n            return;\n        }\n        let chars = [].concat(ch);\n        let bgs = [].concat(bg);\n        let fgs = [].concat(fg);\n        gl.uniform2fv(this._uniforms[\"targetPosRel\"], [x, y]);\n        for (let i = 0; i < chars.length; i++) {\n            let tile = this._options.tileMap[chars[i]];\n            if (!tile) {\n                throw new Error(`Char \"${chars[i]}\" not found in tileMap`);\n            }\n            gl.uniform1f(this._uniforms[\"colorize\"], opts.tileColorize ? 1 : 0);\n            gl.uniform2fv(this._uniforms[\"tilesetPosAbs\"], tile);\n            if (opts.tileColorize) {\n                gl.uniform4fv(this._uniforms[\"tint\"], parseColor(fgs[i]));\n                gl.uniform4fv(this._uniforms[\"bg\"], parseColor(bgs[i]));\n            }\n            gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n        }\n        /*\n        \n        \n                for (let i=0;i<chars.length;i++) {\n        \n                    if (this._options.tileColorize) { // apply colorization\n                        let canvas = this._colorCanvas;\n                        let context = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n                        context.globalCompositeOperation = \"source-over\";\n                        context.clearRect(0, 0, tileWidth, tileHeight);\n        \n                        let fg = fgs[i];\n                        let bg = bgs[i];\n        \n                        context.drawImage(\n                            this._options.tileSet!,\n                            tile[0], tile[1], tileWidth, tileHeight,\n                            0, 0, tileWidth, tileHeight\n                        );\n        \n                        if (fg != \"transparent\") {\n                            context.fillStyle = fg;\n                            context.globalCompositeOperation = \"source-atop\";\n                            context.fillRect(0, 0, tileWidth, tileHeight);\n                        }\n        \n                        if (bg != \"transparent\") {\n                            context.fillStyle = bg;\n                            context.globalCompositeOperation = \"destination-over\";\n                            context.fillRect(0, 0, tileWidth, tileHeight);\n                        }\n        \n                        this._ctx.drawImage(canvas, x*tileWidth, y*tileHeight, tileWidth, tileHeight);\n                    } else { // no colorizing, easy\n                        this._ctx.drawImage(\n                            this._options.tileSet!,\n                            tile[0], tile[1], tileWidth, tileHeight,\n                            x*tileWidth, y*tileHeight, tileWidth, tileHeight\n                        );\n                    }\n                }\n        \n        */\n    }\n    clear() {\n        const gl = this._gl;\n        gl.clearColor(...parseColor(this._options.bg));\n        gl.scissor(0, 0, gl.canvas.width, gl.canvas.height);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n    }\n    computeSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._options.tileWidth);\n        let height = Math.floor(availHeight / this._options.tileHeight);\n        return [width, height];\n    }\n    computeFontSize() {\n        throw new Error(\"Tile backend does not understand font size\");\n    }\n    eventToPosition(x, y) {\n        let canvas = this._gl.canvas;\n        let rect = canvas.getBoundingClientRect();\n        x -= rect.left;\n        y -= rect.top;\n        x *= canvas.width / rect.width;\n        y *= canvas.height / rect.height;\n        if (x < 0 || y < 0 || x >= canvas.width || y >= canvas.height) {\n            return [-1, -1];\n        }\n        return this._normalizedEventToPosition(x, y);\n    }\n    _initWebGL() {\n        let gl = document.createElement(\"canvas\").getContext(\"webgl2\", { preserveDrawingBuffer: true });\n        window.gl = gl;\n        let program = createProgram(gl, VS, FS);\n        gl.useProgram(program);\n        createQuad(gl);\n        UNIFORMS.forEach(name => this._uniforms[name] = gl.getUniformLocation(program, name));\n        this._program = program;\n        gl.enable(gl.BLEND);\n        gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.enable(gl.SCISSOR_TEST);\n        return gl;\n    }\n    _normalizedEventToPosition(x, y) {\n        return [Math.floor(x / this._options.tileWidth), Math.floor(y / this._options.tileHeight)];\n    }\n    _updateSize() {\n        const gl = this._gl;\n        const opts = this._options;\n        const canvasSize = [opts.width * opts.tileWidth, opts.height * opts.tileHeight];\n        gl.canvas.width = canvasSize[0];\n        gl.canvas.height = canvasSize[1];\n        gl.viewport(0, 0, canvasSize[0], canvasSize[1]);\n        gl.uniform2fv(this._uniforms[\"tileSize\"], [opts.tileWidth, opts.tileHeight]);\n        gl.uniform2fv(this._uniforms[\"targetSize\"], canvasSize);\n    }\n    _updateTexture(tileSet) {\n        createTexture(this._gl, tileSet);\n    }\n}\nconst UNIFORMS = [\"targetPosRel\", \"tilesetPosAbs\", \"tileSize\", \"targetSize\", \"colorize\", \"bg\", \"tint\"];\nconst VS = `\n#version 300 es\n\nin vec2 tilePosRel;\nout vec2 tilesetPosPx;\n\nuniform vec2 tilesetPosAbs;\nuniform vec2 tileSize;\nuniform vec2 targetSize;\nuniform vec2 targetPosRel;\n\nvoid main() {\n\tvec2 targetPosPx = (targetPosRel + tilePosRel) * tileSize;\n\tvec2 targetPosNdc = ((targetPosPx / targetSize)-0.5)*2.0;\n\ttargetPosNdc.y *= -1.0;\n\n\tgl_Position = vec4(targetPosNdc, 0.0, 1.0);\n\ttilesetPosPx = tilesetPosAbs + tilePosRel * tileSize;\n}`.trim();\nconst FS = `\n#version 300 es\nprecision highp float;\n\nin vec2 tilesetPosPx;\nout vec4 fragColor;\nuniform sampler2D image;\nuniform bool colorize;\nuniform vec4 bg;\nuniform vec4 tint;\n\nvoid main() {\n\tfragColor = vec4(0, 0, 0, 1);\n\n\tvec4 texel = texelFetch(image, ivec2(tilesetPosPx), 0);\n\n\tif (colorize) {\n\t\ttexel.rgb = tint.a * tint.rgb + (1.0-tint.a) * texel.rgb;\n\t\tfragColor.rgb = texel.a*texel.rgb + (1.0-texel.a)*bg.rgb;\n\t\tfragColor.a = texel.a + (1.0-texel.a)*bg.a;\n\t} else {\n\t\tfragColor = texel;\n\t}\n}`.trim();\nfunction createProgram(gl, vss, fss) {\n    const vs = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vs, vss);\n    gl.compileShader(vs);\n    if (!gl.getShaderParameter(vs, gl.COMPILE_STATUS)) {\n        throw new Error(gl.getShaderInfoLog(vs) || \"\");\n    }\n    const fs = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fs, fss);\n    gl.compileShader(fs);\n    if (!gl.getShaderParameter(fs, gl.COMPILE_STATUS)) {\n        throw new Error(gl.getShaderInfoLog(fs) || \"\");\n    }\n    const p = gl.createProgram();\n    gl.attachShader(p, vs);\n    gl.attachShader(p, fs);\n    gl.linkProgram(p);\n    if (!gl.getProgramParameter(p, gl.LINK_STATUS)) {\n        throw new Error(gl.getProgramInfoLog(p) || \"\");\n    }\n    return p;\n}\nfunction createQuad(gl) {\n    const pos = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]);\n    const buf = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buf);\n    gl.bufferData(gl.ARRAY_BUFFER, pos, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(0);\n    gl.vertexAttribPointer(0, 2, gl.FLOAT, false, 0, 0);\n}\nfunction createTexture(gl, data) {\n    let t = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, t);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 0);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\n    return t;\n}\nlet colorCache = {};\nfunction parseColor(color) {\n    if (!(color in colorCache)) {\n        let parsed;\n        if (color == \"transparent\") {\n            parsed = [0, 0, 0, 0];\n        }\n        else if (color.indexOf(\"rgba\") > -1) {\n            parsed = (color.match(/[\\d.]+/g) || []).map(Number);\n            for (let i = 0; i < 3; i++) {\n                parsed[i] = parsed[i] / 255;\n            }\n        }\n        else {\n            parsed = Color.fromString(color).map($ => $ / 255);\n            parsed.push(1);\n        }\n        colorCache[color] = parsed;\n    }\n    return colorCache[color];\n}\n","import { clamp } from \"./util.js\";\nimport RNG from \"./rng.js\";\nexport function fromString(str) {\n    let cached, r;\n    if (str in CACHE) {\n        cached = CACHE[str];\n    }\n    else {\n        if (str.charAt(0) == \"#\") { // hex rgb\n            let matched = str.match(/[0-9a-f]/gi) || [];\n            let values = matched.map((x) => parseInt(x, 16));\n            if (values.length == 3) {\n                cached = values.map((x) => x * 17);\n            }\n            else {\n                for (let i = 0; i < 3; i++) {\n                    values[i + 1] += 16 * values[i];\n                    values.splice(i, 1);\n                }\n                cached = values;\n            }\n        }\n        else if ((r = str.match(/rgb\\(([0-9, ]+)\\)/i))) { // decimal rgb\n            cached = r[1].split(/\\s*,\\s*/).map((x) => parseInt(x));\n        }\n        else { // html name\n            cached = [0, 0, 0];\n        }\n        CACHE[str] = cached;\n    }\n    return cached.slice();\n}\n/**\n * Add two or more colors\n */\nexport function add(color1, ...colors) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            result[i] += colors[j][i];\n        }\n    }\n    return result;\n}\n/**\n * Add two or more colors, MODIFIES FIRST ARGUMENT\n */\nexport function add_(color1, ...colors) {\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            color1[i] += colors[j][i];\n        }\n    }\n    return color1;\n}\n/**\n * Multiply (mix) two or more colors\n */\nexport function multiply(color1, ...colors) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            result[i] *= colors[j][i] / 255;\n        }\n        result[i] = Math.round(result[i]);\n    }\n    return result;\n}\n/**\n * Multiply (mix) two or more colors, MODIFIES FIRST ARGUMENT\n */\nexport function multiply_(color1, ...colors) {\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            color1[i] *= colors[j][i] / 255;\n        }\n        color1[i] = Math.round(color1[i]);\n    }\n    return color1;\n}\n/**\n * Interpolate (blend) two colors with a given factor\n */\nexport function interpolate(color1, color2, factor = 0.5) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        result[i] = Math.round(result[i] + factor * (color2[i] - color1[i]));\n    }\n    return result;\n}\nexport const lerp = interpolate;\n/**\n * Interpolate (blend) two colors with a given factor in HSL mode\n */\nexport function interpolateHSL(color1, color2, factor = 0.5) {\n    let hsl1 = rgb2hsl(color1);\n    let hsl2 = rgb2hsl(color2);\n    for (let i = 0; i < 3; i++) {\n        hsl1[i] += factor * (hsl2[i] - hsl1[i]);\n    }\n    return hsl2rgb(hsl1);\n}\nexport const lerpHSL = interpolateHSL;\n/**\n * Create a new random color based on this one\n * @param color\n * @param diff Set of standard deviations\n */\nexport function randomize(color, diff) {\n    if (!(diff instanceof Array)) {\n        diff = Math.round(RNG.getNormal(0, diff));\n    }\n    let result = color.slice();\n    for (let i = 0; i < 3; i++) {\n        result[i] += (diff instanceof Array ? Math.round(RNG.getNormal(0, diff[i])) : diff);\n    }\n    return result;\n}\n/**\n * Converts an RGB color value to HSL. Expects 0..255 inputs, produces 0..1 outputs.\n */\nexport function rgb2hsl(color) {\n    let r = color[0] / 255;\n    let g = color[1] / 255;\n    let b = color[2] / 255;\n    let max = Math.max(r, g, b), min = Math.min(r, g, b);\n    let h = 0, s, l = (max + min) / 2;\n    if (max == min) {\n        s = 0; // achromatic\n    }\n    else {\n        let d = max - min;\n        s = (l > 0.5 ? d / (2 - max - min) : d / (max + min));\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n        }\n        h /= 6;\n    }\n    return [h, s, l];\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n/**\n * Converts an HSL color value to RGB. Expects 0..1 inputs, produces 0..255 outputs.\n */\nexport function hsl2rgb(color) {\n    let l = color[2];\n    if (color[1] == 0) {\n        l = Math.round(l * 255);\n        return [l, l, l];\n    }\n    else {\n        let s = color[1];\n        let q = (l < 0.5 ? l * (1 + s) : l + s - l * s);\n        let p = 2 * l - q;\n        let r = hue2rgb(p, q, color[0] + 1 / 3);\n        let g = hue2rgb(p, q, color[0]);\n        let b = hue2rgb(p, q, color[0] - 1 / 3);\n        return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n    }\n}\nexport function toRGB(color) {\n    let clamped = color.map(x => clamp(x, 0, 255));\n    return `rgb(${clamped.join(\",\")})`;\n}\nexport function toHex(color) {\n    let clamped = color.map(x => clamp(x, 0, 255).toString(16).padStart(2, \"0\"));\n    return `#${clamped.join(\"\")}`;\n}\nconst CACHE = {\n    \"black\": [0, 0, 0],\n    \"navy\": [0, 0, 128],\n    \"darkblue\": [0, 0, 139],\n    \"mediumblue\": [0, 0, 205],\n    \"blue\": [0, 0, 255],\n    \"darkgreen\": [0, 100, 0],\n    \"green\": [0, 128, 0],\n    \"teal\": [0, 128, 128],\n    \"darkcyan\": [0, 139, 139],\n    \"deepskyblue\": [0, 191, 255],\n    \"darkturquoise\": [0, 206, 209],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"lime\": [0, 255, 0],\n    \"springgreen\": [0, 255, 127],\n    \"aqua\": [0, 255, 255],\n    \"cyan\": [0, 255, 255],\n    \"midnightblue\": [25, 25, 112],\n    \"dodgerblue\": [30, 144, 255],\n    \"forestgreen\": [34, 139, 34],\n    \"seagreen\": [46, 139, 87],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"limegreen\": [50, 205, 50],\n    \"mediumseagreen\": [60, 179, 113],\n    \"turquoise\": [64, 224, 208],\n    \"royalblue\": [65, 105, 225],\n    \"steelblue\": [70, 130, 180],\n    \"darkslateblue\": [72, 61, 139],\n    \"mediumturquoise\": [72, 209, 204],\n    \"indigo\": [75, 0, 130],\n    \"darkolivegreen\": [85, 107, 47],\n    \"cadetblue\": [95, 158, 160],\n    \"cornflowerblue\": [100, 149, 237],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"slateblue\": [106, 90, 205],\n    \"olivedrab\": [107, 142, 35],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"mediumslateblue\": [123, 104, 238],\n    \"lawngreen\": [124, 252, 0],\n    \"chartreuse\": [127, 255, 0],\n    \"aquamarine\": [127, 255, 212],\n    \"maroon\": [128, 0, 0],\n    \"purple\": [128, 0, 128],\n    \"olive\": [128, 128, 0],\n    \"gray\": [128, 128, 128],\n    \"grey\": [128, 128, 128],\n    \"skyblue\": [135, 206, 235],\n    \"lightskyblue\": [135, 206, 250],\n    \"blueviolet\": [138, 43, 226],\n    \"darkred\": [139, 0, 0],\n    \"darkmagenta\": [139, 0, 139],\n    \"saddlebrown\": [139, 69, 19],\n    \"darkseagreen\": [143, 188, 143],\n    \"lightgreen\": [144, 238, 144],\n    \"mediumpurple\": [147, 112, 216],\n    \"darkviolet\": [148, 0, 211],\n    \"palegreen\": [152, 251, 152],\n    \"darkorchid\": [153, 50, 204],\n    \"yellowgreen\": [154, 205, 50],\n    \"sienna\": [160, 82, 45],\n    \"brown\": [165, 42, 42],\n    \"darkgray\": [169, 169, 169],\n    \"darkgrey\": [169, 169, 169],\n    \"lightblue\": [173, 216, 230],\n    \"greenyellow\": [173, 255, 47],\n    \"paleturquoise\": [175, 238, 238],\n    \"lightsteelblue\": [176, 196, 222],\n    \"powderblue\": [176, 224, 230],\n    \"firebrick\": [178, 34, 34],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"mediumorchid\": [186, 85, 211],\n    \"rosybrown\": [188, 143, 143],\n    \"darkkhaki\": [189, 183, 107],\n    \"silver\": [192, 192, 192],\n    \"mediumvioletred\": [199, 21, 133],\n    \"indianred\": [205, 92, 92],\n    \"peru\": [205, 133, 63],\n    \"chocolate\": [210, 105, 30],\n    \"tan\": [210, 180, 140],\n    \"lightgray\": [211, 211, 211],\n    \"lightgrey\": [211, 211, 211],\n    \"palevioletred\": [216, 112, 147],\n    \"thistle\": [216, 191, 216],\n    \"orchid\": [218, 112, 214],\n    \"goldenrod\": [218, 165, 32],\n    \"crimson\": [220, 20, 60],\n    \"gainsboro\": [220, 220, 220],\n    \"plum\": [221, 160, 221],\n    \"burlywood\": [222, 184, 135],\n    \"lightcyan\": [224, 255, 255],\n    \"lavender\": [230, 230, 250],\n    \"darksalmon\": [233, 150, 122],\n    \"violet\": [238, 130, 238],\n    \"palegoldenrod\": [238, 232, 170],\n    \"lightcoral\": [240, 128, 128],\n    \"khaki\": [240, 230, 140],\n    \"aliceblue\": [240, 248, 255],\n    \"honeydew\": [240, 255, 240],\n    \"azure\": [240, 255, 255],\n    \"sandybrown\": [244, 164, 96],\n    \"wheat\": [245, 222, 179],\n    \"beige\": [245, 245, 220],\n    \"whitesmoke\": [245, 245, 245],\n    \"mintcream\": [245, 255, 250],\n    \"ghostwhite\": [248, 248, 255],\n    \"salmon\": [250, 128, 114],\n    \"antiquewhite\": [250, 235, 215],\n    \"linen\": [250, 240, 230],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"oldlace\": [253, 245, 230],\n    \"red\": [255, 0, 0],\n    \"fuchsia\": [255, 0, 255],\n    \"magenta\": [255, 0, 255],\n    \"deeppink\": [255, 20, 147],\n    \"orangered\": [255, 69, 0],\n    \"tomato\": [255, 99, 71],\n    \"hotpink\": [255, 105, 180],\n    \"coral\": [255, 127, 80],\n    \"darkorange\": [255, 140, 0],\n    \"lightsalmon\": [255, 160, 122],\n    \"orange\": [255, 165, 0],\n    \"lightpink\": [255, 182, 193],\n    \"pink\": [255, 192, 203],\n    \"gold\": [255, 215, 0],\n    \"peachpuff\": [255, 218, 185],\n    \"navajowhite\": [255, 222, 173],\n    \"moccasin\": [255, 228, 181],\n    \"bisque\": [255, 228, 196],\n    \"mistyrose\": [255, 228, 225],\n    \"blanchedalmond\": [255, 235, 205],\n    \"papayawhip\": [255, 239, 213],\n    \"lavenderblush\": [255, 240, 245],\n    \"seashell\": [255, 245, 238],\n    \"cornsilk\": [255, 248, 220],\n    \"lemonchiffon\": [255, 250, 205],\n    \"floralwhite\": [255, 250, 240],\n    \"snow\": [255, 250, 250],\n    \"yellow\": [255, 255, 0],\n    \"lightyellow\": [255, 255, 224],\n    \"ivory\": [255, 255, 240],\n    \"white\": [255, 255, 255]\n};\n","import Backend from \"./backend.js\";\nimport * as Color from \"../color.js\";\nfunction clearToAnsi(bg) {\n    return `\\x1b[0;48;5;${termcolor(bg)}m\\x1b[2J`;\n}\nfunction colorToAnsi(fg, bg) {\n    return `\\x1b[0;38;5;${termcolor(fg)};48;5;${termcolor(bg)}m`;\n}\nfunction positionToAnsi(x, y) {\n    return `\\x1b[${y + 1};${x + 1}H`;\n}\nfunction termcolor(color) {\n    const SRC_COLORS = 256.0;\n    const DST_COLORS = 6.0;\n    const COLOR_RATIO = DST_COLORS / SRC_COLORS;\n    let rgb = Color.fromString(color);\n    let r = Math.floor(rgb[0] * COLOR_RATIO);\n    let g = Math.floor(rgb[1] * COLOR_RATIO);\n    let b = Math.floor(rgb[2] * COLOR_RATIO);\n    return r * 36 + g * 6 + b * 1 + 16;\n}\nexport default class Term extends Backend {\n    constructor() {\n        super();\n        this._offset = [0, 0];\n        this._cursor = [-1, -1];\n        this._lastColor = \"\";\n    }\n    schedule(cb) { setTimeout(cb, 1000 / 60); }\n    setOptions(options) {\n        super.setOptions(options);\n        let size = [options.width, options.height];\n        let avail = this.computeSize();\n        this._offset = avail.map((val, index) => Math.floor((val - size[index]) / 2));\n    }\n    clear() {\n        process.stdout.write(clearToAnsi(this._options.bg));\n    }\n    draw(data, clearBefore) {\n        // determine where to draw what with what colors\n        let [x, y, ch, fg, bg] = data;\n        // determine if we need to move the terminal cursor\n        let dx = this._offset[0] + x;\n        let dy = this._offset[1] + y;\n        let size = this.computeSize();\n        if (dx < 0 || dx >= size[0]) {\n            return;\n        }\n        if (dy < 0 || dy >= size[1]) {\n            return;\n        }\n        if (dx !== this._cursor[0] || dy !== this._cursor[1]) {\n            process.stdout.write(positionToAnsi(dx, dy));\n            this._cursor[0] = dx;\n            this._cursor[1] = dy;\n        }\n        // terminals automatically clear, but if we're clearing when we're\n        // not otherwise provided with a character, just use a space instead\n        if (clearBefore) {\n            if (!ch) {\n                ch = \" \";\n            }\n        }\n        // if we're not clearing and not provided with a character, do nothing\n        if (!ch) {\n            return;\n        }\n        // determine if we need to change colors\n        let newColor = colorToAnsi(fg, bg);\n        if (newColor !== this._lastColor) {\n            process.stdout.write(newColor);\n            this._lastColor = newColor;\n        }\n        if (ch != '\\t') {\n            // write the provided symbol to the display\n            let chars = [].concat(ch);\n            process.stdout.write(chars[0]);\n        }\n        // update our position, given that we wrote a character\n        this._cursor[0]++;\n        if (this._cursor[0] >= size[0]) {\n            this._cursor[0] = 0;\n            this._cursor[1]++;\n        }\n    }\n    computeFontSize() { throw new Error(\"Terminal backend has no notion of font size\"); }\n    eventToPosition(x, y) { return [x, y]; }\n    computeSize() { return [process.stdout.columns, process.stdout.rows]; }\n}\n","/**\n * @namespace\n * Contains text tokenization and breaking routines\n */\nconst RE_COLORS = /%([bc]){([^}]*)}/g;\n// token types\nexport const TYPE_TEXT = 0;\nexport const TYPE_NEWLINE = 1;\nexport const TYPE_FG = 2;\nexport const TYPE_BG = 3;\n/**\n * Measure size of a resulting text block\n */\nexport function measure(str, maxWidth) {\n    let result = { width: 0, height: 1 };\n    let tokens = tokenize(str, maxWidth);\n    let lineWidth = 0;\n    for (let i = 0; i < tokens.length; i++) {\n        let token = tokens[i];\n        switch (token.type) {\n            case TYPE_TEXT:\n                lineWidth += token.value.length;\n                break;\n            case TYPE_NEWLINE:\n                result.height++;\n                result.width = Math.max(result.width, lineWidth);\n                lineWidth = 0;\n                break;\n        }\n    }\n    result.width = Math.max(result.width, lineWidth);\n    return result;\n}\n/**\n * Convert string to a series of a formatting commands\n */\nexport function tokenize(str, maxWidth) {\n    let result = [];\n    /* first tokenization pass - split texts and color formatting commands */\n    let offset = 0;\n    str.replace(RE_COLORS, function (match, type, name, index) {\n        /* string before */\n        let part = str.substring(offset, index);\n        if (part.length) {\n            result.push({\n                type: TYPE_TEXT,\n                value: part\n            });\n        }\n        /* color command */\n        result.push({\n            type: (type == \"c\" ? TYPE_FG : TYPE_BG),\n            value: name.trim()\n        });\n        offset = index + match.length;\n        return \"\";\n    });\n    /* last remaining part */\n    let part = str.substring(offset);\n    if (part.length) {\n        result.push({\n            type: TYPE_TEXT,\n            value: part\n        });\n    }\n    return breakLines(result, maxWidth);\n}\n/* insert line breaks into first-pass tokenized data */\nfunction breakLines(tokens, maxWidth) {\n    if (!maxWidth) {\n        maxWidth = Infinity;\n    }\n    let i = 0;\n    let lineLength = 0;\n    let lastTokenWithSpace = -1;\n    while (i < tokens.length) { /* take all text tokens, remove space, apply linebreaks */\n        let token = tokens[i];\n        if (token.type == TYPE_NEWLINE) { /* reset */\n            lineLength = 0;\n            lastTokenWithSpace = -1;\n        }\n        if (token.type != TYPE_TEXT) { /* skip non-text tokens */\n            i++;\n            continue;\n        }\n        /* remove spaces at the beginning of line */\n        while (lineLength == 0 && token.value.charAt(0) == \" \") {\n            token.value = token.value.substring(1);\n        }\n        /* forced newline? insert two new tokens after this one */\n        let index = token.value.indexOf(\"\\n\");\n        if (index != -1) {\n            token.value = breakInsideToken(tokens, i, index, true);\n            /* if there are spaces at the end, we must remove them (we do not want the line too long) */\n            let arr = token.value.split(\"\");\n            while (arr.length && arr[arr.length - 1] == \" \") {\n                arr.pop();\n            }\n            token.value = arr.join(\"\");\n        }\n        /* token degenerated? */\n        if (!token.value.length) {\n            tokens.splice(i, 1);\n            continue;\n        }\n        if (lineLength + token.value.length > maxWidth) { /* line too long, find a suitable breaking spot */\n            /* is it possible to break within this token? */\n            let index = -1;\n            while (1) {\n                let nextIndex = token.value.indexOf(\" \", index + 1);\n                if (nextIndex == -1) {\n                    break;\n                }\n                if (lineLength + nextIndex > maxWidth) {\n                    break;\n                }\n                index = nextIndex;\n            }\n            if (index != -1) { /* break at space within this one */\n                token.value = breakInsideToken(tokens, i, index, true);\n            }\n            else if (lastTokenWithSpace != -1) { /* is there a previous token where a break can occur? */\n                let token = tokens[lastTokenWithSpace];\n                let breakIndex = token.value.lastIndexOf(\" \");\n                token.value = breakInsideToken(tokens, lastTokenWithSpace, breakIndex, true);\n                i = lastTokenWithSpace;\n            }\n            else { /* force break in this token */\n                token.value = breakInsideToken(tokens, i, maxWidth - lineLength, false);\n            }\n        }\n        else { /* line not long, continue */\n            lineLength += token.value.length;\n            if (token.value.indexOf(\" \") != -1) {\n                lastTokenWithSpace = i;\n            }\n        }\n        i++; /* advance to next token */\n    }\n    tokens.push({ type: TYPE_NEWLINE }); /* insert fake newline to fix the last text line */\n    /* remove trailing space from text tokens before newlines */\n    let lastTextToken = null;\n    for (let i = 0; i < tokens.length; i++) {\n        let token = tokens[i];\n        switch (token.type) {\n            case TYPE_TEXT:\n                lastTextToken = token;\n                break;\n            case TYPE_NEWLINE:\n                if (lastTextToken) { /* remove trailing space */\n                    let arr = lastTextToken.value.split(\"\");\n                    while (arr.length && arr[arr.length - 1] == \" \") {\n                        arr.pop();\n                    }\n                    lastTextToken.value = arr.join(\"\");\n                }\n                lastTextToken = null;\n                break;\n        }\n    }\n    tokens.pop(); /* remove fake token */\n    return tokens;\n}\n/**\n * Create new tokens and insert them into the stream\n * @param {object[]} tokens\n * @param {int} tokenIndex Token being processed\n * @param {int} breakIndex Index within current token's value\n * @param {bool} removeBreakChar Do we want to remove the breaking character?\n * @returns {string} remaining unbroken token value\n */\nfunction breakInsideToken(tokens, tokenIndex, breakIndex, removeBreakChar) {\n    let newBreakToken = {\n        type: TYPE_NEWLINE\n    };\n    let newTextToken = {\n        type: TYPE_TEXT,\n        value: tokens[tokenIndex].value.substring(breakIndex + (removeBreakChar ? 1 : 0))\n    };\n    tokens.splice(tokenIndex + 1, 0, newBreakToken, newTextToken);\n    return tokens[tokenIndex].value.substring(0, breakIndex);\n}\n","/** Default with for display and map generators */\nexport let DEFAULT_WIDTH = 80;\n/** Default height for display and map generators */\nexport let DEFAULT_HEIGHT = 25;\nexport const DIRS = {\n    4: [[0, -1], [1, 0], [0, 1], [-1, 0]],\n    8: [[0, -1], [1, -1], [1, 0], [1, 1], [0, 1], [-1, 1], [-1, 0], [-1, -1]],\n    6: [[-1, -1], [1, -1], [2, 0], [1, 1], [-1, 1], [-2, 0]]\n};\nexport const KEYS = {\n    /** Cancel key. */\n    VK_CANCEL: 3,\n    /** Help key. */\n    VK_HELP: 6,\n    /** Backspace key. */\n    VK_BACK_SPACE: 8,\n    /** Tab key. */\n    VK_TAB: 9,\n    /** 5 key on Numpad when NumLock is unlocked. Or on Mac, clear key which is positioned at NumLock key. */\n    VK_CLEAR: 12,\n    /** Return/enter key on the main keyboard. */\n    VK_RETURN: 13,\n    /** Reserved, but not used. */\n    VK_ENTER: 14,\n    /** Shift key. */\n    VK_SHIFT: 16,\n    /** Control key. */\n    VK_CONTROL: 17,\n    /** Alt (Option on Mac) key. */\n    VK_ALT: 18,\n    /** Pause key. */\n    VK_PAUSE: 19,\n    /** Caps lock. */\n    VK_CAPS_LOCK: 20,\n    /** Escape key. */\n    VK_ESCAPE: 27,\n    /** Space bar. */\n    VK_SPACE: 32,\n    /** Page Up key. */\n    VK_PAGE_UP: 33,\n    /** Page Down key. */\n    VK_PAGE_DOWN: 34,\n    /** End key. */\n    VK_END: 35,\n    /** Home key. */\n    VK_HOME: 36,\n    /** Left arrow. */\n    VK_LEFT: 37,\n    /** Up arrow. */\n    VK_UP: 38,\n    /** Right arrow. */\n    VK_RIGHT: 39,\n    /** Down arrow. */\n    VK_DOWN: 40,\n    /** Print Screen key. */\n    VK_PRINTSCREEN: 44,\n    /** Ins(ert) key. */\n    VK_INSERT: 45,\n    /** Del(ete) key. */\n    VK_DELETE: 46,\n    /***/\n    VK_0: 48,\n    /***/\n    VK_1: 49,\n    /***/\n    VK_2: 50,\n    /***/\n    VK_3: 51,\n    /***/\n    VK_4: 52,\n    /***/\n    VK_5: 53,\n    /***/\n    VK_6: 54,\n    /***/\n    VK_7: 55,\n    /***/\n    VK_8: 56,\n    /***/\n    VK_9: 57,\n    /** Colon (:) key. Requires Gecko 15.0 */\n    VK_COLON: 58,\n    /** Semicolon (;) key. */\n    VK_SEMICOLON: 59,\n    /** Less-than (<) key. Requires Gecko 15.0 */\n    VK_LESS_THAN: 60,\n    /** Equals (=) key. */\n    VK_EQUALS: 61,\n    /** Greater-than (>) key. Requires Gecko 15.0 */\n    VK_GREATER_THAN: 62,\n    /** Question mark (?) key. Requires Gecko 15.0 */\n    VK_QUESTION_MARK: 63,\n    /** Atmark (@) key. Requires Gecko 15.0 */\n    VK_AT: 64,\n    /***/\n    VK_A: 65,\n    /***/\n    VK_B: 66,\n    /***/\n    VK_C: 67,\n    /***/\n    VK_D: 68,\n    /***/\n    VK_E: 69,\n    /***/\n    VK_F: 70,\n    /***/\n    VK_G: 71,\n    /***/\n    VK_H: 72,\n    /***/\n    VK_I: 73,\n    /***/\n    VK_J: 74,\n    /***/\n    VK_K: 75,\n    /***/\n    VK_L: 76,\n    /***/\n    VK_M: 77,\n    /***/\n    VK_N: 78,\n    /***/\n    VK_O: 79,\n    /***/\n    VK_P: 80,\n    /***/\n    VK_Q: 81,\n    /***/\n    VK_R: 82,\n    /***/\n    VK_S: 83,\n    /***/\n    VK_T: 84,\n    /***/\n    VK_U: 85,\n    /***/\n    VK_V: 86,\n    /***/\n    VK_W: 87,\n    /***/\n    VK_X: 88,\n    /***/\n    VK_Y: 89,\n    /***/\n    VK_Z: 90,\n    /***/\n    VK_CONTEXT_MENU: 93,\n    /** 0 on the numeric keypad. */\n    VK_NUMPAD0: 96,\n    /** 1 on the numeric keypad. */\n    VK_NUMPAD1: 97,\n    /** 2 on the numeric keypad. */\n    VK_NUMPAD2: 98,\n    /** 3 on the numeric keypad. */\n    VK_NUMPAD3: 99,\n    /** 4 on the numeric keypad. */\n    VK_NUMPAD4: 100,\n    /** 5 on the numeric keypad. */\n    VK_NUMPAD5: 101,\n    /** 6 on the numeric keypad. */\n    VK_NUMPAD6: 102,\n    /** 7 on the numeric keypad. */\n    VK_NUMPAD7: 103,\n    /** 8 on the numeric keypad. */\n    VK_NUMPAD8: 104,\n    /** 9 on the numeric keypad. */\n    VK_NUMPAD9: 105,\n    /** * on the numeric keypad. */\n    VK_MULTIPLY: 106,\n    /** + on the numeric keypad. */\n    VK_ADD: 107,\n    /***/\n    VK_SEPARATOR: 108,\n    /** - on the numeric keypad. */\n    VK_SUBTRACT: 109,\n    /** Decimal point on the numeric keypad. */\n    VK_DECIMAL: 110,\n    /** / on the numeric keypad. */\n    VK_DIVIDE: 111,\n    /** F1 key. */\n    VK_F1: 112,\n    /** F2 key. */\n    VK_F2: 113,\n    /** F3 key. */\n    VK_F3: 114,\n    /** F4 key. */\n    VK_F4: 115,\n    /** F5 key. */\n    VK_F5: 116,\n    /** F6 key. */\n    VK_F6: 117,\n    /** F7 key. */\n    VK_F7: 118,\n    /** F8 key. */\n    VK_F8: 119,\n    /** F9 key. */\n    VK_F9: 120,\n    /** F10 key. */\n    VK_F10: 121,\n    /** F11 key. */\n    VK_F11: 122,\n    /** F12 key. */\n    VK_F12: 123,\n    /** F13 key. */\n    VK_F13: 124,\n    /** F14 key. */\n    VK_F14: 125,\n    /** F15 key. */\n    VK_F15: 126,\n    /** F16 key. */\n    VK_F16: 127,\n    /** F17 key. */\n    VK_F17: 128,\n    /** F18 key. */\n    VK_F18: 129,\n    /** F19 key. */\n    VK_F19: 130,\n    /** F20 key. */\n    VK_F20: 131,\n    /** F21 key. */\n    VK_F21: 132,\n    /** F22 key. */\n    VK_F22: 133,\n    /** F23 key. */\n    VK_F23: 134,\n    /** F24 key. */\n    VK_F24: 135,\n    /** Num Lock key. */\n    VK_NUM_LOCK: 144,\n    /** Scroll Lock key. */\n    VK_SCROLL_LOCK: 145,\n    /** Circumflex (^) key. Requires Gecko 15.0 */\n    VK_CIRCUMFLEX: 160,\n    /** Exclamation (!) key. Requires Gecko 15.0 */\n    VK_EXCLAMATION: 161,\n    /** Double quote () key. Requires Gecko 15.0 */\n    VK_DOUBLE_QUOTE: 162,\n    /** Hash (#) key. Requires Gecko 15.0 */\n    VK_HASH: 163,\n    /** Dollar sign ($) key. Requires Gecko 15.0 */\n    VK_DOLLAR: 164,\n    /** Percent (%) key. Requires Gecko 15.0 */\n    VK_PERCENT: 165,\n    /** Ampersand (&) key. Requires Gecko 15.0 */\n    VK_AMPERSAND: 166,\n    /** Underscore (_) key. Requires Gecko 15.0 */\n    VK_UNDERSCORE: 167,\n    /** Open parenthesis (() key. Requires Gecko 15.0 */\n    VK_OPEN_PAREN: 168,\n    /** Close parenthesis ()) key. Requires Gecko 15.0 */\n    VK_CLOSE_PAREN: 169,\n    /* Asterisk (*) key. Requires Gecko 15.0 */\n    VK_ASTERISK: 170,\n    /** Plus (+) key. Requires Gecko 15.0 */\n    VK_PLUS: 171,\n    /** Pipe (|) key. Requires Gecko 15.0 */\n    VK_PIPE: 172,\n    /** Hyphen-US/docs/Minus (-) key. Requires Gecko 15.0 */\n    VK_HYPHEN_MINUS: 173,\n    /** Open curly bracket ({) key. Requires Gecko 15.0 */\n    VK_OPEN_CURLY_BRACKET: 174,\n    /** Close curly bracket (}) key. Requires Gecko 15.0 */\n    VK_CLOSE_CURLY_BRACKET: 175,\n    /** Tilde (~) key. Requires Gecko 15.0 */\n    VK_TILDE: 176,\n    /** Comma (,) key. */\n    VK_COMMA: 188,\n    /** Period (.) key. */\n    VK_PERIOD: 190,\n    /** Slash (/) key. */\n    VK_SLASH: 191,\n    /** Back tick (`) key. */\n    VK_BACK_QUOTE: 192,\n    /** Open square bracket ([) key. */\n    VK_OPEN_BRACKET: 219,\n    /** Back slash (\\) key. */\n    VK_BACK_SLASH: 220,\n    /** Close square bracket (]) key. */\n    VK_CLOSE_BRACKET: 221,\n    /** Quote (''') key. */\n    VK_QUOTE: 222,\n    /** Meta key on Linux, Command key on Mac. */\n    VK_META: 224,\n    /** AltGr key on Linux. Requires Gecko 15.0 */\n    VK_ALTGR: 225,\n    /** Windows logo key on Windows. Or Super or Hyper key on Linux. Requires Gecko 15.0 */\n    VK_WIN: 91,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_KANA: 21,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_HANGUL: 21,\n    /** 英数 key on Japanese Mac keyboard. Requires Gecko 15.0 */\n    VK_EISU: 22,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_JUNJA: 23,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_FINAL: 24,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_HANJA: 25,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_KANJI: 25,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_CONVERT: 28,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_NONCONVERT: 29,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_ACCEPT: 30,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_MODECHANGE: 31,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_SELECT: 41,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_PRINT: 42,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_EXECUTE: 43,\n    /** Linux support for this keycode was added in Gecko 4.0.\t */\n    VK_SLEEP: 95\n};\n","import RNG from \"./rng.js\";\n/**\n * @class (Markov process)-based string generator.\n * Copied from a <a href=\"http://www.roguebasin.roguelikedevelopment.org/index.php?title=Names_from_a_high_order_Markov_Process_and_a_simplified_Katz_back-off_scheme\">RogueBasin article</a>.\n * Offers configurable order and prior.\n */\nexport default class StringGenerator {\n    constructor(options) {\n        this._options = {\n            words: false,\n            order: 3,\n            prior: 0.001\n        };\n        Object.assign(this._options, options);\n        this._boundary = String.fromCharCode(0);\n        this._suffix = this._boundary;\n        this._prefix = [];\n        for (let i = 0; i < this._options.order; i++) {\n            this._prefix.push(this._boundary);\n        }\n        this._priorValues = {};\n        this._priorValues[this._boundary] = this._options.prior;\n        this._data = {};\n    }\n    /**\n     * Remove all learning data\n     */\n    clear() {\n        this._data = {};\n        this._priorValues = {};\n    }\n    /**\n     * @returns {string} Generated string\n     */\n    generate() {\n        let result = [this._sample(this._prefix)];\n        while (result[result.length - 1] != this._boundary) {\n            result.push(this._sample(result));\n        }\n        return this._join(result.slice(0, -1));\n    }\n    /**\n     * Observe (learn) a string from a training set\n     */\n    observe(string) {\n        let tokens = this._split(string);\n        for (let i = 0; i < tokens.length; i++) {\n            this._priorValues[tokens[i]] = this._options.prior;\n        }\n        tokens = this._prefix.concat(tokens).concat(this._suffix); /* add boundary symbols */\n        for (let i = this._options.order; i < tokens.length; i++) {\n            let context = tokens.slice(i - this._options.order, i);\n            let event = tokens[i];\n            for (let j = 0; j < context.length; j++) {\n                let subcontext = context.slice(j);\n                this._observeEvent(subcontext, event);\n            }\n        }\n    }\n    getStats() {\n        let parts = [];\n        let priorCount = Object.keys(this._priorValues).length;\n        priorCount--; // boundary\n        parts.push(\"distinct samples: \" + priorCount);\n        let dataCount = Object.keys(this._data).length;\n        let eventCount = 0;\n        for (let p in this._data) {\n            eventCount += Object.keys(this._data[p]).length;\n        }\n        parts.push(\"dictionary size (contexts): \" + dataCount);\n        parts.push(\"dictionary size (events): \" + eventCount);\n        return parts.join(\", \");\n    }\n    /**\n     * @param {string}\n     * @returns {string[]}\n     */\n    _split(str) {\n        return str.split(this._options.words ? /\\s+/ : \"\");\n    }\n    /**\n     * @param {string[]}\n     * @returns {string}\n     */\n    _join(arr) {\n        return arr.join(this._options.words ? \" \" : \"\");\n    }\n    /**\n     * @param {string[]} context\n     * @param {string} event\n     */\n    _observeEvent(context, event) {\n        let key = this._join(context);\n        if (!(key in this._data)) {\n            this._data[key] = {};\n        }\n        let data = this._data[key];\n        if (!(event in data)) {\n            data[event] = 0;\n        }\n        data[event]++;\n    }\n    /**\n     * @param {string[]}\n     * @returns {string}\n     */\n    _sample(context) {\n        context = this._backoff(context);\n        let key = this._join(context);\n        let data = this._data[key];\n        let available = {};\n        if (this._options.prior) {\n            for (let event in this._priorValues) {\n                available[event] = this._priorValues[event];\n            }\n            for (let event in data) {\n                available[event] += data[event];\n            }\n        }\n        else {\n            available = data;\n        }\n        return RNG.getWeightedValue(available);\n    }\n    /**\n     * @param {string[]}\n     * @returns {string[]}\n     */\n    _backoff(context) {\n        if (context.length > this._options.order) {\n            context = context.slice(-this._options.order);\n        }\n        else if (context.length < this._options.order) {\n            context = this._prefix.slice(0, this._options.order - context.length).concat(context);\n        }\n        while (!(this._join(context) in this._data) && context.length > 0) {\n            context = context.slice(1);\n        }\n        return context;\n    }\n}\n","import { MinHeap } from \"./MinHeap\";\nexport default class EventQueue {\n    /**\n     * @class Generic event queue: stores events and retrieves them based on their time\n     */\n    constructor() {\n        this._time = 0;\n        this._events = new MinHeap();\n    }\n    /**\n     * @returns {number} Elapsed time\n     */\n    getTime() { return this._time; }\n    /**\n     * Clear all scheduled events\n     */\n    clear() {\n        this._events = new MinHeap();\n        return this;\n    }\n    /**\n     * @param {?} event\n     * @param {number} time\n     */\n    add(event, time) {\n        this._events.push(event, time);\n    }\n    /**\n     * Locates the nearest event, advances time if necessary. Returns that event and removes it from the queue.\n     * @returns {? || null} The event previously added by addEvent, null if no event available\n     */\n    get() {\n        if (!this._events.len()) {\n            return null;\n        }\n        let { key: time, value: event } = this._events.pop();\n        if (time > 0) { /* advance */\n            this._time += time;\n            this._events.shift(-time);\n        }\n        return event;\n    }\n    /**\n     * Get the time associated with the given event\n     * @param {?} event\n     * @returns {number} time\n     */\n    getEventTime(event) {\n        const r = this._events.find(event);\n        if (r) {\n            const { key } = r;\n            return key;\n        }\n        return undefined;\n    }\n    /**\n     * Remove an event from the queue\n     * @param {?} event\n     * @returns {bool} success?\n     */\n    remove(event) {\n        return this._events.remove(event);\n    }\n    ;\n}\n","export class MinHeap {\n    constructor() {\n        this.heap = [];\n        this.timestamp = 0;\n    }\n    lessThan(a, b) {\n        return a.key == b.key ? a.timestamp < b.timestamp : a.key < b.key;\n    }\n    shift(v) {\n        this.heap = this.heap.map(({ key, value, timestamp }) => ({ key: key + v, value, timestamp }));\n    }\n    len() {\n        return this.heap.length;\n    }\n    push(value, key) {\n        this.timestamp += 1;\n        const loc = this.len();\n        this.heap.push({ value, timestamp: this.timestamp, key });\n        this.updateUp(loc);\n    }\n    pop() {\n        if (this.len() == 0) {\n            throw new Error(\"no element to pop\");\n        }\n        const top = this.heap[0];\n        if (this.len() > 1) {\n            this.heap[0] = this.heap.pop();\n            this.updateDown(0);\n        }\n        else {\n            this.heap.pop();\n        }\n        return top;\n    }\n    find(v) {\n        for (let i = 0; i < this.len(); i++) {\n            if (v == this.heap[i].value) {\n                return this.heap[i];\n            }\n        }\n        return null;\n    }\n    remove(v) {\n        let index = null;\n        for (let i = 0; i < this.len(); i++) {\n            if (v == this.heap[i].value) {\n                index = i;\n            }\n        }\n        if (index === null) {\n            return false;\n        }\n        if (this.len() > 1) {\n            let last = this.heap.pop();\n            if (last.value != v) { // if the last one is being removed, do nothing\n                this.heap[index] = last;\n                this.updateDown(index);\n            }\n            return true;\n        }\n        else {\n            this.heap.pop();\n        }\n        return true;\n    }\n    parentNode(x) {\n        return Math.floor((x - 1) / 2);\n    }\n    leftChildNode(x) {\n        return 2 * x + 1;\n    }\n    rightChildNode(x) {\n        return 2 * x + 2;\n    }\n    existNode(x) {\n        return x >= 0 && x < this.heap.length;\n    }\n    swap(x, y) {\n        const t = this.heap[x];\n        this.heap[x] = this.heap[y];\n        this.heap[y] = t;\n    }\n    minNode(numbers) {\n        const validnumbers = numbers.filter(this.existNode.bind(this));\n        let minimal = validnumbers[0];\n        for (const i of validnumbers) {\n            if (this.lessThan(this.heap[i], this.heap[minimal])) {\n                minimal = i;\n            }\n        }\n        return minimal;\n    }\n    updateUp(x) {\n        if (x == 0) {\n            return;\n        }\n        const parent = this.parentNode(x);\n        if (this.existNode(parent) && this.lessThan(this.heap[x], this.heap[parent])) {\n            this.swap(x, parent);\n            this.updateUp(parent);\n        }\n    }\n    updateDown(x) {\n        const leftChild = this.leftChildNode(x);\n        const rightChild = this.rightChildNode(x);\n        if (!this.existNode(leftChild)) {\n            return;\n        }\n        const m = this.minNode([x, leftChild, rightChild]);\n        if (m != x) {\n            this.swap(x, m);\n            this.updateDown(m);\n        }\n    }\n    debugPrint() {\n        console.log(this.heap);\n    }\n}\n","import Simple from \"./simple.js\";\nimport Speed from \"./speed.js\";\nimport Action from \"./action.js\";\nexport default { Simple, Speed, Action };\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Simple fair scheduler (round-robin style)\n */\nexport default class Simple extends Scheduler {\n    add(item, repeat) {\n        this._queue.add(item, 0);\n        return super.add(item, repeat);\n    }\n    next() {\n        if (this._current !== null && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, 0);\n        }\n        return super.next();\n    }\n}\n","import EventQueue from \"../eventqueue.js\";\nexport default class Scheduler {\n    /**\n     * @class Abstract scheduler\n     */\n    constructor() {\n        this._queue = new EventQueue();\n        this._repeat = [];\n        this._current = null;\n    }\n    /**\n     * @see ROT.EventQueue#getTime\n     */\n    getTime() { return this._queue.getTime(); }\n    /**\n     * @param {?} item\n     * @param {bool} repeat\n     */\n    add(item, repeat) {\n        if (repeat) {\n            this._repeat.push(item);\n        }\n        return this;\n    }\n    /**\n     * Get the time the given item is scheduled for\n     * @param {?} item\n     * @returns {number} time\n     */\n    getTimeOf(item) {\n        return this._queue.getEventTime(item);\n    }\n    /**\n     * Clear all items\n     */\n    clear() {\n        this._queue.clear();\n        this._repeat = [];\n        this._current = null;\n        return this;\n    }\n    /**\n     * Remove a previously added item\n     * @param {?} item\n     * @returns {bool} successful?\n     */\n    remove(item) {\n        let result = this._queue.remove(item);\n        let index = this._repeat.indexOf(item);\n        if (index != -1) {\n            this._repeat.splice(index, 1);\n        }\n        if (this._current == item) {\n            this._current = null;\n        }\n        return result;\n    }\n    /**\n     * Schedule next item\n     * @returns {?}\n     */\n    next() {\n        this._current = this._queue.get();\n        return this._current;\n    }\n}\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Speed-based scheduler\n */\nexport default class Speed extends Scheduler {\n    /**\n     * @param {object} item anything with \"getSpeed\" method\n     * @param {bool} repeat\n     * @param {number} [time=1/item.getSpeed()]\n     * @see ROT.Scheduler#add\n     */\n    add(item, repeat, time) {\n        this._queue.add(item, time !== undefined ? time : 1 / item.getSpeed());\n        return super.add(item, repeat);\n    }\n    /**\n     * @see ROT.Scheduler#next\n     */\n    next() {\n        if (this._current && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, 1 / this._current.getSpeed());\n        }\n        return super.next();\n    }\n}\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Action-based scheduler\n * @augments ROT.Scheduler\n */\nexport default class Action extends Scheduler {\n    constructor() {\n        super();\n        this._defaultDuration = 1; /* for newly added */\n        this._duration = this._defaultDuration; /* for this._current */\n    }\n    /**\n     * @param {object} item\n     * @param {bool} repeat\n     * @param {number} [time=1]\n     * @see ROT.Scheduler#add\n     */\n    add(item, repeat, time) {\n        this._queue.add(item, time || this._defaultDuration);\n        return super.add(item, repeat);\n    }\n    clear() {\n        this._duration = this._defaultDuration;\n        return super.clear();\n    }\n    remove(item) {\n        if (item == this._current) {\n            this._duration = this._defaultDuration;\n        }\n        return super.remove(item);\n    }\n    /**\n     * @see ROT.Scheduler#next\n     */\n    next() {\n        if (this._current !== null && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, this._duration || this._defaultDuration);\n            this._duration = this._defaultDuration;\n        }\n        return super.next();\n    }\n    /**\n     * Set duration for the active item\n     */\n    setDuration(time) {\n        if (this._current) {\n            this._duration = time;\n        }\n        return this;\n    }\n}\n","import DiscreteShadowcasting from \"./discrete-shadowcasting.js\";\nimport PreciseShadowcasting from \"./precise-shadowcasting.js\";\nimport RecursiveShadowcasting from \"./recursive-shadowcasting.js\";\nexport default { DiscreteShadowcasting, PreciseShadowcasting, RecursiveShadowcasting };\n","import FOV from \"./fov.js\";\n/**\n * @class Discrete shadowcasting algorithm. Obsoleted by Precise shadowcasting.\n * @augments ROT.FOV\n */\nexport default class DiscreteShadowcasting extends FOV {\n    compute(x, y, R, callback) {\n        /* this place is always visible */\n        callback(x, y, 0, 1);\n        /* standing in a dark place. FIXME is this a good idea?  */\n        if (!this._lightPasses(x, y)) {\n            return;\n        }\n        /* start and end angles */\n        let DATA = [];\n        let A, B, cx, cy, blocks;\n        /* analyze surrounding cells in concentric rings, starting from the center */\n        for (let r = 1; r <= R; r++) {\n            let neighbors = this._getCircle(x, y, r);\n            let angle = 360 / neighbors.length;\n            for (let i = 0; i < neighbors.length; i++) {\n                cx = neighbors[i][0];\n                cy = neighbors[i][1];\n                A = angle * (i - 0.5);\n                B = A + angle;\n                blocks = !this._lightPasses(cx, cy);\n                if (this._visibleCoords(Math.floor(A), Math.ceil(B), blocks, DATA)) {\n                    callback(cx, cy, r, 1);\n                }\n                if (DATA.length == 2 && DATA[0] == 0 && DATA[1] == 360) {\n                    return;\n                } /* cutoff? */\n            } /* for all cells in this ring */\n        } /* for all rings */\n    }\n    /**\n     * @param {int} A start angle\n     * @param {int} B end angle\n     * @param {bool} blocks Does current cell block visibility?\n     * @param {int[][]} DATA shadowed angle pairs\n     */\n    _visibleCoords(A, B, blocks, DATA) {\n        if (A < 0) {\n            let v1 = this._visibleCoords(0, B, blocks, DATA);\n            let v2 = this._visibleCoords(360 + A, 360, blocks, DATA);\n            return v1 || v2;\n        }\n        let index = 0;\n        while (index < DATA.length && DATA[index] < A) {\n            index++;\n        }\n        if (index == DATA.length) { /* completely new shadow */\n            if (blocks) {\n                DATA.push(A, B);\n            }\n            return true;\n        }\n        let count = 0;\n        if (index % 2) { /* this shadow starts in an existing shadow, or within its ending boundary */\n            while (index < DATA.length && DATA[index] < B) {\n                index++;\n                count++;\n            }\n            if (count == 0) {\n                return false;\n            }\n            if (blocks) {\n                if (count % 2) {\n                    DATA.splice(index - count, count, B);\n                }\n                else {\n                    DATA.splice(index - count, count);\n                }\n            }\n            return true;\n        }\n        else { /* this shadow starts outside an existing shadow, or within a starting boundary */\n            while (index < DATA.length && DATA[index] < B) {\n                index++;\n                count++;\n            }\n            /* visible when outside an existing shadow, or when overlapping */\n            if (A == DATA[index - count] && count == 1) {\n                return false;\n            }\n            if (blocks) {\n                if (count % 2) {\n                    DATA.splice(index - count, count, A);\n                }\n                else {\n                    DATA.splice(index - count, count, A, B);\n                }\n            }\n            return true;\n        }\n    }\n}\n","import { DIRS } from \"../constants.js\";\n;\n;\nexport default class FOV {\n    /**\n     * @class Abstract FOV algorithm\n     * @param {function} lightPassesCallback Does the light pass through x,y?\n     * @param {object} [options]\n     * @param {int} [options.topology=8] 4/6/8\n     */\n    constructor(lightPassesCallback, options = {}) {\n        this._lightPasses = lightPassesCallback;\n        this._options = Object.assign({ topology: 8 }, options);\n    }\n    /**\n     * Return all neighbors in a concentric ring\n     * @param {int} cx center-x\n     * @param {int} cy center-y\n     * @param {int} r range\n     */\n    _getCircle(cx, cy, r) {\n        let result = [];\n        let dirs, countFactor, startOffset;\n        switch (this._options.topology) {\n            case 4:\n                countFactor = 1;\n                startOffset = [0, 1];\n                dirs = [\n                    DIRS[8][7],\n                    DIRS[8][1],\n                    DIRS[8][3],\n                    DIRS[8][5]\n                ];\n                break;\n            case 6:\n                dirs = DIRS[6];\n                countFactor = 1;\n                startOffset = [-1, 1];\n                break;\n            case 8:\n                dirs = DIRS[4];\n                countFactor = 2;\n                startOffset = [-1, 1];\n                break;\n            default:\n                throw new Error(\"Incorrect topology for FOV computation\");\n                break;\n        }\n        /* starting neighbor */\n        let x = cx + startOffset[0] * r;\n        let y = cy + startOffset[1] * r;\n        /* circle */\n        for (let i = 0; i < dirs.length; i++) {\n            for (let j = 0; j < r * countFactor; j++) {\n                result.push([x, y]);\n                x += dirs[i][0];\n                y += dirs[i][1];\n            }\n        }\n        return result;\n    }\n}\n","import FOV from \"./fov.js\";\n/**\n * @class Precise shadowcasting algorithm\n * @augments ROT.FOV\n */\nexport default class PreciseShadowcasting extends FOV {\n    compute(x, y, R, callback) {\n        /* this place is always visible */\n        callback(x, y, 0, 1);\n        /* standing in a dark place. FIXME is this a good idea?  */\n        if (!this._lightPasses(x, y)) {\n            return;\n        }\n        /* list of all shadows */\n        let SHADOWS = [];\n        let cx, cy, blocks, A1, A2, visibility;\n        /* analyze surrounding cells in concentric rings, starting from the center */\n        for (let r = 1; r <= R; r++) {\n            let neighbors = this._getCircle(x, y, r);\n            let neighborCount = neighbors.length;\n            for (let i = 0; i < neighborCount; i++) {\n                cx = neighbors[i][0];\n                cy = neighbors[i][1];\n                /* shift half-an-angle backwards to maintain consistency of 0-th cells */\n                A1 = [i ? 2 * i - 1 : 2 * neighborCount - 1, 2 * neighborCount];\n                A2 = [2 * i + 1, 2 * neighborCount];\n                blocks = !this._lightPasses(cx, cy);\n                visibility = this._checkVisibility(A1, A2, blocks, SHADOWS);\n                if (visibility) {\n                    callback(cx, cy, r, visibility);\n                }\n                if (SHADOWS.length == 2 && SHADOWS[0][0] == 0 && SHADOWS[1][0] == SHADOWS[1][1]) {\n                    return;\n                } /* cutoff? */\n            } /* for all cells in this ring */\n        } /* for all rings */\n    }\n    /**\n     * @param {int[2]} A1 arc start\n     * @param {int[2]} A2 arc end\n     * @param {bool} blocks Does current arc block visibility?\n     * @param {int[][]} SHADOWS list of active shadows\n     */\n    _checkVisibility(A1, A2, blocks, SHADOWS) {\n        if (A1[0] > A2[0]) { /* split into two sub-arcs */\n            let v1 = this._checkVisibility(A1, [A1[1], A1[1]], blocks, SHADOWS);\n            let v2 = this._checkVisibility([0, 1], A2, blocks, SHADOWS);\n            return (v1 + v2) / 2;\n        }\n        /* index1: first shadow >= A1 */\n        let index1 = 0, edge1 = false;\n        while (index1 < SHADOWS.length) {\n            let old = SHADOWS[index1];\n            let diff = old[0] * A1[1] - A1[0] * old[1];\n            if (diff >= 0) { /* old >= A1 */\n                if (diff == 0 && !(index1 % 2)) {\n                    edge1 = true;\n                }\n                break;\n            }\n            index1++;\n        }\n        /* index2: last shadow <= A2 */\n        let index2 = SHADOWS.length, edge2 = false;\n        while (index2--) {\n            let old = SHADOWS[index2];\n            let diff = A2[0] * old[1] - old[0] * A2[1];\n            if (diff >= 0) { /* old <= A2 */\n                if (diff == 0 && (index2 % 2)) {\n                    edge2 = true;\n                }\n                break;\n            }\n        }\n        let visible = true;\n        if (index1 == index2 && (edge1 || edge2)) { /* subset of existing shadow, one of the edges match */\n            visible = false;\n        }\n        else if (edge1 && edge2 && index1 + 1 == index2 && (index2 % 2)) { /* completely equivalent with existing shadow */\n            visible = false;\n        }\n        else if (index1 > index2 && (index1 % 2)) { /* subset of existing shadow, not touching */\n            visible = false;\n        }\n        if (!visible) {\n            return 0;\n        } /* fast case: not visible */\n        let visibleLength;\n        /* compute the length of visible arc, adjust list of shadows (if blocking) */\n        let remove = index2 - index1 + 1;\n        if (remove % 2) {\n            if (index1 % 2) { /* first edge within existing shadow, second outside */\n                let P = SHADOWS[index1];\n                visibleLength = (A2[0] * P[1] - P[0] * A2[1]) / (P[1] * A2[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A2);\n                }\n            }\n            else { /* second edge within existing shadow, first outside */\n                let P = SHADOWS[index2];\n                visibleLength = (P[0] * A1[1] - A1[0] * P[1]) / (A1[1] * P[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A1);\n                }\n            }\n        }\n        else {\n            if (index1 % 2) { /* both edges within existing shadows */\n                let P1 = SHADOWS[index1];\n                let P2 = SHADOWS[index2];\n                visibleLength = (P2[0] * P1[1] - P1[0] * P2[1]) / (P1[1] * P2[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove);\n                }\n            }\n            else { /* both edges outside existing shadows */\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A1, A2);\n                }\n                return 1; /* whole arc visible! */\n            }\n        }\n        let arcLength = (A2[0] * A1[1] - A1[0] * A2[1]) / (A1[1] * A2[1]);\n        return visibleLength / arcLength;\n    }\n}\n","import FOV from \"./fov.js\";\n/** Octants used for translating recursive shadowcasting offsets */\nconst OCTANTS = [\n    [-1, 0, 0, 1],\n    [0, -1, 1, 0],\n    [0, -1, -1, 0],\n    [-1, 0, 0, -1],\n    [1, 0, 0, -1],\n    [0, 1, -1, 0],\n    [0, 1, 1, 0],\n    [1, 0, 0, 1]\n];\n/**\n * @class Recursive shadowcasting algorithm\n * Currently only supports 4/8 topologies, not hexagonal.\n * Based on Peter Harkins' implementation of Björn Bergström's algorithm described here: http://www.roguebasin.com/index.php?title=FOV_using_recursive_shadowcasting\n * @augments ROT.FOV\n */\nexport default class RecursiveShadowcasting extends FOV {\n    /**\n     * Compute visibility for a 360-degree circle\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {function} callback\n     */\n    compute(x, y, R, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        for (let i = 0; i < OCTANTS.length; i++) {\n            this._renderOctant(x, y, OCTANTS[i], R, callback);\n        }\n    }\n    /**\n     * Compute visibility for a 180-degree arc\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n     * @param {function} callback\n     */\n    compute180(x, y, R, dir, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        let previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 180 degrees\n        let nextPreviousOctant = (dir - 2 + 8) % 8; //Need to retrieve the previous two octants to render a full 180 degrees\n        let nextOctant = (dir + 1 + 8) % 8; //Need to grab to next octant to render a full 180 degrees\n        this._renderOctant(x, y, OCTANTS[nextPreviousOctant], R, callback);\n        this._renderOctant(x, y, OCTANTS[previousOctant], R, callback);\n        this._renderOctant(x, y, OCTANTS[dir], R, callback);\n        this._renderOctant(x, y, OCTANTS[nextOctant], R, callback);\n    }\n    ;\n    /**\n     * Compute visibility for a 90-degree arc\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n     * @param {function} callback\n     */\n    compute90(x, y, R, dir, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        let previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 90 degrees\n        this._renderOctant(x, y, OCTANTS[dir], R, callback);\n        this._renderOctant(x, y, OCTANTS[previousOctant], R, callback);\n    }\n    /**\n     * Render one octant (45-degree arc) of the viewshed\n     * @param {int} x\n     * @param {int} y\n     * @param {int} octant Octant to be rendered\n     * @param {int} R Maximum visibility radius\n     * @param {function} callback\n     */\n    _renderOctant(x, y, octant, R, callback) {\n        //Radius incremented by 1 to provide same coverage area as other shadowcasting radiuses\n        this._castVisibility(x, y, 1, 1.0, 0.0, R + 1, octant[0], octant[1], octant[2], octant[3], callback);\n    }\n    /**\n     * Actually calculates the visibility\n     * @param {int} startX The starting X coordinate\n     * @param {int} startY The starting Y coordinate\n     * @param {int} row The row to render\n     * @param {float} visSlopeStart The slope to start at\n     * @param {float} visSlopeEnd The slope to end at\n     * @param {int} radius The radius to reach out to\n     * @param {int} xx\n     * @param {int} xy\n     * @param {int} yx\n     * @param {int} yy\n     * @param {function} callback The callback to use when we hit a block that is visible\n     */\n    _castVisibility(startX, startY, row, visSlopeStart, visSlopeEnd, radius, xx, xy, yx, yy, callback) {\n        if (visSlopeStart < visSlopeEnd) {\n            return;\n        }\n        for (let i = row; i <= radius; i++) {\n            let dx = -i - 1;\n            let dy = -i;\n            let blocked = false;\n            let newStart = 0;\n            //'Row' could be column, names here assume octant 0 and would be flipped for half the octants\n            while (dx <= 0) {\n                dx += 1;\n                //Translate from relative coordinates to map coordinates\n                let mapX = startX + dx * xx + dy * xy;\n                let mapY = startY + dx * yx + dy * yy;\n                //Range of the row\n                let slopeStart = (dx - 0.5) / (dy + 0.5);\n                let slopeEnd = (dx + 0.5) / (dy - 0.5);\n                //Ignore if not yet at left edge of Octant\n                if (slopeEnd > visSlopeStart) {\n                    continue;\n                }\n                //Done if past right edge\n                if (slopeStart < visSlopeEnd) {\n                    break;\n                }\n                //If it's in range, it's visible\n                if ((dx * dx + dy * dy) < (radius * radius)) {\n                    callback(mapX, mapY, i, 1);\n                }\n                if (!blocked) {\n                    //If tile is a blocking tile, cast around it\n                    if (!this._lightPasses(mapX, mapY) && i < radius) {\n                        blocked = true;\n                        this._castVisibility(startX, startY, i + 1, visSlopeStart, slopeStart, radius, xx, xy, yx, yy, callback);\n                        newStart = slopeEnd;\n                    }\n                }\n                else {\n                    //Keep narrowing if scanning across a block\n                    if (!this._lightPasses(mapX, mapY)) {\n                        newStart = slopeEnd;\n                        continue;\n                    }\n                    //Block has ended\n                    blocked = false;\n                    visSlopeStart = newStart;\n                }\n            }\n            if (blocked) {\n                break;\n            }\n        }\n    }\n}\n","import Arena from \"./arena.js\";\nimport Uniform from \"./uniform.js\";\nimport Cellular from \"./cellular.js\";\nimport Digger from \"./digger.js\";\nimport EllerMaze from \"./ellermaze.js\";\nimport DividedMaze from \"./dividedmaze.js\";\nimport IceyMaze from \"./iceymaze.js\";\nimport Rogue from \"./rogue.js\";\nexport default { Arena, Uniform, Cellular, Digger, EllerMaze, DividedMaze, IceyMaze, Rogue };\n","import Map from \"./map.js\";\n/**\n * @class Simple empty rectangular room\n * @augments ROT.Map\n */\nexport default class Arena extends Map {\n    create(callback) {\n        let w = this._width - 1;\n        let h = this._height - 1;\n        for (let i = 0; i <= w; i++) {\n            for (let j = 0; j <= h; j++) {\n                let empty = (i && j && i < w && j < h);\n                callback(i, j, empty ? 0 : 1);\n            }\n        }\n        return this;\n    }\n}\n","import { DEFAULT_WIDTH, DEFAULT_HEIGHT } from \"../constants.js\";\n;\nexport default class Map {\n    /**\n     * @class Base map generator\n     * @param {int} [width=ROT.DEFAULT_WIDTH]\n     * @param {int} [height=ROT.DEFAULT_HEIGHT]\n     */\n    constructor(width = DEFAULT_WIDTH, height = DEFAULT_HEIGHT) {\n        this._width = width;\n        this._height = height;\n    }\n    ;\n    _fillMap(value) {\n        let map = [];\n        for (let i = 0; i < this._width; i++) {\n            map.push([]);\n            for (let j = 0; j < this._height; j++) {\n                map[i].push(value);\n            }\n        }\n        return map;\n    }\n}\n","import Dungeon from \"./dungeon.js\";\nimport { Room, Corridor } from \"./features.js\";\nimport RNG from \"../rng.js\";\n;\n/**\n * @class Dungeon generator which tries to fill the space evenly. Generates independent rooms and tries to connect them.\n * @augments ROT.Map.Dungeon\n */\nexport default class Uniform extends Dungeon {\n    constructor(width, height, options) {\n        super(width, height);\n        this._options = {\n            roomWidth: [3, 9],\n            roomHeight: [3, 5],\n            roomDugPercentage: 0.1,\n            timeLimit: 1000 /* we stop after this much time has passed (msec) */\n        };\n        Object.assign(this._options, options);\n        this._map = [];\n        this._dug = 0;\n        this._roomAttempts = 20; /* new room is created N-times until is considered as impossible to generate */\n        this._corridorAttempts = 20; /* corridors are tried N-times until the level is considered as impossible to connect */\n        this._connected = []; /* list of already connected rooms */\n        this._unconnected = []; /* list of remaining unconnected rooms */\n        this._digCallback = this._digCallback.bind(this);\n        this._canBeDugCallback = this._canBeDugCallback.bind(this);\n        this._isWallCallback = this._isWallCallback.bind(this);\n    }\n    /**\n     * Create a map. If the time limit has been hit, returns null.\n     * @see ROT.Map#create\n     */\n    create(callback) {\n        let t1 = Date.now();\n        while (1) {\n            let t2 = Date.now();\n            if (t2 - t1 > this._options.timeLimit) {\n                return null;\n            } /* time limit! */\n            this._map = this._fillMap(1);\n            this._dug = 0;\n            this._rooms = [];\n            this._unconnected = [];\n            this._generateRooms();\n            if (this._rooms.length < 2) {\n                continue;\n            }\n            if (this._generateCorridors()) {\n                break;\n            }\n        }\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this._map[i][j]);\n                }\n            }\n        }\n        return this;\n    }\n    /**\n     * Generates a suitable amount of rooms\n     */\n    _generateRooms() {\n        let w = this._width - 2;\n        let h = this._height - 2;\n        let room;\n        do {\n            room = this._generateRoom();\n            if (this._dug / (w * h) > this._options.roomDugPercentage) {\n                break;\n            } /* achieved requested amount of free space */\n        } while (room);\n        /* either enough rooms, or not able to generate more of them :) */\n    }\n    /**\n     * Try to generate one room\n     */\n    _generateRoom() {\n        let count = 0;\n        while (count < this._roomAttempts) {\n            count++;\n            let room = Room.createRandom(this._width, this._height, this._options);\n            if (!room.isValid(this._isWallCallback, this._canBeDugCallback)) {\n                continue;\n            }\n            room.create(this._digCallback);\n            this._rooms.push(room);\n            return room;\n        }\n        /* no room was generated in a given number of attempts */\n        return null;\n    }\n    /**\n     * Generates connectors beween rooms\n     * @returns {bool} success Was this attempt successfull?\n     */\n    _generateCorridors() {\n        let cnt = 0;\n        while (cnt < this._corridorAttempts) {\n            cnt++;\n            this._corridors = [];\n            /* dig rooms into a clear map */\n            this._map = this._fillMap(1);\n            for (let i = 0; i < this._rooms.length; i++) {\n                let room = this._rooms[i];\n                room.clearDoors();\n                room.create(this._digCallback);\n            }\n            this._unconnected = RNG.shuffle(this._rooms.slice());\n            this._connected = [];\n            if (this._unconnected.length) {\n                this._connected.push(this._unconnected.pop());\n            } /* first one is always connected */\n            while (1) {\n                /* 1. pick random connected room */\n                let connected = RNG.getItem(this._connected);\n                if (!connected) {\n                    break;\n                }\n                /* 2. find closest unconnected */\n                let room1 = this._closestRoom(this._unconnected, connected);\n                if (!room1) {\n                    break;\n                }\n                /* 3. connect it to closest connected */\n                let room2 = this._closestRoom(this._connected, room1);\n                if (!room2) {\n                    break;\n                }\n                let ok = this._connectRooms(room1, room2);\n                if (!ok) {\n                    break;\n                } /* stop connecting, re-shuffle */\n                if (!this._unconnected.length) {\n                    return true;\n                } /* done; no rooms remain */\n            }\n        }\n        return false;\n    }\n    ;\n    /**\n     * For a given room, find the closest one from the list\n     */\n    _closestRoom(rooms, room) {\n        let dist = Infinity;\n        let center = room.getCenter();\n        let result = null;\n        for (let i = 0; i < rooms.length; i++) {\n            let r = rooms[i];\n            let c = r.getCenter();\n            let dx = c[0] - center[0];\n            let dy = c[1] - center[1];\n            let d = dx * dx + dy * dy;\n            if (d < dist) {\n                dist = d;\n                result = r;\n            }\n        }\n        return result;\n    }\n    _connectRooms(room1, room2) {\n        /*\n            room1.debug();\n            room2.debug();\n        */\n        let center1 = room1.getCenter();\n        let center2 = room2.getCenter();\n        let diffX = center2[0] - center1[0];\n        let diffY = center2[1] - center1[1];\n        let start;\n        let end;\n        let dirIndex1, dirIndex2, min, max, index;\n        if (Math.abs(diffX) < Math.abs(diffY)) { /* first try connecting north-south walls */\n            dirIndex1 = (diffY > 0 ? 2 : 0);\n            dirIndex2 = (dirIndex1 + 2) % 4;\n            min = room2.getLeft();\n            max = room2.getRight();\n            index = 0;\n        }\n        else { /* first try connecting east-west walls */\n            dirIndex1 = (diffX > 0 ? 1 : 3);\n            dirIndex2 = (dirIndex1 + 2) % 4;\n            min = room2.getTop();\n            max = room2.getBottom();\n            index = 1;\n        }\n        start = this._placeInWall(room1, dirIndex1); /* corridor will start here */\n        if (!start) {\n            return false;\n        }\n        if (start[index] >= min && start[index] <= max) { /* possible to connect with straight line (I-like) */\n            end = start.slice();\n            let value = 0;\n            switch (dirIndex2) {\n                case 0:\n                    value = room2.getTop() - 1;\n                    break;\n                case 1:\n                    value = room2.getRight() + 1;\n                    break;\n                case 2:\n                    value = room2.getBottom() + 1;\n                    break;\n                case 3:\n                    value = room2.getLeft() - 1;\n                    break;\n            }\n            end[(index + 1) % 2] = value;\n            this._digLine([start, end]);\n        }\n        else if (start[index] < min - 1 || start[index] > max + 1) { /* need to switch target wall (L-like) */\n            let diff = start[index] - center2[index];\n            let rotation = 0;\n            switch (dirIndex2) {\n                case 0:\n                case 1:\n                    rotation = (diff < 0 ? 3 : 1);\n                    break;\n                case 2:\n                case 3:\n                    rotation = (diff < 0 ? 1 : 3);\n                    break;\n            }\n            dirIndex2 = (dirIndex2 + rotation) % 4;\n            end = this._placeInWall(room2, dirIndex2);\n            if (!end) {\n                return false;\n            }\n            let mid = [0, 0];\n            mid[index] = start[index];\n            let index2 = (index + 1) % 2;\n            mid[index2] = end[index2];\n            this._digLine([start, mid, end]);\n        }\n        else { /* use current wall pair, but adjust the line in the middle (S-like) */\n            let index2 = (index + 1) % 2;\n            end = this._placeInWall(room2, dirIndex2);\n            if (!end) {\n                return false;\n            }\n            let mid = Math.round((end[index2] + start[index2]) / 2);\n            let mid1 = [0, 0];\n            let mid2 = [0, 0];\n            mid1[index] = start[index];\n            mid1[index2] = mid;\n            mid2[index] = end[index];\n            mid2[index2] = mid;\n            this._digLine([start, mid1, mid2, end]);\n        }\n        room1.addDoor(start[0], start[1]);\n        room2.addDoor(end[0], end[1]);\n        index = this._unconnected.indexOf(room1);\n        if (index != -1) {\n            this._unconnected.splice(index, 1);\n            this._connected.push(room1);\n        }\n        index = this._unconnected.indexOf(room2);\n        if (index != -1) {\n            this._unconnected.splice(index, 1);\n            this._connected.push(room2);\n        }\n        return true;\n    }\n    _placeInWall(room, dirIndex) {\n        let start = [0, 0];\n        let dir = [0, 0];\n        let length = 0;\n        switch (dirIndex) {\n            case 0:\n                dir = [1, 0];\n                start = [room.getLeft(), room.getTop() - 1];\n                length = room.getRight() - room.getLeft() + 1;\n                break;\n            case 1:\n                dir = [0, 1];\n                start = [room.getRight() + 1, room.getTop()];\n                length = room.getBottom() - room.getTop() + 1;\n                break;\n            case 2:\n                dir = [1, 0];\n                start = [room.getLeft(), room.getBottom() + 1];\n                length = room.getRight() - room.getLeft() + 1;\n                break;\n            case 3:\n                dir = [0, 1];\n                start = [room.getLeft() - 1, room.getTop()];\n                length = room.getBottom() - room.getTop() + 1;\n                break;\n        }\n        let avail = [];\n        let lastBadIndex = -2;\n        for (let i = 0; i < length; i++) {\n            let x = start[0] + i * dir[0];\n            let y = start[1] + i * dir[1];\n            avail.push(null);\n            let isWall = (this._map[x][y] == 1);\n            if (isWall) {\n                if (lastBadIndex != i - 1) {\n                    avail[i] = [x, y];\n                }\n            }\n            else {\n                lastBadIndex = i;\n                if (i) {\n                    avail[i - 1] = null;\n                }\n            }\n        }\n        for (let i = avail.length - 1; i >= 0; i--) {\n            if (!avail[i]) {\n                avail.splice(i, 1);\n            }\n        }\n        return (avail.length ? RNG.getItem(avail) : null);\n    }\n    /**\n     * Dig a polyline.\n     */\n    _digLine(points) {\n        for (let i = 1; i < points.length; i++) {\n            let start = points[i - 1];\n            let end = points[i];\n            let corridor = new Corridor(start[0], start[1], end[0], end[1]);\n            corridor.create(this._digCallback);\n            this._corridors.push(corridor);\n        }\n    }\n    _digCallback(x, y, value) {\n        this._map[x][y] = value;\n        if (value == 0) {\n            this._dug++;\n        }\n    }\n    _isWallCallback(x, y) {\n        if (x < 0 || y < 0 || x >= this._width || y >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _canBeDugCallback(x, y) {\n        if (x < 1 || y < 1 || x + 1 >= this._width || y + 1 >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n}\n","import Map from \"./map.js\";\n/**\n * @class Dungeon map: has rooms and corridors\n * @augments ROT.Map\n */\nexport default class Dungeon extends Map {\n    constructor(width, height) {\n        super(width, height);\n        this._rooms = [];\n        this._corridors = [];\n    }\n    /**\n     * Get all generated rooms\n     * @returns {ROT.Map.Feature.Room[]}\n     */\n    getRooms() { return this._rooms; }\n    /**\n     * Get all generated corridors\n     * @returns {ROT.Map.Feature.Corridor[]}\n     */\n    getCorridors() { return this._corridors; }\n}\n","import RNG from \"../rng.js\";\n;\n/**\n * @class Dungeon feature; has own .create() method\n */\nclass Feature {\n}\n/**\n * @class Room\n * @augments ROT.Map.Feature\n * @param {int} x1\n * @param {int} y1\n * @param {int} x2\n * @param {int} y2\n * @param {int} [doorX]\n * @param {int} [doorY]\n */\nexport class Room extends Feature {\n    constructor(x1, y1, x2, y2, doorX, doorY) {\n        super();\n        this._x1 = x1;\n        this._y1 = y1;\n        this._x2 = x2;\n        this._y2 = y2;\n        this._doors = {};\n        if (doorX !== undefined && doorY !== undefined) {\n            this.addDoor(doorX, doorY);\n        }\n    }\n    ;\n    /**\n     * Room of random size, with a given doors and direction\n     */\n    static createRandomAt(x, y, dx, dy, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        if (dx == 1) { /* to the right */\n            let y2 = y - Math.floor(RNG.getUniform() * height);\n            return new this(x + 1, y2, x + width, y2 + height - 1, x, y);\n        }\n        if (dx == -1) { /* to the left */\n            let y2 = y - Math.floor(RNG.getUniform() * height);\n            return new this(x - width, y2, x - 1, y2 + height - 1, x, y);\n        }\n        if (dy == 1) { /* to the bottom */\n            let x2 = x - Math.floor(RNG.getUniform() * width);\n            return new this(x2, y + 1, x2 + width - 1, y + height, x, y);\n        }\n        if (dy == -1) { /* to the top */\n            let x2 = x - Math.floor(RNG.getUniform() * width);\n            return new this(x2, y - height, x2 + width - 1, y - 1, x, y);\n        }\n        throw new Error(\"dx or dy must be 1 or -1\");\n    }\n    /**\n     * Room of random size, positioned around center coords\n     */\n    static createRandomCenter(cx, cy, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        let x1 = cx - Math.floor(RNG.getUniform() * width);\n        let y1 = cy - Math.floor(RNG.getUniform() * height);\n        let x2 = x1 + width - 1;\n        let y2 = y1 + height - 1;\n        return new this(x1, y1, x2, y2);\n    }\n    /**\n     * Room of random size within a given dimensions\n     */\n    static createRandom(availWidth, availHeight, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        let left = availWidth - width - 1;\n        let top = availHeight - height - 1;\n        let x1 = 1 + Math.floor(RNG.getUniform() * left);\n        let y1 = 1 + Math.floor(RNG.getUniform() * top);\n        let x2 = x1 + width - 1;\n        let y2 = y1 + height - 1;\n        return new this(x1, y1, x2, y2);\n    }\n    addDoor(x, y) {\n        this._doors[x + \",\" + y] = 1;\n        return this;\n    }\n    /**\n     * @param {function}\n     */\n    getDoors(cb) {\n        for (let key in this._doors) {\n            let parts = key.split(\",\");\n            cb(parseInt(parts[0]), parseInt(parts[1]));\n        }\n        return this;\n    }\n    clearDoors() {\n        this._doors = {};\n        return this;\n    }\n    addDoors(isWallCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x != left && x != right && y != top && y != bottom) {\n                    continue;\n                }\n                if (isWallCallback(x, y)) {\n                    continue;\n                }\n                this.addDoor(x, y);\n            }\n        }\n        return this;\n    }\n    debug() {\n        console.log(\"room\", this._x1, this._y1, this._x2, this._y2);\n    }\n    isValid(isWallCallback, canBeDugCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x == left || x == right || y == top || y == bottom) {\n                    if (!isWallCallback(x, y)) {\n                        return false;\n                    }\n                }\n                else {\n                    if (!canBeDugCallback(x, y)) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n    /**\n     * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty, 1 = wall, 2 = door. Multiple doors are allowed.\n     */\n    create(digCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        let value = 0;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x + \",\" + y in this._doors) {\n                    value = 2;\n                }\n                else if (x == left || x == right || y == top || y == bottom) {\n                    value = 1;\n                }\n                else {\n                    value = 0;\n                }\n                digCallback(x, y, value);\n            }\n        }\n    }\n    getCenter() {\n        return [Math.round((this._x1 + this._x2) / 2), Math.round((this._y1 + this._y2) / 2)];\n    }\n    getLeft() { return this._x1; }\n    getRight() { return this._x2; }\n    getTop() { return this._y1; }\n    getBottom() { return this._y2; }\n}\n/**\n * @class Corridor\n * @augments ROT.Map.Feature\n * @param {int} startX\n * @param {int} startY\n * @param {int} endX\n * @param {int} endY\n */\nexport class Corridor extends Feature {\n    constructor(startX, startY, endX, endY) {\n        super();\n        this._startX = startX;\n        this._startY = startY;\n        this._endX = endX;\n        this._endY = endY;\n        this._endsWithAWall = true;\n    }\n    static createRandomAt(x, y, dx, dy, options) {\n        let min = options.corridorLength[0];\n        let max = options.corridorLength[1];\n        let length = RNG.getUniformInt(min, max);\n        return new this(x, y, x + dx * length, y + dy * length);\n    }\n    debug() {\n        console.log(\"corridor\", this._startX, this._startY, this._endX, this._endY);\n    }\n    isValid(isWallCallback, canBeDugCallback) {\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        let length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        let nx = dy;\n        let ny = -dx;\n        let ok = true;\n        for (let i = 0; i < length; i++) {\n            let x = sx + i * dx;\n            let y = sy + i * dy;\n            if (!canBeDugCallback(x, y)) {\n                ok = false;\n            }\n            if (!isWallCallback(x + nx, y + ny)) {\n                ok = false;\n            }\n            if (!isWallCallback(x - nx, y - ny)) {\n                ok = false;\n            }\n            if (!ok) {\n                length = i;\n                this._endX = x - dx;\n                this._endY = y - dy;\n                break;\n            }\n        }\n        /**\n         * If the length degenerated, this corridor might be invalid\n         */\n        /* not supported */\n        if (length == 0) {\n            return false;\n        }\n        /* length 1 allowed only if the next space is empty */\n        if (length == 1 && isWallCallback(this._endX + dx, this._endY + dy)) {\n            return false;\n        }\n        /**\n         * We do not want the corridor to crash into a corner of a room;\n         * if any of the ending corners is empty, the N+1th cell of this corridor must be empty too.\n         *\n         * Situation:\n         * #######1\n         * .......?\n         * #######2\n         *\n         * The corridor was dug from left to right.\n         * 1, 2 - problematic corners, ? = N+1th cell (not dug)\n         */\n        let firstCornerBad = !isWallCallback(this._endX + dx + nx, this._endY + dy + ny);\n        let secondCornerBad = !isWallCallback(this._endX + dx - nx, this._endY + dy - ny);\n        this._endsWithAWall = isWallCallback(this._endX + dx, this._endY + dy);\n        if ((firstCornerBad || secondCornerBad) && this._endsWithAWall) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty.\n     */\n    create(digCallback) {\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        let length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        for (let i = 0; i < length; i++) {\n            let x = sx + i * dx;\n            let y = sy + i * dy;\n            digCallback(x, y, 0);\n        }\n        return true;\n    }\n    createPriorityWalls(priorityWallCallback) {\n        if (!this._endsWithAWall) {\n            return;\n        }\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        let nx = dy;\n        let ny = -dx;\n        priorityWallCallback(this._endX + dx, this._endY + dy);\n        priorityWallCallback(this._endX + nx, this._endY + ny);\n        priorityWallCallback(this._endX - nx, this._endY - ny);\n    }\n}\n","import Map from \"./map.js\";\nimport { DIRS } from \"../constants.js\";\nimport RNG from \"../rng.js\";\n;\n/**\n * @class Cellular automaton map generator\n * @augments ROT.Map\n * @param {int} [width=ROT.DEFAULT_WIDTH]\n * @param {int} [height=ROT.DEFAULT_HEIGHT]\n * @param {object} [options] Options\n * @param {int[]} [options.born] List of neighbor counts for a new cell to be born in empty space\n * @param {int[]} [options.survive] List of neighbor counts for an existing  cell to survive\n * @param {int} [options.topology] Topology 4 or 6 or 8\n */\nexport default class Cellular extends Map {\n    constructor(width, height, options = {}) {\n        super(width, height);\n        this._options = {\n            born: [5, 6, 7, 8],\n            survive: [4, 5, 6, 7, 8],\n            topology: 8\n        };\n        this.setOptions(options);\n        this._dirs = DIRS[this._options.topology];\n        this._map = this._fillMap(0);\n    }\n    /**\n     * Fill the map with random values\n     * @param {float} probability Probability for a cell to become alive; 0 = all empty, 1 = all full\n     */\n    randomize(probability) {\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                this._map[i][j] = (RNG.getUniform() < probability ? 1 : 0);\n            }\n        }\n        return this;\n    }\n    /**\n     * Change options.\n     * @see ROT.Map.Cellular\n     */\n    setOptions(options) { Object.assign(this._options, options); }\n    set(x, y, value) { this._map[x][y] = value; }\n    create(callback) {\n        let newMap = this._fillMap(0);\n        let born = this._options.born;\n        let survive = this._options.survive;\n        for (let j = 0; j < this._height; j++) {\n            let widthStep = 1;\n            let widthStart = 0;\n            if (this._options.topology == 6) {\n                widthStep = 2;\n                widthStart = j % 2;\n            }\n            for (let i = widthStart; i < this._width; i += widthStep) {\n                let cur = this._map[i][j];\n                let ncount = this._getNeighbors(i, j);\n                if (cur && survive.indexOf(ncount) != -1) { /* survive */\n                    newMap[i][j] = 1;\n                }\n                else if (!cur && born.indexOf(ncount) != -1) { /* born */\n                    newMap[i][j] = 1;\n                }\n            }\n        }\n        this._map = newMap;\n        callback && this._serviceCallback(callback);\n    }\n    _serviceCallback(callback) {\n        for (let j = 0; j < this._height; j++) {\n            let widthStep = 1;\n            let widthStart = 0;\n            if (this._options.topology == 6) {\n                widthStep = 2;\n                widthStart = j % 2;\n            }\n            for (let i = widthStart; i < this._width; i += widthStep) {\n                callback(i, j, this._map[i][j]);\n            }\n        }\n    }\n    /**\n     * Get neighbor count at [i,j] in this._map\n     */\n    _getNeighbors(cx, cy) {\n        let result = 0;\n        for (let i = 0; i < this._dirs.length; i++) {\n            let dir = this._dirs[i];\n            let x = cx + dir[0];\n            let y = cy + dir[1];\n            if (x < 0 || x >= this._width || y < 0 || y >= this._height) {\n                continue;\n            }\n            result += (this._map[x][y] == 1 ? 1 : 0);\n        }\n        return result;\n    }\n    /**\n     * Make sure every non-wall space is accessible.\n     * @param {function} callback to call to display map when do\n     * @param {int} value to consider empty space - defaults to 0\n     * @param {function} callback to call when a new connection is made\n     */\n    connect(callback, value, connectionCallback) {\n        if (!value)\n            value = 0;\n        let allFreeSpace = [];\n        let notConnected = {};\n        // find all free space\n        let widthStep = 1;\n        let widthStarts = [0, 0];\n        if (this._options.topology == 6) {\n            widthStep = 2;\n            widthStarts = [0, 1];\n        }\n        for (let y = 0; y < this._height; y++) {\n            for (let x = widthStarts[y % 2]; x < this._width; x += widthStep) {\n                if (this._freeSpace(x, y, value)) {\n                    let p = [x, y];\n                    notConnected[this._pointKey(p)] = p;\n                    allFreeSpace.push([x, y]);\n                }\n            }\n        }\n        let start = allFreeSpace[RNG.getUniformInt(0, allFreeSpace.length - 1)];\n        let key = this._pointKey(start);\n        let connected = {};\n        connected[key] = start;\n        delete notConnected[key];\n        // find what's connected to the starting point\n        this._findConnected(connected, notConnected, [start], false, value);\n        while (Object.keys(notConnected).length > 0) {\n            // find two points from notConnected to connected\n            let p = this._getFromTo(connected, notConnected);\n            let from = p[0]; // notConnected\n            let to = p[1]; // connected\n            // find everything connected to the starting point\n            let local = {};\n            local[this._pointKey(from)] = from;\n            this._findConnected(local, notConnected, [from], true, value);\n            // connect to a connected cell\n            let tunnelFn = (this._options.topology == 6 ? this._tunnelToConnected6 : this._tunnelToConnected);\n            tunnelFn.call(this, to, from, connected, notConnected, value, connectionCallback);\n            // now all of local is connected\n            for (let k in local) {\n                let pp = local[k];\n                this._map[pp[0]][pp[1]] = value;\n                connected[k] = pp;\n                delete notConnected[k];\n            }\n        }\n        callback && this._serviceCallback(callback);\n    }\n    /**\n     * Find random points to connect. Search for the closest point in the larger space.\n     * This is to minimize the length of the passage while maintaining good performance.\n     */\n    _getFromTo(connected, notConnected) {\n        let from = [0, 0], to = [0, 0], d;\n        let connectedKeys = Object.keys(connected);\n        let notConnectedKeys = Object.keys(notConnected);\n        for (let i = 0; i < 5; i++) {\n            if (connectedKeys.length < notConnectedKeys.length) {\n                let keys = connectedKeys;\n                to = connected[keys[RNG.getUniformInt(0, keys.length - 1)]];\n                from = this._getClosest(to, notConnected);\n            }\n            else {\n                let keys = notConnectedKeys;\n                from = notConnected[keys[RNG.getUniformInt(0, keys.length - 1)]];\n                to = this._getClosest(from, connected);\n            }\n            d = (from[0] - to[0]) * (from[0] - to[0]) + (from[1] - to[1]) * (from[1] - to[1]);\n            if (d < 64) {\n                break;\n            }\n        }\n        // console.log(\">>> connected=\" + to + \" notConnected=\" + from + \" dist=\" + d);\n        return [from, to];\n    }\n    _getClosest(point, space) {\n        let minPoint = null;\n        let minDist = null;\n        for (let k in space) {\n            let p = space[k];\n            let d = (p[0] - point[0]) * (p[0] - point[0]) + (p[1] - point[1]) * (p[1] - point[1]);\n            if (minDist == null || d < minDist) {\n                minDist = d;\n                minPoint = p;\n            }\n        }\n        return minPoint;\n    }\n    _findConnected(connected, notConnected, stack, keepNotConnected, value) {\n        while (stack.length > 0) {\n            let p = stack.splice(0, 1)[0];\n            let tests;\n            if (this._options.topology == 6) {\n                tests = [\n                    [p[0] + 2, p[1]],\n                    [p[0] + 1, p[1] - 1],\n                    [p[0] - 1, p[1] - 1],\n                    [p[0] - 2, p[1]],\n                    [p[0] - 1, p[1] + 1],\n                    [p[0] + 1, p[1] + 1],\n                ];\n            }\n            else {\n                tests = [\n                    [p[0] + 1, p[1]],\n                    [p[0] - 1, p[1]],\n                    [p[0], p[1] + 1],\n                    [p[0], p[1] - 1]\n                ];\n            }\n            for (let i = 0; i < tests.length; i++) {\n                let key = this._pointKey(tests[i]);\n                if (connected[key] == null && this._freeSpace(tests[i][0], tests[i][1], value)) {\n                    connected[key] = tests[i];\n                    if (!keepNotConnected) {\n                        delete notConnected[key];\n                    }\n                    stack.push(tests[i]);\n                }\n            }\n        }\n    }\n    _tunnelToConnected(to, from, connected, notConnected, value, connectionCallback) {\n        let a, b;\n        if (from[0] < to[0]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        for (let xx = a[0]; xx <= b[0]; xx++) {\n            this._map[xx][a[1]] = value;\n            let p = [xx, a[1]];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback && a[0] < b[0]) {\n            connectionCallback(a, [b[0], a[1]]);\n        }\n        // x is now fixed\n        let x = b[0];\n        if (from[1] < to[1]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        for (let yy = a[1]; yy < b[1]; yy++) {\n            this._map[x][yy] = value;\n            let p = [x, yy];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback && a[1] < b[1]) {\n            connectionCallback([b[0], a[1]], [b[0], b[1]]);\n        }\n    }\n    _tunnelToConnected6(to, from, connected, notConnected, value, connectionCallback) {\n        let a, b;\n        if (from[0] < to[0]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        // tunnel diagonally until horizontally level\n        let xx = a[0];\n        let yy = a[1];\n        while (!(xx == b[0] && yy == b[1])) {\n            let stepWidth = 2;\n            if (yy < b[1]) {\n                yy++;\n                stepWidth = 1;\n            }\n            else if (yy > b[1]) {\n                yy--;\n                stepWidth = 1;\n            }\n            if (xx < b[0]) {\n                xx += stepWidth;\n            }\n            else if (xx > b[0]) {\n                xx -= stepWidth;\n            }\n            else if (b[1] % 2) {\n                // Won't step outside map if destination on is map's right edge\n                xx -= stepWidth;\n            }\n            else {\n                // ditto for left edge\n                xx += stepWidth;\n            }\n            this._map[xx][yy] = value;\n            let p = [xx, yy];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback) {\n            connectionCallback(from, to);\n        }\n    }\n    _freeSpace(x, y, value) {\n        return x >= 0 && x < this._width && y >= 0 && y < this._height && this._map[x][y] == value;\n    }\n    _pointKey(p) { return p[0] + \".\" + p[1]; }\n}\n","import Dungeon from \"./dungeon.js\";\nimport { Room, Corridor } from \"./features.js\";\nimport RNG from \"../rng.js\";\nimport { DIRS } from \"../constants.js\";\nconst FEATURES = {\n    \"room\": Room,\n    \"corridor\": Corridor\n};\n/**\n * Random dungeon generator using human-like digging patterns.\n * Heavily based on Mike Anderson's ideas from the \"Tyrant\" algo, mentioned at\n * http://www.roguebasin.roguelikedevelopment.org/index.php?title=Dungeon-Building_Algorithm.\n */\nexport default class Digger extends Dungeon {\n    constructor(width, height, options = {}) {\n        super(width, height);\n        this._options = Object.assign({\n            roomWidth: [3, 9],\n            roomHeight: [3, 5],\n            corridorLength: [3, 10],\n            dugPercentage: 0.2,\n            timeLimit: 1000 /* we stop after this much time has passed (msec) */\n        }, options);\n        this._features = {\n            \"room\": 4,\n            \"corridor\": 4\n        };\n        this._map = [];\n        this._featureAttempts = 20; /* how many times do we try to create a feature on a suitable wall */\n        this._walls = {}; /* these are available for digging */\n        this._dug = 0;\n        this._digCallback = this._digCallback.bind(this);\n        this._canBeDugCallback = this._canBeDugCallback.bind(this);\n        this._isWallCallback = this._isWallCallback.bind(this);\n        this._priorityWallCallback = this._priorityWallCallback.bind(this);\n    }\n    create(callback) {\n        this._rooms = [];\n        this._corridors = [];\n        this._map = this._fillMap(1);\n        this._walls = {};\n        this._dug = 0;\n        let area = (this._width - 2) * (this._height - 2);\n        this._firstRoom();\n        let t1 = Date.now();\n        let priorityWalls;\n        do {\n            priorityWalls = 0;\n            let t2 = Date.now();\n            if (t2 - t1 > this._options.timeLimit) {\n                break;\n            }\n            /* find a good wall */\n            let wall = this._findWall();\n            if (!wall) {\n                break;\n            } /* no more walls */\n            let parts = wall.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            let dir = this._getDiggingDirection(x, y);\n            if (!dir) {\n                continue;\n            } /* this wall is not suitable */\n            //\t\tconsole.log(\"wall\", x, y);\n            /* try adding a feature */\n            let featureAttempts = 0;\n            do {\n                featureAttempts++;\n                if (this._tryFeature(x, y, dir[0], dir[1])) { /* feature added */\n                    //if (this._rooms.length + this._corridors.length == 2) { this._rooms[0].addDoor(x, y); } /* first room oficially has doors */\n                    this._removeSurroundingWalls(x, y);\n                    this._removeSurroundingWalls(x - dir[0], y - dir[1]);\n                    break;\n                }\n            } while (featureAttempts < this._featureAttempts);\n            for (let id in this._walls) {\n                if (this._walls[id] > 1) {\n                    priorityWalls++;\n                }\n            }\n        } while (this._dug / area < this._options.dugPercentage || priorityWalls); /* fixme number of priority walls */\n        this._addDoors();\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this._map[i][j]);\n                }\n            }\n        }\n        this._walls = {};\n        this._map = [];\n        return this;\n    }\n    _digCallback(x, y, value) {\n        if (value == 0 || value == 2) { /* empty */\n            this._map[x][y] = 0;\n            this._dug++;\n        }\n        else { /* wall */\n            this._walls[x + \",\" + y] = 1;\n        }\n    }\n    _isWallCallback(x, y) {\n        if (x < 0 || y < 0 || x >= this._width || y >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _canBeDugCallback(x, y) {\n        if (x < 1 || y < 1 || x + 1 >= this._width || y + 1 >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _priorityWallCallback(x, y) { this._walls[x + \",\" + y] = 2; }\n    ;\n    _firstRoom() {\n        let cx = Math.floor(this._width / 2);\n        let cy = Math.floor(this._height / 2);\n        let room = Room.createRandomCenter(cx, cy, this._options);\n        this._rooms.push(room);\n        room.create(this._digCallback);\n    }\n    /**\n     * Get a suitable wall\n     */\n    _findWall() {\n        let prio1 = [];\n        let prio2 = [];\n        for (let id in this._walls) {\n            let prio = this._walls[id];\n            if (prio == 2) {\n                prio2.push(id);\n            }\n            else {\n                prio1.push(id);\n            }\n        }\n        let arr = (prio2.length ? prio2 : prio1);\n        if (!arr.length) {\n            return null;\n        } /* no walls :/ */\n        let id = RNG.getItem(arr.sort()); // sort to make the order deterministic\n        delete this._walls[id];\n        return id;\n    }\n    /**\n     * Tries adding a feature\n     * @returns {bool} was this a successful try?\n     */\n    _tryFeature(x, y, dx, dy) {\n        let featureName = RNG.getWeightedValue(this._features);\n        let ctor = FEATURES[featureName];\n        let feature = ctor.createRandomAt(x, y, dx, dy, this._options);\n        if (!feature.isValid(this._isWallCallback, this._canBeDugCallback)) {\n            //\t\tconsole.log(\"not valid\");\n            //\t\tfeature.debug();\n            return false;\n        }\n        feature.create(this._digCallback);\n        //\tfeature.debug();\n        if (feature instanceof Room) {\n            this._rooms.push(feature);\n        }\n        if (feature instanceof Corridor) {\n            feature.createPriorityWalls(this._priorityWallCallback);\n            this._corridors.push(feature);\n        }\n        return true;\n    }\n    _removeSurroundingWalls(cx, cy) {\n        let deltas = DIRS[4];\n        for (let i = 0; i < deltas.length; i++) {\n            let delta = deltas[i];\n            let x = cx + delta[0];\n            let y = cy + delta[1];\n            delete this._walls[x + \",\" + y];\n            x = cx + 2 * delta[0];\n            y = cy + 2 * delta[1];\n            delete this._walls[x + \",\" + y];\n        }\n    }\n    /**\n     * Returns vector in \"digging\" direction, or false, if this does not exist (or is not unique)\n     */\n    _getDiggingDirection(cx, cy) {\n        if (cx <= 0 || cy <= 0 || cx >= this._width - 1 || cy >= this._height - 1) {\n            return null;\n        }\n        let result = null;\n        let deltas = DIRS[4];\n        for (let i = 0; i < deltas.length; i++) {\n            let delta = deltas[i];\n            let x = cx + delta[0];\n            let y = cy + delta[1];\n            if (!this._map[x][y]) { /* there already is another empty neighbor! */\n                if (result) {\n                    return null;\n                }\n                result = delta;\n            }\n        }\n        /* no empty neighbor */\n        if (!result) {\n            return null;\n        }\n        return [-result[0], -result[1]];\n    }\n    /**\n     * Find empty spaces surrounding rooms, and apply doors.\n     */\n    _addDoors() {\n        let data = this._map;\n        function isWallCallback(x, y) {\n            return (data[x][y] == 1);\n        }\n        ;\n        for (let i = 0; i < this._rooms.length; i++) {\n            let room = this._rooms[i];\n            room.clearDoors();\n            room.addDoors(isWallCallback);\n        }\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * Join lists with \"i\" and \"i+1\"\n */\nfunction addToList(i, L, R) {\n    R[L[i + 1]] = R[i];\n    L[R[i]] = L[i + 1];\n    R[i] = i + 1;\n    L[i + 1] = i;\n}\n/**\n * Remove \"i\" from its list\n */\nfunction removeFromList(i, L, R) {\n    R[L[i]] = R[i];\n    L[R[i]] = L[i];\n    R[i] = i;\n    L[i] = i;\n}\n/**\n * Maze generator - Eller's algorithm\n * See http://homepages.cwi.nl/~tromp/maze.html for explanation\n */\nexport default class EllerMaze extends Map {\n    create(callback) {\n        let map = this._fillMap(1);\n        let w = Math.ceil((this._width - 2) / 2);\n        let rand = 9 / 24;\n        let L = [];\n        let R = [];\n        for (let i = 0; i < w; i++) {\n            L.push(i);\n            R.push(i);\n        }\n        L.push(w - 1); /* fake stop-block at the right side */\n        let j;\n        for (j = 1; j + 3 < this._height; j += 2) {\n            /* one row */\n            for (let i = 0; i < w; i++) {\n                /* cell coords (will be always empty) */\n                let x = 2 * i + 1;\n                let y = j;\n                map[x][y] = 0;\n                /* right connection */\n                if (i != L[i + 1] && RNG.getUniform() > rand) {\n                    addToList(i, L, R);\n                    map[x + 1][y] = 0;\n                }\n                /* bottom connection */\n                if (i != L[i] && RNG.getUniform() > rand) {\n                    /* remove connection */\n                    removeFromList(i, L, R);\n                }\n                else {\n                    /* create connection */\n                    map[x][y + 1] = 0;\n                }\n            }\n        }\n        /* last row */\n        for (let i = 0; i < w; i++) {\n            /* cell coords (will be always empty) */\n            let x = 2 * i + 1;\n            let y = j;\n            map[x][y] = 0;\n            /* right connection */\n            if (i != L[i + 1] && (i == L[i] || RNG.getUniform() > rand)) {\n                /* dig right also if the cell is separated, so it gets connected to the rest of maze */\n                addToList(i, L, R);\n                map[x + 1][y] = 0;\n            }\n            removeFromList(i, L, R);\n        }\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                callback(i, j, map[i][j]);\n            }\n        }\n        return this;\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * @class Recursively divided maze, http://en.wikipedia.org/wiki/Maze_generation_algorithm#Recursive_division_method\n * @augments ROT.Map\n */\nexport default class DividedMaze extends Map {\n    constructor() {\n        super(...arguments);\n        this._stack = [];\n        this._map = [];\n    }\n    create(callback) {\n        let w = this._width;\n        let h = this._height;\n        this._map = [];\n        for (let i = 0; i < w; i++) {\n            this._map.push([]);\n            for (let j = 0; j < h; j++) {\n                let border = (i == 0 || j == 0 || i + 1 == w || j + 1 == h);\n                this._map[i].push(border ? 1 : 0);\n            }\n        }\n        this._stack = [\n            [1, 1, w - 2, h - 2]\n        ];\n        this._process();\n        for (let i = 0; i < w; i++) {\n            for (let j = 0; j < h; j++) {\n                callback(i, j, this._map[i][j]);\n            }\n        }\n        this._map = [];\n        return this;\n    }\n    _process() {\n        while (this._stack.length) {\n            let room = this._stack.shift(); /* [left, top, right, bottom] */\n            this._partitionRoom(room);\n        }\n    }\n    _partitionRoom(room) {\n        let availX = [];\n        let availY = [];\n        for (let i = room[0] + 1; i < room[2]; i++) {\n            let top = this._map[i][room[1] - 1];\n            let bottom = this._map[i][room[3] + 1];\n            if (top && bottom && !(i % 2)) {\n                availX.push(i);\n            }\n        }\n        for (let j = room[1] + 1; j < room[3]; j++) {\n            let left = this._map[room[0] - 1][j];\n            let right = this._map[room[2] + 1][j];\n            if (left && right && !(j % 2)) {\n                availY.push(j);\n            }\n        }\n        if (!availX.length || !availY.length) {\n            return;\n        }\n        let x = RNG.getItem(availX);\n        let y = RNG.getItem(availY);\n        this._map[x][y] = 1;\n        let walls = [];\n        let w = [];\n        walls.push(w); /* left part */\n        for (let i = room[0]; i < x; i++) {\n            this._map[i][y] = 1;\n            if (i % 2)\n                w.push([i, y]);\n        }\n        w = [];\n        walls.push(w); /* right part */\n        for (let i = x + 1; i <= room[2]; i++) {\n            this._map[i][y] = 1;\n            if (i % 2)\n                w.push([i, y]);\n        }\n        w = [];\n        walls.push(w); /* top part */\n        for (let j = room[1]; j < y; j++) {\n            this._map[x][j] = 1;\n            if (j % 2)\n                w.push([x, j]);\n        }\n        w = [];\n        walls.push(w); /* bottom part */\n        for (let j = y + 1; j <= room[3]; j++) {\n            this._map[x][j] = 1;\n            if (j % 2)\n                w.push([x, j]);\n        }\n        let solid = RNG.getItem(walls);\n        for (let i = 0; i < walls.length; i++) {\n            let w = walls[i];\n            if (w == solid) {\n                continue;\n            }\n            let hole = RNG.getItem(w);\n            this._map[hole[0]][hole[1]] = 0;\n        }\n        this._stack.push([room[0], room[1], x - 1, y - 1]); /* left top */\n        this._stack.push([x + 1, room[1], room[2], y - 1]); /* right top */\n        this._stack.push([room[0], y + 1, x - 1, room[3]]); /* left bottom */\n        this._stack.push([x + 1, y + 1, room[2], room[3]]); /* right bottom */\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * Icey's Maze generator\n * See http://www.roguebasin.roguelikedevelopment.org/index.php?title=Simple_maze for explanation\n */\nexport default class IceyMaze extends Map {\n    constructor(width, height, regularity = 0) {\n        super(width, height);\n        this._regularity = regularity;\n        this._map = [];\n    }\n    create(callback) {\n        let width = this._width;\n        let height = this._height;\n        let map = this._fillMap(1);\n        width -= (width % 2 ? 1 : 2);\n        height -= (height % 2 ? 1 : 2);\n        let cx = 0;\n        let cy = 0;\n        let nx = 0;\n        let ny = 0;\n        let done = 0;\n        let blocked = false;\n        let dirs = [\n            [0, 0],\n            [0, 0],\n            [0, 0],\n            [0, 0]\n        ];\n        do {\n            cx = 1 + 2 * Math.floor(RNG.getUniform() * (width - 1) / 2);\n            cy = 1 + 2 * Math.floor(RNG.getUniform() * (height - 1) / 2);\n            if (!done) {\n                map[cx][cy] = 0;\n            }\n            if (!map[cx][cy]) {\n                this._randomize(dirs);\n                do {\n                    if (Math.floor(RNG.getUniform() * (this._regularity + 1)) == 0) {\n                        this._randomize(dirs);\n                    }\n                    blocked = true;\n                    for (let i = 0; i < 4; i++) {\n                        nx = cx + dirs[i][0] * 2;\n                        ny = cy + dirs[i][1] * 2;\n                        if (this._isFree(map, nx, ny, width, height)) {\n                            map[nx][ny] = 0;\n                            map[cx + dirs[i][0]][cy + dirs[i][1]] = 0;\n                            cx = nx;\n                            cy = ny;\n                            blocked = false;\n                            done++;\n                            break;\n                        }\n                    }\n                } while (!blocked);\n            }\n        } while (done + 1 < width * height / 4);\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                callback(i, j, map[i][j]);\n            }\n        }\n        this._map = [];\n        return this;\n    }\n    _randomize(dirs) {\n        for (let i = 0; i < 4; i++) {\n            dirs[i][0] = 0;\n            dirs[i][1] = 0;\n        }\n        switch (Math.floor(RNG.getUniform() * 4)) {\n            case 0:\n                dirs[0][0] = -1;\n                dirs[1][0] = 1;\n                dirs[2][1] = -1;\n                dirs[3][1] = 1;\n                break;\n            case 1:\n                dirs[3][0] = -1;\n                dirs[2][0] = 1;\n                dirs[1][1] = -1;\n                dirs[0][1] = 1;\n                break;\n            case 2:\n                dirs[2][0] = -1;\n                dirs[3][0] = 1;\n                dirs[0][1] = -1;\n                dirs[1][1] = 1;\n                break;\n            case 3:\n                dirs[1][0] = -1;\n                dirs[0][0] = 1;\n                dirs[3][1] = -1;\n                dirs[2][1] = 1;\n                break;\n        }\n    }\n    _isFree(map, x, y, width, height) {\n        if (x < 1 || y < 1 || x >= width || y >= height) {\n            return false;\n        }\n        return map[x][y];\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\nimport { DIRS } from \"../constants.js\";\n/**\n * Dungeon generator which uses the \"orginal\" Rogue dungeon generation algorithm. See http://kuoi.com/~kamikaze/GameDesign/art07_rogue_dungeon.php\n * @author hyakugei\n */\nexport default class Rogue extends Map {\n    constructor(width, height, options) {\n        super(width, height);\n        this.map = [];\n        this.rooms = [];\n        this.connectedCells = [];\n        options = Object.assign({\n            cellWidth: 3,\n            cellHeight: 3 //     ie. as an array with min-max values for each direction....\n        }, options);\n        /*\n        Set the room sizes according to the over-all width of the map,\n        and the cell sizes.\n        */\n        if (!options.hasOwnProperty(\"roomWidth\")) {\n            options[\"roomWidth\"] = this._calculateRoomSize(this._width, options[\"cellWidth\"]);\n        }\n        if (!options.hasOwnProperty(\"roomHeight\")) {\n            options[\"roomHeight\"] = this._calculateRoomSize(this._height, options[\"cellHeight\"]);\n        }\n        this._options = options;\n    }\n    create(callback) {\n        this.map = this._fillMap(1);\n        this.rooms = [];\n        this.connectedCells = [];\n        this._initRooms();\n        this._connectRooms();\n        this._connectUnconnectedRooms();\n        this._createRandomRoomConnections();\n        this._createRooms();\n        this._createCorridors();\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this.map[i][j]);\n                }\n            }\n        }\n        return this;\n    }\n    _calculateRoomSize(size, cell) {\n        let max = Math.floor((size / cell) * 0.8);\n        let min = Math.floor((size / cell) * 0.25);\n        if (min < 2) {\n            min = 2;\n        }\n        if (max < 2) {\n            max = 2;\n        }\n        return [min, max];\n    }\n    _initRooms() {\n        // create rooms array. This is the \"grid\" list from the algo.\n        for (let i = 0; i < this._options.cellWidth; i++) {\n            this.rooms.push([]);\n            for (let j = 0; j < this._options.cellHeight; j++) {\n                this.rooms[i].push({ \"x\": 0, \"y\": 0, \"width\": 0, \"height\": 0, \"connections\": [], \"cellx\": i, \"celly\": j });\n            }\n        }\n    }\n    _connectRooms() {\n        //pick random starting grid\n        let cgx = RNG.getUniformInt(0, this._options.cellWidth - 1);\n        let cgy = RNG.getUniformInt(0, this._options.cellHeight - 1);\n        let idx;\n        let ncgx;\n        let ncgy;\n        let found = false;\n        let room;\n        let otherRoom;\n        let dirToCheck;\n        // find  unconnected neighbour cells\n        do {\n            //dirToCheck = [0, 1, 2, 3, 4, 5, 6, 7];\n            dirToCheck = [0, 2, 4, 6];\n            dirToCheck = RNG.shuffle(dirToCheck);\n            do {\n                found = false;\n                idx = dirToCheck.pop();\n                ncgx = cgx + DIRS[8][idx][0];\n                ncgy = cgy + DIRS[8][idx][1];\n                if (ncgx < 0 || ncgx >= this._options.cellWidth) {\n                    continue;\n                }\n                if (ncgy < 0 || ncgy >= this._options.cellHeight) {\n                    continue;\n                }\n                room = this.rooms[cgx][cgy];\n                if (room[\"connections\"].length > 0) {\n                    // as long as this room doesn't already coonect to me, we are ok with it.\n                    if (room[\"connections\"][0][0] == ncgx && room[\"connections\"][0][1] == ncgy) {\n                        break;\n                    }\n                }\n                otherRoom = this.rooms[ncgx][ncgy];\n                if (otherRoom[\"connections\"].length == 0) {\n                    otherRoom[\"connections\"].push([cgx, cgy]);\n                    this.connectedCells.push([ncgx, ncgy]);\n                    cgx = ncgx;\n                    cgy = ncgy;\n                    found = true;\n                }\n            } while (dirToCheck.length > 0 && found == false);\n        } while (dirToCheck.length > 0);\n    }\n    _connectUnconnectedRooms() {\n        //While there are unconnected rooms, try to connect them to a random connected neighbor\n        //(if a room has no connected neighbors yet, just keep cycling, you'll fill out to it eventually).\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        this.connectedCells = RNG.shuffle(this.connectedCells);\n        let room;\n        let otherRoom;\n        let validRoom;\n        for (let i = 0; i < this._options.cellWidth; i++) {\n            for (let j = 0; j < this._options.cellHeight; j++) {\n                room = this.rooms[i][j];\n                if (room[\"connections\"].length == 0) {\n                    let directions = [0, 2, 4, 6];\n                    directions = RNG.shuffle(directions);\n                    validRoom = false;\n                    do {\n                        let dirIdx = directions.pop();\n                        let newI = i + DIRS[8][dirIdx][0];\n                        let newJ = j + DIRS[8][dirIdx][1];\n                        if (newI < 0 || newI >= cw || newJ < 0 || newJ >= ch) {\n                            continue;\n                        }\n                        otherRoom = this.rooms[newI][newJ];\n                        validRoom = true;\n                        if (otherRoom[\"connections\"].length == 0) {\n                            break;\n                        }\n                        for (let k = 0; k < otherRoom[\"connections\"].length; k++) {\n                            if (otherRoom[\"connections\"][k][0] == i && otherRoom[\"connections\"][k][1] == j) {\n                                validRoom = false;\n                                break;\n                            }\n                        }\n                        if (validRoom) {\n                            break;\n                        }\n                    } while (directions.length);\n                    if (validRoom) {\n                        room[\"connections\"].push([otherRoom[\"cellx\"], otherRoom[\"celly\"]]);\n                    }\n                    else {\n                        console.log(\"-- Unable to connect room.\");\n                    }\n                }\n            }\n        }\n    }\n    _createRandomRoomConnections() {\n        // Empty for now.\n    }\n    _createRooms() {\n        let w = this._width;\n        let h = this._height;\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        let cwp = Math.floor(this._width / cw);\n        let chp = Math.floor(this._height / ch);\n        let roomw;\n        let roomh;\n        let roomWidth = this._options[\"roomWidth\"];\n        let roomHeight = this._options[\"roomHeight\"];\n        let sx;\n        let sy;\n        let otherRoom;\n        for (let i = 0; i < cw; i++) {\n            for (let j = 0; j < ch; j++) {\n                sx = cwp * i;\n                sy = chp * j;\n                if (sx == 0) {\n                    sx = 1;\n                }\n                if (sy == 0) {\n                    sy = 1;\n                }\n                roomw = RNG.getUniformInt(roomWidth[0], roomWidth[1]);\n                roomh = RNG.getUniformInt(roomHeight[0], roomHeight[1]);\n                if (j > 0) {\n                    otherRoom = this.rooms[i][j - 1];\n                    while (sy - (otherRoom[\"y\"] + otherRoom[\"height\"]) < 3) {\n                        sy++;\n                    }\n                }\n                if (i > 0) {\n                    otherRoom = this.rooms[i - 1][j];\n                    while (sx - (otherRoom[\"x\"] + otherRoom[\"width\"]) < 3) {\n                        sx++;\n                    }\n                }\n                let sxOffset = Math.round(RNG.getUniformInt(0, cwp - roomw) / 2);\n                let syOffset = Math.round(RNG.getUniformInt(0, chp - roomh) / 2);\n                while (sx + sxOffset + roomw >= w) {\n                    if (sxOffset) {\n                        sxOffset--;\n                    }\n                    else {\n                        roomw--;\n                    }\n                }\n                while (sy + syOffset + roomh >= h) {\n                    if (syOffset) {\n                        syOffset--;\n                    }\n                    else {\n                        roomh--;\n                    }\n                }\n                sx = sx + sxOffset;\n                sy = sy + syOffset;\n                this.rooms[i][j][\"x\"] = sx;\n                this.rooms[i][j][\"y\"] = sy;\n                this.rooms[i][j][\"width\"] = roomw;\n                this.rooms[i][j][\"height\"] = roomh;\n                for (let ii = sx; ii < sx + roomw; ii++) {\n                    for (let jj = sy; jj < sy + roomh; jj++) {\n                        this.map[ii][jj] = 0;\n                    }\n                }\n            }\n        }\n    }\n    _getWallPosition(aRoom, aDirection) {\n        let rx;\n        let ry;\n        let door;\n        if (aDirection == 1 || aDirection == 3) {\n            rx = RNG.getUniformInt(aRoom[\"x\"] + 1, aRoom[\"x\"] + aRoom[\"width\"] - 2);\n            if (aDirection == 1) {\n                ry = aRoom[\"y\"] - 2;\n                door = ry + 1;\n            }\n            else {\n                ry = aRoom[\"y\"] + aRoom[\"height\"] + 1;\n                door = ry - 1;\n            }\n            this.map[rx][door] = 0; // i'm not setting a specific 'door' tile value right now, just empty space.\n        }\n        else {\n            ry = RNG.getUniformInt(aRoom[\"y\"] + 1, aRoom[\"y\"] + aRoom[\"height\"] - 2);\n            if (aDirection == 2) {\n                rx = aRoom[\"x\"] + aRoom[\"width\"] + 1;\n                door = rx - 1;\n            }\n            else {\n                rx = aRoom[\"x\"] - 2;\n                door = rx + 1;\n            }\n            this.map[door][ry] = 0; // i'm not setting a specific 'door' tile value right now, just empty space.\n        }\n        return [rx, ry];\n    }\n    _drawCorridor(startPosition, endPosition) {\n        let xOffset = endPosition[0] - startPosition[0];\n        let yOffset = endPosition[1] - startPosition[1];\n        let xpos = startPosition[0];\n        let ypos = startPosition[1];\n        let tempDist;\n        let xDir;\n        let yDir;\n        let move; // 2 element array, element 0 is the direction, element 1 is the total value to move.\n        let moves = []; // a list of 2 element arrays\n        let xAbs = Math.abs(xOffset);\n        let yAbs = Math.abs(yOffset);\n        let percent = RNG.getUniform(); // used to split the move at different places along the long axis\n        let firstHalf = percent;\n        let secondHalf = 1 - percent;\n        xDir = xOffset > 0 ? 2 : 6;\n        yDir = yOffset > 0 ? 4 : 0;\n        if (xAbs < yAbs) {\n            // move firstHalf of the y offset\n            tempDist = Math.ceil(yAbs * firstHalf);\n            moves.push([yDir, tempDist]);\n            // move all the x offset\n            moves.push([xDir, xAbs]);\n            // move sendHalf of the  y offset\n            tempDist = Math.floor(yAbs * secondHalf);\n            moves.push([yDir, tempDist]);\n        }\n        else {\n            //  move firstHalf of the x offset\n            tempDist = Math.ceil(xAbs * firstHalf);\n            moves.push([xDir, tempDist]);\n            // move all the y offset\n            moves.push([yDir, yAbs]);\n            // move secondHalf of the x offset.\n            tempDist = Math.floor(xAbs * secondHalf);\n            moves.push([xDir, tempDist]);\n        }\n        this.map[xpos][ypos] = 0;\n        while (moves.length > 0) {\n            move = moves.pop();\n            while (move[1] > 0) {\n                xpos += DIRS[8][move[0]][0];\n                ypos += DIRS[8][move[0]][1];\n                this.map[xpos][ypos] = 0;\n                move[1] = move[1] - 1;\n            }\n        }\n    }\n    _createCorridors() {\n        // Draw Corridors between connected rooms\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        let room;\n        let connection;\n        let otherRoom;\n        let wall;\n        let otherWall;\n        for (let i = 0; i < cw; i++) {\n            for (let j = 0; j < ch; j++) {\n                room = this.rooms[i][j];\n                for (let k = 0; k < room[\"connections\"].length; k++) {\n                    connection = room[\"connections\"][k];\n                    otherRoom = this.rooms[connection[0]][connection[1]];\n                    // figure out what wall our corridor will start one.\n                    // figure out what wall our corridor will end on.\n                    if (otherRoom[\"cellx\"] > room[\"cellx\"]) {\n                        wall = 2;\n                        otherWall = 4;\n                    }\n                    else if (otherRoom[\"cellx\"] < room[\"cellx\"]) {\n                        wall = 4;\n                        otherWall = 2;\n                    }\n                    else if (otherRoom[\"celly\"] > room[\"celly\"]) {\n                        wall = 3;\n                        otherWall = 1;\n                    }\n                    else {\n                        wall = 1;\n                        otherWall = 3;\n                    }\n                    this._drawCorridor(this._getWallPosition(room, wall), this._getWallPosition(otherRoom, otherWall));\n                }\n            }\n        }\n    }\n}\n","import Simplex from \"./simplex.js\";\nexport default { Simplex };\n","import Noise from \"./noise.js\";\nimport RNG from \"../rng.js\";\nimport { mod } from \"../util.js\";\nconst F2 = 0.5 * (Math.sqrt(3) - 1);\nconst G2 = (3 - Math.sqrt(3)) / 6;\n/**\n * A simple 2d implementation of simplex noise by Ondrej Zara\n *\n * Based on a speed-improved simplex noise algorithm for 2D, 3D and 4D in Java.\n * Which is based on example code by Stefan Gustavson (stegu@itn.liu.se).\n * With Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\n * Better rank ordering method by Stefan Gustavson in 2012.\n */\nexport default class Simplex extends Noise {\n    /**\n     * @param gradients Random gradients\n     */\n    constructor(gradients = 256) {\n        super();\n        this._gradients = [\n            [0, -1],\n            [1, -1],\n            [1, 0],\n            [1, 1],\n            [0, 1],\n            [-1, 1],\n            [-1, 0],\n            [-1, -1]\n        ];\n        let permutations = [];\n        for (let i = 0; i < gradients; i++) {\n            permutations.push(i);\n        }\n        permutations = RNG.shuffle(permutations);\n        this._perms = [];\n        this._indexes = [];\n        for (let i = 0; i < 2 * gradients; i++) {\n            this._perms.push(permutations[i % gradients]);\n            this._indexes.push(this._perms[i] % this._gradients.length);\n        }\n    }\n    get(xin, yin) {\n        let perms = this._perms;\n        let indexes = this._indexes;\n        let count = perms.length / 2;\n        let n0 = 0, n1 = 0, n2 = 0, gi; // Noise contributions from the three corners\n        // Skew the input space to determine which simplex cell we're in\n        let s = (xin + yin) * F2; // Hairy factor for 2D\n        let i = Math.floor(xin + s);\n        let j = Math.floor(yin + s);\n        let t = (i + j) * G2;\n        let X0 = i - t; // Unskew the cell origin back to (x,y) space\n        let Y0 = j - t;\n        let x0 = xin - X0; // The x,y distances from the cell origin\n        let y0 = yin - Y0;\n        // For the 2D case, the simplex shape is an equilateral triangle.\n        // Determine which simplex we are in.\n        let i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n        if (x0 > y0) {\n            i1 = 1;\n            j1 = 0;\n        }\n        else { // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n            i1 = 0;\n            j1 = 1;\n        } // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n        // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n        // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n        // c = (3-sqrt(3))/6\n        let x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n        let y1 = y0 - j1 + G2;\n        let x2 = x0 - 1 + 2 * G2; // Offsets for last corner in (x,y) unskewed coords\n        let y2 = y0 - 1 + 2 * G2;\n        // Work out the hashed gradient indices of the three simplex corners\n        let ii = mod(i, count);\n        let jj = mod(j, count);\n        // Calculate the contribution from the three corners\n        let t0 = 0.5 - x0 * x0 - y0 * y0;\n        if (t0 >= 0) {\n            t0 *= t0;\n            gi = indexes[ii + perms[jj]];\n            let grad = this._gradients[gi];\n            n0 = t0 * t0 * (grad[0] * x0 + grad[1] * y0);\n        }\n        let t1 = 0.5 - x1 * x1 - y1 * y1;\n        if (t1 >= 0) {\n            t1 *= t1;\n            gi = indexes[ii + i1 + perms[jj + j1]];\n            let grad = this._gradients[gi];\n            n1 = t1 * t1 * (grad[0] * x1 + grad[1] * y1);\n        }\n        let t2 = 0.5 - x2 * x2 - y2 * y2;\n        if (t2 >= 0) {\n            t2 *= t2;\n            gi = indexes[ii + 1 + perms[jj + 1]];\n            let grad = this._gradients[gi];\n            n2 = t2 * t2 * (grad[0] * x2 + grad[1] * y2);\n        }\n        // Add contributions from each corner to get the final noise value.\n        // The result is scaled to return values in the interval [-1,1].\n        return 70 * (n0 + n1 + n2);\n    }\n}\n","/**\n * Base noise generator\n */\nexport default class Noise {\n}\n","import Dijkstra from \"./dijkstra.js\";\nimport AStar from \"./astar.js\";\nexport default { Dijkstra, AStar };\n","import Path from \"./path.js\";\n/**\n * @class Simplified Dijkstra's algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nexport default class Dijkstra extends Path {\n    constructor(toX, toY, passableCallback, options) {\n        super(toX, toY, passableCallback, options);\n        this._computed = {};\n        this._todo = [];\n        this._add(toX, toY, null);\n    }\n    /**\n     * Compute a path from a given point\n     * @see ROT.Path#compute\n     */\n    compute(fromX, fromY, callback) {\n        let key = fromX + \",\" + fromY;\n        if (!(key in this._computed)) {\n            this._compute(fromX, fromY);\n        }\n        if (!(key in this._computed)) {\n            return;\n        }\n        let item = this._computed[key];\n        while (item) {\n            callback(item.x, item.y);\n            item = item.prev;\n        }\n    }\n    /**\n     * Compute a non-cached value\n     */\n    _compute(fromX, fromY) {\n        while (this._todo.length) {\n            let item = this._todo.shift();\n            if (item.x == fromX && item.y == fromY) {\n                return;\n            }\n            let neighbors = this._getNeighbors(item.x, item.y);\n            for (let i = 0; i < neighbors.length; i++) {\n                let neighbor = neighbors[i];\n                let x = neighbor[0];\n                let y = neighbor[1];\n                let id = x + \",\" + y;\n                if (id in this._computed) {\n                    continue;\n                } /* already done */\n                this._add(x, y, item);\n            }\n        }\n    }\n    _add(x, y, prev) {\n        let obj = {\n            x: x,\n            y: y,\n            prev: prev\n        };\n        this._computed[x + \",\" + y] = obj;\n        this._todo.push(obj);\n    }\n}\n","import { DIRS } from \"../constants.js\";\n/**\n * @class Abstract pathfinder\n * @param {int} toX Target X coord\n * @param {int} toY Target Y coord\n * @param {function} passableCallback Callback to determine map passability\n * @param {object} [options]\n * @param {int} [options.topology=8]\n */\nexport default class Path {\n    constructor(toX, toY, passableCallback, options = {}) {\n        this._toX = toX;\n        this._toY = toY;\n        this._passableCallback = passableCallback;\n        this._options = Object.assign({\n            topology: 8\n        }, options);\n        this._dirs = DIRS[this._options.topology];\n        if (this._options.topology == 8) { /* reorder dirs for more aesthetic result (vertical/horizontal first) */\n            this._dirs = [\n                this._dirs[0],\n                this._dirs[2],\n                this._dirs[4],\n                this._dirs[6],\n                this._dirs[1],\n                this._dirs[3],\n                this._dirs[5],\n                this._dirs[7]\n            ];\n        }\n    }\n    _getNeighbors(cx, cy) {\n        let result = [];\n        for (let i = 0; i < this._dirs.length; i++) {\n            let dir = this._dirs[i];\n            let x = cx + dir[0];\n            let y = cy + dir[1];\n            if (!this._passableCallback(x, y)) {\n                continue;\n            }\n            result.push([x, y]);\n        }\n        return result;\n    }\n}\n","import Path from \"./path.js\";\n/**\n * @class Simplified A* algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nexport default class AStar extends Path {\n    constructor(toX, toY, passableCallback, options = {}) {\n        super(toX, toY, passableCallback, options);\n        this._todo = [];\n        this._done = {};\n    }\n    /**\n     * Compute a path from a given point\n     * @see ROT.Path#compute\n     */\n    compute(fromX, fromY, callback) {\n        this._todo = [];\n        this._done = {};\n        this._fromX = fromX;\n        this._fromY = fromY;\n        this._add(this._toX, this._toY, null);\n        while (this._todo.length) {\n            let item = this._todo.shift();\n            let id = item.x + \",\" + item.y;\n            if (id in this._done) {\n                continue;\n            }\n            this._done[id] = item;\n            if (item.x == fromX && item.y == fromY) {\n                break;\n            }\n            let neighbors = this._getNeighbors(item.x, item.y);\n            for (let i = 0; i < neighbors.length; i++) {\n                let neighbor = neighbors[i];\n                let x = neighbor[0];\n                let y = neighbor[1];\n                let id = x + \",\" + y;\n                if (id in this._done) {\n                    continue;\n                }\n                this._add(x, y, item);\n            }\n        }\n        let item = this._done[fromX + \",\" + fromY];\n        if (!item) {\n            return;\n        }\n        while (item) {\n            callback(item.x, item.y);\n            item = item.prev;\n        }\n    }\n    _add(x, y, prev) {\n        let h = this._distance(x, y);\n        let obj = {\n            x: x,\n            y: y,\n            prev: prev,\n            g: (prev ? prev.g + 1 : 0),\n            h: h\n        };\n        /* insert into priority queue */\n        let f = obj.g + obj.h;\n        for (let i = 0; i < this._todo.length; i++) {\n            let item = this._todo[i];\n            let itemF = item.g + item.h;\n            if (f < itemF || (f == itemF && h < item.h)) {\n                this._todo.splice(i, 0, obj);\n                return;\n            }\n        }\n        this._todo.push(obj);\n    }\n    _distance(x, y) {\n        switch (this._options.topology) {\n            case 4:\n                return (Math.abs(x - this._fromX) + Math.abs(y - this._fromY));\n                break;\n            case 6:\n                let dx = Math.abs(x - this._fromX);\n                let dy = Math.abs(y - this._fromY);\n                return dy + Math.max(0, (dx - dy) / 2);\n                break;\n            case 8:\n                return Math.max(Math.abs(x - this._fromX), Math.abs(y - this._fromY));\n                break;\n        }\n    }\n}\n","/**\n * @class Asynchronous main loop\n * @param {ROT.Scheduler} scheduler\n */\nexport default class Engine {\n    constructor(scheduler) {\n        this._scheduler = scheduler;\n        this._lock = 1;\n    }\n    /**\n     * Start the main loop. When this call returns, the loop is locked.\n     */\n    start() { return this.unlock(); }\n    /**\n     * Interrupt the engine by an asynchronous action\n     */\n    lock() {\n        this._lock++;\n        return this;\n    }\n    /**\n     * Resume execution (paused by a previous lock)\n     */\n    unlock() {\n        if (!this._lock) {\n            throw new Error(\"Cannot unlock unlocked engine\");\n        }\n        this._lock--;\n        while (!this._lock) {\n            let actor = this._scheduler.next();\n            if (!actor) {\n                return this.lock();\n            } /* no actors */\n            let result = actor.act();\n            if (result && result.then) { /* actor returned a \"thenable\", looks like a Promise */\n                this.lock();\n                result.then(this.unlock.bind(this));\n            }\n        }\n        return this;\n    }\n}\n","import * as Color from \"./color.js\";\n;\n;\n;\n;\n/**\n * Lighting computation, based on a traditional FOV for multiple light sources and multiple passes.\n */\nexport default class Lighting {\n    constructor(reflectivityCallback, options = {}) {\n        this._reflectivityCallback = reflectivityCallback;\n        this._options = {};\n        options = Object.assign({\n            passes: 1,\n            emissionThreshold: 100,\n            range: 10\n        }, options);\n        this._lights = {};\n        this._reflectivityCache = {};\n        this._fovCache = {};\n        this.setOptions(options);\n    }\n    /**\n     * Adjust options at runtime\n     */\n    setOptions(options) {\n        Object.assign(this._options, options);\n        if (options && options.range) {\n            this.reset();\n        }\n        return this;\n    }\n    /**\n     * Set the used Field-Of-View algo\n     */\n    setFOV(fov) {\n        this._fov = fov;\n        this._fovCache = {};\n        return this;\n    }\n    /**\n     * Set (or remove) a light source\n     */\n    setLight(x, y, color) {\n        let key = x + \",\" + y;\n        if (color) {\n            this._lights[key] = (typeof (color) == \"string\" ? Color.fromString(color) : color);\n        }\n        else {\n            delete this._lights[key];\n        }\n        return this;\n    }\n    /**\n     * Remove all light sources\n     */\n    clearLights() { this._lights = {}; }\n    /**\n     * Reset the pre-computed topology values. Call whenever the underlying map changes its light-passability.\n     */\n    reset() {\n        this._reflectivityCache = {};\n        this._fovCache = {};\n        return this;\n    }\n    /**\n     * Compute the lighting\n     */\n    compute(lightingCallback) {\n        let doneCells = {};\n        let emittingCells = {};\n        let litCells = {};\n        for (let key in this._lights) { /* prepare emitters for first pass */\n            let light = this._lights[key];\n            emittingCells[key] = [0, 0, 0];\n            Color.add_(emittingCells[key], light);\n        }\n        for (let i = 0; i < this._options.passes; i++) { /* main loop */\n            this._emitLight(emittingCells, litCells, doneCells);\n            if (i + 1 == this._options.passes) {\n                continue;\n            } /* not for the last pass */\n            emittingCells = this._computeEmitters(litCells, doneCells);\n        }\n        for (let litKey in litCells) { /* let the user know what and how is lit */\n            let parts = litKey.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            lightingCallback(x, y, litCells[litKey]);\n        }\n        return this;\n    }\n    /**\n     * Compute one iteration from all emitting cells\n     * @param emittingCells These emit light\n     * @param litCells Add projected light to these\n     * @param doneCells These already emitted, forbid them from further calculations\n     */\n    _emitLight(emittingCells, litCells, doneCells) {\n        for (let key in emittingCells) {\n            let parts = key.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            this._emitLightFromCell(x, y, emittingCells[key], litCells);\n            doneCells[key] = 1;\n        }\n        return this;\n    }\n    /**\n     * Prepare a list of emitters for next pass\n     */\n    _computeEmitters(litCells, doneCells) {\n        let result = {};\n        for (let key in litCells) {\n            if (key in doneCells) {\n                continue;\n            } /* already emitted */\n            let color = litCells[key];\n            let reflectivity;\n            if (key in this._reflectivityCache) {\n                reflectivity = this._reflectivityCache[key];\n            }\n            else {\n                let parts = key.split(\",\");\n                let x = parseInt(parts[0]);\n                let y = parseInt(parts[1]);\n                reflectivity = this._reflectivityCallback(x, y);\n                this._reflectivityCache[key] = reflectivity;\n            }\n            if (reflectivity == 0) {\n                continue;\n            } /* will not reflect at all */\n            /* compute emission color */\n            let emission = [0, 0, 0];\n            let intensity = 0;\n            for (let i = 0; i < 3; i++) {\n                let part = Math.round(color[i] * reflectivity);\n                emission[i] = part;\n                intensity += part;\n            }\n            if (intensity > this._options.emissionThreshold) {\n                result[key] = emission;\n            }\n        }\n        return result;\n    }\n    /**\n     * Compute one iteration from one cell\n     */\n    _emitLightFromCell(x, y, color, litCells) {\n        let key = x + \",\" + y;\n        let fov;\n        if (key in this._fovCache) {\n            fov = this._fovCache[key];\n        }\n        else {\n            fov = this._updateFOV(x, y);\n        }\n        for (let fovKey in fov) {\n            let formFactor = fov[fovKey];\n            let result;\n            if (fovKey in litCells) { /* already lit */\n                result = litCells[fovKey];\n            }\n            else { /* newly lit */\n                result = [0, 0, 0];\n                litCells[fovKey] = result;\n            }\n            for (let i = 0; i < 3; i++) {\n                result[i] += Math.round(color[i] * formFactor);\n            } /* add light color */\n        }\n        return this;\n    }\n    /**\n     * Compute FOV (\"form factor\") for a potential light source at [x,y]\n     */\n    _updateFOV(x, y) {\n        let key1 = x + \",\" + y;\n        let cache = {};\n        this._fovCache[key1] = cache;\n        let range = this._options.range;\n        function cb(x, y, r, vis) {\n            let key2 = x + \",\" + y;\n            let formFactor = vis * (1 - r / range);\n            if (formFactor == 0) {\n                return;\n            }\n            cache[key2] = formFactor;\n        }\n        ;\n        this._fov.compute(x, y, range, cb.bind(this));\n        return cache;\n    }\n}\n","import { SCREEN_DEATH } from '../core/screens/ScreenType';\nimport { IsDead, IsDestroying, IsPlayer } from '../ecs/components';\nimport System from './System';\n\nexport default class DeathSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [IsDead],\n            none: [IsDestroying],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            entity.fireEvent('death');\n\n            if (entity.isPlayer) {\n                this.game.screens.setScreen(SCREEN_DEATH);\n            } else {\n                entity.add(IsDestroying);\n            }\n        });\n    }\n}\n","import { game } from '../core/Game';\nimport { Particle, ParticleEmitter } from '../ecs/components';\nimport System from './System';\n\nexport default class ParticleSystem extends System {\n    #particleQuery = null;\n    #emitterQuery = null;\n\n    constructor(game) {\n        super(game);\n        this.#emitterQuery = game.ecs.createQuery({\n            all: [ParticleEmitter],\n        });\n        this.#particleQuery = game.ecs.createQuery({\n            all: [Particle],\n        });\n    }\n\n    createParticle(x, y, properties = {}) {\n        const e = this.game.ecs.createEntity();\n\n        e.add(Particle, {\n            ...properties,\n            x,\n            y,\n        });\n    }\n\n    createEmitter(x, y, emitterData = {}, particleData = {}) {\n        const e = this.game.ecs.createEntity();\n\n        e.add(ParticleEmitter, {\n            x,\n            y,\n            ...emitterData,\n            particleData: {\n                direction: {\n                    x: 0,\n                    y: 0,\n                },\n                glyphs: ['░', '▒', '▓', '█'],\n                fg1s: ['cyan', 'blue'],\n                speed: 0.04,\n                lifetime: 600,\n                ...particleData,\n            },\n        });\n    }\n\n    update(dt) {\n        this.#emitterQuery.get().forEach((entity) => {\n            const emitter = entity.particleEmitter;\n\n            emitter.age += dt;\n\n            if (emitter.isExpired) {\n                entity.destroy();\n            } else {\n                const total = (emitter.rate / 1000) * emitter.duration;\n                const targetCount = Math.trunc(emitter.percent * total);\n\n                for (let i = emitter.count; i < targetCount; i++) {\n                    emitter.createParticle();\n                }\n            }\n        });\n\n        this.#particleQuery.get().forEach((entity) => {\n            const particle = entity.particle;\n\n            particle.age += dt;\n\n            if (particle.isExpired) {\n                entity.destroy();\n                return;\n            }\n\n            particle.x += particle.direction.x * particle.speed;\n            particle.y += particle.direction.y * particle.speed;\n\n            if (!this.game.camera.isInView(particle.x, particle.y)) {\n                return;\n            }\n\n            const screen = this.game.camera.worldToScreen(\n                particle.x,\n                particle.y\n            );\n\n            this.game.renderer.draw(\n                Math.round(screen.x),\n                Math.round(screen.y),\n                particle.glyph,\n                particle.fg1,\n                particle.fg2,\n                particle.bg\n            );\n        });\n    }\n}\n","import { FactionMember } from '../ecs/components';\nimport {\n    factions,\n    FACTION_GOBLIN,\n    FACTION_PLAYER,\n    FACTION_VILLAGER,\n    getFactionByName,\n} from '../enums/Factions';\nimport Manager from './Manager';\n\nexport default class FactionManager extends Manager {\n    relations = {};\n\n    get factions() {\n        return Object.values(factions);\n    }\n\n    constructor(game) {\n        super(game);\n\n        this.setRelation(FACTION_PLAYER, FACTION_GOBLIN, -300);\n        this.setRelation(FACTION_PLAYER, FACTION_VILLAGER, 300);\n        this.setRelation(FACTION_GOBLIN, FACTION_VILLAGER, -400);\n    }\n\n    getFactionById(id) {\n        return this.factions.find((f) => f.id === id);\n    }\n\n    getFactionByName(name) {\n        return getFactionByName(name);\n    }\n\n    isHostile(factionA, factionB) {\n        return factionA !== factionB;\n    }\n\n    _relationKey(idA, idB) {\n        return [idA, idB].sort().join('-');\n    }\n\n    setRelation(idA, idB, value) {\n        const key = this._relationKey(idA, idB);\n\n        this.relations[key] = value;\n    }\n\n    getRelation(idA, idB) {\n        const key = this._relationKey(idA, idB);\n\n        if (!this.relations.hasOwnProperty(key)) {\n            this.relations[key] = 0;\n        }\n\n        return this.relations[key];\n    }\n\n    getEntityRelation(entityA, entityB) {\n        const memberA = entityA.get(FactionMember);\n        const memberB = entityB.get(FactionMember);\n\n        if (memberA && memberB) {\n            const factionA = memberA.faction;\n            const factionB = memberB.faction;\n\n            return this.getRelation(factionA.id, factionB.id);\n        }\n\n        return 0;\n    }\n\n    areEntitiesHostile(entityA, entityB) {\n        const relation = this.getEntityRelation(entityA, entityB);\n\n        return relation < -200;\n    }\n\n    getDisplay(value) {\n        if (value <= -300) {\n            return 'Aggressive';\n        }\n\n        if (value <= -200) {\n            return 'Unfriendly';\n        }\n\n        if (value >= 300) {\n            return 'Loyal';\n        }\n\n        if (value >= 200) {\n            return 'Friendly';\n        }\n\n        if (value >= 100) {\n            return 'Amicable';\n        }\n\n        return 'Neutral';\n    }\n\n    getAttitudeGlyph(value) {\n        if (value <= -200) {\n            return {\n                char: '☻',\n                fg1: '#ca4444',\n                fg2: '#411010',\n            };\n        }\n\n        if (value >= 200) {\n            return {\n                char: '☺',\n                fg1: '#78b478',\n                fg2: '#1a251a',\n            };\n        }\n\n        return {\n            char: '♥',\n            fg1: '#b9bcc2',\n            fg2: '#222832',\n        };\n    }\n}\n","import Manager from './Manager';\n\nexport default class CameraManager extends Manager {\n    width = 32;\n    height = 24;\n    zoom = 2;\n    padding = 5;\n    clampX = 16;\n    clampY = 12;\n\n    _focusX = 0;\n    _focusY = 0;\n\n    constructor(game) {\n        super(game);\n        window.addEventListener('resize', this.onWindowResize.bind(this));\n        this.onWindowResize();\n    }\n\n    get renderedTileWidth() {\n        return this.zoom * this.game.renderer.tileWidth;\n    }\n\n    get renderedTileHeight() {\n        return this.zoom * this.game.renderer.tileHeight;\n    }\n\n    computeSize() {\n        this.width = Math.max(\n            this.clampX,\n            Math.floor(window.innerWidth / this.renderedTileWidth)\n        );\n        this.height = Math.max(\n            this.clampY,\n            Math.floor(window.innerHeight / this.renderedTileHeight)\n        );\n        this.topLeftWorldX = Math.floor(\n            Math.min(\n                Math.max(-this.padding, this._focusX - this.width / 2),\n                Math.max(\n                    (this.width - this.game.map.width) / -2,\n                    this.padding + this.game.map.width - this.width\n                )\n            )\n        );\n        this.topLeftWorldY = Math.floor(\n            Math.min(\n                Math.max(-this.padding, this._focusY - this.height / 2),\n                Math.max(\n                    (this.height - this.game.map.height) / -2,\n                    this.padding + this.game.map.height - this.height\n                )\n            )\n        );\n    }\n\n    onWindowResize() {\n        this.computeSize();\n        this.game.renderer.resizeDisplay(this.width, this.height, this.zoom);\n    }\n\n    setZoom(zoom) {\n        this.zoom = zoom;\n        this.computeSize();\n        this.onWindowResize();\n    }\n\n    setFocus(x, y) {\n        this._focusX = x;\n        this._focusY = y;\n        this.computeSize();\n    }\n\n    setPadding(value) {\n        this.padding = value;\n        this.computeSize();\n    }\n\n    worldToScreen(x, y) {\n        return {\n            x: x - this.topLeftWorldX,\n            y: y - this.topLeftWorldY,\n        };\n    }\n\n    screenToWorld(x, y) {\n        return {\n            x: x + this.topLeftWorldX,\n            y: y + this.topLeftWorldY,\n        };\n    }\n\n    getScreenRect() {\n        return {\n            x: this.topLeftWorldX,\n            y: this.topLeftWorldY,\n            width: this.width,\n            height: this.height,\n        };\n    }\n\n    isInView(worldX, worldY) {\n        const screen = this.worldToScreen(worldX, worldY);\n\n        return (\n            screen.x < this.width &&\n            screen.y < this.height &&\n            screen.x >= 0 &&\n            screen.y >= 0\n        );\n    }\n}\n","import System from './System';\n\nconst fpsElement = document.getElementsByClassName('fps')[0];\n\nexport default class FPSMonitoringSystem extends System {\n    frames = [];\n    frameCount = 60;\n\n    constructor(game) {\n        super(game);\n        this.frames = [];\n\n        for (let i = 0; i < this.frameCount; i++) {\n            this.frames[i] = 0;\n        }\n    }\n\n    update(dt) {\n        this.frames.push(1000 / dt);\n        this.frames.shift();\n\n        const sum = this.frames.reduce((s, v) => s + v, 0);\n        const fps = Math.trunc(sum / this.frameCount);\n\n        fpsElement.innerText = fps;\n    }\n}\n","import WorldData from '../data/WorldData';\nimport { IsPlayer } from '../ecs/components';\nimport Manager from './Manager';\nimport { SCREEN_LOAD_SECTOR } from './screens/ScreenType';\n\nexport class WorldManager extends Manager {\n    #data;\n    #sectorId;\n    #entry;\n\n    get sectorId() {\n        return this.#sectorId;\n    }\n\n    get sector() {\n        return this.#data.getSector(this.#sectorId);\n    }\n\n    get entry() {\n        return this.#entry;\n    }\n\n    constructor(game) {\n        super(game);\n\n        this.#data = new WorldData();\n    }\n\n    getSetupData() {\n        return {\n            sectorId: this.#data.getStartingSector().id,\n            exploredSectorIds: [],\n        };\n    }\n\n    getSaveGameData() {\n        // TODO only save sector data??\n        const data = Array.from(this.game.ecs.entities.all).filter(\n            (e) => !e.has(IsPlayer)\n        );\n        const serialized = this.game.ecs.serialize(data);\n\n        console.log('serialized map data', serialized);\n\n        this.game.state.saveSectorEntityData(this.sector.id, serialized);\n\n        return {\n            sectorId: this.sector.id,\n            exploredSectorIds: [],\n        };\n    }\n\n    setup(data) {\n        const sector = this.#data.getSector(data.sectorId);\n\n        this.game.screens.setScreen(SCREEN_LOAD_SECTOR, {\n            nextSector: sector,\n            entry: data.position,\n        });\n    }\n\n    teardown() {\n        // TODO: destroy all sector entities?\n        this.#sectorId = null;\n    }\n\n    onSectorLoaded(sector, entry) {\n        this.#sectorId = sector.id;\n\n        const data = this.game.state.loadSectorEntityData(sector.id);\n\n        if (data) {\n            this.game.ecs.deserialize(data);\n        } else {\n            sector.generate(this.game);\n        }\n    }\n\n    enterSector(sector, entry) {\n        this.game.screens.setScreen(SCREEN_LOAD_SECTOR, {\n            prevousSector: this.sector,\n            nextSector: sector,\n            entry,\n        });\n    }\n}\n","import { Sector } from './Sector';\nimport data from './world.json';\n\nexport default class WorldData {\n    #sectors = [];\n\n    get width() {\n        return data.width;\n    }\n\n    get height() {\n        return data.height;\n    }\n\n    idx(x, y) {\n        return y * this.width + x;\n    }\n\n    coord(idx) {\n        return {\n            x: Math.trunc(idx % this.width),\n            y: Math.trunc(idx / this.width),\n        };\n    }\n\n    constructor() {\n        this.#sectors = [];\n\n        for (let x = 0; x < data.width; x++) {\n            for (let y = 0; y < data.height; y++) {\n                const sector = Sector.parseData(this, data.sectors[y][x], x, y);\n\n                this.#sectors[sector.id] = sector;\n            }\n        }\n    }\n\n    isOutOfBounds(x, y) {\n        return x < 0 || y < 0 || x >= this.width || y >= this.height;\n    }\n\n    getStartingSector() {\n        return this.getSector(0);\n    }\n\n    getSectorByCoord(x, y) {\n        return this.getSector(this.idx(x, y));\n    }\n\n    getSector(idx) {\n        const { x, y } = this.coord(idx);\n\n        if (this.isOutOfBounds(x, y)) {\n            return new Sector(this, x, y);\n        }\n\n        return this.#sectors[idx];\n    }\n}\n","import { game } from '../core/Game';\nimport { getGenerator } from '../level/generators/generators';\n\nexport class Sector {\n    #x = 0;\n    #y = 0;\n    connectionsNorth = [];\n    connectionsWest = [];\n    generator = {};\n    music = null;\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get id() {\n        return this.world.idx(this.x, this.y);\n    }\n\n    get northSector() {\n        return this.world.getSectorByCoord(this.#x, this.#y - 1);\n    }\n\n    get southSector() {\n        return this.world.getSectorByCoord(this.#x, this.#y + 1);\n    }\n\n    get eastSector() {\n        return this.world.getSectorByCoord(this.#x + 1, this.#y);\n    }\n\n    get westSector() {\n        return this.world.getSectorByCoord(this.#x - 1, this.#y);\n    }\n\n    constructor(world, x, y) {\n        this.world = world;\n        this.#x = x;\n        this.#y = y;\n    }\n\n    getExits() {\n        const exits = [];\n\n        // north\n        exits.push(\n            ...this.connectionsNorth.map((c) => ({\n                x: 12,\n                y: 0,\n            }))\n        );\n\n        // west\n        exits.push(\n            ...this.connectionsWest.map((c) => ({\n                x: 0,\n                y: 12,\n            }))\n        );\n\n        // east\n        exits.push(\n            ...this.eastSector.connectionsWest.map((c) => ({\n                x: game.map.width - 1,\n                y: 12,\n            }))\n        );\n\n        // south\n        exits.push(\n            ...this.southSector.connectionsNorth.map((c) => ({\n                x: 12,\n                y: game.map.height - 1,\n            }))\n        );\n\n        return exits;\n    }\n\n    generate(game) {\n        const exits = this.getExits();\n        const generator = getGenerator(this.generator.type);\n\n        const settings = {\n            width: game.map.width,\n            height: game.map.height,\n            exits,\n        };\n\n        const tiles = generator.generate(settings);\n\n        generator.populate(settings, tiles);\n\n        this.tiles = tiles;\n    }\n\n    static parseData(world, data, x, y) {\n        const sector = new Sector(world, x, y);\n\n        sector.connectionsNorth = data.connectionsNorth;\n        sector.connectionsWest = data.connectionsWest;\n        sector.generator = data.generator;\n        sector.music = data.music;\n        sector.temperature = data.temperature;\n\n        return sector;\n    }\n}\n","import { ForestCabinsGenerator } from './ForestCabinsGenerator';\nimport { ForestGenerator } from './ForestGenerator';\nimport { ForestStrongholdGenerator } from './ForestStrongholdGenerator';\nimport { ForestTownGenerator } from './ForestTownGenerator';\n\nconst mapping = {\n    ['FOREST']: ForestGenerator,\n    ['FOREST_STRONGHOLD']: ForestStrongholdGenerator,\n    ['FOREST_CABINS']: ForestCabinsGenerator,\n    ['FOREST_TOWN']: ForestTownGenerator,\n};\n\nexport const getGenerator = (name) => {\n    return mapping[name];\n};\n","import { pickRandom } from '../../utils/rand';\nimport { digExits } from '../LevelConnections';\nimport { UniformScheme } from '../schemes/UniformScheme';\nimport { TILE_THEME_CABIN, TILE_THEME_FOREST } from '../themes/TileTheme';\nimport SectorGenerator from './SectorGenerator';\n\nexport class ForestCabinsGenerator extends SectorGenerator {\n    static generate(settings) {\n        const tiles = UniformScheme.generate({\n            width: settings.width,\n            height: settings.height,\n        });\n\n        tiles.rooms.forEach((room) => (room.theme = TILE_THEME_FOREST));\n\n        const mediumRooms = tiles.rooms.filter(\n            (r) => r.width >= 3 && r.height >= 3\n        );\n        const room = pickRandom(mediumRooms);\n\n        if (room) {\n            room.theme = TILE_THEME_CABIN;\n            room.includeWalls = true;\n        }\n\n        const distancedRooms = mediumRooms.filter((r) => r !== room);\n        const room2 = pickRandom(distancedRooms);\n\n        if (room2) {\n            room2.theme = TILE_THEME_CABIN;\n            room2.includeWalls = true;\n        }\n\n        const leftovers = tiles.getUnassignedTiles();\n\n        leftovers.forEach((tile) => {\n            tile.theme = TILE_THEME_FOREST;\n        });\n\n        digExits(tiles, settings.exits);\n\n        return tiles;\n    }\n}\n","import { computeAStar } from '../utils/AStar';\nimport { manhattanDistance } from '../utils/ManhattanDistance';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from './TileData';\n\nconst getClosestTile = (tiles, target) => {\n    let closest = null;\n    let closestDistance = null;\n\n    tiles.data.forEach((tile) => {\n        if (!tile.isType(TILE_TYPE_FLOOR)) {\n            return;\n        }\n\n        const distance = manhattanDistance(tile, target);\n\n        if (distance < closestDistance || closest === null) {\n            closest = tile;\n            closestDistance = distance;\n            return;\n        }\n    });\n\n    return closest;\n};\n\nexport const digExit = (tiles, exit) => {\n    const source = getClosestTile(tiles, exit);\n\n    if (source.x === exit.x && source.y === exit.y) {\n        tiles.setTileType(exit.x, exit.y, TILE_TYPE_FLOOR);\n        return;\n    }\n\n    tiles.setTileType(source.x, source.y, TILE_TYPE_WALL);\n    tiles.setTileType(exit.x, exit.y, TILE_TYPE_WALL);\n\n    const result = computeAStar({\n        goal: {\n            x: source.x,\n            y: source.y,\n        },\n        start: {\n            x: exit.x,\n            y: exit.y,\n        },\n        allowDiagonals: false,\n        cost: (a, b) => {\n            if (tiles.isOnEdge(b.x, b.y)) {\n                return Infinity;\n            }\n\n            if (tiles.tileTypeMatches(b.x, b.y, TILE_TYPE_WALL)) {\n                return manhattanDistance(a, b);\n            }\n\n            return Infinity;\n        },\n    });\n\n    result.path.forEach((segment) => {\n        tiles.setTileType(segment.x, segment.y, TILE_TYPE_FLOOR);\n    });\n\n    if (result.success) {\n        const door = result.path[result.path.length - 2];\n        const room = tiles.getRoomForTile(door.x, door.y);\n\n        if (room) {\n            room.addExit(door.x, door.y);\n        }\n    }\n};\n\nexport const digExits = (tiles, exits) => {\n    exits.forEach((exit) => digExit(tiles, exit));\n};\n","import { TILE_THEME_CASTLE } from './themes/TileTheme';\n\nexport const TILE_TYPE_FLOOR = 0;\nexport const TILE_TYPE_WALL = 1;\nexport const TILE_TYPE_OUT_OF_BOUNDS = 1;\n\nexport class TileData {\n    x = -1;\n    y = -1;\n    type = TILE_TYPE_OUT_OF_BOUNDS;\n    theme = TILE_THEME_CASTLE;\n\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n\n    isType(type) {\n        return this.type === type;\n    }\n}\n\nexport const createTileData = (x, y) => new TileData(x, y);\n","import CastleTheme from './CastleTheme';\nimport ForestTheme from './ForestTheme';\nimport CabinTheme from './CabinTheme';\n\nexport const TILE_THEME_FOREST = 0;\nexport const TILE_THEME_CASTLE = 1;\nexport const TILE_THEME_CABIN = 2;\n\nconst mapping = {\n    [TILE_THEME_FOREST]: ForestTheme,\n    [TILE_THEME_CASTLE]: CastleTheme,\n    [TILE_THEME_CABIN]: CabinTheme,\n};\n\nexport const getThemePopulator = (theme) => {\n    return mapping[theme];\n};\n","import {\n    SPWN_GROUND_STONE,\n    SPWN_STONE,\n    SPWN_STONE_WALL,\n    SPWN_WOOD_DOOR,\n} from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\nimport { randomInt } from '../../utils/rand';\nimport { TILE_TYPE_WALL } from '../TileData';\nimport TileThemePopulator from './TileThemePopulator';\n\nexport default class CastleTheme extends TileThemePopulator {\n    static populateTile(tile) {\n        spawn(SPWN_GROUND_STONE, tile.x, tile.y);\n\n        if (this.getEntities(tile).length === 0) {\n            if (tile.isType(TILE_TYPE_WALL)) {\n                spawn(SPWN_STONE_WALL, tile.x, tile.y);\n            }\n        }\n    }\n\n    static populateRoom(room) {\n        room.exits.forEach((exit) => {\n            if (this.getEntities(exit).length === 0) {\n                spawn(SPWN_WOOD_DOOR, exit.x, exit.y);\n            }\n        });\n\n        room.tiles.forEach((tile) => this.populateTile(tile));\n\n        for (let i = 0; i < randomInt(0, 3); i++) {\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_STONE, tile.x, tile.y);\n            });\n        }\n    }\n}\n","import { game } from '../../core/Game';\nimport { pickRandom } from '../../utils/rand';\n\nexport default class TileThemePopulator {\n    static populateTile(tile) {}\n\n    static populateRoom(room) {\n        room.tiles.forEach((tile) => {\n            this.populateTile(tile);\n        });\n    }\n\n    static populate(tiles) {\n        tiles.data.forEach((tile) => {\n            this.populateTile(tile);\n        });\n    }\n\n    static getEntities(tile) {\n        return game.map.getEntitiesAt(tile.x, tile.y).filter((e) => !e.ground);\n    }\n\n    static clearTile(tile) {\n        getEntities(tile).forEach((e) => {\n            e.destroy();\n        });\n    }\n\n    static getRandomEmptyTile(tileArr, attempts = 100) {\n        for (let i = 0; i < attempts; i++) {\n            const tile = pickRandom(tileArr);\n\n            if (this.getEntities(tile) <= 0) {\n                return tile;\n            }\n        }\n\n        console.warn(\n            `ran out of attempts (${attempts}) to place item`,\n            tileArr\n        );\n    }\n\n    static trySpawn(room, cb) {\n        const tile = this.getRandomEmptyTile(room.interiorTiles);\n\n        if (tile) {\n            cb(tile);\n        }\n    }\n}\n","import {\n    SPWN_GOBLIN_GRUNT,\n    SPWN_PINE_TREE,\n    SPWN_STONE,\n    SPWN_VIAL_BLOOD,\n    SPWN_VIAL_HONEY,\n    SPWN_VIAL_WATER,\n    SPWN_GROUND_GRASS,\n    SPWN_TWIG,\n    SPWN_GOBLIN_BRUISER,\n    SPWN_GOBLIN_STARGAZER,\n} from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\nimport { randomInt } from '../../utils/rand';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\nimport TileThemePopulator from './TileThemePopulator';\n\nexport default class ForestTheme extends TileThemePopulator {\n    static populateTile(tile) {\n        spawn(SPWN_GROUND_GRASS, tile.x, tile.y);\n\n        if (tile.isType(TILE_TYPE_WALL)) {\n            spawn(SPWN_PINE_TREE, tile.x, tile.y);\n        }\n    }\n\n    static populateRoom(room) {\n        room.tiles.forEach((tile) => {\n            this.populateTile(tile);\n\n            if (Math.random() > 0.1) {\n                return;\n            }\n\n            if (tile.isType(TILE_TYPE_FLOOR) && Math.random() < 0.5) {\n                spawn(SPWN_TWIG, tile.x, tile.y);\n            } else {\n                spawn(SPWN_STONE, tile.x, tile.y);\n            }\n        });\n\n        for (let i = 0; i < randomInt(0, 1); i++) {\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_GOBLIN_GRUNT, tile.x, tile.y);\n            });\n        }\n\n        for (let i = 0; i < randomInt(0, 1); i++) {\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_GOBLIN_BRUISER, tile.x, tile.y);\n            });\n        }\n\n        for (let i = 0; i < randomInt(0, 1); i++) {\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_GOBLIN_STARGAZER, tile.x, tile.y);\n            });\n        }\n\n        for (let i = 0; i < randomInt(0, 1); i++) {\n            if (Math.random() > 0.05) {\n                return;\n            }\n\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_VIAL_BLOOD, tile.x, tile.y);\n            });\n        }\n\n        for (let i = 0; i < randomInt(0, 1); i++) {\n            if (Math.random() > 0.05) {\n                return;\n            }\n\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_VIAL_WATER, tile.x, tile.y);\n            });\n        }\n\n        for (let i = 0; i < randomInt(0, 1); i++) {\n            if (Math.random() > 0.05) {\n                return;\n            }\n\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_VIAL_HONEY, tile.x, tile.y);\n            });\n        }\n    }\n}\n","import {\n    SPWN_HUMAN_WANDERER,\n    SPWN_WOOD_DOOR,\n    SPWN_WOOD_WALL,\n    SPWN_WOOD_CHEST,\n    SPWN_STONE,\n    SPWN_VIAL_HONEY,\n    SPWN_AMULET,\n    SPWN_CLOTH_ARMOR,\n    SPWN_LEATHER_BOOTS,\n    SPWN_SHORTSWORD,\n    SPWN_GREATSWORD,\n    SPWN_BATTLE_AXE,\n    SPWN_HATCHET,\n    SPWN_GROUND_STONE,\n    SPWN_MACE,\n    SPWN_HEAVY_PLATE_ARMOR,\n    SPWN_LEATHER_ARMOR,\n    SPWN_CLOTH_HOOD,\n    SPWN_WIZARD_CAP,\n    SPWN_HELM,\n    SPWN_TWIG,\n} from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\nimport { randomInt } from '../../utils/rand';\nimport { TILE_TYPE_WALL } from '../TileData';\nimport TileThemePopulator from './TileThemePopulator';\n\nexport default class CabinTheme extends TileThemePopulator {\n    static populateTile(tile) {\n        spawn(SPWN_GROUND_STONE, tile.x, tile.y);\n\n        if (this.getEntities(tile).length === 0) {\n            if (tile.isType(TILE_TYPE_WALL)) {\n                spawn(SPWN_WOOD_WALL, tile.x, tile.y);\n            }\n        }\n    }\n\n    static populateRoom(room) {\n        room.tiles.forEach((tile) => this.populateTile(tile));\n\n        room.exits.forEach((exit) => {\n            if (this.getEntities(exit).length === 0) {\n                spawn(SPWN_WOOD_DOOR, exit.x, exit.y);\n            }\n        });\n\n        this.trySpawn(room, (tile) => {\n            const chest = spawn(SPWN_WOOD_CHEST, tile.x, tile.y);\n\n            chest.inventory.addLoot(spawn(SPWN_TWIG));\n            chest.inventory.addLoot(spawn(SPWN_VIAL_HONEY));\n            chest.inventory.addLoot(spawn(SPWN_STONE));\n            chest.inventory.addLoot(spawn(SPWN_AMULET));\n            chest.inventory.addLoot(spawn(SPWN_CLOTH_ARMOR));\n            chest.inventory.addLoot(spawn(SPWN_LEATHER_BOOTS));\n            chest.inventory.addLoot(spawn(SPWN_SHORTSWORD));\n            chest.inventory.addLoot(spawn(SPWN_GREATSWORD));\n            chest.inventory.addLoot(spawn(SPWN_BATTLE_AXE));\n            chest.inventory.addLoot(spawn(SPWN_HATCHET));\n            chest.inventory.addLoot(spawn(SPWN_MACE));\n            chest.inventory.addLoot(spawn(SPWN_HEAVY_PLATE_ARMOR));\n            chest.inventory.addLoot(spawn(SPWN_LEATHER_ARMOR));\n            chest.inventory.addLoot(spawn(SPWN_CLOTH_HOOD));\n            chest.inventory.addLoot(spawn(SPWN_WIZARD_CAP));\n            chest.inventory.addLoot(spawn(SPWN_HELM));\n        });\n\n        for (let i = 0; i < randomInt(1, 3); i++) {\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_HUMAN_WANDERER, tile.x, tile.y);\n            });\n        }\n    }\n}\n","import { Map as MapGenerator } from 'rot-js';\nimport { digExits } from '../LevelConnections';\nimport TileContainer from '../TileContainer';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\nimport TileScheme from '../TileScheme';\n\nexport class UniformScheme extends TileScheme {\n    static generate(settings) {\n        const width = settings.width;\n        const height = settings.height;\n        const exits = settings.exits || [];\n        const tiles = new TileContainer(width, height);\n\n        const generator = new MapGenerator.Uniform(width, height, {\n            timeLimit: 8000,\n            roomWidth: settings.roomWidth || [2, 8],\n            roomHeight: settings.roomHeight || [2, 8],\n            roomDugPercentage: settings.digPercentage || 0.8,\n        });\n\n        generator.create((x, y, v) => {\n            if (v === 0) {\n                tiles.setTileType(x, y, TILE_TYPE_FLOOR);\n            }\n\n            if (v === 1) {\n                tiles.setTileType(x, y, TILE_TYPE_WALL);\n            }\n        });\n\n        generator.getRooms().forEach((r) => {\n            const room = tiles.createRoom(\n                r.getLeft(),\n                r.getTop(),\n                r.getRight() - r.getLeft() + 1,\n                r.getBottom() - r.getTop() + 1\n            );\n            r.getDoors((x, y) => {\n                room.addExit(x, y);\n            });\n        });\n\n        digExits(tiles, exits);\n\n        return tiles;\n    }\n}\n","import Grid from '../utils/Grid';\nimport RoomData from './RoomData';\nimport { createTileData, TILE_TYPE_FLOOR } from './TileData';\n\nexport default class TileContainer {\n    #defaultType = TILE_TYPE_FLOOR;\n    #grid = [];\n    #rooms = {};\n\n    get width() {\n        return this.#grid.width;\n    }\n\n    get height() {\n        return this.#grid.height;\n    }\n\n    get size() {\n        return this.width * this.height;\n    }\n\n    get data() {\n        return this.#grid.data;\n    }\n\n    get rooms() {\n        return Object.values(this.#rooms);\n    }\n\n    constructor(width, height, defaultType = TILE_TYPE_FLOOR) {\n        this.#grid = new Grid(width, height, createTileData);\n        this.#defaultType = defaultType;\n        this.clear();\n    }\n\n    getTile(x, y) {\n        return this.#grid.get(x, y);\n    }\n\n    setTileType(x, y, type) {\n        this.#grid.get(x, y).type = type;\n    }\n\n    setTileTheme(x, y, theme) {\n        this.#grid.get(x, y).theme = theme;\n    }\n\n    getTileType(x, y) {\n        return this.getTile(x, y).type;\n    }\n\n    addRoom(room) {\n        this.#rooms[room.id] = room;\n    }\n\n    createRoom(x, y, width, height) {\n        const room = new RoomData(x, y, width, height, this);\n\n        this.addRoom(room);\n\n        return room;\n    }\n\n    clear() {\n        this.fill(0, 0, this.width, this.height, this.#defaultType);\n    }\n\n    fill(x, y, width, height, type) {\n        for (let i = x; i < x + width; i++) {\n            for (let j = y; j < y + height; j++) {\n                this.setTileType(i, j, type);\n            }\n        }\n    }\n\n    tileTypeMatches(x, y, type) {\n        return this.getTile(x, y).isType(type);\n    }\n\n    combineOther(offsetX, offsetY, tiles) {\n        tiles.rooms.forEach((room) => {\n            room.cloneTo(room.x + offsetX, room.y + offsetY, this);\n        });\n        tiles.data.forEach((tile) => {\n            this.setTileType(tile.x + offsetX, tile.y + offsetY, tile.type);\n            this.setTileTheme(tile.x + offsetX, tile.y + offsetY, tile.theme);\n        });\n    }\n\n    isOnEdge(x, y) {\n        return (\n            x === 0 || y === 0 || x === this.width - 1 || y === this.height - 1\n        );\n    }\n\n    setTheme(theme) {\n        this.data.forEach((tile) => this.setTileTheme(tile.x, tile.y, theme));\n        this.rooms.forEach((room) => (room.theme = theme));\n    }\n\n    getRoomForTile(x, y) {\n        const tile = this.getTile(x, y);\n\n        return this.rooms.find((room) => {\n            return room.tiles.includes(tile);\n        });\n    }\n\n    getUnassignedTiles() {\n        return this.data.filter((tile) => {\n            return !this.getRoomForTile(tile.x, tile.y);\n        });\n    }\n\n    getNeighbors(x, y) {\n        return this.#grid.getNeighbors(x, y);\n    }\n}\n","import { nanoid } from 'nanoid';\nimport { TILE_THEME_FOREST } from './themes/TileTheme';\nimport { TILE_TYPE_FLOOR } from './TileData';\n\nexport default class RoomData {\n    id = 0;\n    x = 0;\n    y = 0;\n    width = 0;\n    height = 0;\n    theme = TILE_THEME_FOREST;\n    includeWalls = false;\n    #container = null;\n    #exitCoords = [];\n\n    get relativeExits() {\n        return this.#exitCoords;\n    }\n\n    get exits() {\n        return this.relativeExits.map((exit) => ({\n            x: exit.x + this.x,\n            y: exit.y + this.y,\n        }));\n    }\n\n    get left() {\n        return this.includeWalls ? this.x - 1 : this.x;\n    }\n\n    get right() {\n        return this.includeWalls\n            ? this.x + this.width + 1\n            : this.x + this.width;\n    }\n\n    get top() {\n        return this.includeWalls ? this.y - 1 : this.y;\n    }\n\n    get bottom() {\n        return this.includeWalls\n            ? this.y + this.height + 1\n            : this.y + this.height;\n    }\n\n    get borderTiles() {\n        const start = this.includeWalls ? -1 : 0;\n        const endWidth = this.includeWalls ? this.width + 1 : this.width;\n        const endHeight = this.includeWalls ? this.height + 1 : this.height;\n        const borders = [];\n\n        // TODO this loop can be a lot simpler...\n        for (let i = start; i < endWidth; i++) {\n            for (let j = start; j < endHeight; j++) {\n                if (\n                    i === start ||\n                    i === endWidth - 1 ||\n                    j === start ||\n                    j === endHeight - 1\n                ) {\n                    borders.push(\n                        this.#container.getTile(i + this.x, j + this.y)\n                    );\n                }\n            }\n        }\n\n        return borders;\n    }\n\n    get interiorTiles() {\n        const interior = [];\n\n        for (let i = 0; i < this.width; i++) {\n            for (let j = 0; j < this.height; j++) {\n                interior.push(this.#container.getTile(i + this.x, j + this.y));\n            }\n        }\n\n        return interior;\n    }\n\n    get tiles() {\n        const start = this.includeWalls ? -1 : 0;\n        const endWidth = this.includeWalls ? this.width + 1 : this.width;\n        const endHeight = this.includeWalls ? this.height + 1 : this.height;\n        const tiles = [];\n\n        for (let i = start; i < endWidth; i++) {\n            for (let j = start; j < endHeight; j++) {\n                tiles.push(this.#container.getTile(i + this.x, j + this.y));\n            }\n        }\n\n        return tiles;\n    }\n\n    constructor(x, y, width, height, container) {\n        this.id = nanoid();\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.#container = container;\n    }\n\n    addRelativeExit(x, y) {\n        this.#container.setTileType(this.x + x, this.y + y, TILE_TYPE_FLOOR);\n        this.#exitCoords.push({ x, y });\n    }\n\n    addExit(x, y) {\n        this.addRelativeExit(x - this.x, y - this.y);\n    }\n\n    cloneTo(x, y, container) {\n        const room = new RoomData(x, y, this.width, this.height, container);\n\n        room.theme = this.theme;\n        room.includeWalls = this.includeWalls;\n\n        this.relativeExits.forEach((exit) => {\n            room.addRelativeExit(exit.x, exit.y);\n        });\n\n        container.addRoom(room);\n\n        return room;\n    }\n\n    containsPoint(x, y) {\n        return (\n            x <= this.right &&\n            x >= this.left &&\n            y <= this.bottom &&\n            y >= this.top\n        );\n    }\n\n    intersects(left, top, right, bottom) {\n        const c1 = left < this.right;\n        const c2 = right > this.left;\n        const c3 = top < this.bottom;\n        const c4 = bottom > this.top;\n\n        return c1 && c2 && c3 && c4;\n    }\n}\n","// This file replaces `index.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nimport { urlAlphabet } from './url-alphabet/index.js'\n\nif (false) {\n  // All bundlers will remove this block in the production bundle.\n  if (\n    typeof navigator !== 'undefined' &&\n    navigator.product === 'ReactNative' &&\n    typeof crypto === 'undefined'\n  ) {\n    throw new Error(\n      'React Native does not have a built-in secure random generator. ' +\n        'If you don’t need unpredictable IDs use `nanoid/non-secure`. ' +\n        'For secure IDs, import `react-native-get-random-values` ' +\n        'before Nano ID. If you use Expo, install `expo-random` ' +\n        'and use `nanoid/async`.'\n    )\n  }\n  if (typeof msCrypto !== 'undefined' && typeof crypto === 'undefined') {\n    throw new Error(\n      'Import file with `if (!window.crypto) window.crypto = window.msCrypto`' +\n        ' before importing Nano ID to fix IE 11 support'\n    )\n  }\n  if (typeof crypto === 'undefined') {\n    throw new Error(\n      'Your browser does not have secure random generator. ' +\n        'If you don’t need unpredictable IDs, you can use nanoid/non-secure.'\n    )\n  }\n}\n\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\n\nlet customRandom = (alphabet, size, getRandom) => {\n  // First, a bitmask is necessary to generate the ID. The bitmask makes bytes\n  // values closer to the alphabet size. The bitmask calculates the closest\n  // `2^31 - 1` number, which exceeds the alphabet size.\n  // For example, the bitmask for the alphabet size 30 is 31 (00011111).\n  // `Math.clz32` is not used, because it is not available in browsers.\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  // Though, the bitmask solution is not perfect since the bytes exceeding\n  // the alphabet size are refused. Therefore, to reliably generate the ID,\n  // the random bytes redundancy has to be satisfied.\n\n  // Note: every hardware random generator call is performance expensive,\n  // because the system call for entropy collection takes a lot of time.\n  // So, to avoid additional system calls, extra bytes are requested in advance.\n\n  // Next, a step determines how many random bytes to generate.\n  // The number of random bytes gets decided upon the ID size, mask,\n  // alphabet size, and magic number 1.6 (using 1.6 peaks at performance\n  // according to benchmarks).\n\n  // `-~f => Math.ceil(f)` if f is a float\n  // `-~i => i + 1` if i is an integer\n  let step = -~((1.6 * mask * size) / alphabet.length)\n\n  return () => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      // A compact alternative for `for (var i = 0; i < step; i++)`.\n      let j = step\n      while (j--) {\n        // Adding `|| ''` refuses a random byte that exceeds the alphabet size.\n        id += alphabet[bytes[j] & mask] || ''\n        // `id.length + 1 === size` is a more compact option.\n        if (id.length === +size) return id\n      }\n    }\n  }\n}\n\nlet customAlphabet = (alphabet, size) => customRandom(alphabet, size, random)\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  while (size--) {\n    // It is incorrect to use bytes exceeding the alphabet size.\n    // The following mask reduces the random byte in the 0-255 value\n    // range to the 0-63 value range. Therefore, adding hacks, such\n    // as empty string fallback or magic numbers, is unneccessary because\n    // the bitmask trims bytes down to the alphabet size.\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      // `0-9a-z`\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      // `A-Z`\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","// This alphabet uses `A-Za-z0-9_-` symbols. The genetic algorithm helped\n// optimize the gzip compression for this alphabet.\nlet urlAlphabet =\n  'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW'\n\nexport { urlAlphabet }\n","export default class TileScheme {\n    static generate() {}\n\n    static populate() {}\n}\n","import { getThemePopulator } from '../themes/TileTheme';\nimport TileContainer from '../TileContainer';\n\nexport default class SectorGenerator {\n    static generate(settings) {\n        return new TileContainer(settings.width, settings.height);\n    }\n\n    static populate(settings, tiles) {\n        tiles.rooms.forEach((room) => {\n            const theme = getThemePopulator(room.theme);\n\n            theme.populateRoom(room);\n        });\n\n        tiles.getUnassignedTiles().forEach((tile) => {\n            const theme = getThemePopulator(tile.theme);\n\n            theme.populateTile(tile);\n        });\n    }\n}\n","import { digExits } from '../LevelConnections';\nimport { UniformScheme } from '../schemes/UniformScheme';\nimport { TILE_THEME_FOREST } from '../themes/TileTheme';\nimport SectorGenerator from './SectorGenerator';\n\nexport class ForestGenerator extends SectorGenerator {\n    static generate(settings) {\n        const tiles = UniformScheme.generate({\n            width: settings.width,\n            height: settings.height,\n            exits: settings.exits,\n        });\n\n        tiles.setTheme(TILE_THEME_FOREST);\n\n        digExits(tiles, settings.exits);\n\n        return tiles;\n    }\n}\n","import { digExits } from '../LevelConnections';\nimport { DenseCastleScheme } from '../schemes/DenseCastleScheme';\nimport { UniformScheme } from '../schemes/UniformScheme';\nimport { TILE_THEME_CASTLE, TILE_THEME_FOREST } from '../themes/TileTheme';\nimport TileContainer from '../TileContainer';\nimport SectorGenerator from './SectorGenerator';\n\nexport class ForestStrongholdGenerator extends SectorGenerator {\n    static generate(settings) {\n        const tiles = new TileContainer(settings.width, settings.height);\n        const padding = 5;\n        const exitOffset = Math.ceil(padding / 2) - 1;\n\n        const top = UniformScheme.generate({\n            width: settings.width - padding,\n            height: padding,\n            exits: [\n                { x: exitOffset, y: padding - 1 },\n                { x: settings.width - padding - 1, y: exitOffset - 1 },\n                { x: padding + 11, y: padding - 1 },\n            ],\n        });\n\n        const left = UniformScheme.generate({\n            width: padding,\n            height: settings.height - padding,\n            exits: [\n                { x: exitOffset, y: 0 },\n                {\n                    x: padding - 1,\n                    y: settings.height - padding - exitOffset - 1,\n                },\n            ],\n        });\n\n        const bottom = UniformScheme.generate({\n            width: settings.width - padding,\n            height: padding,\n            exits: [\n                { x: 0, y: exitOffset },\n                { x: settings.width - padding - exitOffset - 1, y: 0 },\n            ],\n        });\n\n        const right = UniformScheme.generate({\n            width: padding,\n            height: settings.height - padding,\n            exits: [\n                { x: 0, y: exitOffset - 1 },\n                { x: exitOffset, y: settings.height - padding - 1 },\n            ],\n        });\n\n        const castle = DenseCastleScheme.generate({\n            width: settings.width - padding * 2 + 2,\n            height: settings.height - padding * 2 + 2,\n            exits: [{ x: 12, y: 0 }],\n        });\n\n        top.setTheme(TILE_THEME_FOREST);\n        left.setTheme(TILE_THEME_FOREST);\n        bottom.setTheme(TILE_THEME_FOREST);\n        right.setTheme(TILE_THEME_FOREST);\n        castle.setTheme(TILE_THEME_CASTLE);\n\n        tiles.combineOther(0, 0, top);\n        tiles.combineOther(0, padding, left);\n        tiles.combineOther(padding, settings.height - padding, bottom);\n        tiles.combineOther(settings.width - padding, 0, right);\n        tiles.combineOther(padding - 1, padding - 1, castle);\n\n        digExits(tiles, settings.exits);\n\n        return tiles;\n    }\n}\n","import { digExits } from '../LevelConnections';\nimport TileContainer from '../TileContainer';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\nimport { pickRandom, randomInt } from '../../utils/rand';\nimport { computeAStar } from '../../utils/AStar';\nimport { diagonalDistance } from '../../utils/diagonalDistance';\nimport TileScheme from '../TileScheme';\n\nconst VERTICAL = 0;\nconst HORIZONTAL = 1;\n\nlet curId = 1;\nconst createNodeId = () => curId++;\n\nconst splitNodeVertical = (node, cut) => {\n    const leftId = createNodeId();\n    const rightId = createNodeId();\n    const left = {\n        id: leftId,\n        isLeaf: true,\n        parentId: node.id,\n        siblingId: rightId,\n        offsetX: node.offsetX,\n        offsetY: node.offsetY,\n        width: cut,\n        height: node.height,\n    };\n    const right = {\n        id: rightId,\n        isLeaf: true,\n        parentId: node.id,\n        siblingId: leftId,\n        offsetX: node.offsetX + cut,\n        offsetY: node.offsetY,\n        width: node.width - cut,\n        height: node.height,\n    };\n    return [left, right];\n};\n\nconst splitNodeHorizontal = (node, cut) => {\n    const topId = createNodeId();\n    const bottomId = createNodeId();\n    const top = {\n        id: topId,\n        isLeaf: true,\n        parentId: node.id,\n        siblingId: bottomId,\n        offsetX: node.offsetX,\n        offsetY: node.offsetY,\n        width: node.width,\n        height: cut,\n    };\n    const bottom = {\n        id: bottomId,\n        isLeaf: true,\n        parentId: node.id,\n        siblingId: topId,\n        offsetX: node.offsetX,\n        offsetY: node.offsetY + cut,\n        width: node.width,\n        height: node.height - cut,\n    };\n\n    return [top, bottom];\n};\n\nexport class DenseCastleScheme extends TileScheme {\n    static generate(settings) {\n        const width = settings.width;\n        const height = settings.height;\n        const exits = settings.exits || [];\n\n        const minRoomWidth = settings.minRoomWidth || 4;\n        const minRoomHeight = settings.minRoomHeight || 4;\n\n        const maxRoomWidth = settings.maxRoomWidth || 12;\n        const maxRoomHeight = settings.maxRoomHeight || 12;\n\n        const splitIgnoreChance = settings.splitIgnoreChance || 0.8;\n\n        const loopiness = settings.loopiness || 35;\n\n        const tiles = new TileContainer(width, height);\n\n        for (let i = 0; i < width; i++) {\n            for (let j = 0; j < height; j++) {\n                if (i === 0 || i === width - 1 || j === 0 || j === height - 1) {\n                    tiles.setTileType(i, j, TILE_TYPE_WALL);\n                } else {\n                    tiles.setTileType(i, j, TILE_TYPE_FLOOR);\n                }\n            }\n        }\n\n        const nodes = [\n            {\n                isLeaf: true,\n                parentId: null,\n                siblingId: null,\n                id: createNodeId(),\n                offsetX: 0,\n                offsetY: 0,\n                height: height - 1,\n                width: width - 1,\n            },\n        ];\n\n        const graph = [];\n\n        while (nodes.length > 0) {\n            const node = nodes.pop();\n            graph.push(node);\n\n            if (node.width < maxRoomWidth && node.height < maxRoomHeight) {\n                const ignoreSplit = Math.random() < splitIgnoreChance;\n\n                if (ignoreSplit) {\n                    continue;\n                }\n            }\n\n            const directions = [];\n\n            if (node.width - minRoomWidth - 1 > minRoomWidth) {\n                directions.push(VERTICAL);\n            }\n\n            if (node.height - minRoomHeight - 1 > minRoomHeight) {\n                directions.push(HORIZONTAL);\n            }\n\n            if (directions.length <= 0) {\n                continue;\n            }\n\n            const direction = pickRandom(directions);\n\n            if (direction === VERTICAL) {\n                const cut = randomInt(\n                    minRoomWidth + 1,\n                    node.width - minRoomWidth - 1\n                );\n\n                nodes.push(...splitNodeVertical(node, cut));\n            } else {\n                const cut = randomInt(\n                    minRoomHeight + 1,\n                    node.height - minRoomHeight - 1\n                );\n\n                nodes.push(...splitNodeHorizontal(node, cut));\n            }\n\n            node.isLeaf = false;\n        }\n\n        graph.forEach((node) => {\n            if (node.parentId === null) {\n                return;\n            }\n\n            if (node.isLeaf) {\n                const room = tiles.createRoom(\n                    node.offsetX + 1,\n                    node.offsetY + 1,\n                    node.width - 1,\n                    node.height - 1\n                );\n\n                room.includeWalls = true;\n\n                for (let i = 0; i < node.width; i++) {\n                    tiles.setTileType(\n                        node.offsetX + i,\n                        node.offsetY,\n                        TILE_TYPE_WALL\n                    );\n                }\n\n                for (let j = 0; j < node.height; j++) {\n                    tiles.setTileType(\n                        node.offsetX,\n                        node.offsetY + j,\n                        TILE_TYPE_WALL\n                    );\n                }\n                return;\n            }\n        });\n\n        graph.forEach((node) => {\n            if (node.parentId === null) {\n                return;\n            }\n\n            const sibling = graph.find((n) => n.id === node.siblingId);\n\n            let doorCandidates = [];\n            let hasSib = false;\n\n            if (sibling.offsetX < node.offsetX) {\n                hasSib = true;\n                for (let i = 1; i < node.height; i++) {\n                    const x = node.offsetX;\n                    const y = node.offsetY + i;\n                    const tile = tiles.getTile(x, y);\n\n                    if (\n                        tiles.tileTypeMatches(x - 1, y, TILE_TYPE_FLOOR) &&\n                        tiles.tileTypeMatches(x + 1, y, TILE_TYPE_FLOOR)\n                    ) {\n                        doorCandidates.push(tile);\n                    }\n                }\n            } else if (sibling.offsetY < node.offsetY) {\n                hasSib = true;\n                for (let i = 1; i < node.width; i++) {\n                    const x = node.offsetX + i;\n                    const y = node.offsetY;\n                    const tile = tiles.getTile(x, y);\n\n                    if (\n                        tiles.tileTypeMatches(x, y - 1, TILE_TYPE_FLOOR) &&\n                        tiles.tileTypeMatches(x, y + 1, TILE_TYPE_FLOOR)\n                    ) {\n                        doorCandidates.push(tile);\n                    }\n                }\n            }\n\n            const door = pickRandom(doorCandidates);\n\n            if (hasSib && !door) {\n                console.warn(\n                    'cannot make door!?',\n                    node,\n                    node.width,\n                    node.height\n                );\n            }\n\n            if (door) {\n                const room = tiles.getRoomForTile(door.x, door.y);\n\n                if (room) {\n                    room.addExit(door.x, door.y);\n                }\n\n                tiles.setTileType(door.x, door.y, TILE_TYPE_FLOOR);\n            }\n        });\n\n        const cost = (a, b) => {\n            if (tiles.tileTypeMatches(b.x, b.y, TILE_TYPE_FLOOR)) {\n                return diagonalDistance(a, b);\n            }\n\n            return Infinity;\n        };\n\n        const tryAddLoop = (a, b) => {\n            if (a.isType(TILE_TYPE_FLOOR) && b.isType(TILE_TYPE_FLOOR)) {\n                const start = {\n                    x: b.x,\n                    y: b.y,\n                };\n                const goal = {\n                    x: a.x,\n                    y: a.y,\n                };\n                const path = computeAStar({\n                    start,\n                    goal,\n                    cost,\n                });\n\n                if (path.success && path.cost >= loopiness) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n\n        tiles.data\n            .filter((tile) => tile.isType(TILE_TYPE_WALL))\n            .forEach((tile) => {\n                const north = tiles.getTile(tile.x, tile.y - 1);\n                const south = tiles.getTile(tile.x, tile.y + 1);\n\n                if (tryAddLoop(north, south)) {\n                    tiles.setTileType(tile.x, tile.y, TILE_TYPE_FLOOR);\n\n                    const room = tiles.getRoomForTile(tile.x, tile.y);\n\n                    if (room) {\n                        room.addExit(tile.x, tile.y);\n                    }\n\n                    return;\n                }\n\n                const east = tiles.getTile(tile.x - 1, tile.y);\n                const west = tiles.getTile(tile.x + 1, tile.y);\n\n                if (tryAddLoop(east, west)) {\n                    tiles.setTileType(tile.x, tile.y, TILE_TYPE_FLOOR);\n\n                    const room = tiles.getRoomForTile(tile.x, tile.y);\n\n                    if (room) {\n                        room.addExit(tile.x, tile.y);\n                    }\n\n                    return;\n                }\n            });\n\n        digExits(tiles, exits);\n\n        return tiles;\n    }\n}\n","import { game } from '../../core/Game';\nimport { SPWN_DIRT_PATH } from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\nimport { computeAStar } from '../../utils/AStar';\nimport { diagonalDistance } from '../../utils/diagonalDistance';\nimport { manhattanDistance } from '../../utils/ManhattanDistance';\nimport { pickRandom } from '../../utils/rand';\nimport { digExits } from '../LevelConnections';\nimport { ScatteredScheme } from '../schemes/ScatteredScheme';\nimport {\n    getThemePopulator,\n    TILE_THEME_CABIN,\n    TILE_THEME_FOREST,\n} from '../themes/TileTheme';\nimport { TILE_TYPE_WALL } from '../TileData';\nimport { addBorder } from './GeneratorUtils';\nimport SectorGenerator from './SectorGenerator';\n\nconst isTopLeftCorner = (t, room) => t.x === room.left && t.y === room.top;\nconst isBottomLeftCorner = (t, room) =>\n    t.x === room.left && t.y === room.bottom - 1;\nconst isBottomRightCorner = (t, room) =>\n    t.x === room.right - 1 && t.y === room.bottom - 1;\nconst isTopRightCorner = (t, room) =>\n    t.x === room.right - 1 && t.y === room.top;\n\nexport class ForestTownGenerator extends SectorGenerator {\n    static generate(settings) {\n        const tiles = ScatteredScheme.generate({\n            width: settings.width,\n            height: settings.height,\n            exits: settings.exits,\n            minCount: 4,\n        });\n\n        tiles.setTheme(TILE_THEME_CABIN);\n\n        const addDoor = (room) => {\n            const edges = room.borderTiles.filter(\n                (t) =>\n                    !(\n                        isTopLeftCorner(t, room) ||\n                        isBottomLeftCorner(t, room) ||\n                        isBottomRightCorner(t, room) ||\n                        isTopRightCorner(t, room)\n                    )\n            );\n\n            const door = pickRandom(edges);\n\n            if (door) {\n                room.addExit(door.x, door.y);\n            }\n        };\n\n        tiles.rooms.forEach(addDoor);\n\n        tiles.getUnassignedTiles().forEach((tile) => {\n            tile.theme = TILE_THEME_FOREST;\n        });\n\n        addBorder(tiles);\n\n        digExits(tiles, settings.exits);\n\n        return tiles;\n    }\n\n    static populate(settings, tiles) {\n        tiles.rooms.forEach((room) => {\n            const theme = getThemePopulator(room.theme);\n\n            theme.populateRoom(room);\n        });\n\n        const doors = tiles.rooms.map((room) => room.exits).flat();\n        const walkways = new Set();\n\n        const populatePath = (result) => {\n            if (!result.success) {\n                return;\n            }\n\n            result.path.forEach((segment) => {\n                const entities = game.map.getEntitiesAt(segment.x, segment.y);\n\n                if (entities.length > 0) {\n                    return;\n                }\n\n                spawn(SPWN_DIRT_PATH, segment.x, segment.y);\n\n                walkways.add(`${segment.x},${segment.y}`);\n            });\n        };\n\n        const generatePath = (start, end) => {\n            const path = computeAStar({\n                allowDiagonals: false,\n                start: {\n                    x: start.x,\n                    y: start.y,\n                },\n                goal: {\n                    x: end.x,\n                    y: end.y,\n                },\n                cost: (a, b) => {\n                    if (tiles.tileTypeMatches(b.x, b.y, TILE_TYPE_WALL)) {\n                        return Infinity;\n                    }\n\n                    const neighbors = tiles.getNeighbors(b.x, b.y);\n                    const walls = neighbors.filter((n) =>\n                        n.isType(TILE_TYPE_WALL)\n                    );\n\n                    if (walls.length > 0) {\n                        return walls.length * 2;\n                    }\n\n                    if (walkways.has(`${b.x},${b.y}`)) {\n                        return 0.1;\n                    }\n\n                    return manhattanDistance(a, b) * 2;\n                },\n            });\n\n            populatePath(path);\n        };\n\n        doors.forEach((doorA) => {\n            settings.exits.forEach((exit) => {\n                generatePath(doorA, exit);\n            });\n            doors.forEach((doorB) => {\n                if (doorA === doorB) {\n                    return;\n                }\n\n                generatePath(doorA, doorB);\n            });\n        });\n\n        tiles.getUnassignedTiles().forEach((tile) => {\n            const theme = getThemePopulator(tile.theme);\n\n            theme.populateTile(tile);\n        });\n    }\n}\n","import { randomInt } from '../../utils/rand';\nimport { digExits } from '../LevelConnections';\nimport TileContainer from '../TileContainer';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\nimport TileScheme from '../TileScheme';\n\nexport class ScatteredScheme extends TileScheme {\n    static generate(settings) {\n        const attempt = settings.attempt || 1;\n        const maxAttempts = settings.maxAttempts || 100;\n        const width = settings.width;\n        const height = settings.height;\n        const padding = settings.padding || 3;\n        const roomPadding = settings.roomPadding || 3;\n        const minCount = settings.minCount || 5;\n        const maxCount = settings.maxCount || 8;\n        const minWidth = settings.minWidth || 5;\n        const maxWidth = settings.maxWidth || 9;\n        const minHeight = settings.minHeight || 5;\n        const maxHeight = settings.maxHeight || 9;\n        const exits = settings.exits || [];\n        const tiles = new TileContainer(width, height);\n\n        if (attempt > maxAttempts) {\n            console.warn(\n                `Failed to generate ScatteredScheme in ${maxAttempts} attempts`\n            );\n\n            return tiles;\n        }\n\n        const createBox = () => {\n            const width = randomInt(minWidth, maxWidth);\n            const height = randomInt(minHeight, maxHeight);\n\n            return {\n                x: randomInt(padding, settings.width - padding - width),\n                y: randomInt(padding, settings.height - padding - height),\n                width,\n                height,\n                get top() {\n                    return this.y - roomPadding;\n                },\n                get bottom() {\n                    return this.y + this.height + roomPadding;\n                },\n                get left() {\n                    return this.x - roomPadding;\n                },\n                get right() {\n                    return this.x + this.width + roomPadding;\n                },\n            };\n        };\n\n        const overlaps = (box) => {\n            return tiles.rooms.some((room) => {\n                return room.intersects(\n                    box.left,\n                    box.top,\n                    box.right,\n                    box.bottom\n                );\n            });\n        };\n\n        for (let i = 0; i < 100; i++) {\n            const box = createBox();\n\n            if (overlaps(box)) {\n                continue;\n            }\n\n            for (let i = 0; i < box.width; i++) {\n                for (let j = 0; j < box.height; j++) {\n                    const point = {\n                        x: box.x + i,\n                        y: box.y + j,\n                    };\n\n                    if (\n                        i === 0 ||\n                        i === box.width - 1 ||\n                        j === 0 ||\n                        j === box.height - 1\n                    ) {\n                        tiles.setTileType(point.x, point.y, TILE_TYPE_WALL);\n                    } else {\n                        tiles.setTileType(point.x, point.y, TILE_TYPE_FLOOR);\n                    }\n                }\n            }\n\n            tiles.createRoom(box.x, box.y, box.width, box.height);\n\n            if (tiles.rooms.length >= maxCount) {\n                break;\n            }\n        }\n\n        if (tiles.rooms.length < minCount) {\n            return this.generate({\n                ...settings,\n                attempt: attempt + 1,\n            });\n        }\n\n        digExits(tiles, exits);\n\n        return tiles;\n    }\n}\n","import { TILE_TYPE_WALL } from '../TileData';\n\nexport const addBorder = (tiles) => {\n    for (let i = 0; i < tiles.width; i++) {\n        tiles.setTileType(i, 0, TILE_TYPE_WALL);\n        tiles.setTileType(i, tiles.height - 1, TILE_TYPE_WALL);\n    }\n\n    for (let j = 1; j < tiles.height - 1; j++) {\n        tiles.setTileType(0, j, TILE_TYPE_WALL);\n        tiles.setTileType(tiles.width - 1, j, TILE_TYPE_WALL);\n    }\n};\n","import { getMessage, shouldAppear } from '../enums/ConsoleEvents';\nimport Manager from './Manager';\n\nexport default class ConsoleManager extends Manager {\n    messages = [];\n    events = [];\n    consoleHeight = 4;\n\n    teardown() {\n        this.messages = [];\n        this.events = [];\n    }\n\n    event(type, data) {\n        this.events.push({ type, data });\n    }\n\n    log(text) {\n        this.messages.push({ text });\n    }\n\n    render(dt) {\n        this.events.forEach(({ type, data }) => {\n            if (shouldAppear(type, data)) {\n                this.messages.push({\n                    text: getMessage(type, data),\n                });\n            }\n        });\n        this.events = [];\n\n        const msgs = this.messages.slice(\n            Math.max(this.messages.length - this.consoleHeight, 0)\n        );\n        const height = Math.min(msgs.length, this.consoleHeight);\n\n        msgs.forEach((message, i) => {\n            this.game.renderer.drawText(\n                0,\n                this.game.camera.height - (height - i),\n                message.text\n            );\n        });\n    }\n}\n","import { IsDestroying } from '../ecs/components';\nimport System from './System';\n\nexport default class DestroySystem extends System {\n    #query;\n\n    constructor(game) {\n        super(game);\n\n        this.#query = game.ecs.createQuery({\n            all: [IsDestroying],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            if (entity.isDestroying.pass > 0) {\n                entity.destroy();\n            } else {\n                entity.isDestroying.pass++;\n            }\n        });\n    }\n}\n","import { Howl } from 'howler';\nimport Manager from './Manager';\nimport music from './../data/music.json';\n\nclass Track {\n    isPlaying = false;\n    isIntro = false;\n    howl = null;\n\n    constructor(path, data) {\n        this.name = data.name;\n        this.loop = new Howl({\n            loop: true,\n            src: [`${path}${data.loop}`],\n        });\n\n        if (data.intro) {\n            this.intro = new Howl({\n                loop: false,\n                src: [`${path}${data.intro}`],\n            });\n\n            this.intro.on('end', () => {\n                if (this.isPlaying) {\n                    this.howl = this.loop;\n                    this.loop.seek(0);\n                    this.loop.volume(1);\n                    this.loop.play();\n                } else {\n                    this.intro.stop();\n                    this.loop.stop();\n                }\n            });\n        }\n    }\n\n    play() {\n        if (this.isPlaying) {\n            return;\n        }\n\n        if (this.intro) {\n            this.howl = this.intro;\n            this.intro.seek(0);\n            this.intro.play();\n            this.intro.fade(0, 1, 5000);\n            this.loop.stop();\n            // this.intro.volume(1);\n        } else {\n            this.howl = this.loop;\n            this.loop.seek(0);\n            this.loop.play();\n            this.loop.fade(0, 1, 5000);\n            // this.loop.volume(1);\n        }\n\n        this.isPlaying = true;\n    }\n\n    stop() {\n        if (this.howl) {\n            this.howl.fade(1, 0, 500);\n        }\n        this.isPlaying = false;\n    }\n}\n\nexport default class MusicManager extends Manager {\n    tracks = {};\n    currentTrack = null;\n\n    constructor(game) {\n        super(game);\n        const path = `${window.location.protocol}//${window.location.host}${window.location.pathname}${music.path}`;\n\n        music.tracks.forEach((data) => {\n            const track = new Track(path, data);\n\n            this.tracks[data.key] = track;\n        });\n    }\n\n    play(key) {\n        if (key === this.currentTrack) {\n            return;\n        }\n\n        if (this.currentTrack) {\n            this.tracks[this.currentTrack].stop();\n        }\n\n        this.tracks[key].play();\n        this.currentTrack = key;\n    }\n\n    stop() {\n        if (this.currentTrack) {\n            this.tracks[this.currentTrack].stop();\n        }\n    }\n\n    onSectorLoaded(sector) {\n        this.play(sector.music);\n    }\n}\n","import { getStatus } from '../data/Statuses';\nimport { Status } from '../ecs/components';\nimport System from './System';\n\nexport default class StatusSystem extends System {\n    constructor(game) {\n        super(game);\n\n        this.query = this.game.ecs.createQuery({\n            all: [Status],\n        });\n    }\n\n    update(dt) {\n        if (!this.game.clock.tickDelta) {\n            return;\n        }\n\n        const delta = this.game.clock.tickDelta;\n\n        this.query.get().forEach((entity) => {\n            entity.status.forEach((status) => {\n                const statusType = getStatus(status.key);\n\n                statusType.update(delta, entity, status);\n\n                if (status.isCompleted()) {\n                    status.destroy();\n                }\n            });\n        });\n    }\n}\n","import {\n    IsDestroying,\n    IsInventoried,\n    LiquidContainer,\n    Position,\n} from '../ecs/components';\nimport System from './System';\n\nexport default class LiquidSystem extends System {\n    constructor(game) {\n        super(game);\n\n        this.query = this.game.ecs.createQuery({\n            all: [LiquidContainer, Position],\n            none: [IsInventoried, IsDestroying],\n        });\n    }\n\n    update(dt) {\n        if (!this.game.clock.tickDelta) {\n            return;\n        }\n\n        const pools = Array.from(this.query.get());\n\n        pools.reduce((rv, pool) => {\n            const container = pool.liquidContainer;\n\n            if (!container.isFreeFlowing) {\n                return rv;\n            }\n\n            const pos = pool.position.getPos();\n            const liquid = container.content;\n            const key = `${pos.x},${pos.y},${liquid}`;\n\n            if (rv[key]) {\n                rv[key].combineFrom(container);\n            } else {\n                rv[key] = container;\n            }\n\n            return rv;\n        }, {});\n    }\n}\n","import { addStatus, STATUS_BLEEDING } from '../data/Statuses';\nimport {\n    IsDestroying,\n    IsInventoried,\n    Position,\n    SharpTrap,\n} from '../ecs/components';\nimport { CONSOLE_EVENT_TRAP_SHARP } from '../enums/ConsoleEvents';\nimport System from './System';\n\nexport default class TrapSystem extends System {\n    constructor(game) {\n        super(game);\n\n        this.sharpTrapQuery = this.game.ecs.createQuery({\n            all: [SharpTrap, Position],\n            none: [IsInventoried, IsDestroying],\n        });\n    }\n\n    update(dt) {\n        if (!this.game.clock.turnDelta) {\n            return;\n        }\n\n        this.sharpTrapQuery.get().forEach((trapEntity) => {\n            const pos = trapEntity.position.getPos();\n            const entities = this.game.map.getEntitiesAt(pos.x, pos.y);\n\n            entities.forEach((entity) => {\n                if (entity.id === trapEntity.id) {\n                    return;\n                }\n                if (entity.stats) {\n                    const saved = trapEntity.sharpTrap.test(entity);\n\n                    if (!saved) {\n                        addStatus(STATUS_BLEEDING, entity);\n                        this.game.console.event(CONSOLE_EVENT_TRAP_SHARP, {\n                            trap: trapEntity,\n                            entity,\n                        });\n                    }\n                }\n            });\n        });\n    }\n}\n","import { spawn } from '../data/Spawner';\nimport {\n    Combustible,\n    Fire,\n    IsDestroying,\n    IsInventoried,\n    Position,\n} from '../ecs/components';\nimport { randomWeightedBool } from '../utils/rand';\nimport System from './System';\n\nexport default class FireSystem extends System {\n    constructor(game) {\n        super(game);\n\n        this.query = this.game.ecs.createQuery({\n            all: [Fire, Combustible, Position],\n            none: [IsInventoried, IsDestroying],\n        });\n    }\n\n    update(dt) {\n        if (!this.game.clock.turnDelta) {\n            return;\n        }\n\n        this.query.get().forEach((entity) => {\n            const pos = entity.position.getPos();\n            const combustible = entity.combustible;\n            let temperature = this.game.temperature.getTemperature(\n                pos.x,\n                pos.y\n            );\n\n            combustible.fuel -= combustible.burnRate;\n            temperature += combustible.burnRate;\n\n            this.game.temperature.setTemperature(pos.x, pos.y, temperature);\n\n            const sparkChance = combustible.getSparkChance();\n            const dieChance = combustible.getDieOutChance();\n\n            this.game.map\n                .getNeighborEntities(pos.x, pos.y)\n                .flat()\n                .filter((e) => e.combustible)\n                .forEach((neighbor) => {\n                    const spark = randomWeightedBool(sparkChance);\n\n                    if (spark) {\n                        neighbor.fireEvent('spark', {\n                            intensity: entity.fire.intensity - 1,\n                        });\n                    }\n                });\n\n            if (combustible.isOutOfFuel) {\n                entity.add(IsDestroying);\n\n                if (combustible.spawnableRemains) {\n                    spawn(combustible.spawnableRemains, pos.x, pos.y);\n                }\n            } else if (randomWeightedBool(dieChance)) {\n                entity.fire.extinguish();\n\n                this.game.particles.createParticle(pos.x, pos.y, {\n                    lifetime: 1000,\n                    fg1s: ['yellow', 'red'],\n                    glyphs: ['.', '↑', '^'],\n                });\n            } else {\n                this.game.particles.createParticle(pos.x, pos.y, {\n                    lifetime: 1000,\n                    fg1s: ['yellow', 'red'],\n                    glyphs: ['.', '↑', '^'],\n                });\n            }\n        });\n    }\n}\n","import { avgArray } from '../utils/ArrayUtil';\nimport { lerp } from '../utils/LerpUtil';\nimport MemoryGrid from '../utils/MemoryGrid';\nimport System from './System';\n\nexport default class TemperatureSystem extends System {\n    data;\n\n    get width() {\n        return this.game.map.width;\n    }\n\n    get height() {\n        return this.game.map.height;\n    }\n\n    constructor(game) {\n        super(game);\n\n        this.grid = new MemoryGrid(this.width, this.height);\n    }\n\n    teardown() {\n        this.grid.clear();\n    }\n\n    getAmbientTemperature() {\n        return this.game.world.sector.temperature.ambient;\n    }\n\n    getAmbientCapacity() {\n        return this.game.world.sector.temperature.capacity;\n    }\n\n    getSaveGameData() {\n        const data = this.grid.serialize();\n\n        this.game.state.saveSectorTemperatureData(\n            this.game.world.sectorId,\n            data\n        );\n    }\n\n    onSectorLoaded(sector) {\n        const data = this.game.state.loadSectorTemperatureData(sector.id);\n\n        if (data) {\n            this.grid.deserialize(data);\n        } else {\n            this.grid.defaultValueGenerator = () => sector.temperature.ambient;\n            this.grid.previous.defaultValueGenerator = () =>\n                sector.temperature.ambient;\n            this.grid.setAll(sector.temperature.ambient);\n        }\n    }\n\n    setTemperature(x, y, value) {\n        this.grid.set(x, y, value);\n    }\n\n    getTemperature(x, y) {\n        return this.grid.get(x, y);\n    }\n\n    getCapacity(x, y) {\n        let hasCap = false;\n        let hasFire = false;\n\n        const capacity = this.game.map.getEntitiesAt(x, y).reduce((cap, e) => {\n            if (e.fire) {\n                hasFire = true;\n                return 0;\n            }\n            if (e.thermalCapacity) {\n                hasCap = true;\n\n                return cap + e.thermalCapacity.value;\n            }\n\n            return cap;\n        }, 0);\n\n        if (hasFire) {\n            return 0;\n        }\n\n        if (hasCap) {\n            return capacity;\n        }\n\n        return this.getAmbientCapacity();\n    }\n\n    update(dt) {\n        if (!this.game.clock.tickDelta) {\n            return;\n        }\n\n        this.grid.copyToPrevious();\n\n        const ambient = this.getAmbientTemperature();\n\n        for (let x = 0; x < this.width; x++) {\n            for (let y = 0; y < this.height; y++) {\n                const previous = this.grid.previous.get(x, y);\n                const cells = this.grid.previous.getNeighbors(x, y);\n\n                cells.push(ambient);\n                cells.push(previous);\n\n                const avg = avgArray(cells);\n\n                if (Math.abs(previous - avg) < 0.01) {\n                    continue;\n                }\n\n                const capacity = this.getCapacity(x, y);\n                const t = lerp(previous, avg, capacity);\n\n                this.grid.set(x, y, t);\n            }\n        }\n    }\n}\n","export const sumArray = (arr = []) => arr.reduce((sum, val) => sum + val, 0);\nexport const avgArray = (arr = []) => sumArray(arr) / arr.length;\n","export const lerp = (f0, f1, t) => (1 - t) * f0 + t * f1;\nexport const lerp2 = (v1, v2, t) => {\n    return {\n        x: lerp(v1.x, v2.x, t),\n        y: lerp(v2.y, v2.x, t),\n    };\n};\n\nwindow.lerp = lerp;\n","import Grid from './Grid';\n\nexport default class MemoryGrid extends Grid {\n    get width() {\n        return this._width;\n    }\n\n    get height() {\n        return this._height;\n    }\n\n    constructor(width, height, defaultValueGenerator = () => null) {\n        super(width, height, defaultValueGenerator);\n        this.previous = new Grid(width, height, defaultValueGenerator);\n    }\n\n    copyToPrevious() {\n        this.previous._width = this._width;\n        this.previous._height = this._height;\n        this.previous.data = [...this.data];\n    }\n}\n","import { IsDestroying } from '../ecs/components';\nimport { AbilityStatus } from '../ecs/components/AbilityStatus';\nimport System from './System';\n\nexport default class AbilitySystem extends System {\n    constructor(game) {\n        super(game);\n\n        this.query = this.game.ecs.createQuery({\n            all: [AbilityStatus],\n            none: [IsDestroying],\n        });\n    }\n\n    update(dt) {\n        const delta = this.game.clock.tickDelta;\n\n        if (!delta) {\n            return;\n        }\n\n        this.query.get().forEach((entity) => {\n            Object.values(entity.abilityStatus).forEach((status) => {\n                status.ability.update(delta, status);\n            });\n        });\n    }\n}\n","import { getMaskGlyph } from '../data/bitmasks';\nimport { BitmaskGlyph, Explored, IsDestroying, IsInventoried, Position } from '../ecs/components';\nimport Manager from './Manager';\n\nexport default class BitmaskManager extends Manager {\n    constructor(game) {\n        super(game);\n        this.query = game.ecs.createQuery({\n            all: [BitmaskGlyph, Position, Explored],\n            none: [IsInventoried, IsDestroying],\n        });\n\n        this.query.onEntityRemoved((entity) => {\n            if (entity.isDestroying || entity.IsInventoried) {\n                this.refreshMaskAndNeighbors(entity);\n            }\n        });\n    }\n\n\n    getMaskNeighbors(x, y, key) {\n        const neighbors = this.game.map.getNeighborEntities(x, y);\n\n        return neighbors.map((list) => {\n            return list.filter((e) => e.explored && e.bitmaskGlyph && e.bitmaskGlyph.key === key && !e.isDestroying);\n        });\n    }\n\n    refreshMaskAndNeighbors(entity) {\n        const key = entity.bitmaskGlyph.key;\n        const pos = entity.position.getPos();\n\n        this.refreshMask(entity);\n\n        const neighbors = this.getMaskNeighbors(pos.x, pos.y, key);\n\n        neighbors.flat().forEach((neighbor) => {\n            this.refreshMask(neighbor);\n        });\n    }\n\n    refreshMask(entity) {\n        const key = entity.bitmaskGlyph.key;\n        const pos = entity.position.getPos();\n        const neighbors = this.getMaskNeighbors(pos.x, pos.y, key);\n        const mask = this.sumMask(neighbors);\n\n        if (entity.bitmaskGlyph.updateGlyph) {\n            entity.glyph.ch = getMaskGlyph(key, mask);\n        }\n    }\n\n    sumMask(neighbors) {\n        return neighbors.reduce((sum, cell, idx) => {\n            return cell.length ? sum + (2 ** idx) : sum;\n        }, 0);\n    }\n\n    refreshAll() {\n        this.query.get().forEach((entity) => {\n            this.refreshMask(entity);\n        });\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => module['default'] :\n\t\t() => module;\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(0);\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}