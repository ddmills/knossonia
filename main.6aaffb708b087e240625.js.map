{"version":3,"sources":["webpack://knossonia/./src/index.js","webpack://knossonia/./src/ecs/index.js","webpack://knossonia/../node_modules/camelcase/index.js","webpack://knossonia/../src/Properties/Property.js","webpack://knossonia/../src/Properties/SimpleProperty.js","webpack://knossonia/../src/Properties/EntityProperty.js","webpack://knossonia/../src/Properties/EntityArrayProperty.js","webpack://knossonia/../src/Properties/PropertyFactory.js","webpack://knossonia/../src/Component.js","webpack://knossonia/../src/registries/ComponentRegistry.js","webpack://knossonia/../node_modules/deepmerge/dist/cjs.js","webpack://knossonia/../src/PrefabComponent.js","webpack://knossonia/../src/Prefab.js","webpack://knossonia/../src/registries/PrefabRegistry.js","webpack://knossonia/../node_modules/nanoid/non-secure/index.js","webpack://knossonia/../src/EntityEvent.js","webpack://knossonia/../src/Entity.js","webpack://knossonia/../src/registries/EntityRegistry.js","webpack://knossonia/../src/Query.js","webpack://knossonia/../src/registries/QueryRegistry.js","webpack://knossonia/../src/Engine.js","webpack://knossonia/./src/ecs/components/Actor.js","webpack://knossonia/./src/ecs/components/Brain.js","webpack://knossonia/./src/ai/GoalActionResult.js","webpack://knossonia/./src/ecs/components/Goal.js","webpack://knossonia/./src/ai/GoalEvaluator.js","webpack://knossonia/./src/ai/GoalTypes/BoredGoalType.js","webpack://knossonia/./src/ai/GoalTypes/GoalType.js","webpack://knossonia/./src/ai/GoalTypes/EatFoodGoalType.js","webpack://knossonia/./src/ai/GoalTypes/SatisfyHungerGoalType.js","webpack://knossonia/./src/ai/GoalTypes/MoveGoalType.js","webpack://knossonia/./src/ecs/components/Eater.js","webpack://knossonia/./src/ecs/components/Moniker.js","webpack://knossonia/./src/ecs/components/Logger.js","webpack://knossonia/./src/ecs/components/Position.js","webpack://knossonia/./src/ecs/components/Map.js","webpack://knossonia/./src/ecs/components/MapLayer.js","webpack://knossonia/./src/ecs/components/Glyph.js","webpack://knossonia/./src/ecs/components/Legs.js","webpack://knossonia/./src/ecs/components/MoveCommand.js","webpack://knossonia/./src/enums/Directions.js","webpack://knossonia/./src/ecs/components/IsPlayer.js","webpack://knossonia/./src/ecs/components/Wandering.js","webpack://knossonia/./src/enums/keycodes.js","webpack://knossonia/./src/core/Game.js","webpack://knossonia/./src/core/rendering/Renderer.js","webpack://knossonia/./node_modules/rot-js/lib/index.js","webpack://knossonia/./node_modules/rot-js/lib/rng.js","webpack://knossonia/./node_modules/rot-js/lib/display/display.js","webpack://knossonia/./node_modules/rot-js/lib/display/hex.js","webpack://knossonia/./node_modules/rot-js/lib/display/canvas.js","webpack://knossonia/./node_modules/rot-js/lib/display/backend.js","webpack://knossonia/./node_modules/rot-js/lib/util.js","webpack://knossonia/./node_modules/rot-js/lib/display/rect.js","webpack://knossonia/./node_modules/rot-js/lib/display/tile.js","webpack://knossonia/./node_modules/rot-js/lib/display/tile-gl.js","webpack://knossonia/./node_modules/rot-js/lib/color.js","webpack://knossonia/./node_modules/rot-js/lib/display/term.js","webpack://knossonia/./node_modules/rot-js/lib/text.js","webpack://knossonia/./node_modules/rot-js/lib/constants.js","webpack://knossonia/./node_modules/rot-js/lib/stringgenerator.js","webpack://knossonia/./node_modules/rot-js/lib/eventqueue.js","webpack://knossonia/./node_modules/rot-js/lib/MinHeap.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/index.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/simple.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/scheduler.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/speed.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/action.js","webpack://knossonia/./node_modules/rot-js/lib/fov/index.js","webpack://knossonia/./node_modules/rot-js/lib/fov/discrete-shadowcasting.js","webpack://knossonia/./node_modules/rot-js/lib/fov/fov.js","webpack://knossonia/./node_modules/rot-js/lib/fov/precise-shadowcasting.js","webpack://knossonia/./node_modules/rot-js/lib/fov/recursive-shadowcasting.js","webpack://knossonia/./node_modules/rot-js/lib/map/index.js","webpack://knossonia/./node_modules/rot-js/lib/map/arena.js","webpack://knossonia/./node_modules/rot-js/lib/map/map.js","webpack://knossonia/./node_modules/rot-js/lib/map/uniform.js","webpack://knossonia/./node_modules/rot-js/lib/map/dungeon.js","webpack://knossonia/./node_modules/rot-js/lib/map/features.js","webpack://knossonia/./node_modules/rot-js/lib/map/cellular.js","webpack://knossonia/./node_modules/rot-js/lib/map/digger.js","webpack://knossonia/./node_modules/rot-js/lib/map/ellermaze.js","webpack://knossonia/./node_modules/rot-js/lib/map/dividedmaze.js","webpack://knossonia/./node_modules/rot-js/lib/map/iceymaze.js","webpack://knossonia/./node_modules/rot-js/lib/map/rogue.js","webpack://knossonia/./node_modules/rot-js/lib/noise/index.js","webpack://knossonia/./node_modules/rot-js/lib/noise/simplex.js","webpack://knossonia/./node_modules/rot-js/lib/noise/noise.js","webpack://knossonia/./node_modules/rot-js/lib/path/index.js","webpack://knossonia/./node_modules/rot-js/lib/path/dijkstra.js","webpack://knossonia/./node_modules/rot-js/lib/path/path.js","webpack://knossonia/./node_modules/rot-js/lib/path/astar.js","webpack://knossonia/./node_modules/rot-js/lib/engine.js","webpack://knossonia/./node_modules/rot-js/lib/lighting.js","webpack://knossonia/./src/core/input/InputController.js","webpack://knossonia/./src/core/input/events/InputKeyboardEvent.js","webpack://knossonia/./src/core/input/events/InputMouseEvent.js","webpack://knossonia/./src/systems/HungerSystem.js","webpack://knossonia/./src/systems/System.js","webpack://knossonia/./src/systems/ActionSystem.js","webpack://knossonia/./src/systems/RenderSystem.js","webpack://knossonia/./src/systems/MovementSystem.js","webpack://knossonia/./src/systems/UISystem.js","webpack://knossonia/webpack/bootstrap","webpack://knossonia/webpack/runtime/create fake namespace object","webpack://knossonia/webpack/runtime/define property getters","webpack://knossonia/webpack/runtime/hasOwnProperty shorthand","webpack://knossonia/webpack/runtime/make namespace object","webpack://knossonia/webpack/startup"],"names":["g","Game","jim","ecs","moniker","name","position","x","y","brain","pushGoal","BoredGoalType","move","entity","direction","has","MoveCommand","remove","add","document","addEventListener","e","keycodes","keyCode","fireEvent","NW","N","NE","W","Z","E","SW","S","SE","start","Engine","window","Object","values","components","forEach","component","registerComponent","prefabs","prefab","registerPrefab","camelCase","input","options","Array","TypeError","pascalCase","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","character","preserveCamelCase","p1","m","module","constructor","this","enumerable","get","set","v","id","value","getEntity","console","Proxy","Reflect","isNaN","old","deleteProperty","len","Math","proxy","map","ref","filter","EntityProperty","EntityArrayProperty","SimpleProperty","properties","Boolean","ob","prop","destroy","createComponent","handlerName","camelcase","evt","initialValue","initialProperties","_defaultPropertyValue","property","PropertyFactory","Component","Map","type","_getType","definition","typeOrClassOrComponent","isMergeableObject","isNonNullObject","stringValue","isReactElement","isSpecial","REACT_ELEMENT_TYPE","Symbol","cloneUnlessOtherwiseSpecified","deepmerge","val","defaultArrayMerge","target","source","element","getKeys","getEnumerableOwnPropertySymbols","propertyIsOnObject","object","mergeObject","destination","key","propertyIsUnsafe","customMerge","getMergeFunction","sourceIsArray","array","Error","prev","next","overwrite","componentDef","initialProps","props","merge","parent","arrComps","accessor","initialCompProps","registered","data","Prefab","inherit","componentData","def","PrefabComponent","PrefabRegistry","nameOrClassOrPrefab","urlAlphabet","writable","getAccessor","hasType","hasOwnProperty","nestedComponent","create","typeOrClass","attach","configurable","allowMultiple","isComponent","instance","all","index","v2","EntityEvent","Entity","refs","Set","json","entityData","createOrGetById","d","any","none","hasAny","c","hasAll","hasNone","isMatch","query","Query","nanoid","ComponentRegistry","EntityRegistry","QueryRegistry","entities","nameOrClass","queries","serialize","deserializeEntity","deserialize","Actor","reduceEnergy","addEnergy","energy","Brain","peekGoal","isFinished","popGoal","currentGoal","result","takeAction","FAILURE","removeGoal","INVALID","handle","goal","goals","isSelf","isSiblingGoal","originalIntent","push","pop","length","SUCCESS","Goal","GoalEvaluator","complete","goalTypeMap","GoalTypes","goalType","getGoalType","warn","GoalType","EatFoodGoalType","food","handled","SatisfyHungerGoalType","eater","isHungry","MoveGoalType","Eater","random","hunger","Moniker","Logger","log","Position","width","idx","MapLayer","mapEntity","height","content","Glyph","fg","bg","char","Legs","actor","hasEnergy","directions","shortName","fullName","delta","IsPlayer","Wandering","floor","Directions","renderer","Renderer","inputController","InputController","hungerSystem","HungerSystem","actionSystem","ActionSystem","movementSystem","MovementSystem","renderSystem","RenderSystem","UISystem","requestAnimationFrame","loop","bind","t","update","RotDisplay","fontSize","forceSquareRatio","body","appendChild","getContainer","draw","drawText","clear","eventToPosition","Util","util","Color","color","Text","text","FRAC","_seed","_s0","_s1","_s2","_c","seed","lowerBound","upperBound","max","min","getUniform","u","r","mean","stddev","gauss","sqrt","clone","slice","indexOf","getItem","splice","total","part","state","RNG","setState","getState","setSeed","Date","now","BACKENDS","Hex","Rect","Tile","TileGL","Term","DEFAULT_OPTIONS","DEFAULT_WIDTH","DEFAULT_HEIGHT","transpose","layout","spacing","border","fontFamily","fontStyle","tileWidth","tileHeight","tileMap","tileSet","tileColorize","Display","_data","_dirty","_options","assign","setOptions","DEBUG","_tick","_backend","schedule","what","colors","ctor","availWidth","availHeight","computeSize","computeFontSize","touches","clientX","clientY","ch","maxWidth","cx","cy","lines","tokens","token","shift","isSpace","isPrevSpace","isFullWidth","isPrevFullWidth","cc","charCodeAt","charAt","cch","_draw","clearBefore","_spacingX","_spacingY","_hexSize","px","reverse","_ctx","fillStyle","_fill","chars","concat","fillText","ceil","hexSizeWidth","hexSizeHeight","hexSize","oldFont","font","measureText","ratio","nodeSize","canvas","size","mod","a","b","ctx","beginPath","moveTo","lineTo","fill","xprop","yprop","opts","charWidth","Canvas","createElement","getContext","cb","style","_updateSize","textAlign","textBaseline","fillRect","rect","getBoundingClientRect","left","top","_normalizedEventToPosition","Backend","n","clamp","capitalize","toUpperCase","substring","format","template","args","replacer","match","group1","group2","obj","parts","split","method","toLowerCase","replaced","apply","first","replace","_canvasCache","cache","_drawWithCache","_drawNoCache","hash","drawImage","boxWidth","boxHeight","widthFraction","_colorCanvas","clearRect","fgs","bgs","tile","context","globalCompositeOperation","_uniforms","_gl","_initWebGL","alert","message","preserveDrawingBuffer","_updateTexture","gl","scissorY","scissor","clearColor","parseColor","COLOR_BUFFER_BIT","uniform2fv","uniform1f","uniform4fv","drawArrays","TRIANGLE_STRIP","program","vss","fss","vs","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","fs","FRAGMENT_SHADER","p","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","VS","FS","useProgram","pos","Float32Array","buf","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","createQuad","UNIFORMS","getUniformLocation","_program","enable","BLEND","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","SCISSOR_TEST","canvasSize","viewport","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","REPEAT","TEXTURE_WRAP_T","pixelStorei","UNPACK_FLIP_Y_WEBGL","texImage2D","RGBA","UNSIGNED_BYTE","trim","colorCache","parsed","Number","$","fromString","str","cached","CACHE","parseInt","color1","j","add_","multiply","round","multiply_","interpolate","color2","factor","lerp","interpolateHSL","hsl1","rgb2hsl","hsl2","hsl2rgb","lerpHSL","randomize","diff","s","h","l","hue2rgb","q","toRGB","clamped","join","toHex","toString","padStart","termcolor","rgb","DST_COLORS","_offset","_cursor","_lastColor","setTimeout","avail","process","stdout","write","dx","dy","positionToAnsi","newColor","colorToAnsi","columns","rows","RE_COLORS","TYPE_TEXT","TYPE_NEWLINE","TYPE_FG","TYPE_BG","measure","tokenize","lineWidth","offset","Infinity","lineLength","lastTokenWithSpace","breakInsideToken","arr","nextIndex","breakIndex","lastIndexOf","lastTextToken","breakLines","tokenIndex","removeBreakChar","newBreakToken","newTextToken","DIRS","4","8","6","KEYS","VK_CANCEL","VK_HELP","VK_BACK_SPACE","VK_TAB","VK_CLEAR","VK_RETURN","VK_ENTER","VK_SHIFT","VK_CONTROL","VK_ALT","VK_PAUSE","VK_CAPS_LOCK","VK_ESCAPE","VK_SPACE","VK_PAGE_UP","VK_PAGE_DOWN","VK_END","VK_HOME","VK_LEFT","VK_UP","VK_RIGHT","VK_DOWN","VK_PRINTSCREEN","VK_INSERT","VK_DELETE","VK_0","VK_1","VK_2","VK_3","VK_4","VK_5","VK_6","VK_7","VK_8","VK_9","VK_COLON","VK_SEMICOLON","VK_LESS_THAN","VK_EQUALS","VK_GREATER_THAN","VK_QUESTION_MARK","VK_AT","VK_A","VK_B","VK_C","VK_D","VK_E","VK_F","VK_G","VK_H","VK_I","VK_J","VK_K","VK_L","VK_M","VK_N","VK_O","VK_P","VK_Q","VK_R","VK_S","VK_T","VK_U","VK_V","VK_W","VK_X","VK_Y","VK_Z","VK_CONTEXT_MENU","VK_NUMPAD0","VK_NUMPAD1","VK_NUMPAD2","VK_NUMPAD3","VK_NUMPAD4","VK_NUMPAD5","VK_NUMPAD6","VK_NUMPAD7","VK_NUMPAD8","VK_NUMPAD9","VK_MULTIPLY","VK_ADD","VK_SEPARATOR","VK_SUBTRACT","VK_DECIMAL","VK_DIVIDE","VK_F1","VK_F2","VK_F3","VK_F4","VK_F5","VK_F6","VK_F7","VK_F8","VK_F9","VK_F10","VK_F11","VK_F12","VK_F13","VK_F14","VK_F15","VK_F16","VK_F17","VK_F18","VK_F19","VK_F20","VK_F21","VK_F22","VK_F23","VK_F24","VK_NUM_LOCK","VK_SCROLL_LOCK","VK_CIRCUMFLEX","VK_EXCLAMATION","VK_DOUBLE_QUOTE","VK_HASH","VK_DOLLAR","VK_PERCENT","VK_AMPERSAND","VK_UNDERSCORE","VK_OPEN_PAREN","VK_CLOSE_PAREN","VK_ASTERISK","VK_PLUS","VK_PIPE","VK_HYPHEN_MINUS","VK_OPEN_CURLY_BRACKET","VK_CLOSE_CURLY_BRACKET","VK_TILDE","VK_COMMA","VK_PERIOD","VK_SLASH","VK_BACK_QUOTE","VK_OPEN_BRACKET","VK_BACK_SLASH","VK_CLOSE_BRACKET","VK_QUOTE","VK_META","VK_ALTGR","VK_WIN","VK_KANA","VK_HANGUL","VK_EISU","VK_JUNJA","VK_FINAL","VK_HANJA","VK_KANJI","VK_CONVERT","VK_NONCONVERT","VK_ACCEPT","VK_MODECHANGE","VK_SELECT","VK_PRINT","VK_EXECUTE","VK_SLEEP","StringGenerator","words","order","prior","_boundary","String","fromCharCode","_suffix","_prefix","_priorValues","_sample","_join","_split","event","subcontext","_observeEvent","priorCount","keys","dataCount","eventCount","_backoff","available","EventQueue","_time","_events","MinHeap","time","find","heap","timestamp","loc","updateUp","updateDown","last","numbers","validnumbers","existNode","minimal","lessThan","parentNode","swap","leftChild","leftChildNode","rightChild","rightChildNode","minNode","Simple","Speed","Action","item","repeat","_queue","_current","_repeat","Scheduler","getTime","getEventTime","undefined","getSpeed","_defaultDuration","_duration","DiscreteShadowcasting","PreciseShadowcasting","RecursiveShadowcasting","R","callback","_lightPasses","A","B","blocks","DATA","neighbors","_getCircle","angle","_visibleCoords","v1","count","FOV","lightPassesCallback","topology","dirs","countFactor","startOffset","A1","A2","visibility","SHADOWS","neighborCount","_checkVisibility","index1","edge1","index2","edge2","visibleLength","visible","P","P1","P2","OCTANTS","_renderOctant","dir","previousOctant","nextPreviousOctant","nextOctant","octant","_castVisibility","startX","startY","row","visSlopeStart","visSlopeEnd","radius","xx","xy","yx","yy","blocked","newStart","mapX","mapY","slopeStart","slopeEnd","Arena","Uniform","Cellular","Digger","EllerMaze","DividedMaze","IceyMaze","Rogue","w","_width","_height","roomWidth","roomHeight","roomDugPercentage","timeLimit","_map","_dug","_roomAttempts","_corridorAttempts","_connected","_unconnected","_digCallback","_canBeDugCallback","_isWallCallback","t1","_fillMap","_rooms","_generateRooms","_generateCorridors","room","_generateRoom","Room","isValid","cnt","_corridors","clearDoors","connected","room1","_closestRoom","room2","_connectRooms","rooms","dist","center","getCenter","end","dirIndex1","dirIndex2","center1","center2","diffX","diffY","abs","getLeft","getRight","getTop","getBottom","_placeInWall","_digLine","rotation","mid","mid1","mid2","addDoor","dirIndex","lastBadIndex","points","corridor","Corridor","Dungeon","Feature","x1","y1","x2","y2","doorX","doorY","_x1","_y1","_x2","_y2","_doors","isWallCallback","right","bottom","canBeDugCallback","digCallback","endX","endY","_startX","_startY","_endX","_endY","_endsWithAWall","sx","sy","nx","ny","ok","firstCornerBad","secondCornerBad","priorityWallCallback","corridorLength","born","survive","_dirs","probability","newMap","widthStep","widthStart","cur","ncount","_getNeighbors","_serviceCallback","connectionCallback","allFreeSpace","notConnected","widthStarts","_freeSpace","_pointKey","_findConnected","_getFromTo","from","to","local","tunnelFn","_tunnelToConnected6","_tunnelToConnected","k","call","pp","connectedKeys","notConnectedKeys","_getClosest","point","space","minPoint","minDist","stack","keepNotConnected","tests","pkey","stepWidth","FEATURES","dugPercentage","_features","_featureAttempts","_walls","_priorityWallCallback","area","_firstRoom","priorityWalls","wall","_findWall","_getDiggingDirection","featureAttempts","_tryFeature","_removeSurroundingWalls","_addDoors","prio1","prio2","sort","featureName","feature","createRandomAt","createPriorityWalls","deltas","addDoors","addToList","L","removeFromList","arguments","_stack","_process","_partitionRoom","availX","availY","walls","solid","hole","regularity","_regularity","done","_randomize","_isFree","connectedCells","cellWidth","cellHeight","_calculateRoomSize","_initRooms","_connectUnconnectedRooms","_createRandomRoomConnections","_createRooms","_createCorridors","cell","ncgx","ncgy","otherRoom","dirToCheck","cgx","cgy","found","validRoom","cw","dirIdx","newI","newJ","roomw","roomh","cwp","chp","sxOffset","syOffset","ii","jj","aRoom","aDirection","rx","ry","door","startPosition","endPosition","tempDist","xDir","yDir","xOffset","yOffset","xpos","ypos","moves","xAbs","yAbs","percent","firstHalf","secondHalf","connection","otherWall","_drawCorridor","_getWallPosition","Simplex","F2","G2","gradients","_gradients","permutations","_perms","_indexes","xin","yin","gi","i1","j1","perms","indexes","n0","n1","n2","x0","y0","t0","grad","t2","Noise","Dijkstra","AStar","toX","toY","passableCallback","_computed","_todo","_add","fromX","fromY","_compute","neighbor","Path","_toX","_toY","_passableCallback","_done","_fromX","_fromY","_distance","f","itemF","scheduler","_scheduler","_lock","unlock","lock","act","then","Lighting","reflectivityCallback","_reflectivityCallback","passes","emissionThreshold","range","_lights","_reflectivityCache","_fovCache","reset","fov","_fov","lightingCallback","doneCells","emittingCells","litCells","light","_emitLight","_computeEmitters","litKey","_emitLightFromCell","reflectivity","emission","intensity","fovKey","_updateFOV","formFactor","key1","compute","vis","onKeydown","container","getDOMContainer","onMouseClick","onMouseMove","onMouseEnter","onMouseLeave","InputKeyboardEvent","isShift","shiftKey","isAlt","altKey","isCtrl","ctrlKey","isMeta","metaKey","tileX","tileY","InputMouseEvent","button","offsetX","offsetY","game","dt","tickDelta","System","sorted","isPlayer","turn","renderable","glyph","moveCommand","subTurn","padEnd","__webpack_module_cache__","__webpack_require__","moduleId","exports","__webpack_modules__","mode","__esModule","ns","o","defineProperty","prototype","toStringTag"],"mappings":"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kqDChGnD,IAAMC,SAAb,sB,2UAAA,gK,uBAA8BhK,Y,goECEvB,IAAMiK,UAAb,sB,2UAAA,2B,mCAAA,+H,YAAA,W,WAAA,iCACcvK,KACN,GAAIhB,KAAK+J,SAAW,IAAM,CACtB,IAAM/N,UAAYgE,KAAKwL,MAAsB,EAAhBxL,KAAK+J,UAC5BsB,MAAQI,qDAAiBzP,WAE/BgF,IAAImD,KAAKkE,KAAOwB,+DAAoB,CAChC1F,KAAMkH,QAEVrK,IAAIoH,e,4GAThB,WAA+B9G,gD,g2GCJ/B,kCACI,GACA,GACA,GACA,SACA,GACA,GACA,OACA,GACA,aACA,MACA,GACA,GACA,QACA,QACA,gBACA,GACA,QACA,UACA,MACA,QACA,YACA,OACA,OACA,QACA,QACA,QACA,GACA,SACA,UACA,aACA,SACA,aACA,QACA,UACA,YACA,MACA,OACA,OACA,KACA,QACA,OACA,SACA,QACA,UACA,cACA,SACA,SACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,QACA,YACA,YACA,SACA,eACA,gBACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,SACA,GACA,eACA,GACA,QACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WACA,MACA,YACA,WACA,UACA,SACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,WACA,cACA,mBACA,qBACA,qBACA,kBACA,kBACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,aACA,cACA,eACA,OACA,SACA,UACA,YACA,aACA,aACA,cACA,WACA,OACA,OACA,eACA,qBACA,sBACA,QACA,GAC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","file":"main.6aaffb708b087e240625.js","sourcesContent":["import ecs from './ecs';\nimport keycodes from './enums/keycodes';\nimport { BoredGoalType } from './ai/GoalTypes';\nimport { N, W, Z, E, S, NW, SW, SE, NE } from './enums/Directions';\nimport { MoveCommand } from './ecs/components';\nimport Game from './core/Game';\n\nconst g = new Game();\n\nconst jim = ecs.createPrefab('Player', {\n    moniker: {\n        name: 'Jim',\n    },\n    position: {\n        x: 4,\n        y: 10,\n    },\n});\n\nconst bob = ecs.createPrefab('HumanWanderer', {\n    position: {\n        x: 23,\n        y: 20,\n    },\n});\n\nbob.brain.pushGoal(BoredGoalType.create());\n\nconst move = (entity, direction) => {\n    if (entity.has(MoveCommand)) {\n        entity.remove(MoveCommand);\n    }\n\n    entity.add(MoveCommand, {\n        direction,\n    });\n};\n\ndocument.addEventListener('keydown', (e) => {\n    if (keycodes[e.keyCode] === 'space') {\n        jim.fireEvent('energy-consumed', 1000);\n    }\n    if (keycodes[e.keyCode] === 'q') {\n        move(jim, NW);\n    }\n    if (keycodes[e.keyCode] === 'w') {\n        move(jim, N);\n    }\n    if (keycodes[e.keyCode] === 'e') {\n        move(jim, NE);\n    }\n    if (keycodes[e.keyCode] === 'a') {\n        move(jim, W);\n    }\n    if (keycodes[e.keyCode] === 's') {\n        move(jim, Z);\n    }\n    if (keycodes[e.keyCode] === 'd') {\n        move(jim, E);\n    }\n    if (keycodes[e.keyCode] === 'z') {\n        move(jim, SW);\n    }\n    if (keycodes[e.keyCode] === 'x') {\n        move(jim, S);\n    }\n    if (keycodes[e.keyCode] === 'c') {\n        move(jim, SE);\n    }\n});\n\ng.start();\n","import { Engine } from 'geotic';\n\nimport * as components from './components';\nimport * as prefabs from './prefabs';\n\nconst ecs = new Engine();\n\nwindow.ecs = ecs;\n\nObject.values(components).forEach((component) => {\n    ecs.registerComponent(component);\n});\n\nObject.values(prefabs).forEach((prefab) => {\n    ecs.registerPrefab(prefab);\n});\n\nexport default ecs;\n","'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[\\p{Lu}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[\\p{Ll}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLocaleLowerCase() === character && character.toLocaleUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toLocaleUpperCase() === character && character.toLocaleLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\t...{pascalCase: false},\n\t\t...options\n\t};\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toLocaleUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toLocaleUpperCase() : input.toLocaleLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLocaleLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLocaleLowerCase()\n\t\t.replace(/[_.\\- ]+([\\p{Alpha}\\p{N}_]|$)/gu, (_, p1) => p1.toLocaleUpperCase())\n\t\t.replace(/\\d+([\\p{Alpha}\\p{N}_]|$)/gu, m => m.toLocaleUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","export default class Property {\n    component;\n\n    constructor(component) {\n        this.component = component;\n    }\n\n    get ecs() {\n        return this.component.ecs;\n    }\n\n    get descriptor() {\n        return {\n            enumerable: true,\n            get: () => this.get(),\n            set: (v) => this.set(v),\n        };\n    }\n\n    get() {\n        return undefined;\n    }\n\n    set(value) {}\n\n    serialize() {\n        return undefined;\n    }\n\n    onDestroyed() {}\n\n    cleanupReference(entity) {}\n}\n","import Property from './Property';\n\nexport default class SimpleProperty extends Property {\n    value = null;\n\n    set(value) {\n        this.value = value;\n    }\n\n    get() {\n        return this.value;\n    }\n\n    serialize() {\n        return this.value;\n    }\n}\n","import Property from './Property';\n\nexport default class EntityProperty extends Property {\n    id;\n\n    set(value) {\n        if (this.id && (!value || value.id !== this.id || value !== this.id)) {\n            this.ecs.entities.removeRef(this.id, this);\n        }\n\n        if (value && value.id) {\n            this.ecs.entities.addRef(value.id, this);\n            this.id = value.id;\n            return;\n        }\n\n        if (typeof value === 'string') {\n            this.ecs.entities.addRef(value, this);\n            this.id = value;\n            return;\n        }\n\n        this.id = undefined;\n    }\n\n    get() {\n        return this.id && this.component.ecs.getEntity(this.id);\n    }\n\n    serialize() {\n        return this.id;\n    }\n\n    onDestroyed() {\n        if (this.id) {\n            this.ecs.entities.removeRef(this.id, this);\n        }\n    }\n\n    cleanupReference(entity) {\n        if (this.id === entity.id) {\n            this.id = undefined;\n        } else {\n            console.warn(\n                `Property in unclean state. A reference to an entity \"${entity.id}\" was never cleaned up.`\n            );\n        }\n    }\n}\n","import Property from './Property';\n\nexport default class EntityArrayProperty extends Property {\n    proxy = [];\n\n    constructor(component) {\n        super(component);\n        this.proxy = new Proxy([], {\n            get: (target, prop, receiver) => {\n                return Reflect.get(target, prop, receiver);\n            },\n            set: (target, prop, value, receiver) => {\n                if (isNaN(prop)) {\n                    return Reflect.set(target, prop, value, receiver);\n                }\n\n                const old = Reflect.get(target, prop, receiver);\n\n                if (typeof value === 'string') {\n                    value = this.ecs.entities.get(value);\n                }\n\n                if (old && old != value) {\n                    this.ecs.entities.removeRef(value, this);\n                }\n\n                if (value && value.id) {\n                    this.ecs.entities.addRef(value.id, this);\n\n                    return Reflect.set(target, prop, value, receiver);\n                }\n\n                return Reflect.set(target, prop, value, receiver);\n            },\n            deleteProperty: (target, prop) => {\n                if (isNaN(prop)) {\n                    return Reflect.deleteProperty(target, prop);\n                }\n\n                const value = Reflect.get(target, prop);\n                this.ecs.entities.removeRef(value, this);\n\n                return Reflect.deleteProperty(target, prop);\n            },\n        });\n    }\n\n    set(values = []) {\n        const len = Math.max(values.length, this.proxy.length);\n\n        for (let i = 0; i < len; i++) {\n            if (i in values) {\n                this.proxy[i] = values[i];\n            } else {\n                delete this.proxy[i];\n            }\n        }\n\n        this.proxy.length = values.length;\n    }\n\n    get() {\n        return this.proxy;\n    }\n\n    serialize() {\n        return this.proxy.map((ref) => ref.id);\n    }\n\n    onDestroyed() {\n        this.set([]);\n    }\n\n    cleanupReference(entity) {\n        this.set(this.proxy.filter((ref) => ref.id !== entity.id));\n    }\n}\n","import Property from './Property';\nimport SimpleProperty from './SimpleProperty';\nimport EntityProperty from './EntityProperty';\nimport EntityArrayProperty from './EntityArrayProperty';\n\nexport default class PropertyStrategy {\n    static create(component, value) {\n        switch (value) {\n            case '<Entity>':\n                return new EntityProperty(component);\n            case '<EntityArray>':\n                return new EntityArrayProperty(component);\n            default:\n                return new SimpleProperty(component);\n        }\n    }\n}\n","import camelcase from 'camelcase';\r\nimport PropertyFactory from './Properties/PropertyFactory';\r\n\r\nexport default class Component {\r\n    #entity = null;\r\n    #ecs = null;\r\n    #props = {};\r\n    #isDestroyed = false;\r\n\r\n    static allowMultiple = false;\r\n    static keyProperty = null;\r\n    static properties = {};\r\n\r\n    static get type() {\r\n        return this.name;\r\n    }\r\n\r\n    get entity() {\r\n        return this.#entity;\r\n    }\r\n\r\n    get ecs() {\r\n        return this.#ecs;\r\n    }\r\n\r\n    get type() {\r\n        return this.constructor.name;\r\n    }\r\n\r\n    get isAttached() {\r\n        return Boolean(this.entity);\r\n    }\r\n\r\n    get isDestroyed() {\r\n        return this.#isDestroyed;\r\n    }\r\n\r\n    get allowMultiple() {\r\n        return this.constructor.allowMultiple;\r\n    }\r\n\r\n    get keyProperty() {\r\n        return this.constructor.keyProperty;\r\n    }\r\n\r\n    get properties() {\r\n        const ob = {};\r\n\r\n        for (const [key, value] of Object.entries(this.#props)) {\r\n            ob[key] = value.get();\r\n        }\r\n\r\n        return ob;\r\n    }\r\n\r\n    get key() {\r\n        return this[this.keyProperty];\r\n    }\r\n\r\n    constructor(ecs, properties = {}) {\r\n        this.#ecs = ecs;\r\n        this._defineProxies(properties);\r\n    }\r\n\r\n    serialize() {\r\n        return Object.entries(this.#props).reduce(\r\n            (o, [key, value]) => ({\r\n                ...o,\r\n                [key]: value.serialize(),\r\n            }),\r\n            {}\r\n        );\r\n    }\r\n\r\n    _onAttached(entity) {\r\n        this.#entity = entity;\r\n        this.ecs.queries.onComponentAdded(entity, this);\r\n        this.onAttached();\r\n    }\r\n\r\n    _onDetached() {\r\n        if (this.isAttached) {\r\n            this.onDetached();\r\n            const entity = this.#entity;\r\n\r\n            this.#entity = null;\r\n            this.ecs.queries.onComponentRemoved(entity, this);\r\n        }\r\n    }\r\n\r\n    _onDestroyed() {\r\n        this.#isDestroyed = true;\r\n        this.onDestroyed();\r\n\r\n        for (const prop of Object.values(this.#props)) {\r\n            prop.onDestroyed();\r\n        }\r\n    }\r\n\r\n    onAttached() {}\r\n\r\n    onDetached() {}\r\n\r\n    onDestroyed() {}\r\n\r\n    remove(destroy = true) {\r\n        if (this.isAttached) {\r\n            this.entity.remove(this);\r\n        }\r\n        if (destroy) {\r\n            this._onDestroyed();\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.remove(true);\r\n    }\r\n\r\n    clone() {\r\n        return this.ecs.createComponent(\r\n            this.type,\r\n            this.serialize()\r\n        );\r\n    }\r\n\r\n    _onEvent(evt) {\r\n        this.onEvent(evt);\r\n\r\n        const handlerName = camelcase(`on ${evt.name}`);\r\n\r\n        if (typeof this[handlerName] === 'function') {\r\n            this[handlerName](evt);\r\n        }\r\n    }\r\n\r\n    onEvent(evt) {}\r\n\r\n    _defaultPropertyValue(propertyName) {\r\n        const value = this.constructor.properties[propertyName];\r\n\r\n        if (value === '<EntityArray>') {\r\n            return [];\r\n        }\r\n\r\n        if (value === '<Entity>') {\r\n            return undefined;\r\n        }\r\n\r\n        return value;\r\n    }\r\n\r\n    _defineProxies(initialProperties) {\r\n        for (const key in this.constructor.properties) {\r\n            const initialValue = initialProperties.hasOwnProperty(key)\r\n                ? initialProperties[key]\r\n                : this._defaultPropertyValue(key);\r\n            const property = PropertyFactory.create(\r\n                this,\r\n                this.constructor.properties[key]\r\n            );\r\n\r\n            this.#props[key] = property;\r\n            Object.defineProperty(this, key, property.descriptor);\r\n            property.set(initialValue);\r\n        }\r\n    }\r\n}\r\n","import Component from '../Component';\nimport camelcase from 'camelcase';\n\nexport default class ComponentRegistry {\n    #nameCache = new Map();\n    #definitions = new Map();\n    #ecs = null;\n\n    constructor(ecs) {\n        this.#ecs = ecs;\n    }\n\n    register(component) {\n        this.#definitions.set(component.name, component);\n        this.#nameCache.set(component.name, camelcase(component.name));\n    }\n\n    getAccessor(type) {\n        if (this.#nameCache.has(type)) {\n            return this.#nameCache.get(type);\n        }\n\n        this.#nameCache.set(type, camelcase(type));\n    }\n\n    get(typeOrClassOrComponent) {\n        const type = this._getType(typeOrClassOrComponent);\n\n        if (!type) {\n            console.warn(\n                `Cannot get component definition for type or class ${typeOrClassOrComponent} since it is neither a Component class or type (string)`\n            );\n            return null;\n        }\n\n        return this.#definitions.get(type);\n    }\n\n    create(typeOrClass, properties = {}) {\n        const definition = this.get(typeOrClass);\n\n        if (definition) {\n            return new definition(this.#ecs, properties);\n        }\n\n        console.warn(\n            `Could not create component definition for ${typeOrClass} since it is not registered`\n        );\n    }\n\n    _getType(typeOrClassOrComponent) {\n        if (typeof typeOrClassOrComponent === 'string') {\n            return typeOrClassOrComponent;\n        }\n\n        if (typeOrClassOrComponent instanceof Component) {\n            return typeOrClassOrComponent.type;\n        }\n\n        if (typeOrClassOrComponent.prototype instanceof Component) {\n            return typeOrClassOrComponent.name;\n        }\n\n        return null;\n    }\n}\n","'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn target.propertyIsEnumerable(symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n","import merge from 'deepmerge';\n\nexport default class PrefabComponent {\n    get type() {\n        return this.componentDef.type;\n    }\n\n    constructor(componentDef, properties = {}, overwrite = true) {\n        this.componentDef = componentDef;\n        this.properties = properties;\n        this.overwrite = overwrite;\n    }\n\n    applyToEntity(entity, initialProps = {}) {\n        if (!this.componentDef.allowMultiple && entity.has(this.componentDef)) {\n            if (this.overwrite) {\n                entity.remove(this.componentDef);\n            } else {\n                console.log(\n                    `Ignoring prefab component \"${this.type}\" since the entity \"${entity.id}\" already has one.`\n                );\n                return;\n            }\n        }\n\n        const props = merge(this.properties, initialProps);\n\n        entity.add(this.componentDef, props);\n    }\n}\n","export default class Prefab {\r\n    name = '';\r\n    inherit = [];\r\n    components = [];\r\n\r\n    constructor(ecs, name) {\r\n        this.ecs = ecs;\r\n        this.name = name;\r\n    }\r\n\r\n    addComponent(prefabComponent) {\r\n        this.components.push(prefabComponent);\r\n    }\r\n\r\n    applyToEntity(entity, initialProps = {}) {\r\n        this.inherit.forEach((parent) => {\r\n            parent.applyToEntity(entity, initialProps);\r\n        });\r\n\r\n        const arrComps = {};\r\n\r\n        this.components.forEach((component, i) => {\r\n            const definition = component.componentDef;\r\n            const accessor = this.ecs.components.getAccessor(definition.type);\r\n\r\n            let initialCompProps = {};\r\n\r\n            if (definition.allowMultiple) {\r\n                if (definition.keyProperty) {\r\n                    const key = component.properties[definition.keyProperty];\r\n\r\n                    if (\r\n                        initialProps[accessor] &&\r\n                        initialProps[accessor][key]\r\n                    ) {\r\n                        initialCompProps =\r\n                            initialProps[accessor][key];\r\n                    }\r\n                } else {\r\n                    if (!arrComps[accessor]) {\r\n                        arrComps[accessor] = 0;\r\n                    }\r\n\r\n                    if (\r\n                        initialProps[accessor] &&\r\n                        initialProps[accessor][\r\n                            arrComps[accessor]\r\n                        ]\r\n                    ) {\r\n                        initialCompProps =\r\n                            initialProps[accessor][\r\n                                arrComps[accessor]\r\n                            ];\r\n                    }\r\n\r\n                    arrComps[accessor]++;\r\n                }\r\n            } else {\r\n                initialCompProps = initialProps[accessor];\r\n            }\r\n\r\n            component.applyToEntity(entity, initialCompProps);\r\n        });\r\n\r\n        return entity;\r\n    }\r\n}\r\n","import Component from '../Component';\nimport PrefabComponent from '../PrefabComponent';\nimport Prefab from '../Prefab';\n\nexport default class PrefabRegistry {\n    #prefabs = {};\n    #ecs = null;\n\n    constructor(ecs) {\n        this.#ecs = ecs;\n    }\n\n    deserialize(data) {\n        const registered = this.get(data.name);\n\n        if (registered) {\n            return registered;\n        }\n\n        const prefab = new Prefab(this.#ecs, data.name);\n\n        let inherit;\n\n        if (Array.isArray(data.inherit)) {\n            inherit = data.inherit;\n        } else if (typeof data.inherit === 'string') {\n            inherit = [data.inherit];\n        } else {\n            inherit = [];\n        }\n\n        prefab.inherit = inherit.map((parent) => {\n            const ref = this.get(parent);\n\n            if (!ref) {\n                console.warn(\n                    `Prefab \"${data.name}\" cannot inherit from Prefab \"${parent}\" because is not registered yet! Prefabs must be registered in the right order.`\n                );\n                return parent;\n            }\n\n            return ref;\n        });\n\n        const comps = data.components || [];\n\n        for (const componentData of comps) {\n            if (\n                typeof componentData === 'string' ||\n                componentData.prototype instanceof Component\n            ) {\n                const def = this.#ecs.components.get(componentData);\n                if (def) {\n                    prefab.addComponent(new PrefabComponent(def));\n                }\n            } else if (typeof componentData === 'object') {\n                const type = componentData.type;\n                const def = this.#ecs.components.get(type);\n                if (def) {\n                    prefab.addComponent(\n                        new PrefabComponent(\n                            def,\n                            componentData.properties,\n                            componentData.overwrite\n                        )\n                    );\n                }\n            } else {\n                console.warn(\n                    `Unrecognized component reference \"${componentData}\" in prefab \"${data.name}\". Ensure the component is registered before the prefab.`\n                );\n            }\n        }\n\n        this.register(prefab);\n\n        return prefab;\n    }\n\n    register(prefab) {\n        this.#prefabs[prefab.name] = prefab;\n    }\n\n    get(nameOrClassOrPrefab) {\n        const name = PrefabRegistry._getName(nameOrClassOrPrefab);\n\n        return this.#prefabs[name];\n    }\n\n    create(nameOrClass, initialProps = {}) {\n        const prefab = this.get(nameOrClass);\n\n        if (!prefab) {\n            console.warn(\n                `Could not instantiate prefab for ${nameOrClass} since it is not registered`\n            );\n\n            return;\n        }\n\n        const entity = this.#ecs.createEntity();\n        prefab.applyToEntity(entity, initialProps);\n\n        return entity;\n    }\n\n    static _getName(nameOrClassOrPrefab) {\n        if (typeof nameOrClassOrPrefab === 'string') {\n            return nameOrClassOrPrefab;\n        }\n\n        if (nameOrClassOrPrefab instanceof Prefab) {\n            return nameOrClassOrPrefab.name;\n        }\n\n        if (nameOrClassOrPrefab.prototype instanceof Prefab) {\n            return nameOrClassOrPrefab.name;\n        }\n\n        return null;\n    }\n}\n","// This alphabet uses `A-Za-z0-9_-` symbols. The genetic algorithm helped\n// optimize the gzip compression for this alphabet.\nlet urlAlphabet =\n  'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW'\n\nlet customAlphabet = (alphabet, size) => {\n  return () => {\n    let id = ''\n    // A compact alternative for `for (var i = 0; i < step; i++)`.\n    let i = size\n    while (i--) {\n      // `| 0` is more compact and faster than `Math.floor()`.\n      id += alphabet[Math.random() * alphabet.length | 0]\n    }\n    return id\n  }\n}\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  let i = size\n  while (i--) {\n    // `| 0` is more compact and faster than `Math.floor()`.\n    id += urlAlphabet[Math.random() * 64 | 0]\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet }\n","export default class EntityEvent {\n    data = {};\n    #prevented = false;\n    #handled = false;\n\n    get prevented() {\n        return this.#prevented;\n    }\n\n    get handled() {\n        return this.#handled;\n    }\n\n    constructor(name, data = {}) {\n        this.name = name;\n        this.data = data;\n    }\n\n    is(name) {\n        return this.name === name;\n    }\n\n    handle() {\n        this.#handled = true;\n        this.#prevented = true;\n    }\n\n    prevent() {\n        this.#prevented = true;\n    }\n}\n","import Component from './Component';\r\nimport EntityEvent from './EntityEvent';\r\n\r\nexport default class Entity {\r\n    #id = null;\r\n    #components = {};\r\n    #ecs = null;\r\n    #isDestroyed = false;\r\n\r\n    get ecs() {\r\n        return this.#ecs;\r\n    }\r\n\r\n    get components() {\r\n        return this.#components;\r\n    }\r\n\r\n    get isDestroyed() {\r\n        return this.#isDestroyed;\r\n    }\r\n\r\n    constructor(ecs, id = null) {\r\n        this.#ecs = ecs;\r\n        this.#id = id || ecs.generateId();\r\n        Object.defineProperty(this, 'id', {\r\n            value: this.#id,\r\n            enumerable: true,\r\n            writable: false,\r\n        });\r\n    }\r\n\r\n    has(typeOrClass, key = null) {\r\n        const type = this.ecs.components._getType(typeOrClass);\r\n        const accessor = this.ecs.components.getAccessor(type);\r\n        const hasType = this.hasOwnProperty(accessor);\r\n\r\n        if (hasType && key) {\r\n            return this[accessor].hasOwnProperty(key);\r\n        }\r\n\r\n        return hasType;\r\n    }\r\n\r\n    get(typeOrClass, key = null) {\r\n        const type = this.ecs.components._getType(typeOrClass);\r\n        const accessor = this.ecs.components.getAccessor(type);\r\n        const components = this[accessor];\r\n\r\n        if (components && key) {\r\n            return components[key];\r\n        }\r\n\r\n        return components;\r\n    }\r\n\r\n    destroy() {\r\n        this.#isDestroyed = true;\r\n\r\n        for (const component of Object.values(this.components)) {\r\n            if (component instanceof Component) {\r\n                component.destroy();\r\n            } else {\r\n                for (const nestedComponent of Object.values(component)) {\r\n                    nestedComponent.destroy();\r\n                }\r\n            }\r\n        }\r\n\r\n        this.ecs.entities.onEntityDestroyed(this);\r\n    }\r\n\r\n    add(typeOrClass, properties = {}) {\r\n        const component = this.ecs.components.create(typeOrClass, properties);\r\n\r\n        if (!component) {\r\n            console.warn(\r\n                `\"${typeOrClass}\" component cannot be added, since it is not registered.`\r\n            );\r\n            return false;\r\n        }\r\n\r\n        return this.attach(component);\r\n    }\r\n\r\n    attach(component) {\r\n        const accessor = this.ecs.components.getAccessor(component.type);\r\n\r\n        if (!component.allowMultiple) {\r\n            if (this.has(component.type)) {\r\n                console.warn(\r\n                    `\"${component.type}\" component has allowMultiple set to ${component.allowMultiple}. Trying to add a \"${component.type}\" component to an entity which already has one.`\r\n                );\r\n                return false;\r\n            }\r\n\r\n            this.components[accessor] = component;\r\n\r\n            Object.defineProperty(this, accessor, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get() {\r\n                    return this.components[accessor];\r\n                },\r\n            });\r\n\r\n            component._onAttached(this);\r\n            this.ecs.queries.onComponentAdded(this);\r\n\r\n            return true;\r\n        }\r\n\r\n        if (!component.keyProperty) {\r\n            if (!this.components[accessor]) {\r\n                this.components[accessor] = [];\r\n                Object.defineProperty(this, accessor, {\r\n                    configurable: true,\r\n                    enumerable: true,\r\n                    get() {\r\n                        return this.components[accessor];\r\n                    },\r\n                });\r\n            }\r\n\r\n            this.components[accessor].push(component);\r\n\r\n            component._onAttached(this);\r\n            this.ecs.queries.onComponentAdded(this);\r\n\r\n            return true;\r\n        }\r\n\r\n        if (!component.key) {\r\n            console.warn(\r\n                `\"${component.type}\" component has a falsy key of \"${component.key}\". The keyProperty is set to \"${component.keyProperty}\".`\r\n            );\r\n            return false;\r\n        }\r\n\r\n        if (!this.components[accessor]) {\r\n            this.components[accessor] = {};\r\n            Object.defineProperty(this, accessor, {\r\n                configurable: true,\r\n                enumerable: true,\r\n                get() {\r\n                    return this.components[accessor];\r\n                },\r\n            });\r\n        }\r\n\r\n        this.components[accessor][component.key] = component;\r\n\r\n        component._onAttached(this);\r\n        this.ecs.queries.onComponentAdded(this, component);\r\n\r\n        return true;\r\n    }\r\n\r\n    owns(component) {\r\n        return component.entity === this;\r\n    }\r\n\r\n    remove(typeOrClassOrComponent, key = null) {\r\n        const isComponent = typeOrClassOrComponent instanceof Component;\r\n        key = isComponent ? typeOrClassOrComponent.key : key;\r\n\r\n        const definition = this.ecs.components.get(typeOrClassOrComponent);\r\n\r\n        const accessor = this.ecs.components.getAccessor(definition.type);\r\n\r\n        if (definition.allowMultiple) {\r\n            if (!definition.keyProperty) {\r\n                if (isComponent) {\r\n                    const all = this.components[accessor];\r\n\r\n                    if (!all) {\r\n                        console.warn(\r\n                            `Trying to remove a \"${definition.type}\" component from an entity, but it wasn't found.`\r\n                        );\r\n                        return;\r\n                    }\r\n\r\n                    const index = all.indexOf(typeOrClassOrComponent);\r\n\r\n                    if (index > -1) {\r\n                        all.splice(index, 1);\r\n                        typeOrClassOrComponent._onDetached();\r\n\r\n                        if (all.length === 0) {\r\n                            delete this[accessor];\r\n                            delete this.components[accessor];\r\n                        }\r\n\r\n                        this.ecs.queries.onComponentRemoved(this);\r\n\r\n                        return true;\r\n                    }\r\n                } else {\r\n                    for (const instance of this.components[accessor]) {\r\n                        instance._onDetached();\r\n                    }\r\n\r\n                    delete this[accessor];\r\n                    delete this.components[accessor];\r\n                    this.ecs.queries.onComponentRemoved(this);\r\n\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            if (!key) {\r\n                console.warn(\r\n                    `Trying to remove a \"${definition.type}\" component which allows multiple without specifying an key.`\r\n                );\r\n                return;\r\n            }\r\n\r\n            const all = this.components[accessor];\r\n            const component = all[key];\r\n\r\n            if (component) {\r\n                delete all[key];\r\n                component._onDetached();\r\n                if (Object.keys(all).length <= 0) {\r\n                    delete this[accessor];\r\n                    delete this.components[accessor];\r\n                }\r\n                this.ecs.queries.onComponentRemoved(this);\r\n\r\n                return component;\r\n            } else {\r\n                console.warn(\r\n                    `Trying to remove a \"${definition.type}\" component from an entity at \"${key}\", but it wasn't found.`\r\n                );\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (accessor in this) {\r\n            const component = this.components[accessor];\r\n\r\n            delete this[accessor];\r\n            delete this.components[accessor];\r\n            component._onDetached();\r\n            this.ecs.queries.onComponentRemoved(this);\r\n\r\n            return component;\r\n        }\r\n\r\n        console.warn(\r\n            `Trying to remove a \"${definition.type}\" component from an entity, but it wasn't found.`\r\n        );\r\n    }\r\n\r\n    serialize() {\r\n        return Object.entries(this.components).reduce(\r\n            (o, [key, value]) => {\r\n                if (value instanceof Component) {\r\n                    return {\r\n                        ...o,\r\n                        [key]: value.serialize(),\r\n                    };\r\n                }\r\n\r\n                if (Array.isArray(value)) {\r\n                    return {\r\n                        ...o,\r\n                        [key]: value.map((v) => v.serialize()),\r\n                    };\r\n                }\r\n\r\n                return {\r\n                    ...o,\r\n                    [key]: Object.entries(value).reduce(\r\n                        (o2, [k2, v2]) => ({\r\n                            ...o2,\r\n                            [k2]: v2.serialize(),\r\n                        }),\r\n                        {}\r\n                    ),\r\n                };\r\n            },\r\n            {\r\n                id: this.id,\r\n            }\r\n        );\r\n    }\r\n\r\n    fireEvent(name, data) {\r\n        const evt = new EntityEvent(name, data);\r\n\r\n        for (const component of Object.values(this.components)) {\r\n            if (component instanceof Component) {\r\n                component._onEvent(evt);\r\n\r\n                if (evt.prevented) {\r\n                    return evt;\r\n                }\r\n            } else {\r\n                for (const nestedComponent of Object.values(component)) {\r\n                    nestedComponent._onEvent(evt);\r\n\r\n                    if (evt.prevented) {\r\n                        return evt;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return evt;\r\n    }\r\n}\r\n","import Entity from '../Entity';\nimport camelcase from 'camelcase';\n\nexport default class EntityRegistry {\n    #entities = new Map();\n    #ecs = null;\n    #refs = new Map();\n\n    constructor(ecs) {\n        this.#ecs = ecs;\n    }\n\n    get all() {\n        return this.#entities.values();\n    }\n\n    register(entity) {\n        this.#entities.set(entity.id, entity);\n\n        return entity;\n    }\n\n    get(id) {\n        return this.#entities.get(id);\n    }\n\n    createOrGetById(id) {\n        const entity = this.get(id);\n\n        if (entity) {\n            return entity;\n        }\n\n        return this.create(id);\n    }\n\n    create(id = undefined) {\n        const entity = new Entity(this.#ecs, id);\n\n        this.register(entity);\n\n        this.#ecs.queries.onEntityCreated(entity);\n\n        return entity;\n    }\n\n    destroy(entity) {\n        entity.destroy();\n    }\n\n    onEntityDestroyed(entity) {\n        this.cleanupRefs(entity);\n        this.#entities.delete(entity.id);\n        this.#ecs.queries.onEntityDestroyed(entity);\n    }\n\n    cleanupRefs(entity) {\n        const refs = this.#refs.get(entity.id);\n\n        if (!refs) {\n            return;\n        }\n\n        for (const ref of refs) {\n            ref.cleanupReference(entity);\n        }\n\n        delete this.#refs[entity.id];\n    }\n\n    addRef(entityId, property) {\n        if (!this.#refs.has(entityId)) {\n            this.#refs.set(entityId, new Set([property]));\n            return;\n        }\n\n        this.#refs.get(entityId).add(property);\n    }\n\n    removeRef(entityId, property) {\n        if (this.#refs.has(entityId)) {\n            this.#refs.get(entityId).delete(property);\n        }\n    }\n\n    serialize() {\n        const json = [];\n\n        this.#entities.forEach((entity) => {\n            json.push(entity.serialize());\n        });\n\n        return json;\n    }\n\n    deserialize(data) {\n        for (const entityData of data.entities) {\n            this.createOrGetById(entityData.id);\n        }\n\n        for (const entityData of data.entities) {\n            this.deserializeEntity(entityData);\n        }\n    }\n\n    deserializeEntity(data) {\n        const { id, ...componentData } = data;\n        const entity = this.createOrGetById(id);\n\n        Object.entries(componentData).forEach(([key, value]) => {\n            const type = camelcase(key, { pascalCase: true });\n            const definition = this.#ecs.components.get(type);\n\n            if (definition.allowMultiple) {\n                Object.values(value).forEach((d) => {\n                    entity.add(definition, d);\n                });\n            } else {\n                entity.add(definition, value);\n            }\n        });\n    }\n}\n","import merge from 'deepmerge';\n\nexport default class Query {\n    #ecs;\n    #filter;\n    #cache = new Set();\n\n    constructor(ecs, filter = {}) {\n        this.#ecs = ecs;\n        this.#filter = merge({ any: [], all: [], none: [] }, filter);\n        this.bustCache();\n    }\n\n    isMatch(entity) {\n        const hasAny = this.#filter.any.length\n            ? this.#filter.any.some((c) => entity.has(c))\n            : true;\n        const hasAll = this.#filter.all.every((c) => entity.has(c));\n        const hasNone = !this.#filter.none.some((c) => entity.has(c));\n\n        return hasAny && hasAll && hasNone;\n    }\n\n    candidate(entity) {\n        if (this.isMatch(entity)) {\n            this.#cache.add(entity);\n            return true;\n        }\n\n        this.#cache.delete(entity);\n        return false;\n    }\n\n    _onEntityCreated(entity) {\n        this.candidate(entity);\n    }\n\n    _onComponentAdded(entity) {\n        this.candidate(entity);\n    }\n\n    _onComponentRemoved(entity) {\n        this.candidate(entity);\n    }\n\n    _onEntityDestroyed(entity) {\n        this.#cache.delete(entity);\n    }\n\n    bustCache() {\n        this.#cache.clear();\n\n        for (const entity of this.#ecs.entities.all) {\n            this.candidate(entity);\n        }\n\n        return this.#cache;\n    }\n\n    get() {\n        return this.#cache;\n    }\n}\n","import Query from '../Query';\n\nexport default class QueryRegistry {\n    #ecs;\n    #queries = [];\n\n    constructor(ecs) {\n        this.#ecs = ecs;\n    }\n\n    create(filters) {\n        const query = new Query(this.#ecs, filters);\n\n        this.#queries.push(query);\n\n        return query;\n    }\n\n    onComponentAdded(entity) {\n        this.#queries.forEach((query) => query._onComponentAdded(entity));\n    }\n\n    onComponentRemoved(entity) {\n        this.#queries.forEach((query) => query._onComponentRemoved(entity));\n    }\n\n    onEntityCreated(entity) {\n        this.#queries.forEach((query) => query._onEntityCreated(entity));\n    }\n\n    onEntityDestroyed(entity) {\n        this.#queries.forEach((query) => query._onEntityDestroyed(entity));\n    }\n}\n","import ComponentRegistry from './registries/ComponentRegistry';\nimport PrefabRegistry from './registries/PrefabRegistry';\nimport { nanoid } from 'nanoid/non-secure';\nimport EntityRegistry from './registries/EntityRegistry';\nimport QueryRegistry from './registries/QueryRegistry';\n\nexport default class Engine {\n    constructor() {\n        this.idGenerator = () => nanoid();\n        this.components = new ComponentRegistry(this);\n        this.prefabs = new PrefabRegistry(this);\n        this.entities = new EntityRegistry(this);\n        this.queries = new QueryRegistry(this);\n    }\n\n    generateId() {\n        return this.idGenerator();\n    }\n\n    createEntity() {\n        return this.entities.create();\n    }\n\n    createPrefab(nameOrClass, initialProps = {}) {\n        return this.prefabs.create(nameOrClass, initialProps);\n    }\n\n    destroyEntity(entity) {\n        return this.entities.destroy(entity);\n    }\n\n    registerPrefab(data) {\n        this.prefabs.deserialize(data);\n    }\n\n    registerComponent(component) {\n        this.components.register(component);\n    }\n\n    getEntity(id) {\n        return this.entities.get(id);\n    }\n\n    createComponent(type, properties) {\n        return this.components.create(type, properties);\n    }\n\n    createQuery(filters) {\n        return this.queries.create(filters);\n    }\n\n    serialize() {\n        return {\n            entities: this.entities.serialize(),\n        };\n    }\n\n    deserialize(data) {\n        if (data.id) {\n            return this.entities.deserializeEntity(data);\n        }\n\n        return this.entities.deserialize(data);\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Actor extends Component {\n    static properties = {\n        energy: 0,\n    };\n\n    get hasEnergy() {\n        return this.energy >= 0;\n    }\n\n    onEnergyConsumed(evt) {\n        this.reduceEnergy(evt.data);\n    }\n\n    onTick(evt) {\n        this.addEnergy(1);\n    }\n\n    addEnergy(value) {\n        this.energy += value;\n\n        if (this.energy >= 0) {\n            this.energy = 0;\n        }\n    }\n\n    reduceEnergy(value) {\n        this.addEnergy(value * -1);\n    }\n}\n","import { Component } from 'geotic';\nimport { SUCCESS, INVALID, FAILURE } from '../../ai/GoalActionResult';\n\nexport class Brain extends Component {\n    static properties = {\n        goals: '<EntityArray>',\n    };\n\n    onTakeAction(evt) {\n        while (this.peekGoal() && this.peekGoal().isFinished()) {\n            this.popGoal().destroy();\n        }\n\n        const currentGoal = this.peekGoal();\n        const result = currentGoal.takeAction();\n\n        if (result == FAILURE) {\n            this.removeGoal(currentGoal);\n        } else if (result == INVALID) {\n            this.removeGoal(currentGoal);\n            this.entity.fireEvent('take-action');\n        }\n\n        evt.handle();\n    }\n\n    removeGoal(goal) {\n        this.goals = this.goals.filter((g) => {\n            const isSelf = Boolean(g.id === goal.id);\n            const isSiblingGoal = Boolean(\n                g.goal.originalIntent &&\n                    g.goal.originalIntent.id === goal.originalIntent.id\n            );\n\n            if (isSelf || isSiblingGoal) {\n                g.destroy();\n\n                return false;\n            }\n\n            return true;\n        });\n    }\n\n    pushGoal(goal) {\n        goal.goal.parent = this.entity;\n        return this.goals.push(goal);\n    }\n\n    popGoal() {\n        return this.goals.pop().goal;\n    }\n\n    peekGoal() {\n        return this.goals[this.goals.length - 1].goal;\n    }\n}\n","export const SUCCESS = 'SUCCESS';\nexport const FAILURE = 'FAILURE';\nexport const INVALID = 'INVALID';\n","import { Component } from 'geotic';\nimport * as GoalEvaluator from '../../ai/GoalEvaluator';\n\nexport class Goal extends Component {\n    static properties = {\n        name: 'Bored',\n        originalIntent: '<Entity>',\n        parent: '<Entity>',\n        target: '<Entity>',\n        complete: false,\n        data: {},\n    };\n\n    isFinished() {\n        return GoalEvaluator.isFinished(this.parent, this);\n    }\n\n    takeAction() {\n        return GoalEvaluator.takeAction(this.parent, this);\n    }\n}\n","import * as GoalTypes from './GoalTypes';\n\nconst goalTypeMap = {};\n\nObject.values(GoalTypes).forEach((goalType) => {\n    goalTypeMap[goalType.name] = goalType;\n});\n\nconst getGoalType = (name) => {\n    const type = goalTypeMap[name];\n\n    if (!type) {\n        console.warn(`GoalType (${name}) not found!`);\n    }\n\n    return type;\n};\n\nexport const isFinished = (entity, goal) => {\n    const type = getGoalType(goal.name);\n\n    return type.isFinished(entity, goal);\n};\n\nexport const takeAction = (entity, goal) => {\n    const type = getGoalType(goal.name);\n\n    return type.takeAction(entity, goal);\n};\n","import { GoalType } from './GoalType';\nimport { SUCCESS } from '../GoalActionResult';\n\nexport class BoredGoalType extends GoalType {\n    static name = 'Bored';\n\n    static isFinished = (entity, goal) => {\n        return false;\n    };\n\n    static takeAction = (entity, goal) => {\n        const evt = entity.fireEvent('boredom');\n\n        if (evt.data.goal) {\n            entity.brain.pushGoal(evt.data.goal);\n            entity.fireEvent('take-action');\n\n            return SUCCESS;\n        }\n\n        entity.fireEvent('consume-energy', 1000);\n\n        return SUCCESS;\n    };\n}\n","import ecs from '../../ecs';\nimport { FAILURE } from '../GoalActionResult';\n\nexport class GoalType {\n    static name = 'Unknown';\n\n    static isFinished(entity, goal) {\n        return false;\n    }\n\n    static takeAction(entity, goal) {\n        return FAILURE;\n    }\n\n    static createAsSubGoal(originalIntent, properties = {}) {\n        return this.create({\n            ...properties,\n            originalIntent: originalIntent.entity.id,\n        });\n    }\n\n    static create(properties = {}) {\n        return ecs.createPrefab('Goal', {\n            goal: {\n                name: this.name,\n                ...properties,\n            },\n        });\n    }\n}\n","import { GoalType } from './GoalType';\nimport { SUCCESS, FAILURE } from '../GoalActionResult';\n\nexport class EatFoodGoalType extends GoalType {\n    static name = 'EatFood';\n\n    static isFinished = (entity, goal) => {\n        return goal.complete;\n    };\n\n    static takeAction = (entity, goal) => {\n        const evt = entity.fireEvent('try-eat-food', {\n            food: 10000,\n        });\n\n        if (evt.handled) {\n            goal.complete = true;\n\n            return SUCCESS;\n        }\n\n        return FAILURE;\n    };\n}\n","import { GoalType } from './GoalType';\nimport { EatFoodGoalType } from './EatFoodGoalType';\nimport { SUCCESS } from '../GoalActionResult';\n\nexport class SatisfyHungerGoalType extends GoalType {\n    static name = 'SatisfyHunger';\n\n    static isFinished = (entity, goal) => {\n        return !entity.eater.isHungry;\n    };\n\n    static takeAction = (entity, goal) => {\n        entity.brain.pushGoal(EatFoodGoalType.createAsSubGoal(goal));\n        entity.brain.pushGoal(EatFoodGoalType.createAsSubGoal(goal));\n\n        entity.fireEvent('take-action');\n\n        return SUCCESS;\n    };\n}\n","import { GoalType } from './GoalType';\nimport { SUCCESS, FAILURE } from '../GoalActionResult';\n\nexport class MoveGoalType extends GoalType {\n    static name = 'Move';\n\n    static isFinished = (entity, goal) => {\n        return goal.complete;\n    };\n\n    static takeAction = (entity, goal) => {\n        const evt = entity.fireEvent('try-move', {\n            x: goal.data.x,\n            y: goal.data.y,\n        });\n\n        if (evt.handled) {\n            goal.complete = true;\n\n            return SUCCESS;\n        }\n\n        return FAILURE;\n    };\n}\n","import { Component } from 'geotic';\nimport { SatisfyHungerGoalType } from '../../ai/GoalTypes';\n\nexport class Eater extends Component {\n    static properties = {\n        hunger: 6000,\n    };\n\n    get isHungry() {\n        return this.hunger <= 3000;\n    }\n\n    onBoredom(evt) {\n        if (this.isHungry) {\n            evt.data.goal = SatisfyHungerGoalType.create();\n            evt.handle();\n        }\n    }\n\n    onTryEatFood(evt) {\n        if (Math.random() < 0.75) {\n            this.entity.fireEvent('log', 'eats some food');\n            this.hunger += evt.data.food;\n            this.entity.fireEvent('energy-consumed', 150);\n\n            evt.handle();\n        } else {\n            this.entity.fireEvent('log', 'fails to eat the food');\n        }\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Moniker extends Component {\n    static properties = {\n        name: 'Unknown',\n    };\n}\n","import { Component } from 'geotic';\nimport { Moniker } from './Moniker';\n\nexport class Logger extends Component {\n    get moniker() {\n        return this.entity.has(Moniker) ? this.entity.moniker.name : 'Unknown';\n    }\n\n    onLog(evt) {\n        console.log(`[${this.moniker}]`, evt.data);\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Position extends Component {\n    static properties = {\n        x: 0,\n        y: 0,\n    };\n}\n","import { Component } from 'geotic';\nimport { MapLayer } from './MapLayer';\n\nexport class Map extends Component {\n    static properties = {\n        name: '',\n        width: 32,\n        height: 32,\n    };\n\n    get map() {\n        return this.mapEntity.map;\n    }\n\n    idx(x, y) {\n        return y * this.width + x;\n    }\n\n    coord(idx) {\n        return idx % this.width, idx / this.width;\n    }\n\n    getLayer(name) {\n        return this.entity.get(MapLayer, name);\n    }\n}\n","import { Component } from 'geotic';\n\nexport class MapLayer extends Component {\n    static properties = {\n        mapEntity: '<Entity>',\n        name: '',\n        content: '<EntityArray>',\n    };\n\n    get map() {\n        return this.mapEntity.map;\n    }\n\n    getByIndex(idx) {\n        return content[idx];\n    }\n\n    get(x, y) {}\n}\n","import { Component } from 'geotic';\n\nexport class Glyph extends Component {\n    static properties = {\n        fg: '#fff',\n        bg: '',\n        char: '',\n    };\n}\n","import { Component } from 'geotic';\nimport { Position } from './Position';\nimport { Actor } from './Actor';\n\nexport class Legs extends Component {\n    onTryMove(evt) {\n        if (!this.entity.has(Position)) {\n            return;\n        }\n\n        if (this.entity.has(Actor) && !this.entity.actor.hasEnergy) {\n            return;\n        }\n\n        this.entity.position.x += evt.data.x;\n        this.entity.position.y += evt.data.y;\n        this.entity.fireEvent('energy-consumed', 750);\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\nimport { Z } from '../../enums/Directions';\n\nexport class MoveCommand extends Component {\n    static properties = {\n        direction: Z,\n    };\n}\n","const directions = [\n    {\n        key: 0,\n        shortName: 'NW',\n        fullName: 'Northwest',\n        delta: {\n            x: -1,\n            y: -1,\n        },\n    },\n    {\n        key: 1,\n        shortName: 'N',\n        fullName: 'North',\n        delta: {\n            x: 0,\n            y: -1,\n        },\n    },\n    {\n        key: 2,\n        shortName: 'NE',\n        fullName: 'Northeast',\n        delta: {\n            x: 1,\n            y: -1,\n        },\n    },\n    {\n        key: 3,\n        shortName: 'W',\n        fullName: 'West',\n        delta: {\n            x: -1,\n            y: 0,\n        },\n    },\n    {\n        key: 4,\n        shortName: 'Z',\n        fullName: 'Here',\n        delta: {\n            x: 0,\n            y: 0,\n        },\n    },\n    {\n        key: 5,\n        shortName: 'E',\n        fullName: 'East',\n        delta: {\n            x: 1,\n            y: 0,\n        },\n    },\n    {\n        key: 6,\n        shortName: 'SW',\n        fullName: 'Southwest',\n        delta: {\n            x: -1,\n            y: 1,\n        },\n    },\n    {\n        key: 7,\n        shortName: 'S',\n        fullName: 'South',\n        delta: {\n            x: 0,\n            y: 1,\n        },\n    },\n    {\n        key: 8,\n        shortName: 'SE',\n        fullName: 'Southeast',\n        delta: {\n            x: 1,\n            y: 1,\n        },\n    },\n];\n\nexport const NW = 0;\nexport const N = 1;\nexport const NE = 2;\nexport const W = 3;\nexport const Z = 4;\nexport const E = 5;\nexport const SW = 6;\nexport const S = 7;\nexport const SE = 8;\n\nexport const shortName = (direction) => directions[direction].shortName;\n\nexport const fullName = (direction) => directions[direction].fullName;\n\nexport const delta = (direction) => directions[direction].delta;\n","import { Component } from 'geotic';\n\nexport class IsPlayer extends Component {}\n","import { Component } from 'geotic';\nimport { MoveGoalType } from '../../ai/GoalTypes';\nimport * as Directions from '../../enums/Directions';\n\nexport class Wandering extends Component {\n    onBoredom(evt) {\n        if (Math.random() < 0.75) {\n            const direction = Math.floor(Math.random() * 9);\n            const delta = Directions.delta(direction);\n\n            evt.data.goal = MoveGoalType.create({\n                data: delta,\n            });\n            evt.handle();\n        }\n    }\n}\n","export default [\n    '', // [0]\n    '', // [1]\n    '', // [2]\n    'cancel', // [3]\n    '', // [4]\n    '', // [5]\n    'help', // [6]\n    '', // [7]\n    'back_space', // [8]\n    'tab', // [9]\n    '', // [10]\n    '', // [11]\n    'clear', // [12]\n    'enter', // [13]\n    'enter_special', // [14]\n    '', // [15]\n    'shift', // [16]\n    'control', // [17]\n    'alt', // [18]\n    'pause', // [19]\n    'caps_lock', // [20]\n    'kana', // [21]\n    'eisu', // [22]\n    'junja', // [23]\n    'final', // [24]\n    'hanja', // [25]\n    '', // [26]\n    'escape', // [27]\n    'convert', // [28]\n    'nonconvert', // [29]\n    'accept', // [30]\n    'modechange', // [31]\n    'space', // [32]\n    'page_up', // [33]\n    'page_down', // [34]\n    'end', // [35]\n    'home', // [36]\n    'left', // [37]\n    'up', // [38]\n    'right', // [39]\n    'down', // [40]\n    'select', // [41]\n    'print', // [42]\n    'execute', // [43]\n    'printscreen', // [44]\n    'insert', // [45]\n    'delete', // [46]\n    '', // [47]\n    '0', // [48]\n    '1', // [49]\n    '2', // [50]\n    '3', // [51]\n    '4', // [52]\n    '5', // [53]\n    '6', // [54]\n    '7', // [55]\n    '8', // [56]\n    '9', // [57]\n    'colon', // [58]\n    'semicolon', // [59]\n    'less_than', // [60]\n    'equals', // [61]\n    'greater_than', // [62]\n    'question_mark', // [63]\n    'at', // [64]\n    'a', // [65]\n    'b', // [66]\n    'c', // [67]\n    'd', // [68]\n    'e', // [69]\n    'f', // [70]\n    'g', // [71]\n    'h', // [72]\n    'i', // [73]\n    'j', // [74]\n    'k', // [75]\n    'l', // [76]\n    'm', // [77]\n    'n', // [78]\n    'o', // [79]\n    'p', // [80]\n    'q', // [81]\n    'r', // [82]\n    's', // [83]\n    't', // [84]\n    'u', // [85]\n    'v', // [86]\n    'w', // [87]\n    'x', // [88]\n    'y', // [89]\n    'z', // [90]\n    'os_key', // [91] windows key (windows) or command key (mac)\n    '', // [92]\n    'context_menu', // [93]\n    '', // [94]\n    'sleep', // [95]\n    'numpad0', // [96]\n    'numpad1', // [97]\n    'numpad2', // [98]\n    'numpad3', // [99]\n    'numpad4', // [100]\n    'numpad5', // [101]\n    'numpad6', // [102]\n    'numpad7', // [103]\n    'numpad8', // [104]\n    'numpad9', // [105]\n    'multiply', // [106]\n    'add', // [107]\n    'separator', // [108]\n    'subtract', // [109]\n    'decimal', // [110]\n    'divide', // [111]\n    'f1', // [112]\n    'f2', // [113]\n    'f3', // [114]\n    'f4', // [115]\n    'f5', // [116]\n    'f6', // [117]\n    'f7', // [118]\n    'f8', // [119]\n    'f9', // [120]\n    'f10', // [121]\n    'f11', // [122]\n    'f12', // [123]\n    'f13', // [124]\n    'f14', // [125]\n    'f15', // [126]\n    'f16', // [127]\n    'f17', // [128]\n    'f18', // [129]\n    'f19', // [130]\n    'f20', // [131]\n    'f21', // [132]\n    'f22', // [133]\n    'f23', // [134]\n    'f24', // [135]\n    '', // [136]\n    '', // [137]\n    '', // [138]\n    '', // [139]\n    '', // [140]\n    '', // [141]\n    '', // [142]\n    '', // [143]\n    'num_lock', // [144]\n    'scroll_lock', // [145]\n    'win_oem_fj_jisho', // [146]\n    'win_oem_fj_masshou', // [147]\n    'win_oem_fj_touroku', // [148]\n    'win_oem_fj_loya', // [149]\n    'win_oem_fj_roya', // [150]\n    '', // [151]\n    '', // [152]\n    '', // [153]\n    '', // [154]\n    '', // [155]\n    '', // [156]\n    '', // [157]\n    '', // [158]\n    '', // [159]\n    'circumflex', // [160]\n    'exclamation', // [161]\n    'double_quote', // [162]\n    'hash', // [163]\n    'dollar', // [164]\n    'percent', // [165]\n    'ampersand', // [166]\n    'underscore', // [167]\n    'open_paren', // [168]\n    'close_paren', // [169]\n    'asterisk', // [170]\n    'plus', // [171]\n    'pipe', // [172]\n    'hyphen_minus', // [173]\n    'open_curly_bracket', // [174]\n    'close_curly_bracket', // [175]\n    'tilde', // [176]\n    '', // [177]\n    '', // [178]\n    '', // [179]\n    '', // [180]\n    'volume_mute', // [181]\n    'volume_down', // [182]\n    'volume_up', // [183]\n    '', // [184]\n    '', // [185]\n    'semicolon', // [186]\n    'equals', // [187]\n    'comma', // [188]\n    'minus', // [189]\n    'period', // [190]\n    'slash', // [191]\n    'back_quote', // [192]\n    '', // [193]\n    '', // [194]\n    '', // [195]\n    '', // [196]\n    '', // [197]\n    '', // [198]\n    '', // [199]\n    '', // [200]\n    '', // [201]\n    '', // [202]\n    '', // [203]\n    '', // [204]\n    '', // [205]\n    '', // [206]\n    '', // [207]\n    '', // [208]\n    '', // [209]\n    '', // [210]\n    '', // [211]\n    '', // [212]\n    '', // [213]\n    '', // [214]\n    '', // [215]\n    '', // [216]\n    '', // [217]\n    '', // [218]\n    'open_bracket', // [219]\n    'back_slash', // [220]\n    'close_bracket', // [221]\n    'quote', // [222]\n    '', // [223]\n    'meta', // [224]\n    'altgr', // [225]\n    '', // [226]\n    'win_ico_help', // [227]\n    'win_ico_00', // [228]\n    '', // [229]\n    'win_ico_clear', // [230]\n    '', // [231]\n    '', // [232]\n    'win_oem_reset', // [233]\n    'win_oem_jump', // [234]\n    'win_oem_pa1', // [235]\n    'win_oem_pa2', // [236]\n    'win_oem_pa3', // [237]\n    'win_oem_wsctrl', // [238]\n    'win_oem_cusel', // [239]\n    'win_oem_attn', // [240]\n    'win_oem_finish', // [241]\n    'win_oem_copy', // [242]\n    'win_oem_auto', // [243]\n    'win_oem_enlw', // [244]\n    'win_oem_backtab', // [245]\n    'attn', // [246]\n    'crsel', // [247]\n    'exsel', // [248]\n    'ereof', // [249]\n    'play', // [250]\n    'zoom', // [251]\n    '', // [252]\n    'pa1', // [253]\n    'win_oem_clear', // [254]\n    '', // [255]\n];\n","import Renderer from './rendering/Renderer';\nimport InputController from './input/InputController';\nimport HungerSystem from '../systems/HungerSystem';\nimport ActionSystem from '../systems/ActionSystem';\nimport RenderSystem from '../systems/RenderSystem';\nimport MovementSystem from '../systems/MovementSystem';\nimport UISystem from '../systems/UISystem';\n\nexport default class Game {\n    constructor() {\n        this.renderer = new Renderer();\n        this.inputController = new InputController(this.renderer);\n        this.hungerSystem = new HungerSystem(this);\n        this.actionSystem = new ActionSystem(this);\n        this.movementSystem = new MovementSystem(this);\n        this.renderSystem = new RenderSystem(this);\n        this.UISystem = new UISystem(this);\n    }\n\n    start() {\n        requestAnimationFrame(this.loop.bind(this));\n    }\n\n    loop(t) {\n        const dt = 0;\n\n        this.hungerSystem.update(dt);\n        this.actionSystem.update(dt);\n        this.movementSystem.update(dt);\n        this.renderSystem.update(dt);\n        this.UISystem.update(dt);\n\n        requestAnimationFrame(this.loop.bind(this));\n    }\n}\n","import { Display as RotDisplay } from 'rot-js';\n\nexport default class Renderer {\n    #rot = null;\n    #container = null;\n\n    width = 64;\n    height = 32;\n\n    constructor() {\n        RotDisplay.Rect.cache = true;\n        this.#rot = new RotDisplay({\n            width: this.width,\n            height: this.height,\n            fontSize: 18,\n            forceSquareRatio: false,\n            bg: '#1c171f',\n        });\n        this.attach();\n    }\n\n    attach() {\n        this.#container = document.body.appendChild(this.#rot.getContainer());\n    }\n\n    draw(x, y, char, fg, bg) {\n        this.#rot.draw(x, y, char, fg, bg);\n    }\n\n    drawText(x, y, string) {\n        this.#rot.drawText(x, y, string);\n    }\n\n    clear() {\n        this.#rot.clear();\n    }\n\n    getDOMContainer() {\n        return this.#container;\n    }\n\n    eventToPosition(e) {\n        return this.#rot.eventToPosition(e);\n    }\n}\n","export { default as RNG } from \"./rng.js\";\nexport { default as Display } from \"./display/display.js\";\nexport { default as StringGenerator } from \"./stringgenerator.js\";\nexport { default as EventQueue } from \"./eventqueue.js\";\nexport { default as Scheduler } from \"./scheduler/index.js\";\nexport { default as FOV } from \"./fov/index.js\";\nexport { default as Map } from \"./map/index.js\";\nexport { default as Noise } from \"./noise/index.js\";\nexport { default as Path } from \"./path/index.js\";\nexport { default as Engine } from \"./engine.js\";\nexport { default as Lighting } from \"./lighting.js\";\nexport { DEFAULT_WIDTH, DEFAULT_HEIGHT, DIRS, KEYS } from \"./constants.js\";\nimport * as util from \"./util.js\";\nexport const Util = util;\nimport * as color from \"./color.js\";\nexport const Color = color;\nimport * as text from \"./text.js\";\nexport const Text = text;\n","/**\n * This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\n * Alea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.\n */\nconst FRAC = 2.3283064365386963e-10; /* 2^-32 */\nclass RNG {\n    constructor() {\n        this._seed = 0;\n        this._s0 = 0;\n        this._s1 = 0;\n        this._s2 = 0;\n        this._c = 0;\n    }\n    getSeed() { return this._seed; }\n    /**\n     * Seed the number generator\n     */\n    setSeed(seed) {\n        seed = (seed < 1 ? 1 / seed : seed);\n        this._seed = seed;\n        this._s0 = (seed >>> 0) * FRAC;\n        seed = (seed * 69069 + 1) >>> 0;\n        this._s1 = seed * FRAC;\n        seed = (seed * 69069 + 1) >>> 0;\n        this._s2 = seed * FRAC;\n        this._c = 1;\n        return this;\n    }\n    /**\n     * @returns Pseudorandom value [0,1), uniformly distributed\n     */\n    getUniform() {\n        let t = 2091639 * this._s0 + this._c * FRAC;\n        this._s0 = this._s1;\n        this._s1 = this._s2;\n        this._c = t | 0;\n        this._s2 = t - this._c;\n        return this._s2;\n    }\n    /**\n     * @param lowerBound The lower end of the range to return a value from, inclusive\n     * @param upperBound The upper end of the range to return a value from, inclusive\n     * @returns Pseudorandom value [lowerBound, upperBound], using ROT.RNG.getUniform() to distribute the value\n     */\n    getUniformInt(lowerBound, upperBound) {\n        let max = Math.max(lowerBound, upperBound);\n        let min = Math.min(lowerBound, upperBound);\n        return Math.floor(this.getUniform() * (max - min + 1)) + min;\n    }\n    /**\n     * @param mean Mean value\n     * @param stddev Standard deviation. ~95% of the absolute values will be lower than 2*stddev.\n     * @returns A normally distributed pseudorandom value\n     */\n    getNormal(mean = 0, stddev = 1) {\n        let u, v, r;\n        do {\n            u = 2 * this.getUniform() - 1;\n            v = 2 * this.getUniform() - 1;\n            r = u * u + v * v;\n        } while (r > 1 || r == 0);\n        let gauss = u * Math.sqrt(-2 * Math.log(r) / r);\n        return mean + gauss * stddev;\n    }\n    /**\n     * @returns Pseudorandom value [1,100] inclusive, uniformly distributed\n     */\n    getPercentage() {\n        return 1 + Math.floor(this.getUniform() * 100);\n    }\n    /**\n     * @returns Randomly picked item, null when length=0\n     */\n    getItem(array) {\n        if (!array.length) {\n            return null;\n        }\n        return array[Math.floor(this.getUniform() * array.length)];\n    }\n    /**\n     * @returns New array with randomized items\n     */\n    shuffle(array) {\n        let result = [];\n        let clone = array.slice();\n        while (clone.length) {\n            let index = clone.indexOf(this.getItem(clone));\n            result.push(clone.splice(index, 1)[0]);\n        }\n        return result;\n    }\n    /**\n     * @param data key=whatever, value=weight (relative probability)\n     * @returns whatever\n     */\n    getWeightedValue(data) {\n        let total = 0;\n        for (let id in data) {\n            total += data[id];\n        }\n        let random = this.getUniform() * total;\n        let id, part = 0;\n        for (id in data) {\n            part += data[id];\n            if (random < part) {\n                return id;\n            }\n        }\n        // If by some floating-point annoyance we have\n        // random >= total, just return the last id.\n        return id;\n    }\n    /**\n     * Get RNG state. Useful for storing the state and re-setting it via setState.\n     * @returns Internal state\n     */\n    getState() { return [this._s0, this._s1, this._s2, this._c]; }\n    /**\n     * Set a previously retrieved state.\n     */\n    setState(state) {\n        this._s0 = state[0];\n        this._s1 = state[1];\n        this._s2 = state[2];\n        this._c = state[3];\n        return this;\n    }\n    /**\n     * Returns a cloned RNG\n     */\n    clone() {\n        let clone = new RNG();\n        return clone.setState(this.getState());\n    }\n}\nexport default new RNG().setSeed(Date.now());\n","import Hex from \"./hex.js\";\nimport Rect from \"./rect.js\";\nimport Tile from \"./tile.js\";\nimport TileGL from \"./tile-gl.js\";\nimport Term from \"./term.js\";\nimport * as Text from \"../text.js\";\nimport { DEFAULT_WIDTH, DEFAULT_HEIGHT } from \"../constants.js\";\nconst BACKENDS = {\n    \"hex\": Hex,\n    \"rect\": Rect,\n    \"tile\": Tile,\n    \"tile-gl\": TileGL,\n    \"term\": Term\n};\nconst DEFAULT_OPTIONS = {\n    width: DEFAULT_WIDTH,\n    height: DEFAULT_HEIGHT,\n    transpose: false,\n    layout: \"rect\",\n    fontSize: 15,\n    spacing: 1,\n    border: 0,\n    forceSquareRatio: false,\n    fontFamily: \"monospace\",\n    fontStyle: \"\",\n    fg: \"#ccc\",\n    bg: \"#000\",\n    tileWidth: 32,\n    tileHeight: 32,\n    tileMap: {},\n    tileSet: null,\n    tileColorize: false\n};\n/**\n * @class Visual map display\n */\nlet Display = /** @class */ (() => {\n    class Display {\n        constructor(options = {}) {\n            this._data = {};\n            this._dirty = false; // false = nothing, true = all, object = dirty cells\n            this._options = {};\n            options = Object.assign({}, DEFAULT_OPTIONS, options);\n            this.setOptions(options);\n            this.DEBUG = this.DEBUG.bind(this);\n            this._tick = this._tick.bind(this);\n            this._backend.schedule(this._tick);\n        }\n        /**\n         * Debug helper, ideal as a map generator callback. Always bound to this.\n         * @param {int} x\n         * @param {int} y\n         * @param {int} what\n         */\n        DEBUG(x, y, what) {\n            let colors = [this._options.bg, this._options.fg];\n            this.draw(x, y, null, null, colors[what % colors.length]);\n        }\n        /**\n         * Clear the whole display (cover it with background color)\n         */\n        clear() {\n            this._data = {};\n            this._dirty = true;\n        }\n        /**\n         * @see ROT.Display\n         */\n        setOptions(options) {\n            Object.assign(this._options, options);\n            if (options.width || options.height || options.fontSize || options.fontFamily || options.spacing || options.layout) {\n                if (options.layout) {\n                    let ctor = BACKENDS[options.layout];\n                    this._backend = new ctor();\n                }\n                this._backend.setOptions(this._options);\n                this._dirty = true;\n            }\n            return this;\n        }\n        /**\n         * Returns currently set options\n         */\n        getOptions() { return this._options; }\n        /**\n         * Returns the DOM node of this display\n         */\n        getContainer() { return this._backend.getContainer(); }\n        /**\n         * Compute the maximum width/height to fit into a set of given constraints\n         * @param {int} availWidth Maximum allowed pixel width\n         * @param {int} availHeight Maximum allowed pixel height\n         * @returns {int[2]} cellWidth,cellHeight\n         */\n        computeSize(availWidth, availHeight) {\n            return this._backend.computeSize(availWidth, availHeight);\n        }\n        /**\n         * Compute the maximum font size to fit into a set of given constraints\n         * @param {int} availWidth Maximum allowed pixel width\n         * @param {int} availHeight Maximum allowed pixel height\n         * @returns {int} fontSize\n         */\n        computeFontSize(availWidth, availHeight) {\n            return this._backend.computeFontSize(availWidth, availHeight);\n        }\n        computeTileSize(availWidth, availHeight) {\n            let width = Math.floor(availWidth / this._options.width);\n            let height = Math.floor(availHeight / this._options.height);\n            return [width, height];\n        }\n        /**\n         * Convert a DOM event (mouse or touch) to map coordinates. Uses first touch for multi-touch.\n         * @param {Event} e event\n         * @returns {int[2]} -1 for values outside of the canvas\n         */\n        eventToPosition(e) {\n            let x, y;\n            if (\"touches\" in e) {\n                x = e.touches[0].clientX;\n                y = e.touches[0].clientY;\n            }\n            else {\n                x = e.clientX;\n                y = e.clientY;\n            }\n            return this._backend.eventToPosition(x, y);\n        }\n        /**\n         * @param {int} x\n         * @param {int} y\n         * @param {string || string[]} ch One or more chars (will be overlapping themselves)\n         * @param {string} [fg] foreground color\n         * @param {string} [bg] background color\n         */\n        draw(x, y, ch, fg, bg) {\n            if (!fg) {\n                fg = this._options.fg;\n            }\n            if (!bg) {\n                bg = this._options.bg;\n            }\n            let key = `${x},${y}`;\n            this._data[key] = [x, y, ch, fg, bg];\n            if (this._dirty === true) {\n                return;\n            } // will already redraw everything \n            if (!this._dirty) {\n                this._dirty = {};\n            } // first!\n            this._dirty[key] = true;\n        }\n        /**\n         * Draws a text at given position. Optionally wraps at a maximum length. Currently does not work with hex layout.\n         * @param {int} x\n         * @param {int} y\n         * @param {string} text May contain color/background format specifiers, %c{name}/%b{name}, both optional. %c{}/%b{} resets to default.\n         * @param {int} [maxWidth] wrap at what width?\n         * @returns {int} lines drawn\n         */\n        drawText(x, y, text, maxWidth) {\n            let fg = null;\n            let bg = null;\n            let cx = x;\n            let cy = y;\n            let lines = 1;\n            if (!maxWidth) {\n                maxWidth = this._options.width - x;\n            }\n            let tokens = Text.tokenize(text, maxWidth);\n            while (tokens.length) { // interpret tokenized opcode stream\n                let token = tokens.shift();\n                switch (token.type) {\n                    case Text.TYPE_TEXT:\n                        let isSpace = false, isPrevSpace = false, isFullWidth = false, isPrevFullWidth = false;\n                        for (let i = 0; i < token.value.length; i++) {\n                            let cc = token.value.charCodeAt(i);\n                            let c = token.value.charAt(i);\n                            if (this._options.layout === \"term\") {\n                                let cch = cc >> 8;\n                                let isCJK = cch === 0x11 || (cch >= 0x2e && cch <= 0x9f) || (cch >= 0xac && cch <= 0xd7) || (cc >= 0xA960 && cc <= 0xA97F);\n                                if (isCJK) {\n                                    this.draw(cx + 0, cy, c, fg, bg);\n                                    this.draw(cx + 1, cy, \"\\t\", fg, bg);\n                                    cx += 2;\n                                    continue;\n                                }\n                            }\n                            // Assign to `true` when the current char is full-width.\n                            isFullWidth = (cc > 0xff00 && cc < 0xff61) || (cc > 0xffdc && cc < 0xffe8) || cc > 0xffee;\n                            // Current char is space, whatever full-width or half-width both are OK.\n                            isSpace = (c.charCodeAt(0) == 0x20 || c.charCodeAt(0) == 0x3000);\n                            // The previous char is full-width and\n                            // current char is nether half-width nor a space.\n                            if (isPrevFullWidth && !isFullWidth && !isSpace) {\n                                cx++;\n                            } // add an extra position\n                            // The current char is full-width and\n                            // the previous char is not a space.\n                            if (isFullWidth && !isPrevSpace) {\n                                cx++;\n                            } // add an extra position\n                            this.draw(cx++, cy, c, fg, bg);\n                            isPrevSpace = isSpace;\n                            isPrevFullWidth = isFullWidth;\n                        }\n                        break;\n                    case Text.TYPE_FG:\n                        fg = token.value || null;\n                        break;\n                    case Text.TYPE_BG:\n                        bg = token.value || null;\n                        break;\n                    case Text.TYPE_NEWLINE:\n                        cx = x;\n                        cy++;\n                        lines++;\n                        break;\n                }\n            }\n            return lines;\n        }\n        /**\n         * Timer tick: update dirty parts\n         */\n        _tick() {\n            this._backend.schedule(this._tick);\n            if (!this._dirty) {\n                return;\n            }\n            if (this._dirty === true) { // draw all\n                this._backend.clear();\n                for (let id in this._data) {\n                    this._draw(id, false);\n                } // redraw cached data \n            }\n            else { // draw only dirty \n                for (let key in this._dirty) {\n                    this._draw(key, true);\n                }\n            }\n            this._dirty = false;\n        }\n        /**\n         * @param {string} key What to draw\n         * @param {bool} clearBefore Is it necessary to clean before?\n         */\n        _draw(key, clearBefore) {\n            let data = this._data[key];\n            if (data[4] != this._options.bg) {\n                clearBefore = true;\n            }\n            this._backend.draw(data, clearBefore);\n        }\n    }\n    Display.Rect = Rect;\n    Display.Hex = Hex;\n    Display.Tile = Tile;\n    Display.TileGL = TileGL;\n    Display.Term = Term;\n    return Display;\n})();\nexport default Display;\n","import Canvas from \"./canvas.js\";\nimport { mod } from \"../util.js\";\n/**\n * @class Hexagonal backend\n * @private\n */\nexport default class Hex extends Canvas {\n    constructor() {\n        super();\n        this._spacingX = 0;\n        this._spacingY = 0;\n        this._hexSize = 0;\n    }\n    draw(data, clearBefore) {\n        let [x, y, ch, fg, bg] = data;\n        let px = [\n            (x + 1) * this._spacingX,\n            y * this._spacingY + this._hexSize\n        ];\n        if (this._options.transpose) {\n            px.reverse();\n        }\n        if (clearBefore) {\n            this._ctx.fillStyle = bg;\n            this._fill(px[0], px[1]);\n        }\n        if (!ch) {\n            return;\n        }\n        this._ctx.fillStyle = fg;\n        let chars = [].concat(ch);\n        for (let i = 0; i < chars.length; i++) {\n            this._ctx.fillText(chars[i], px[0], Math.ceil(px[1]));\n        }\n    }\n    computeSize(availWidth, availHeight) {\n        if (this._options.transpose) {\n            availWidth += availHeight;\n            availHeight = availWidth - availHeight;\n            availWidth -= availHeight;\n        }\n        let width = Math.floor(availWidth / this._spacingX) - 1;\n        let height = Math.floor((availHeight - 2 * this._hexSize) / this._spacingY + 1);\n        return [width, height];\n    }\n    computeFontSize(availWidth, availHeight) {\n        if (this._options.transpose) {\n            availWidth += availHeight;\n            availHeight = availWidth - availHeight;\n            availWidth -= availHeight;\n        }\n        let hexSizeWidth = 2 * availWidth / ((this._options.width + 1) * Math.sqrt(3)) - 1;\n        let hexSizeHeight = availHeight / (2 + 1.5 * (this._options.height - 1));\n        let hexSize = Math.min(hexSizeWidth, hexSizeHeight);\n        // compute char ratio\n        let oldFont = this._ctx.font;\n        this._ctx.font = \"100px \" + this._options.fontFamily;\n        let width = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._ctx.font = oldFont;\n        let ratio = width / 100;\n        hexSize = Math.floor(hexSize) + 1; // closest larger hexSize\n        // FIXME char size computation does not respect transposed hexes\n        let fontSize = 2 * hexSize / (this._options.spacing * (1 + ratio / Math.sqrt(3)));\n        // closest smaller fontSize\n        return Math.ceil(fontSize) - 1;\n    }\n    _normalizedEventToPosition(x, y) {\n        let nodeSize;\n        if (this._options.transpose) {\n            x += y;\n            y = x - y;\n            x -= y;\n            nodeSize = this._ctx.canvas.width;\n        }\n        else {\n            nodeSize = this._ctx.canvas.height;\n        }\n        let size = nodeSize / this._options.height;\n        y = Math.floor(y / size);\n        if (mod(y, 2)) { /* odd row */\n            x -= this._spacingX;\n            x = 1 + 2 * Math.floor(x / (2 * this._spacingX));\n        }\n        else {\n            x = 2 * Math.floor(x / (2 * this._spacingX));\n        }\n        return [x, y];\n    }\n    /**\n     * Arguments are pixel values. If \"transposed\" mode is enabled, then these two are already swapped.\n     */\n    _fill(cx, cy) {\n        let a = this._hexSize;\n        let b = this._options.border;\n        const ctx = this._ctx;\n        ctx.beginPath();\n        if (this._options.transpose) {\n            ctx.moveTo(cx - a + b, cy);\n            ctx.lineTo(cx - a / 2 + b, cy + this._spacingX - b);\n            ctx.lineTo(cx + a / 2 - b, cy + this._spacingX - b);\n            ctx.lineTo(cx + a - b, cy);\n            ctx.lineTo(cx + a / 2 - b, cy - this._spacingX + b);\n            ctx.lineTo(cx - a / 2 + b, cy - this._spacingX + b);\n            ctx.lineTo(cx - a + b, cy);\n        }\n        else {\n            ctx.moveTo(cx, cy - a + b);\n            ctx.lineTo(cx + this._spacingX - b, cy - a / 2 + b);\n            ctx.lineTo(cx + this._spacingX - b, cy + a / 2 - b);\n            ctx.lineTo(cx, cy + a - b);\n            ctx.lineTo(cx - this._spacingX + b, cy + a / 2 - b);\n            ctx.lineTo(cx - this._spacingX + b, cy - a / 2 + b);\n            ctx.lineTo(cx, cy - a + b);\n        }\n        ctx.fill();\n    }\n    _updateSize() {\n        const opts = this._options;\n        const charWidth = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._hexSize = Math.floor(opts.spacing * (opts.fontSize + charWidth / Math.sqrt(3)) / 2);\n        this._spacingX = this._hexSize * Math.sqrt(3) / 2;\n        this._spacingY = this._hexSize * 1.5;\n        let xprop;\n        let yprop;\n        if (opts.transpose) {\n            xprop = \"height\";\n            yprop = \"width\";\n        }\n        else {\n            xprop = \"width\";\n            yprop = \"height\";\n        }\n        this._ctx.canvas[xprop] = Math.ceil((opts.width + 1) * this._spacingX);\n        this._ctx.canvas[yprop] = Math.ceil((opts.height - 1) * this._spacingY + 2 * this._hexSize);\n    }\n}\n","import Backend from \"./backend.js\";\nexport default class Canvas extends Backend {\n    constructor() {\n        super();\n        this._ctx = document.createElement(\"canvas\").getContext(\"2d\");\n    }\n    schedule(cb) { requestAnimationFrame(cb); }\n    getContainer() { return this._ctx.canvas; }\n    setOptions(opts) {\n        super.setOptions(opts);\n        const style = (opts.fontStyle ? `${opts.fontStyle} ` : ``);\n        const font = `${style} ${opts.fontSize}px ${opts.fontFamily}`;\n        this._ctx.font = font;\n        this._updateSize();\n        this._ctx.font = font;\n        this._ctx.textAlign = \"center\";\n        this._ctx.textBaseline = \"middle\";\n    }\n    clear() {\n        this._ctx.fillStyle = this._options.bg;\n        this._ctx.fillRect(0, 0, this._ctx.canvas.width, this._ctx.canvas.height);\n    }\n    eventToPosition(x, y) {\n        let canvas = this._ctx.canvas;\n        let rect = canvas.getBoundingClientRect();\n        x -= rect.left;\n        y -= rect.top;\n        x *= canvas.width / rect.width;\n        y *= canvas.height / rect.height;\n        if (x < 0 || y < 0 || x >= canvas.width || y >= canvas.height) {\n            return [-1, -1];\n        }\n        return this._normalizedEventToPosition(x, y);\n    }\n}\n","/**\n * @class Abstract display backend module\n * @private\n */\nexport default class Backend {\n    getContainer() { return null; }\n    setOptions(options) { this._options = options; }\n}\n","/**\n * Always positive modulus\n * @param x Operand\n * @param n Modulus\n * @returns x modulo n\n */\nexport function mod(x, n) {\n    return (x % n + n) % n;\n}\nexport function clamp(val, min = 0, max = 1) {\n    if (val < min)\n        return min;\n    if (val > max)\n        return max;\n    return val;\n}\nexport function capitalize(string) {\n    return string.charAt(0).toUpperCase() + string.substring(1);\n}\n/**\n * Format a string in a flexible way. Scans for %s strings and replaces them with arguments. List of patterns is modifiable via String.format.map.\n * @param {string} template\n * @param {any} [argv]\n */\nexport function format(template, ...args) {\n    let map = format.map;\n    let replacer = function (match, group1, group2, index) {\n        if (template.charAt(index - 1) == \"%\") {\n            return match.substring(1);\n        }\n        if (!args.length) {\n            return match;\n        }\n        let obj = args[0];\n        let group = group1 || group2;\n        let parts = group.split(\",\");\n        let name = parts.shift() || \"\";\n        let method = map[name.toLowerCase()];\n        if (!method) {\n            return match;\n        }\n        obj = args.shift();\n        let replaced = obj[method].apply(obj, parts);\n        let first = name.charAt(0);\n        if (first != first.toLowerCase()) {\n            replaced = capitalize(replaced);\n        }\n        return replaced;\n    };\n    return template.replace(/%(?:([a-z]+)|(?:{([^}]+)}))/gi, replacer);\n}\nformat.map = {\n    \"s\": \"toString\"\n};\n","import Canvas from \"./canvas.js\";\n/**\n * @class Rectangular backend\n * @private\n */\nlet Rect = /** @class */ (() => {\n    class Rect extends Canvas {\n        constructor() {\n            super();\n            this._spacingX = 0;\n            this._spacingY = 0;\n            this._canvasCache = {};\n        }\n        setOptions(options) {\n            super.setOptions(options);\n            this._canvasCache = {};\n        }\n        draw(data, clearBefore) {\n            if (Rect.cache) {\n                this._drawWithCache(data);\n            }\n            else {\n                this._drawNoCache(data, clearBefore);\n            }\n        }\n        _drawWithCache(data) {\n            let [x, y, ch, fg, bg] = data;\n            let hash = \"\" + ch + fg + bg;\n            let canvas;\n            if (hash in this._canvasCache) {\n                canvas = this._canvasCache[hash];\n            }\n            else {\n                let b = this._options.border;\n                canvas = document.createElement(\"canvas\");\n                let ctx = canvas.getContext(\"2d\");\n                canvas.width = this._spacingX;\n                canvas.height = this._spacingY;\n                ctx.fillStyle = bg;\n                ctx.fillRect(b, b, canvas.width - b, canvas.height - b);\n                if (ch) {\n                    ctx.fillStyle = fg;\n                    ctx.font = this._ctx.font;\n                    ctx.textAlign = \"center\";\n                    ctx.textBaseline = \"middle\";\n                    let chars = [].concat(ch);\n                    for (let i = 0; i < chars.length; i++) {\n                        ctx.fillText(chars[i], this._spacingX / 2, Math.ceil(this._spacingY / 2));\n                    }\n                }\n                this._canvasCache[hash] = canvas;\n            }\n            this._ctx.drawImage(canvas, x * this._spacingX, y * this._spacingY);\n        }\n        _drawNoCache(data, clearBefore) {\n            let [x, y, ch, fg, bg] = data;\n            if (clearBefore) {\n                let b = this._options.border;\n                this._ctx.fillStyle = bg;\n                this._ctx.fillRect(x * this._spacingX + b, y * this._spacingY + b, this._spacingX - b, this._spacingY - b);\n            }\n            if (!ch) {\n                return;\n            }\n            this._ctx.fillStyle = fg;\n            let chars = [].concat(ch);\n            for (let i = 0; i < chars.length; i++) {\n                this._ctx.fillText(chars[i], (x + 0.5) * this._spacingX, Math.ceil((y + 0.5) * this._spacingY));\n            }\n        }\n        computeSize(availWidth, availHeight) {\n            let width = Math.floor(availWidth / this._spacingX);\n            let height = Math.floor(availHeight / this._spacingY);\n            return [width, height];\n        }\n        computeFontSize(availWidth, availHeight) {\n            let boxWidth = Math.floor(availWidth / this._options.width);\n            let boxHeight = Math.floor(availHeight / this._options.height);\n            /* compute char ratio */\n            let oldFont = this._ctx.font;\n            this._ctx.font = \"100px \" + this._options.fontFamily;\n            let width = Math.ceil(this._ctx.measureText(\"W\").width);\n            this._ctx.font = oldFont;\n            let ratio = width / 100;\n            let widthFraction = ratio * boxHeight / boxWidth;\n            if (widthFraction > 1) { /* too wide with current aspect ratio */\n                boxHeight = Math.floor(boxHeight / widthFraction);\n            }\n            return Math.floor(boxHeight / this._options.spacing);\n        }\n        _normalizedEventToPosition(x, y) {\n            return [Math.floor(x / this._spacingX), Math.floor(y / this._spacingY)];\n        }\n        _updateSize() {\n            const opts = this._options;\n            const charWidth = Math.ceil(this._ctx.measureText(\"W\").width);\n            this._spacingX = Math.ceil(opts.spacing * charWidth);\n            this._spacingY = Math.ceil(opts.spacing * opts.fontSize);\n            if (opts.forceSquareRatio) {\n                this._spacingX = this._spacingY = Math.max(this._spacingX, this._spacingY);\n            }\n            this._ctx.canvas.width = opts.width * this._spacingX;\n            this._ctx.canvas.height = opts.height * this._spacingY;\n        }\n    }\n    Rect.cache = false;\n    return Rect;\n})();\nexport default Rect;\n","import Canvas from \"./canvas.js\";\n/**\n * @class Tile backend\n * @private\n */\nexport default class Tile extends Canvas {\n    constructor() {\n        super();\n        this._colorCanvas = document.createElement(\"canvas\");\n    }\n    draw(data, clearBefore) {\n        let [x, y, ch, fg, bg] = data;\n        let tileWidth = this._options.tileWidth;\n        let tileHeight = this._options.tileHeight;\n        if (clearBefore) {\n            if (this._options.tileColorize) {\n                this._ctx.clearRect(x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n            else {\n                this._ctx.fillStyle = bg;\n                this._ctx.fillRect(x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n        }\n        if (!ch) {\n            return;\n        }\n        let chars = [].concat(ch);\n        let fgs = [].concat(fg);\n        let bgs = [].concat(bg);\n        for (let i = 0; i < chars.length; i++) {\n            let tile = this._options.tileMap[chars[i]];\n            if (!tile) {\n                throw new Error(`Char \"${chars[i]}\" not found in tileMap`);\n            }\n            if (this._options.tileColorize) { // apply colorization\n                let canvas = this._colorCanvas;\n                let context = canvas.getContext(\"2d\");\n                context.globalCompositeOperation = \"source-over\";\n                context.clearRect(0, 0, tileWidth, tileHeight);\n                let fg = fgs[i];\n                let bg = bgs[i];\n                context.drawImage(this._options.tileSet, tile[0], tile[1], tileWidth, tileHeight, 0, 0, tileWidth, tileHeight);\n                if (fg != \"transparent\") {\n                    context.fillStyle = fg;\n                    context.globalCompositeOperation = \"source-atop\";\n                    context.fillRect(0, 0, tileWidth, tileHeight);\n                }\n                if (bg != \"transparent\") {\n                    context.fillStyle = bg;\n                    context.globalCompositeOperation = \"destination-over\";\n                    context.fillRect(0, 0, tileWidth, tileHeight);\n                }\n                this._ctx.drawImage(canvas, x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n            else { // no colorizing, easy\n                this._ctx.drawImage(this._options.tileSet, tile[0], tile[1], tileWidth, tileHeight, x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n        }\n    }\n    computeSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._options.tileWidth);\n        let height = Math.floor(availHeight / this._options.tileHeight);\n        return [width, height];\n    }\n    computeFontSize() {\n        throw new Error(\"Tile backend does not understand font size\");\n    }\n    _normalizedEventToPosition(x, y) {\n        return [Math.floor(x / this._options.tileWidth), Math.floor(y / this._options.tileHeight)];\n    }\n    _updateSize() {\n        const opts = this._options;\n        this._ctx.canvas.width = opts.width * opts.tileWidth;\n        this._ctx.canvas.height = opts.height * opts.tileHeight;\n        this._colorCanvas.width = opts.tileWidth;\n        this._colorCanvas.height = opts.tileHeight;\n    }\n}\n","import Backend from \"./backend.js\";\nimport * as Color from \"../color.js\";\n/**\n * @class Tile backend\n * @private\n */\nexport default class TileGL extends Backend {\n    constructor() {\n        super();\n        this._uniforms = {};\n        try {\n            this._gl = this._initWebGL();\n        }\n        catch (e) {\n            alert(e.message);\n        }\n    }\n    static isSupported() {\n        return !!document.createElement(\"canvas\").getContext(\"webgl2\", { preserveDrawingBuffer: true });\n    }\n    schedule(cb) { requestAnimationFrame(cb); }\n    getContainer() { return this._gl.canvas; }\n    setOptions(opts) {\n        super.setOptions(opts);\n        this._updateSize();\n        let tileSet = this._options.tileSet;\n        if (tileSet && \"complete\" in tileSet && !tileSet.complete) {\n            tileSet.addEventListener(\"load\", () => this._updateTexture(tileSet));\n        }\n        else {\n            this._updateTexture(tileSet);\n        }\n    }\n    draw(data, clearBefore) {\n        const gl = this._gl;\n        const opts = this._options;\n        let [x, y, ch, fg, bg] = data;\n        let scissorY = gl.canvas.height - (y + 1) * opts.tileHeight;\n        gl.scissor(x * opts.tileWidth, scissorY, opts.tileWidth, opts.tileHeight);\n        if (clearBefore) {\n            if (opts.tileColorize) {\n                gl.clearColor(0, 0, 0, 0);\n            }\n            else {\n                gl.clearColor(...parseColor(bg));\n            }\n            gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n        if (!ch) {\n            return;\n        }\n        let chars = [].concat(ch);\n        let bgs = [].concat(bg);\n        let fgs = [].concat(fg);\n        gl.uniform2fv(this._uniforms[\"targetPosRel\"], [x, y]);\n        for (let i = 0; i < chars.length; i++) {\n            let tile = this._options.tileMap[chars[i]];\n            if (!tile) {\n                throw new Error(`Char \"${chars[i]}\" not found in tileMap`);\n            }\n            gl.uniform1f(this._uniforms[\"colorize\"], opts.tileColorize ? 1 : 0);\n            gl.uniform2fv(this._uniforms[\"tilesetPosAbs\"], tile);\n            if (opts.tileColorize) {\n                gl.uniform4fv(this._uniforms[\"tint\"], parseColor(fgs[i]));\n                gl.uniform4fv(this._uniforms[\"bg\"], parseColor(bgs[i]));\n            }\n            gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n        }\n        /*\n        \n        \n                for (let i=0;i<chars.length;i++) {\n        \n                    if (this._options.tileColorize) { // apply colorization\n                        let canvas = this._colorCanvas;\n                        let context = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n                        context.globalCompositeOperation = \"source-over\";\n                        context.clearRect(0, 0, tileWidth, tileHeight);\n        \n                        let fg = fgs[i];\n                        let bg = bgs[i];\n        \n                        context.drawImage(\n                            this._options.tileSet!,\n                            tile[0], tile[1], tileWidth, tileHeight,\n                            0, 0, tileWidth, tileHeight\n                        );\n        \n                        if (fg != \"transparent\") {\n                            context.fillStyle = fg;\n                            context.globalCompositeOperation = \"source-atop\";\n                            context.fillRect(0, 0, tileWidth, tileHeight);\n                        }\n        \n                        if (bg != \"transparent\") {\n                            context.fillStyle = bg;\n                            context.globalCompositeOperation = \"destination-over\";\n                            context.fillRect(0, 0, tileWidth, tileHeight);\n                        }\n        \n                        this._ctx.drawImage(canvas, x*tileWidth, y*tileHeight, tileWidth, tileHeight);\n                    } else { // no colorizing, easy\n                        this._ctx.drawImage(\n                            this._options.tileSet!,\n                            tile[0], tile[1], tileWidth, tileHeight,\n                            x*tileWidth, y*tileHeight, tileWidth, tileHeight\n                        );\n                    }\n                }\n        \n        */\n    }\n    clear() {\n        const gl = this._gl;\n        gl.clearColor(...parseColor(this._options.bg));\n        gl.scissor(0, 0, gl.canvas.width, gl.canvas.height);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n    }\n    computeSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._options.tileWidth);\n        let height = Math.floor(availHeight / this._options.tileHeight);\n        return [width, height];\n    }\n    computeFontSize() {\n        throw new Error(\"Tile backend does not understand font size\");\n    }\n    eventToPosition(x, y) {\n        let canvas = this._gl.canvas;\n        let rect = canvas.getBoundingClientRect();\n        x -= rect.left;\n        y -= rect.top;\n        x *= canvas.width / rect.width;\n        y *= canvas.height / rect.height;\n        if (x < 0 || y < 0 || x >= canvas.width || y >= canvas.height) {\n            return [-1, -1];\n        }\n        return this._normalizedEventToPosition(x, y);\n    }\n    _initWebGL() {\n        let gl = document.createElement(\"canvas\").getContext(\"webgl2\", { preserveDrawingBuffer: true });\n        window.gl = gl;\n        let program = createProgram(gl, VS, FS);\n        gl.useProgram(program);\n        createQuad(gl);\n        UNIFORMS.forEach(name => this._uniforms[name] = gl.getUniformLocation(program, name));\n        this._program = program;\n        gl.enable(gl.BLEND);\n        gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.enable(gl.SCISSOR_TEST);\n        return gl;\n    }\n    _normalizedEventToPosition(x, y) {\n        return [Math.floor(x / this._options.tileWidth), Math.floor(y / this._options.tileHeight)];\n    }\n    _updateSize() {\n        const gl = this._gl;\n        const opts = this._options;\n        const canvasSize = [opts.width * opts.tileWidth, opts.height * opts.tileHeight];\n        gl.canvas.width = canvasSize[0];\n        gl.canvas.height = canvasSize[1];\n        gl.viewport(0, 0, canvasSize[0], canvasSize[1]);\n        gl.uniform2fv(this._uniforms[\"tileSize\"], [opts.tileWidth, opts.tileHeight]);\n        gl.uniform2fv(this._uniforms[\"targetSize\"], canvasSize);\n    }\n    _updateTexture(tileSet) {\n        createTexture(this._gl, tileSet);\n    }\n}\nconst UNIFORMS = [\"targetPosRel\", \"tilesetPosAbs\", \"tileSize\", \"targetSize\", \"colorize\", \"bg\", \"tint\"];\nconst VS = `\n#version 300 es\n\nin vec2 tilePosRel;\nout vec2 tilesetPosPx;\n\nuniform vec2 tilesetPosAbs;\nuniform vec2 tileSize;\nuniform vec2 targetSize;\nuniform vec2 targetPosRel;\n\nvoid main() {\n\tvec2 targetPosPx = (targetPosRel + tilePosRel) * tileSize;\n\tvec2 targetPosNdc = ((targetPosPx / targetSize)-0.5)*2.0;\n\ttargetPosNdc.y *= -1.0;\n\n\tgl_Position = vec4(targetPosNdc, 0.0, 1.0);\n\ttilesetPosPx = tilesetPosAbs + tilePosRel * tileSize;\n}`.trim();\nconst FS = `\n#version 300 es\nprecision highp float;\n\nin vec2 tilesetPosPx;\nout vec4 fragColor;\nuniform sampler2D image;\nuniform bool colorize;\nuniform vec4 bg;\nuniform vec4 tint;\n\nvoid main() {\n\tfragColor = vec4(0, 0, 0, 1);\n\n\tvec4 texel = texelFetch(image, ivec2(tilesetPosPx), 0);\n\n\tif (colorize) {\n\t\ttexel.rgb = tint.a * tint.rgb + (1.0-tint.a) * texel.rgb;\n\t\tfragColor.rgb = texel.a*texel.rgb + (1.0-texel.a)*bg.rgb;\n\t\tfragColor.a = texel.a + (1.0-texel.a)*bg.a;\n\t} else {\n\t\tfragColor = texel;\n\t}\n}`.trim();\nfunction createProgram(gl, vss, fss) {\n    const vs = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vs, vss);\n    gl.compileShader(vs);\n    if (!gl.getShaderParameter(vs, gl.COMPILE_STATUS)) {\n        throw new Error(gl.getShaderInfoLog(vs) || \"\");\n    }\n    const fs = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fs, fss);\n    gl.compileShader(fs);\n    if (!gl.getShaderParameter(fs, gl.COMPILE_STATUS)) {\n        throw new Error(gl.getShaderInfoLog(fs) || \"\");\n    }\n    const p = gl.createProgram();\n    gl.attachShader(p, vs);\n    gl.attachShader(p, fs);\n    gl.linkProgram(p);\n    if (!gl.getProgramParameter(p, gl.LINK_STATUS)) {\n        throw new Error(gl.getProgramInfoLog(p) || \"\");\n    }\n    return p;\n}\nfunction createQuad(gl) {\n    const pos = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]);\n    const buf = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buf);\n    gl.bufferData(gl.ARRAY_BUFFER, pos, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(0);\n    gl.vertexAttribPointer(0, 2, gl.FLOAT, false, 0, 0);\n}\nfunction createTexture(gl, data) {\n    let t = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, t);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 0);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\n    return t;\n}\nlet colorCache = {};\nfunction parseColor(color) {\n    if (!(color in colorCache)) {\n        let parsed;\n        if (color == \"transparent\") {\n            parsed = [0, 0, 0, 0];\n        }\n        else if (color.indexOf(\"rgba\") > -1) {\n            parsed = (color.match(/[\\d.]+/g) || []).map(Number);\n            for (let i = 0; i < 3; i++) {\n                parsed[i] = parsed[i] / 255;\n            }\n        }\n        else {\n            parsed = Color.fromString(color).map($ => $ / 255);\n            parsed.push(1);\n        }\n        colorCache[color] = parsed;\n    }\n    return colorCache[color];\n}\n","import { clamp } from \"./util.js\";\nimport RNG from \"./rng.js\";\nexport function fromString(str) {\n    let cached, r;\n    if (str in CACHE) {\n        cached = CACHE[str];\n    }\n    else {\n        if (str.charAt(0) == \"#\") { // hex rgb\n            let matched = str.match(/[0-9a-f]/gi) || [];\n            let values = matched.map((x) => parseInt(x, 16));\n            if (values.length == 3) {\n                cached = values.map((x) => x * 17);\n            }\n            else {\n                for (let i = 0; i < 3; i++) {\n                    values[i + 1] += 16 * values[i];\n                    values.splice(i, 1);\n                }\n                cached = values;\n            }\n        }\n        else if ((r = str.match(/rgb\\(([0-9, ]+)\\)/i))) { // decimal rgb\n            cached = r[1].split(/\\s*,\\s*/).map((x) => parseInt(x));\n        }\n        else { // html name\n            cached = [0, 0, 0];\n        }\n        CACHE[str] = cached;\n    }\n    return cached.slice();\n}\n/**\n * Add two or more colors\n */\nexport function add(color1, ...colors) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            result[i] += colors[j][i];\n        }\n    }\n    return result;\n}\n/**\n * Add two or more colors, MODIFIES FIRST ARGUMENT\n */\nexport function add_(color1, ...colors) {\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            color1[i] += colors[j][i];\n        }\n    }\n    return color1;\n}\n/**\n * Multiply (mix) two or more colors\n */\nexport function multiply(color1, ...colors) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            result[i] *= colors[j][i] / 255;\n        }\n        result[i] = Math.round(result[i]);\n    }\n    return result;\n}\n/**\n * Multiply (mix) two or more colors, MODIFIES FIRST ARGUMENT\n */\nexport function multiply_(color1, ...colors) {\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            color1[i] *= colors[j][i] / 255;\n        }\n        color1[i] = Math.round(color1[i]);\n    }\n    return color1;\n}\n/**\n * Interpolate (blend) two colors with a given factor\n */\nexport function interpolate(color1, color2, factor = 0.5) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        result[i] = Math.round(result[i] + factor * (color2[i] - color1[i]));\n    }\n    return result;\n}\nexport const lerp = interpolate;\n/**\n * Interpolate (blend) two colors with a given factor in HSL mode\n */\nexport function interpolateHSL(color1, color2, factor = 0.5) {\n    let hsl1 = rgb2hsl(color1);\n    let hsl2 = rgb2hsl(color2);\n    for (let i = 0; i < 3; i++) {\n        hsl1[i] += factor * (hsl2[i] - hsl1[i]);\n    }\n    return hsl2rgb(hsl1);\n}\nexport const lerpHSL = interpolateHSL;\n/**\n * Create a new random color based on this one\n * @param color\n * @param diff Set of standard deviations\n */\nexport function randomize(color, diff) {\n    if (!(diff instanceof Array)) {\n        diff = Math.round(RNG.getNormal(0, diff));\n    }\n    let result = color.slice();\n    for (let i = 0; i < 3; i++) {\n        result[i] += (diff instanceof Array ? Math.round(RNG.getNormal(0, diff[i])) : diff);\n    }\n    return result;\n}\n/**\n * Converts an RGB color value to HSL. Expects 0..255 inputs, produces 0..1 outputs.\n */\nexport function rgb2hsl(color) {\n    let r = color[0] / 255;\n    let g = color[1] / 255;\n    let b = color[2] / 255;\n    let max = Math.max(r, g, b), min = Math.min(r, g, b);\n    let h = 0, s, l = (max + min) / 2;\n    if (max == min) {\n        s = 0; // achromatic\n    }\n    else {\n        let d = max - min;\n        s = (l > 0.5 ? d / (2 - max - min) : d / (max + min));\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n        }\n        h /= 6;\n    }\n    return [h, s, l];\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n/**\n * Converts an HSL color value to RGB. Expects 0..1 inputs, produces 0..255 outputs.\n */\nexport function hsl2rgb(color) {\n    let l = color[2];\n    if (color[1] == 0) {\n        l = Math.round(l * 255);\n        return [l, l, l];\n    }\n    else {\n        let s = color[1];\n        let q = (l < 0.5 ? l * (1 + s) : l + s - l * s);\n        let p = 2 * l - q;\n        let r = hue2rgb(p, q, color[0] + 1 / 3);\n        let g = hue2rgb(p, q, color[0]);\n        let b = hue2rgb(p, q, color[0] - 1 / 3);\n        return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n    }\n}\nexport function toRGB(color) {\n    let clamped = color.map(x => clamp(x, 0, 255));\n    return `rgb(${clamped.join(\",\")})`;\n}\nexport function toHex(color) {\n    let clamped = color.map(x => clamp(x, 0, 255).toString(16).padStart(2, \"0\"));\n    return `#${clamped.join(\"\")}`;\n}\nconst CACHE = {\n    \"black\": [0, 0, 0],\n    \"navy\": [0, 0, 128],\n    \"darkblue\": [0, 0, 139],\n    \"mediumblue\": [0, 0, 205],\n    \"blue\": [0, 0, 255],\n    \"darkgreen\": [0, 100, 0],\n    \"green\": [0, 128, 0],\n    \"teal\": [0, 128, 128],\n    \"darkcyan\": [0, 139, 139],\n    \"deepskyblue\": [0, 191, 255],\n    \"darkturquoise\": [0, 206, 209],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"lime\": [0, 255, 0],\n    \"springgreen\": [0, 255, 127],\n    \"aqua\": [0, 255, 255],\n    \"cyan\": [0, 255, 255],\n    \"midnightblue\": [25, 25, 112],\n    \"dodgerblue\": [30, 144, 255],\n    \"forestgreen\": [34, 139, 34],\n    \"seagreen\": [46, 139, 87],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"limegreen\": [50, 205, 50],\n    \"mediumseagreen\": [60, 179, 113],\n    \"turquoise\": [64, 224, 208],\n    \"royalblue\": [65, 105, 225],\n    \"steelblue\": [70, 130, 180],\n    \"darkslateblue\": [72, 61, 139],\n    \"mediumturquoise\": [72, 209, 204],\n    \"indigo\": [75, 0, 130],\n    \"darkolivegreen\": [85, 107, 47],\n    \"cadetblue\": [95, 158, 160],\n    \"cornflowerblue\": [100, 149, 237],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"slateblue\": [106, 90, 205],\n    \"olivedrab\": [107, 142, 35],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"mediumslateblue\": [123, 104, 238],\n    \"lawngreen\": [124, 252, 0],\n    \"chartreuse\": [127, 255, 0],\n    \"aquamarine\": [127, 255, 212],\n    \"maroon\": [128, 0, 0],\n    \"purple\": [128, 0, 128],\n    \"olive\": [128, 128, 0],\n    \"gray\": [128, 128, 128],\n    \"grey\": [128, 128, 128],\n    \"skyblue\": [135, 206, 235],\n    \"lightskyblue\": [135, 206, 250],\n    \"blueviolet\": [138, 43, 226],\n    \"darkred\": [139, 0, 0],\n    \"darkmagenta\": [139, 0, 139],\n    \"saddlebrown\": [139, 69, 19],\n    \"darkseagreen\": [143, 188, 143],\n    \"lightgreen\": [144, 238, 144],\n    \"mediumpurple\": [147, 112, 216],\n    \"darkviolet\": [148, 0, 211],\n    \"palegreen\": [152, 251, 152],\n    \"darkorchid\": [153, 50, 204],\n    \"yellowgreen\": [154, 205, 50],\n    \"sienna\": [160, 82, 45],\n    \"brown\": [165, 42, 42],\n    \"darkgray\": [169, 169, 169],\n    \"darkgrey\": [169, 169, 169],\n    \"lightblue\": [173, 216, 230],\n    \"greenyellow\": [173, 255, 47],\n    \"paleturquoise\": [175, 238, 238],\n    \"lightsteelblue\": [176, 196, 222],\n    \"powderblue\": [176, 224, 230],\n    \"firebrick\": [178, 34, 34],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"mediumorchid\": [186, 85, 211],\n    \"rosybrown\": [188, 143, 143],\n    \"darkkhaki\": [189, 183, 107],\n    \"silver\": [192, 192, 192],\n    \"mediumvioletred\": [199, 21, 133],\n    \"indianred\": [205, 92, 92],\n    \"peru\": [205, 133, 63],\n    \"chocolate\": [210, 105, 30],\n    \"tan\": [210, 180, 140],\n    \"lightgray\": [211, 211, 211],\n    \"lightgrey\": [211, 211, 211],\n    \"palevioletred\": [216, 112, 147],\n    \"thistle\": [216, 191, 216],\n    \"orchid\": [218, 112, 214],\n    \"goldenrod\": [218, 165, 32],\n    \"crimson\": [220, 20, 60],\n    \"gainsboro\": [220, 220, 220],\n    \"plum\": [221, 160, 221],\n    \"burlywood\": [222, 184, 135],\n    \"lightcyan\": [224, 255, 255],\n    \"lavender\": [230, 230, 250],\n    \"darksalmon\": [233, 150, 122],\n    \"violet\": [238, 130, 238],\n    \"palegoldenrod\": [238, 232, 170],\n    \"lightcoral\": [240, 128, 128],\n    \"khaki\": [240, 230, 140],\n    \"aliceblue\": [240, 248, 255],\n    \"honeydew\": [240, 255, 240],\n    \"azure\": [240, 255, 255],\n    \"sandybrown\": [244, 164, 96],\n    \"wheat\": [245, 222, 179],\n    \"beige\": [245, 245, 220],\n    \"whitesmoke\": [245, 245, 245],\n    \"mintcream\": [245, 255, 250],\n    \"ghostwhite\": [248, 248, 255],\n    \"salmon\": [250, 128, 114],\n    \"antiquewhite\": [250, 235, 215],\n    \"linen\": [250, 240, 230],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"oldlace\": [253, 245, 230],\n    \"red\": [255, 0, 0],\n    \"fuchsia\": [255, 0, 255],\n    \"magenta\": [255, 0, 255],\n    \"deeppink\": [255, 20, 147],\n    \"orangered\": [255, 69, 0],\n    \"tomato\": [255, 99, 71],\n    \"hotpink\": [255, 105, 180],\n    \"coral\": [255, 127, 80],\n    \"darkorange\": [255, 140, 0],\n    \"lightsalmon\": [255, 160, 122],\n    \"orange\": [255, 165, 0],\n    \"lightpink\": [255, 182, 193],\n    \"pink\": [255, 192, 203],\n    \"gold\": [255, 215, 0],\n    \"peachpuff\": [255, 218, 185],\n    \"navajowhite\": [255, 222, 173],\n    \"moccasin\": [255, 228, 181],\n    \"bisque\": [255, 228, 196],\n    \"mistyrose\": [255, 228, 225],\n    \"blanchedalmond\": [255, 235, 205],\n    \"papayawhip\": [255, 239, 213],\n    \"lavenderblush\": [255, 240, 245],\n    \"seashell\": [255, 245, 238],\n    \"cornsilk\": [255, 248, 220],\n    \"lemonchiffon\": [255, 250, 205],\n    \"floralwhite\": [255, 250, 240],\n    \"snow\": [255, 250, 250],\n    \"yellow\": [255, 255, 0],\n    \"lightyellow\": [255, 255, 224],\n    \"ivory\": [255, 255, 240],\n    \"white\": [255, 255, 255]\n};\n","import Backend from \"./backend.js\";\nimport * as Color from \"../color.js\";\nfunction clearToAnsi(bg) {\n    return `\\x1b[0;48;5;${termcolor(bg)}m\\x1b[2J`;\n}\nfunction colorToAnsi(fg, bg) {\n    return `\\x1b[0;38;5;${termcolor(fg)};48;5;${termcolor(bg)}m`;\n}\nfunction positionToAnsi(x, y) {\n    return `\\x1b[${y + 1};${x + 1}H`;\n}\nfunction termcolor(color) {\n    const SRC_COLORS = 256.0;\n    const DST_COLORS = 6.0;\n    const COLOR_RATIO = DST_COLORS / SRC_COLORS;\n    let rgb = Color.fromString(color);\n    let r = Math.floor(rgb[0] * COLOR_RATIO);\n    let g = Math.floor(rgb[1] * COLOR_RATIO);\n    let b = Math.floor(rgb[2] * COLOR_RATIO);\n    return r * 36 + g * 6 + b * 1 + 16;\n}\nexport default class Term extends Backend {\n    constructor() {\n        super();\n        this._offset = [0, 0];\n        this._cursor = [-1, -1];\n        this._lastColor = \"\";\n    }\n    schedule(cb) { setTimeout(cb, 1000 / 60); }\n    setOptions(options) {\n        super.setOptions(options);\n        let size = [options.width, options.height];\n        let avail = this.computeSize();\n        this._offset = avail.map((val, index) => Math.floor((val - size[index]) / 2));\n    }\n    clear() {\n        process.stdout.write(clearToAnsi(this._options.bg));\n    }\n    draw(data, clearBefore) {\n        // determine where to draw what with what colors\n        let [x, y, ch, fg, bg] = data;\n        // determine if we need to move the terminal cursor\n        let dx = this._offset[0] + x;\n        let dy = this._offset[1] + y;\n        let size = this.computeSize();\n        if (dx < 0 || dx >= size[0]) {\n            return;\n        }\n        if (dy < 0 || dy >= size[1]) {\n            return;\n        }\n        if (dx !== this._cursor[0] || dy !== this._cursor[1]) {\n            process.stdout.write(positionToAnsi(dx, dy));\n            this._cursor[0] = dx;\n            this._cursor[1] = dy;\n        }\n        // terminals automatically clear, but if we're clearing when we're\n        // not otherwise provided with a character, just use a space instead\n        if (clearBefore) {\n            if (!ch) {\n                ch = \" \";\n            }\n        }\n        // if we're not clearing and not provided with a character, do nothing\n        if (!ch) {\n            return;\n        }\n        // determine if we need to change colors\n        let newColor = colorToAnsi(fg, bg);\n        if (newColor !== this._lastColor) {\n            process.stdout.write(newColor);\n            this._lastColor = newColor;\n        }\n        if (ch != '\\t') {\n            // write the provided symbol to the display\n            let chars = [].concat(ch);\n            process.stdout.write(chars[0]);\n        }\n        // update our position, given that we wrote a character\n        this._cursor[0]++;\n        if (this._cursor[0] >= size[0]) {\n            this._cursor[0] = 0;\n            this._cursor[1]++;\n        }\n    }\n    computeFontSize() { throw new Error(\"Terminal backend has no notion of font size\"); }\n    eventToPosition(x, y) { return [x, y]; }\n    computeSize() { return [process.stdout.columns, process.stdout.rows]; }\n}\n","/**\n * @namespace\n * Contains text tokenization and breaking routines\n */\nconst RE_COLORS = /%([bc]){([^}]*)}/g;\n// token types\nexport const TYPE_TEXT = 0;\nexport const TYPE_NEWLINE = 1;\nexport const TYPE_FG = 2;\nexport const TYPE_BG = 3;\n/**\n * Measure size of a resulting text block\n */\nexport function measure(str, maxWidth) {\n    let result = { width: 0, height: 1 };\n    let tokens = tokenize(str, maxWidth);\n    let lineWidth = 0;\n    for (let i = 0; i < tokens.length; i++) {\n        let token = tokens[i];\n        switch (token.type) {\n            case TYPE_TEXT:\n                lineWidth += token.value.length;\n                break;\n            case TYPE_NEWLINE:\n                result.height++;\n                result.width = Math.max(result.width, lineWidth);\n                lineWidth = 0;\n                break;\n        }\n    }\n    result.width = Math.max(result.width, lineWidth);\n    return result;\n}\n/**\n * Convert string to a series of a formatting commands\n */\nexport function tokenize(str, maxWidth) {\n    let result = [];\n    /* first tokenization pass - split texts and color formatting commands */\n    let offset = 0;\n    str.replace(RE_COLORS, function (match, type, name, index) {\n        /* string before */\n        let part = str.substring(offset, index);\n        if (part.length) {\n            result.push({\n                type: TYPE_TEXT,\n                value: part\n            });\n        }\n        /* color command */\n        result.push({\n            type: (type == \"c\" ? TYPE_FG : TYPE_BG),\n            value: name.trim()\n        });\n        offset = index + match.length;\n        return \"\";\n    });\n    /* last remaining part */\n    let part = str.substring(offset);\n    if (part.length) {\n        result.push({\n            type: TYPE_TEXT,\n            value: part\n        });\n    }\n    return breakLines(result, maxWidth);\n}\n/* insert line breaks into first-pass tokenized data */\nfunction breakLines(tokens, maxWidth) {\n    if (!maxWidth) {\n        maxWidth = Infinity;\n    }\n    let i = 0;\n    let lineLength = 0;\n    let lastTokenWithSpace = -1;\n    while (i < tokens.length) { /* take all text tokens, remove space, apply linebreaks */\n        let token = tokens[i];\n        if (token.type == TYPE_NEWLINE) { /* reset */\n            lineLength = 0;\n            lastTokenWithSpace = -1;\n        }\n        if (token.type != TYPE_TEXT) { /* skip non-text tokens */\n            i++;\n            continue;\n        }\n        /* remove spaces at the beginning of line */\n        while (lineLength == 0 && token.value.charAt(0) == \" \") {\n            token.value = token.value.substring(1);\n        }\n        /* forced newline? insert two new tokens after this one */\n        let index = token.value.indexOf(\"\\n\");\n        if (index != -1) {\n            token.value = breakInsideToken(tokens, i, index, true);\n            /* if there are spaces at the end, we must remove them (we do not want the line too long) */\n            let arr = token.value.split(\"\");\n            while (arr.length && arr[arr.length - 1] == \" \") {\n                arr.pop();\n            }\n            token.value = arr.join(\"\");\n        }\n        /* token degenerated? */\n        if (!token.value.length) {\n            tokens.splice(i, 1);\n            continue;\n        }\n        if (lineLength + token.value.length > maxWidth) { /* line too long, find a suitable breaking spot */\n            /* is it possible to break within this token? */\n            let index = -1;\n            while (1) {\n                let nextIndex = token.value.indexOf(\" \", index + 1);\n                if (nextIndex == -1) {\n                    break;\n                }\n                if (lineLength + nextIndex > maxWidth) {\n                    break;\n                }\n                index = nextIndex;\n            }\n            if (index != -1) { /* break at space within this one */\n                token.value = breakInsideToken(tokens, i, index, true);\n            }\n            else if (lastTokenWithSpace != -1) { /* is there a previous token where a break can occur? */\n                let token = tokens[lastTokenWithSpace];\n                let breakIndex = token.value.lastIndexOf(\" \");\n                token.value = breakInsideToken(tokens, lastTokenWithSpace, breakIndex, true);\n                i = lastTokenWithSpace;\n            }\n            else { /* force break in this token */\n                token.value = breakInsideToken(tokens, i, maxWidth - lineLength, false);\n            }\n        }\n        else { /* line not long, continue */\n            lineLength += token.value.length;\n            if (token.value.indexOf(\" \") != -1) {\n                lastTokenWithSpace = i;\n            }\n        }\n        i++; /* advance to next token */\n    }\n    tokens.push({ type: TYPE_NEWLINE }); /* insert fake newline to fix the last text line */\n    /* remove trailing space from text tokens before newlines */\n    let lastTextToken = null;\n    for (let i = 0; i < tokens.length; i++) {\n        let token = tokens[i];\n        switch (token.type) {\n            case TYPE_TEXT:\n                lastTextToken = token;\n                break;\n            case TYPE_NEWLINE:\n                if (lastTextToken) { /* remove trailing space */\n                    let arr = lastTextToken.value.split(\"\");\n                    while (arr.length && arr[arr.length - 1] == \" \") {\n                        arr.pop();\n                    }\n                    lastTextToken.value = arr.join(\"\");\n                }\n                lastTextToken = null;\n                break;\n        }\n    }\n    tokens.pop(); /* remove fake token */\n    return tokens;\n}\n/**\n * Create new tokens and insert them into the stream\n * @param {object[]} tokens\n * @param {int} tokenIndex Token being processed\n * @param {int} breakIndex Index within current token's value\n * @param {bool} removeBreakChar Do we want to remove the breaking character?\n * @returns {string} remaining unbroken token value\n */\nfunction breakInsideToken(tokens, tokenIndex, breakIndex, removeBreakChar) {\n    let newBreakToken = {\n        type: TYPE_NEWLINE\n    };\n    let newTextToken = {\n        type: TYPE_TEXT,\n        value: tokens[tokenIndex].value.substring(breakIndex + (removeBreakChar ? 1 : 0))\n    };\n    tokens.splice(tokenIndex + 1, 0, newBreakToken, newTextToken);\n    return tokens[tokenIndex].value.substring(0, breakIndex);\n}\n","/** Default with for display and map generators */\nexport let DEFAULT_WIDTH = 80;\n/** Default height for display and map generators */\nexport let DEFAULT_HEIGHT = 25;\nexport const DIRS = {\n    4: [[0, -1], [1, 0], [0, 1], [-1, 0]],\n    8: [[0, -1], [1, -1], [1, 0], [1, 1], [0, 1], [-1, 1], [-1, 0], [-1, -1]],\n    6: [[-1, -1], [1, -1], [2, 0], [1, 1], [-1, 1], [-2, 0]]\n};\nexport const KEYS = {\n    /** Cancel key. */\n    VK_CANCEL: 3,\n    /** Help key. */\n    VK_HELP: 6,\n    /** Backspace key. */\n    VK_BACK_SPACE: 8,\n    /** Tab key. */\n    VK_TAB: 9,\n    /** 5 key on Numpad when NumLock is unlocked. Or on Mac, clear key which is positioned at NumLock key. */\n    VK_CLEAR: 12,\n    /** Return/enter key on the main keyboard. */\n    VK_RETURN: 13,\n    /** Reserved, but not used. */\n    VK_ENTER: 14,\n    /** Shift key. */\n    VK_SHIFT: 16,\n    /** Control key. */\n    VK_CONTROL: 17,\n    /** Alt (Option on Mac) key. */\n    VK_ALT: 18,\n    /** Pause key. */\n    VK_PAUSE: 19,\n    /** Caps lock. */\n    VK_CAPS_LOCK: 20,\n    /** Escape key. */\n    VK_ESCAPE: 27,\n    /** Space bar. */\n    VK_SPACE: 32,\n    /** Page Up key. */\n    VK_PAGE_UP: 33,\n    /** Page Down key. */\n    VK_PAGE_DOWN: 34,\n    /** End key. */\n    VK_END: 35,\n    /** Home key. */\n    VK_HOME: 36,\n    /** Left arrow. */\n    VK_LEFT: 37,\n    /** Up arrow. */\n    VK_UP: 38,\n    /** Right arrow. */\n    VK_RIGHT: 39,\n    /** Down arrow. */\n    VK_DOWN: 40,\n    /** Print Screen key. */\n    VK_PRINTSCREEN: 44,\n    /** Ins(ert) key. */\n    VK_INSERT: 45,\n    /** Del(ete) key. */\n    VK_DELETE: 46,\n    /***/\n    VK_0: 48,\n    /***/\n    VK_1: 49,\n    /***/\n    VK_2: 50,\n    /***/\n    VK_3: 51,\n    /***/\n    VK_4: 52,\n    /***/\n    VK_5: 53,\n    /***/\n    VK_6: 54,\n    /***/\n    VK_7: 55,\n    /***/\n    VK_8: 56,\n    /***/\n    VK_9: 57,\n    /** Colon (:) key. Requires Gecko 15.0 */\n    VK_COLON: 58,\n    /** Semicolon (;) key. */\n    VK_SEMICOLON: 59,\n    /** Less-than (<) key. Requires Gecko 15.0 */\n    VK_LESS_THAN: 60,\n    /** Equals (=) key. */\n    VK_EQUALS: 61,\n    /** Greater-than (>) key. Requires Gecko 15.0 */\n    VK_GREATER_THAN: 62,\n    /** Question mark (?) key. Requires Gecko 15.0 */\n    VK_QUESTION_MARK: 63,\n    /** Atmark (@) key. Requires Gecko 15.0 */\n    VK_AT: 64,\n    /***/\n    VK_A: 65,\n    /***/\n    VK_B: 66,\n    /***/\n    VK_C: 67,\n    /***/\n    VK_D: 68,\n    /***/\n    VK_E: 69,\n    /***/\n    VK_F: 70,\n    /***/\n    VK_G: 71,\n    /***/\n    VK_H: 72,\n    /***/\n    VK_I: 73,\n    /***/\n    VK_J: 74,\n    /***/\n    VK_K: 75,\n    /***/\n    VK_L: 76,\n    /***/\n    VK_M: 77,\n    /***/\n    VK_N: 78,\n    /***/\n    VK_O: 79,\n    /***/\n    VK_P: 80,\n    /***/\n    VK_Q: 81,\n    /***/\n    VK_R: 82,\n    /***/\n    VK_S: 83,\n    /***/\n    VK_T: 84,\n    /***/\n    VK_U: 85,\n    /***/\n    VK_V: 86,\n    /***/\n    VK_W: 87,\n    /***/\n    VK_X: 88,\n    /***/\n    VK_Y: 89,\n    /***/\n    VK_Z: 90,\n    /***/\n    VK_CONTEXT_MENU: 93,\n    /** 0 on the numeric keypad. */\n    VK_NUMPAD0: 96,\n    /** 1 on the numeric keypad. */\n    VK_NUMPAD1: 97,\n    /** 2 on the numeric keypad. */\n    VK_NUMPAD2: 98,\n    /** 3 on the numeric keypad. */\n    VK_NUMPAD3: 99,\n    /** 4 on the numeric keypad. */\n    VK_NUMPAD4: 100,\n    /** 5 on the numeric keypad. */\n    VK_NUMPAD5: 101,\n    /** 6 on the numeric keypad. */\n    VK_NUMPAD6: 102,\n    /** 7 on the numeric keypad. */\n    VK_NUMPAD7: 103,\n    /** 8 on the numeric keypad. */\n    VK_NUMPAD8: 104,\n    /** 9 on the numeric keypad. */\n    VK_NUMPAD9: 105,\n    /** * on the numeric keypad. */\n    VK_MULTIPLY: 106,\n    /** + on the numeric keypad. */\n    VK_ADD: 107,\n    /***/\n    VK_SEPARATOR: 108,\n    /** - on the numeric keypad. */\n    VK_SUBTRACT: 109,\n    /** Decimal point on the numeric keypad. */\n    VK_DECIMAL: 110,\n    /** / on the numeric keypad. */\n    VK_DIVIDE: 111,\n    /** F1 key. */\n    VK_F1: 112,\n    /** F2 key. */\n    VK_F2: 113,\n    /** F3 key. */\n    VK_F3: 114,\n    /** F4 key. */\n    VK_F4: 115,\n    /** F5 key. */\n    VK_F5: 116,\n    /** F6 key. */\n    VK_F6: 117,\n    /** F7 key. */\n    VK_F7: 118,\n    /** F8 key. */\n    VK_F8: 119,\n    /** F9 key. */\n    VK_F9: 120,\n    /** F10 key. */\n    VK_F10: 121,\n    /** F11 key. */\n    VK_F11: 122,\n    /** F12 key. */\n    VK_F12: 123,\n    /** F13 key. */\n    VK_F13: 124,\n    /** F14 key. */\n    VK_F14: 125,\n    /** F15 key. */\n    VK_F15: 126,\n    /** F16 key. */\n    VK_F16: 127,\n    /** F17 key. */\n    VK_F17: 128,\n    /** F18 key. */\n    VK_F18: 129,\n    /** F19 key. */\n    VK_F19: 130,\n    /** F20 key. */\n    VK_F20: 131,\n    /** F21 key. */\n    VK_F21: 132,\n    /** F22 key. */\n    VK_F22: 133,\n    /** F23 key. */\n    VK_F23: 134,\n    /** F24 key. */\n    VK_F24: 135,\n    /** Num Lock key. */\n    VK_NUM_LOCK: 144,\n    /** Scroll Lock key. */\n    VK_SCROLL_LOCK: 145,\n    /** Circumflex (^) key. Requires Gecko 15.0 */\n    VK_CIRCUMFLEX: 160,\n    /** Exclamation (!) key. Requires Gecko 15.0 */\n    VK_EXCLAMATION: 161,\n    /** Double quote () key. Requires Gecko 15.0 */\n    VK_DOUBLE_QUOTE: 162,\n    /** Hash (#) key. Requires Gecko 15.0 */\n    VK_HASH: 163,\n    /** Dollar sign ($) key. Requires Gecko 15.0 */\n    VK_DOLLAR: 164,\n    /** Percent (%) key. Requires Gecko 15.0 */\n    VK_PERCENT: 165,\n    /** Ampersand (&) key. Requires Gecko 15.0 */\n    VK_AMPERSAND: 166,\n    /** Underscore (_) key. Requires Gecko 15.0 */\n    VK_UNDERSCORE: 167,\n    /** Open parenthesis (() key. Requires Gecko 15.0 */\n    VK_OPEN_PAREN: 168,\n    /** Close parenthesis ()) key. Requires Gecko 15.0 */\n    VK_CLOSE_PAREN: 169,\n    /* Asterisk (*) key. Requires Gecko 15.0 */\n    VK_ASTERISK: 170,\n    /** Plus (+) key. Requires Gecko 15.0 */\n    VK_PLUS: 171,\n    /** Pipe (|) key. Requires Gecko 15.0 */\n    VK_PIPE: 172,\n    /** Hyphen-US/docs/Minus (-) key. Requires Gecko 15.0 */\n    VK_HYPHEN_MINUS: 173,\n    /** Open curly bracket ({) key. Requires Gecko 15.0 */\n    VK_OPEN_CURLY_BRACKET: 174,\n    /** Close curly bracket (}) key. Requires Gecko 15.0 */\n    VK_CLOSE_CURLY_BRACKET: 175,\n    /** Tilde (~) key. Requires Gecko 15.0 */\n    VK_TILDE: 176,\n    /** Comma (,) key. */\n    VK_COMMA: 188,\n    /** Period (.) key. */\n    VK_PERIOD: 190,\n    /** Slash (/) key. */\n    VK_SLASH: 191,\n    /** Back tick (`) key. */\n    VK_BACK_QUOTE: 192,\n    /** Open square bracket ([) key. */\n    VK_OPEN_BRACKET: 219,\n    /** Back slash (\\) key. */\n    VK_BACK_SLASH: 220,\n    /** Close square bracket (]) key. */\n    VK_CLOSE_BRACKET: 221,\n    /** Quote (''') key. */\n    VK_QUOTE: 222,\n    /** Meta key on Linux, Command key on Mac. */\n    VK_META: 224,\n    /** AltGr key on Linux. Requires Gecko 15.0 */\n    VK_ALTGR: 225,\n    /** Windows logo key on Windows. Or Super or Hyper key on Linux. Requires Gecko 15.0 */\n    VK_WIN: 91,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_KANA: 21,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_HANGUL: 21,\n    /** 英数 key on Japanese Mac keyboard. Requires Gecko 15.0 */\n    VK_EISU: 22,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_JUNJA: 23,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_FINAL: 24,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_HANJA: 25,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_KANJI: 25,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_CONVERT: 28,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_NONCONVERT: 29,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_ACCEPT: 30,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_MODECHANGE: 31,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_SELECT: 41,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_PRINT: 42,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_EXECUTE: 43,\n    /** Linux support for this keycode was added in Gecko 4.0.\t */\n    VK_SLEEP: 95\n};\n","import RNG from \"./rng.js\";\n/**\n * @class (Markov process)-based string generator.\n * Copied from a <a href=\"http://www.roguebasin.roguelikedevelopment.org/index.php?title=Names_from_a_high_order_Markov_Process_and_a_simplified_Katz_back-off_scheme\">RogueBasin article</a>.\n * Offers configurable order and prior.\n */\nexport default class StringGenerator {\n    constructor(options) {\n        this._options = {\n            words: false,\n            order: 3,\n            prior: 0.001\n        };\n        Object.assign(this._options, options);\n        this._boundary = String.fromCharCode(0);\n        this._suffix = this._boundary;\n        this._prefix = [];\n        for (let i = 0; i < this._options.order; i++) {\n            this._prefix.push(this._boundary);\n        }\n        this._priorValues = {};\n        this._priorValues[this._boundary] = this._options.prior;\n        this._data = {};\n    }\n    /**\n     * Remove all learning data\n     */\n    clear() {\n        this._data = {};\n        this._priorValues = {};\n    }\n    /**\n     * @returns {string} Generated string\n     */\n    generate() {\n        let result = [this._sample(this._prefix)];\n        while (result[result.length - 1] != this._boundary) {\n            result.push(this._sample(result));\n        }\n        return this._join(result.slice(0, -1));\n    }\n    /**\n     * Observe (learn) a string from a training set\n     */\n    observe(string) {\n        let tokens = this._split(string);\n        for (let i = 0; i < tokens.length; i++) {\n            this._priorValues[tokens[i]] = this._options.prior;\n        }\n        tokens = this._prefix.concat(tokens).concat(this._suffix); /* add boundary symbols */\n        for (let i = this._options.order; i < tokens.length; i++) {\n            let context = tokens.slice(i - this._options.order, i);\n            let event = tokens[i];\n            for (let j = 0; j < context.length; j++) {\n                let subcontext = context.slice(j);\n                this._observeEvent(subcontext, event);\n            }\n        }\n    }\n    getStats() {\n        let parts = [];\n        let priorCount = Object.keys(this._priorValues).length;\n        priorCount--; // boundary\n        parts.push(\"distinct samples: \" + priorCount);\n        let dataCount = Object.keys(this._data).length;\n        let eventCount = 0;\n        for (let p in this._data) {\n            eventCount += Object.keys(this._data[p]).length;\n        }\n        parts.push(\"dictionary size (contexts): \" + dataCount);\n        parts.push(\"dictionary size (events): \" + eventCount);\n        return parts.join(\", \");\n    }\n    /**\n     * @param {string}\n     * @returns {string[]}\n     */\n    _split(str) {\n        return str.split(this._options.words ? /\\s+/ : \"\");\n    }\n    /**\n     * @param {string[]}\n     * @returns {string}\n     */\n    _join(arr) {\n        return arr.join(this._options.words ? \" \" : \"\");\n    }\n    /**\n     * @param {string[]} context\n     * @param {string} event\n     */\n    _observeEvent(context, event) {\n        let key = this._join(context);\n        if (!(key in this._data)) {\n            this._data[key] = {};\n        }\n        let data = this._data[key];\n        if (!(event in data)) {\n            data[event] = 0;\n        }\n        data[event]++;\n    }\n    /**\n     * @param {string[]}\n     * @returns {string}\n     */\n    _sample(context) {\n        context = this._backoff(context);\n        let key = this._join(context);\n        let data = this._data[key];\n        let available = {};\n        if (this._options.prior) {\n            for (let event in this._priorValues) {\n                available[event] = this._priorValues[event];\n            }\n            for (let event in data) {\n                available[event] += data[event];\n            }\n        }\n        else {\n            available = data;\n        }\n        return RNG.getWeightedValue(available);\n    }\n    /**\n     * @param {string[]}\n     * @returns {string[]}\n     */\n    _backoff(context) {\n        if (context.length > this._options.order) {\n            context = context.slice(-this._options.order);\n        }\n        else if (context.length < this._options.order) {\n            context = this._prefix.slice(0, this._options.order - context.length).concat(context);\n        }\n        while (!(this._join(context) in this._data) && context.length > 0) {\n            context = context.slice(1);\n        }\n        return context;\n    }\n}\n","import { MinHeap } from \"./MinHeap\";\nexport default class EventQueue {\n    /**\n     * @class Generic event queue: stores events and retrieves them based on their time\n     */\n    constructor() {\n        this._time = 0;\n        this._events = new MinHeap();\n    }\n    /**\n     * @returns {number} Elapsed time\n     */\n    getTime() { return this._time; }\n    /**\n     * Clear all scheduled events\n     */\n    clear() {\n        this._events = new MinHeap();\n        return this;\n    }\n    /**\n     * @param {?} event\n     * @param {number} time\n     */\n    add(event, time) {\n        this._events.push(event, time);\n    }\n    /**\n     * Locates the nearest event, advances time if necessary. Returns that event and removes it from the queue.\n     * @returns {? || null} The event previously added by addEvent, null if no event available\n     */\n    get() {\n        if (!this._events.len()) {\n            return null;\n        }\n        let { key: time, value: event } = this._events.pop();\n        if (time > 0) { /* advance */\n            this._time += time;\n            this._events.shift(-time);\n        }\n        return event;\n    }\n    /**\n     * Get the time associated with the given event\n     * @param {?} event\n     * @returns {number} time\n     */\n    getEventTime(event) {\n        const r = this._events.find(event);\n        if (r) {\n            const { key } = r;\n            return key;\n        }\n        return undefined;\n    }\n    /**\n     * Remove an event from the queue\n     * @param {?} event\n     * @returns {bool} success?\n     */\n    remove(event) {\n        return this._events.remove(event);\n    }\n    ;\n}\n","export class MinHeap {\n    constructor() {\n        this.heap = [];\n        this.timestamp = 0;\n    }\n    lessThan(a, b) {\n        return a.key == b.key ? a.timestamp < b.timestamp : a.key < b.key;\n    }\n    shift(v) {\n        this.heap = this.heap.map(({ key, value, timestamp }) => ({ key: key + v, value, timestamp }));\n    }\n    len() {\n        return this.heap.length;\n    }\n    push(value, key) {\n        this.timestamp += 1;\n        const loc = this.len();\n        this.heap.push({ value, timestamp: this.timestamp, key });\n        this.updateUp(loc);\n    }\n    pop() {\n        if (this.len() == 0) {\n            throw new Error(\"no element to pop\");\n        }\n        const top = this.heap[0];\n        if (this.len() > 1) {\n            this.heap[0] = this.heap.pop();\n            this.updateDown(0);\n        }\n        else {\n            this.heap.pop();\n        }\n        return top;\n    }\n    find(v) {\n        for (let i = 0; i < this.len(); i++) {\n            if (v == this.heap[i].value) {\n                return this.heap[i];\n            }\n        }\n        return null;\n    }\n    remove(v) {\n        let index = null;\n        for (let i = 0; i < this.len(); i++) {\n            if (v == this.heap[i].value) {\n                index = i;\n            }\n        }\n        if (index === null) {\n            return false;\n        }\n        if (this.len() > 1) {\n            let last = this.heap.pop();\n            if (last.value != v) { // if the last one is being removed, do nothing\n                this.heap[index] = last;\n                this.updateDown(index);\n            }\n            return true;\n        }\n        else {\n            this.heap.pop();\n        }\n        return true;\n    }\n    parentNode(x) {\n        return Math.floor((x - 1) / 2);\n    }\n    leftChildNode(x) {\n        return 2 * x + 1;\n    }\n    rightChildNode(x) {\n        return 2 * x + 2;\n    }\n    existNode(x) {\n        return x >= 0 && x < this.heap.length;\n    }\n    swap(x, y) {\n        const t = this.heap[x];\n        this.heap[x] = this.heap[y];\n        this.heap[y] = t;\n    }\n    minNode(numbers) {\n        const validnumbers = numbers.filter(this.existNode.bind(this));\n        let minimal = validnumbers[0];\n        for (const i of validnumbers) {\n            if (this.lessThan(this.heap[i], this.heap[minimal])) {\n                minimal = i;\n            }\n        }\n        return minimal;\n    }\n    updateUp(x) {\n        if (x == 0) {\n            return;\n        }\n        const parent = this.parentNode(x);\n        if (this.existNode(parent) && this.lessThan(this.heap[x], this.heap[parent])) {\n            this.swap(x, parent);\n            this.updateUp(parent);\n        }\n    }\n    updateDown(x) {\n        const leftChild = this.leftChildNode(x);\n        const rightChild = this.rightChildNode(x);\n        if (!this.existNode(leftChild)) {\n            return;\n        }\n        const m = this.minNode([x, leftChild, rightChild]);\n        if (m != x) {\n            this.swap(x, m);\n            this.updateDown(m);\n        }\n    }\n    debugPrint() {\n        console.log(this.heap);\n    }\n}\n","import Simple from \"./simple.js\";\nimport Speed from \"./speed.js\";\nimport Action from \"./action.js\";\nexport default { Simple, Speed, Action };\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Simple fair scheduler (round-robin style)\n */\nexport default class Simple extends Scheduler {\n    add(item, repeat) {\n        this._queue.add(item, 0);\n        return super.add(item, repeat);\n    }\n    next() {\n        if (this._current !== null && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, 0);\n        }\n        return super.next();\n    }\n}\n","import EventQueue from \"../eventqueue.js\";\nexport default class Scheduler {\n    /**\n     * @class Abstract scheduler\n     */\n    constructor() {\n        this._queue = new EventQueue();\n        this._repeat = [];\n        this._current = null;\n    }\n    /**\n     * @see ROT.EventQueue#getTime\n     */\n    getTime() { return this._queue.getTime(); }\n    /**\n     * @param {?} item\n     * @param {bool} repeat\n     */\n    add(item, repeat) {\n        if (repeat) {\n            this._repeat.push(item);\n        }\n        return this;\n    }\n    /**\n     * Get the time the given item is scheduled for\n     * @param {?} item\n     * @returns {number} time\n     */\n    getTimeOf(item) {\n        return this._queue.getEventTime(item);\n    }\n    /**\n     * Clear all items\n     */\n    clear() {\n        this._queue.clear();\n        this._repeat = [];\n        this._current = null;\n        return this;\n    }\n    /**\n     * Remove a previously added item\n     * @param {?} item\n     * @returns {bool} successful?\n     */\n    remove(item) {\n        let result = this._queue.remove(item);\n        let index = this._repeat.indexOf(item);\n        if (index != -1) {\n            this._repeat.splice(index, 1);\n        }\n        if (this._current == item) {\n            this._current = null;\n        }\n        return result;\n    }\n    /**\n     * Schedule next item\n     * @returns {?}\n     */\n    next() {\n        this._current = this._queue.get();\n        return this._current;\n    }\n}\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Speed-based scheduler\n */\nexport default class Speed extends Scheduler {\n    /**\n     * @param {object} item anything with \"getSpeed\" method\n     * @param {bool} repeat\n     * @param {number} [time=1/item.getSpeed()]\n     * @see ROT.Scheduler#add\n     */\n    add(item, repeat, time) {\n        this._queue.add(item, time !== undefined ? time : 1 / item.getSpeed());\n        return super.add(item, repeat);\n    }\n    /**\n     * @see ROT.Scheduler#next\n     */\n    next() {\n        if (this._current && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, 1 / this._current.getSpeed());\n        }\n        return super.next();\n    }\n}\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Action-based scheduler\n * @augments ROT.Scheduler\n */\nexport default class Action extends Scheduler {\n    constructor() {\n        super();\n        this._defaultDuration = 1; /* for newly added */\n        this._duration = this._defaultDuration; /* for this._current */\n    }\n    /**\n     * @param {object} item\n     * @param {bool} repeat\n     * @param {number} [time=1]\n     * @see ROT.Scheduler#add\n     */\n    add(item, repeat, time) {\n        this._queue.add(item, time || this._defaultDuration);\n        return super.add(item, repeat);\n    }\n    clear() {\n        this._duration = this._defaultDuration;\n        return super.clear();\n    }\n    remove(item) {\n        if (item == this._current) {\n            this._duration = this._defaultDuration;\n        }\n        return super.remove(item);\n    }\n    /**\n     * @see ROT.Scheduler#next\n     */\n    next() {\n        if (this._current !== null && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, this._duration || this._defaultDuration);\n            this._duration = this._defaultDuration;\n        }\n        return super.next();\n    }\n    /**\n     * Set duration for the active item\n     */\n    setDuration(time) {\n        if (this._current) {\n            this._duration = time;\n        }\n        return this;\n    }\n}\n","import DiscreteShadowcasting from \"./discrete-shadowcasting.js\";\nimport PreciseShadowcasting from \"./precise-shadowcasting.js\";\nimport RecursiveShadowcasting from \"./recursive-shadowcasting.js\";\nexport default { DiscreteShadowcasting, PreciseShadowcasting, RecursiveShadowcasting };\n","import FOV from \"./fov.js\";\n/**\n * @class Discrete shadowcasting algorithm. Obsoleted by Precise shadowcasting.\n * @augments ROT.FOV\n */\nexport default class DiscreteShadowcasting extends FOV {\n    compute(x, y, R, callback) {\n        /* this place is always visible */\n        callback(x, y, 0, 1);\n        /* standing in a dark place. FIXME is this a good idea?  */\n        if (!this._lightPasses(x, y)) {\n            return;\n        }\n        /* start and end angles */\n        let DATA = [];\n        let A, B, cx, cy, blocks;\n        /* analyze surrounding cells in concentric rings, starting from the center */\n        for (let r = 1; r <= R; r++) {\n            let neighbors = this._getCircle(x, y, r);\n            let angle = 360 / neighbors.length;\n            for (let i = 0; i < neighbors.length; i++) {\n                cx = neighbors[i][0];\n                cy = neighbors[i][1];\n                A = angle * (i - 0.5);\n                B = A + angle;\n                blocks = !this._lightPasses(cx, cy);\n                if (this._visibleCoords(Math.floor(A), Math.ceil(B), blocks, DATA)) {\n                    callback(cx, cy, r, 1);\n                }\n                if (DATA.length == 2 && DATA[0] == 0 && DATA[1] == 360) {\n                    return;\n                } /* cutoff? */\n            } /* for all cells in this ring */\n        } /* for all rings */\n    }\n    /**\n     * @param {int} A start angle\n     * @param {int} B end angle\n     * @param {bool} blocks Does current cell block visibility?\n     * @param {int[][]} DATA shadowed angle pairs\n     */\n    _visibleCoords(A, B, blocks, DATA) {\n        if (A < 0) {\n            let v1 = this._visibleCoords(0, B, blocks, DATA);\n            let v2 = this._visibleCoords(360 + A, 360, blocks, DATA);\n            return v1 || v2;\n        }\n        let index = 0;\n        while (index < DATA.length && DATA[index] < A) {\n            index++;\n        }\n        if (index == DATA.length) { /* completely new shadow */\n            if (blocks) {\n                DATA.push(A, B);\n            }\n            return true;\n        }\n        let count = 0;\n        if (index % 2) { /* this shadow starts in an existing shadow, or within its ending boundary */\n            while (index < DATA.length && DATA[index] < B) {\n                index++;\n                count++;\n            }\n            if (count == 0) {\n                return false;\n            }\n            if (blocks) {\n                if (count % 2) {\n                    DATA.splice(index - count, count, B);\n                }\n                else {\n                    DATA.splice(index - count, count);\n                }\n            }\n            return true;\n        }\n        else { /* this shadow starts outside an existing shadow, or within a starting boundary */\n            while (index < DATA.length && DATA[index] < B) {\n                index++;\n                count++;\n            }\n            /* visible when outside an existing shadow, or when overlapping */\n            if (A == DATA[index - count] && count == 1) {\n                return false;\n            }\n            if (blocks) {\n                if (count % 2) {\n                    DATA.splice(index - count, count, A);\n                }\n                else {\n                    DATA.splice(index - count, count, A, B);\n                }\n            }\n            return true;\n        }\n    }\n}\n","import { DIRS } from \"../constants.js\";\n;\n;\nexport default class FOV {\n    /**\n     * @class Abstract FOV algorithm\n     * @param {function} lightPassesCallback Does the light pass through x,y?\n     * @param {object} [options]\n     * @param {int} [options.topology=8] 4/6/8\n     */\n    constructor(lightPassesCallback, options = {}) {\n        this._lightPasses = lightPassesCallback;\n        this._options = Object.assign({ topology: 8 }, options);\n    }\n    /**\n     * Return all neighbors in a concentric ring\n     * @param {int} cx center-x\n     * @param {int} cy center-y\n     * @param {int} r range\n     */\n    _getCircle(cx, cy, r) {\n        let result = [];\n        let dirs, countFactor, startOffset;\n        switch (this._options.topology) {\n            case 4:\n                countFactor = 1;\n                startOffset = [0, 1];\n                dirs = [\n                    DIRS[8][7],\n                    DIRS[8][1],\n                    DIRS[8][3],\n                    DIRS[8][5]\n                ];\n                break;\n            case 6:\n                dirs = DIRS[6];\n                countFactor = 1;\n                startOffset = [-1, 1];\n                break;\n            case 8:\n                dirs = DIRS[4];\n                countFactor = 2;\n                startOffset = [-1, 1];\n                break;\n            default:\n                throw new Error(\"Incorrect topology for FOV computation\");\n                break;\n        }\n        /* starting neighbor */\n        let x = cx + startOffset[0] * r;\n        let y = cy + startOffset[1] * r;\n        /* circle */\n        for (let i = 0; i < dirs.length; i++) {\n            for (let j = 0; j < r * countFactor; j++) {\n                result.push([x, y]);\n                x += dirs[i][0];\n                y += dirs[i][1];\n            }\n        }\n        return result;\n    }\n}\n","import FOV from \"./fov.js\";\n/**\n * @class Precise shadowcasting algorithm\n * @augments ROT.FOV\n */\nexport default class PreciseShadowcasting extends FOV {\n    compute(x, y, R, callback) {\n        /* this place is always visible */\n        callback(x, y, 0, 1);\n        /* standing in a dark place. FIXME is this a good idea?  */\n        if (!this._lightPasses(x, y)) {\n            return;\n        }\n        /* list of all shadows */\n        let SHADOWS = [];\n        let cx, cy, blocks, A1, A2, visibility;\n        /* analyze surrounding cells in concentric rings, starting from the center */\n        for (let r = 1; r <= R; r++) {\n            let neighbors = this._getCircle(x, y, r);\n            let neighborCount = neighbors.length;\n            for (let i = 0; i < neighborCount; i++) {\n                cx = neighbors[i][0];\n                cy = neighbors[i][1];\n                /* shift half-an-angle backwards to maintain consistency of 0-th cells */\n                A1 = [i ? 2 * i - 1 : 2 * neighborCount - 1, 2 * neighborCount];\n                A2 = [2 * i + 1, 2 * neighborCount];\n                blocks = !this._lightPasses(cx, cy);\n                visibility = this._checkVisibility(A1, A2, blocks, SHADOWS);\n                if (visibility) {\n                    callback(cx, cy, r, visibility);\n                }\n                if (SHADOWS.length == 2 && SHADOWS[0][0] == 0 && SHADOWS[1][0] == SHADOWS[1][1]) {\n                    return;\n                } /* cutoff? */\n            } /* for all cells in this ring */\n        } /* for all rings */\n    }\n    /**\n     * @param {int[2]} A1 arc start\n     * @param {int[2]} A2 arc end\n     * @param {bool} blocks Does current arc block visibility?\n     * @param {int[][]} SHADOWS list of active shadows\n     */\n    _checkVisibility(A1, A2, blocks, SHADOWS) {\n        if (A1[0] > A2[0]) { /* split into two sub-arcs */\n            let v1 = this._checkVisibility(A1, [A1[1], A1[1]], blocks, SHADOWS);\n            let v2 = this._checkVisibility([0, 1], A2, blocks, SHADOWS);\n            return (v1 + v2) / 2;\n        }\n        /* index1: first shadow >= A1 */\n        let index1 = 0, edge1 = false;\n        while (index1 < SHADOWS.length) {\n            let old = SHADOWS[index1];\n            let diff = old[0] * A1[1] - A1[0] * old[1];\n            if (diff >= 0) { /* old >= A1 */\n                if (diff == 0 && !(index1 % 2)) {\n                    edge1 = true;\n                }\n                break;\n            }\n            index1++;\n        }\n        /* index2: last shadow <= A2 */\n        let index2 = SHADOWS.length, edge2 = false;\n        while (index2--) {\n            let old = SHADOWS[index2];\n            let diff = A2[0] * old[1] - old[0] * A2[1];\n            if (diff >= 0) { /* old <= A2 */\n                if (diff == 0 && (index2 % 2)) {\n                    edge2 = true;\n                }\n                break;\n            }\n        }\n        let visible = true;\n        if (index1 == index2 && (edge1 || edge2)) { /* subset of existing shadow, one of the edges match */\n            visible = false;\n        }\n        else if (edge1 && edge2 && index1 + 1 == index2 && (index2 % 2)) { /* completely equivalent with existing shadow */\n            visible = false;\n        }\n        else if (index1 > index2 && (index1 % 2)) { /* subset of existing shadow, not touching */\n            visible = false;\n        }\n        if (!visible) {\n            return 0;\n        } /* fast case: not visible */\n        let visibleLength;\n        /* compute the length of visible arc, adjust list of shadows (if blocking) */\n        let remove = index2 - index1 + 1;\n        if (remove % 2) {\n            if (index1 % 2) { /* first edge within existing shadow, second outside */\n                let P = SHADOWS[index1];\n                visibleLength = (A2[0] * P[1] - P[0] * A2[1]) / (P[1] * A2[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A2);\n                }\n            }\n            else { /* second edge within existing shadow, first outside */\n                let P = SHADOWS[index2];\n                visibleLength = (P[0] * A1[1] - A1[0] * P[1]) / (A1[1] * P[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A1);\n                }\n            }\n        }\n        else {\n            if (index1 % 2) { /* both edges within existing shadows */\n                let P1 = SHADOWS[index1];\n                let P2 = SHADOWS[index2];\n                visibleLength = (P2[0] * P1[1] - P1[0] * P2[1]) / (P1[1] * P2[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove);\n                }\n            }\n            else { /* both edges outside existing shadows */\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A1, A2);\n                }\n                return 1; /* whole arc visible! */\n            }\n        }\n        let arcLength = (A2[0] * A1[1] - A1[0] * A2[1]) / (A1[1] * A2[1]);\n        return visibleLength / arcLength;\n    }\n}\n","import FOV from \"./fov.js\";\n/** Octants used for translating recursive shadowcasting offsets */\nconst OCTANTS = [\n    [-1, 0, 0, 1],\n    [0, -1, 1, 0],\n    [0, -1, -1, 0],\n    [-1, 0, 0, -1],\n    [1, 0, 0, -1],\n    [0, 1, -1, 0],\n    [0, 1, 1, 0],\n    [1, 0, 0, 1]\n];\n/**\n * @class Recursive shadowcasting algorithm\n * Currently only supports 4/8 topologies, not hexagonal.\n * Based on Peter Harkins' implementation of Björn Bergström's algorithm described here: http://www.roguebasin.com/index.php?title=FOV_using_recursive_shadowcasting\n * @augments ROT.FOV\n */\nexport default class RecursiveShadowcasting extends FOV {\n    /**\n     * Compute visibility for a 360-degree circle\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {function} callback\n     */\n    compute(x, y, R, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        for (let i = 0; i < OCTANTS.length; i++) {\n            this._renderOctant(x, y, OCTANTS[i], R, callback);\n        }\n    }\n    /**\n     * Compute visibility for a 180-degree arc\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n     * @param {function} callback\n     */\n    compute180(x, y, R, dir, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        let previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 180 degrees\n        let nextPreviousOctant = (dir - 2 + 8) % 8; //Need to retrieve the previous two octants to render a full 180 degrees\n        let nextOctant = (dir + 1 + 8) % 8; //Need to grab to next octant to render a full 180 degrees\n        this._renderOctant(x, y, OCTANTS[nextPreviousOctant], R, callback);\n        this._renderOctant(x, y, OCTANTS[previousOctant], R, callback);\n        this._renderOctant(x, y, OCTANTS[dir], R, callback);\n        this._renderOctant(x, y, OCTANTS[nextOctant], R, callback);\n    }\n    ;\n    /**\n     * Compute visibility for a 90-degree arc\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n     * @param {function} callback\n     */\n    compute90(x, y, R, dir, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        let previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 90 degrees\n        this._renderOctant(x, y, OCTANTS[dir], R, callback);\n        this._renderOctant(x, y, OCTANTS[previousOctant], R, callback);\n    }\n    /**\n     * Render one octant (45-degree arc) of the viewshed\n     * @param {int} x\n     * @param {int} y\n     * @param {int} octant Octant to be rendered\n     * @param {int} R Maximum visibility radius\n     * @param {function} callback\n     */\n    _renderOctant(x, y, octant, R, callback) {\n        //Radius incremented by 1 to provide same coverage area as other shadowcasting radiuses\n        this._castVisibility(x, y, 1, 1.0, 0.0, R + 1, octant[0], octant[1], octant[2], octant[3], callback);\n    }\n    /**\n     * Actually calculates the visibility\n     * @param {int} startX The starting X coordinate\n     * @param {int} startY The starting Y coordinate\n     * @param {int} row The row to render\n     * @param {float} visSlopeStart The slope to start at\n     * @param {float} visSlopeEnd The slope to end at\n     * @param {int} radius The radius to reach out to\n     * @param {int} xx\n     * @param {int} xy\n     * @param {int} yx\n     * @param {int} yy\n     * @param {function} callback The callback to use when we hit a block that is visible\n     */\n    _castVisibility(startX, startY, row, visSlopeStart, visSlopeEnd, radius, xx, xy, yx, yy, callback) {\n        if (visSlopeStart < visSlopeEnd) {\n            return;\n        }\n        for (let i = row; i <= radius; i++) {\n            let dx = -i - 1;\n            let dy = -i;\n            let blocked = false;\n            let newStart = 0;\n            //'Row' could be column, names here assume octant 0 and would be flipped for half the octants\n            while (dx <= 0) {\n                dx += 1;\n                //Translate from relative coordinates to map coordinates\n                let mapX = startX + dx * xx + dy * xy;\n                let mapY = startY + dx * yx + dy * yy;\n                //Range of the row\n                let slopeStart = (dx - 0.5) / (dy + 0.5);\n                let slopeEnd = (dx + 0.5) / (dy - 0.5);\n                //Ignore if not yet at left edge of Octant\n                if (slopeEnd > visSlopeStart) {\n                    continue;\n                }\n                //Done if past right edge\n                if (slopeStart < visSlopeEnd) {\n                    break;\n                }\n                //If it's in range, it's visible\n                if ((dx * dx + dy * dy) < (radius * radius)) {\n                    callback(mapX, mapY, i, 1);\n                }\n                if (!blocked) {\n                    //If tile is a blocking tile, cast around it\n                    if (!this._lightPasses(mapX, mapY) && i < radius) {\n                        blocked = true;\n                        this._castVisibility(startX, startY, i + 1, visSlopeStart, slopeStart, radius, xx, xy, yx, yy, callback);\n                        newStart = slopeEnd;\n                    }\n                }\n                else {\n                    //Keep narrowing if scanning across a block\n                    if (!this._lightPasses(mapX, mapY)) {\n                        newStart = slopeEnd;\n                        continue;\n                    }\n                    //Block has ended\n                    blocked = false;\n                    visSlopeStart = newStart;\n                }\n            }\n            if (blocked) {\n                break;\n            }\n        }\n    }\n}\n","import Arena from \"./arena.js\";\nimport Uniform from \"./uniform.js\";\nimport Cellular from \"./cellular.js\";\nimport Digger from \"./digger.js\";\nimport EllerMaze from \"./ellermaze.js\";\nimport DividedMaze from \"./dividedmaze.js\";\nimport IceyMaze from \"./iceymaze.js\";\nimport Rogue from \"./rogue.js\";\nexport default { Arena, Uniform, Cellular, Digger, EllerMaze, DividedMaze, IceyMaze, Rogue };\n","import Map from \"./map.js\";\n/**\n * @class Simple empty rectangular room\n * @augments ROT.Map\n */\nexport default class Arena extends Map {\n    create(callback) {\n        let w = this._width - 1;\n        let h = this._height - 1;\n        for (let i = 0; i <= w; i++) {\n            for (let j = 0; j <= h; j++) {\n                let empty = (i && j && i < w && j < h);\n                callback(i, j, empty ? 0 : 1);\n            }\n        }\n        return this;\n    }\n}\n","import { DEFAULT_WIDTH, DEFAULT_HEIGHT } from \"../constants.js\";\n;\nexport default class Map {\n    /**\n     * @class Base map generator\n     * @param {int} [width=ROT.DEFAULT_WIDTH]\n     * @param {int} [height=ROT.DEFAULT_HEIGHT]\n     */\n    constructor(width = DEFAULT_WIDTH, height = DEFAULT_HEIGHT) {\n        this._width = width;\n        this._height = height;\n    }\n    ;\n    _fillMap(value) {\n        let map = [];\n        for (let i = 0; i < this._width; i++) {\n            map.push([]);\n            for (let j = 0; j < this._height; j++) {\n                map[i].push(value);\n            }\n        }\n        return map;\n    }\n}\n","import Dungeon from \"./dungeon.js\";\nimport { Room, Corridor } from \"./features.js\";\nimport RNG from \"../rng.js\";\n;\n/**\n * @class Dungeon generator which tries to fill the space evenly. Generates independent rooms and tries to connect them.\n * @augments ROT.Map.Dungeon\n */\nexport default class Uniform extends Dungeon {\n    constructor(width, height, options) {\n        super(width, height);\n        this._options = {\n            roomWidth: [3, 9],\n            roomHeight: [3, 5],\n            roomDugPercentage: 0.1,\n            timeLimit: 1000 /* we stop after this much time has passed (msec) */\n        };\n        Object.assign(this._options, options);\n        this._map = [];\n        this._dug = 0;\n        this._roomAttempts = 20; /* new room is created N-times until is considered as impossible to generate */\n        this._corridorAttempts = 20; /* corridors are tried N-times until the level is considered as impossible to connect */\n        this._connected = []; /* list of already connected rooms */\n        this._unconnected = []; /* list of remaining unconnected rooms */\n        this._digCallback = this._digCallback.bind(this);\n        this._canBeDugCallback = this._canBeDugCallback.bind(this);\n        this._isWallCallback = this._isWallCallback.bind(this);\n    }\n    /**\n     * Create a map. If the time limit has been hit, returns null.\n     * @see ROT.Map#create\n     */\n    create(callback) {\n        let t1 = Date.now();\n        while (1) {\n            let t2 = Date.now();\n            if (t2 - t1 > this._options.timeLimit) {\n                return null;\n            } /* time limit! */\n            this._map = this._fillMap(1);\n            this._dug = 0;\n            this._rooms = [];\n            this._unconnected = [];\n            this._generateRooms();\n            if (this._rooms.length < 2) {\n                continue;\n            }\n            if (this._generateCorridors()) {\n                break;\n            }\n        }\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this._map[i][j]);\n                }\n            }\n        }\n        return this;\n    }\n    /**\n     * Generates a suitable amount of rooms\n     */\n    _generateRooms() {\n        let w = this._width - 2;\n        let h = this._height - 2;\n        let room;\n        do {\n            room = this._generateRoom();\n            if (this._dug / (w * h) > this._options.roomDugPercentage) {\n                break;\n            } /* achieved requested amount of free space */\n        } while (room);\n        /* either enough rooms, or not able to generate more of them :) */\n    }\n    /**\n     * Try to generate one room\n     */\n    _generateRoom() {\n        let count = 0;\n        while (count < this._roomAttempts) {\n            count++;\n            let room = Room.createRandom(this._width, this._height, this._options);\n            if (!room.isValid(this._isWallCallback, this._canBeDugCallback)) {\n                continue;\n            }\n            room.create(this._digCallback);\n            this._rooms.push(room);\n            return room;\n        }\n        /* no room was generated in a given number of attempts */\n        return null;\n    }\n    /**\n     * Generates connectors beween rooms\n     * @returns {bool} success Was this attempt successfull?\n     */\n    _generateCorridors() {\n        let cnt = 0;\n        while (cnt < this._corridorAttempts) {\n            cnt++;\n            this._corridors = [];\n            /* dig rooms into a clear map */\n            this._map = this._fillMap(1);\n            for (let i = 0; i < this._rooms.length; i++) {\n                let room = this._rooms[i];\n                room.clearDoors();\n                room.create(this._digCallback);\n            }\n            this._unconnected = RNG.shuffle(this._rooms.slice());\n            this._connected = [];\n            if (this._unconnected.length) {\n                this._connected.push(this._unconnected.pop());\n            } /* first one is always connected */\n            while (1) {\n                /* 1. pick random connected room */\n                let connected = RNG.getItem(this._connected);\n                if (!connected) {\n                    break;\n                }\n                /* 2. find closest unconnected */\n                let room1 = this._closestRoom(this._unconnected, connected);\n                if (!room1) {\n                    break;\n                }\n                /* 3. connect it to closest connected */\n                let room2 = this._closestRoom(this._connected, room1);\n                if (!room2) {\n                    break;\n                }\n                let ok = this._connectRooms(room1, room2);\n                if (!ok) {\n                    break;\n                } /* stop connecting, re-shuffle */\n                if (!this._unconnected.length) {\n                    return true;\n                } /* done; no rooms remain */\n            }\n        }\n        return false;\n    }\n    ;\n    /**\n     * For a given room, find the closest one from the list\n     */\n    _closestRoom(rooms, room) {\n        let dist = Infinity;\n        let center = room.getCenter();\n        let result = null;\n        for (let i = 0; i < rooms.length; i++) {\n            let r = rooms[i];\n            let c = r.getCenter();\n            let dx = c[0] - center[0];\n            let dy = c[1] - center[1];\n            let d = dx * dx + dy * dy;\n            if (d < dist) {\n                dist = d;\n                result = r;\n            }\n        }\n        return result;\n    }\n    _connectRooms(room1, room2) {\n        /*\n            room1.debug();\n            room2.debug();\n        */\n        let center1 = room1.getCenter();\n        let center2 = room2.getCenter();\n        let diffX = center2[0] - center1[0];\n        let diffY = center2[1] - center1[1];\n        let start;\n        let end;\n        let dirIndex1, dirIndex2, min, max, index;\n        if (Math.abs(diffX) < Math.abs(diffY)) { /* first try connecting north-south walls */\n            dirIndex1 = (diffY > 0 ? 2 : 0);\n            dirIndex2 = (dirIndex1 + 2) % 4;\n            min = room2.getLeft();\n            max = room2.getRight();\n            index = 0;\n        }\n        else { /* first try connecting east-west walls */\n            dirIndex1 = (diffX > 0 ? 1 : 3);\n            dirIndex2 = (dirIndex1 + 2) % 4;\n            min = room2.getTop();\n            max = room2.getBottom();\n            index = 1;\n        }\n        start = this._placeInWall(room1, dirIndex1); /* corridor will start here */\n        if (!start) {\n            return false;\n        }\n        if (start[index] >= min && start[index] <= max) { /* possible to connect with straight line (I-like) */\n            end = start.slice();\n            let value = 0;\n            switch (dirIndex2) {\n                case 0:\n                    value = room2.getTop() - 1;\n                    break;\n                case 1:\n                    value = room2.getRight() + 1;\n                    break;\n                case 2:\n                    value = room2.getBottom() + 1;\n                    break;\n                case 3:\n                    value = room2.getLeft() - 1;\n                    break;\n            }\n            end[(index + 1) % 2] = value;\n            this._digLine([start, end]);\n        }\n        else if (start[index] < min - 1 || start[index] > max + 1) { /* need to switch target wall (L-like) */\n            let diff = start[index] - center2[index];\n            let rotation = 0;\n            switch (dirIndex2) {\n                case 0:\n                case 1:\n                    rotation = (diff < 0 ? 3 : 1);\n                    break;\n                case 2:\n                case 3:\n                    rotation = (diff < 0 ? 1 : 3);\n                    break;\n            }\n            dirIndex2 = (dirIndex2 + rotation) % 4;\n            end = this._placeInWall(room2, dirIndex2);\n            if (!end) {\n                return false;\n            }\n            let mid = [0, 0];\n            mid[index] = start[index];\n            let index2 = (index + 1) % 2;\n            mid[index2] = end[index2];\n            this._digLine([start, mid, end]);\n        }\n        else { /* use current wall pair, but adjust the line in the middle (S-like) */\n            let index2 = (index + 1) % 2;\n            end = this._placeInWall(room2, dirIndex2);\n            if (!end) {\n                return false;\n            }\n            let mid = Math.round((end[index2] + start[index2]) / 2);\n            let mid1 = [0, 0];\n            let mid2 = [0, 0];\n            mid1[index] = start[index];\n            mid1[index2] = mid;\n            mid2[index] = end[index];\n            mid2[index2] = mid;\n            this._digLine([start, mid1, mid2, end]);\n        }\n        room1.addDoor(start[0], start[1]);\n        room2.addDoor(end[0], end[1]);\n        index = this._unconnected.indexOf(room1);\n        if (index != -1) {\n            this._unconnected.splice(index, 1);\n            this._connected.push(room1);\n        }\n        index = this._unconnected.indexOf(room2);\n        if (index != -1) {\n            this._unconnected.splice(index, 1);\n            this._connected.push(room2);\n        }\n        return true;\n    }\n    _placeInWall(room, dirIndex) {\n        let start = [0, 0];\n        let dir = [0, 0];\n        let length = 0;\n        switch (dirIndex) {\n            case 0:\n                dir = [1, 0];\n                start = [room.getLeft(), room.getTop() - 1];\n                length = room.getRight() - room.getLeft() + 1;\n                break;\n            case 1:\n                dir = [0, 1];\n                start = [room.getRight() + 1, room.getTop()];\n                length = room.getBottom() - room.getTop() + 1;\n                break;\n            case 2:\n                dir = [1, 0];\n                start = [room.getLeft(), room.getBottom() + 1];\n                length = room.getRight() - room.getLeft() + 1;\n                break;\n            case 3:\n                dir = [0, 1];\n                start = [room.getLeft() - 1, room.getTop()];\n                length = room.getBottom() - room.getTop() + 1;\n                break;\n        }\n        let avail = [];\n        let lastBadIndex = -2;\n        for (let i = 0; i < length; i++) {\n            let x = start[0] + i * dir[0];\n            let y = start[1] + i * dir[1];\n            avail.push(null);\n            let isWall = (this._map[x][y] == 1);\n            if (isWall) {\n                if (lastBadIndex != i - 1) {\n                    avail[i] = [x, y];\n                }\n            }\n            else {\n                lastBadIndex = i;\n                if (i) {\n                    avail[i - 1] = null;\n                }\n            }\n        }\n        for (let i = avail.length - 1; i >= 0; i--) {\n            if (!avail[i]) {\n                avail.splice(i, 1);\n            }\n        }\n        return (avail.length ? RNG.getItem(avail) : null);\n    }\n    /**\n     * Dig a polyline.\n     */\n    _digLine(points) {\n        for (let i = 1; i < points.length; i++) {\n            let start = points[i - 1];\n            let end = points[i];\n            let corridor = new Corridor(start[0], start[1], end[0], end[1]);\n            corridor.create(this._digCallback);\n            this._corridors.push(corridor);\n        }\n    }\n    _digCallback(x, y, value) {\n        this._map[x][y] = value;\n        if (value == 0) {\n            this._dug++;\n        }\n    }\n    _isWallCallback(x, y) {\n        if (x < 0 || y < 0 || x >= this._width || y >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _canBeDugCallback(x, y) {\n        if (x < 1 || y < 1 || x + 1 >= this._width || y + 1 >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n}\n","import Map from \"./map.js\";\n/**\n * @class Dungeon map: has rooms and corridors\n * @augments ROT.Map\n */\nexport default class Dungeon extends Map {\n    constructor(width, height) {\n        super(width, height);\n        this._rooms = [];\n        this._corridors = [];\n    }\n    /**\n     * Get all generated rooms\n     * @returns {ROT.Map.Feature.Room[]}\n     */\n    getRooms() { return this._rooms; }\n    /**\n     * Get all generated corridors\n     * @returns {ROT.Map.Feature.Corridor[]}\n     */\n    getCorridors() { return this._corridors; }\n}\n","import RNG from \"../rng.js\";\n;\n/**\n * @class Dungeon feature; has own .create() method\n */\nclass Feature {\n}\n/**\n * @class Room\n * @augments ROT.Map.Feature\n * @param {int} x1\n * @param {int} y1\n * @param {int} x2\n * @param {int} y2\n * @param {int} [doorX]\n * @param {int} [doorY]\n */\nexport class Room extends Feature {\n    constructor(x1, y1, x2, y2, doorX, doorY) {\n        super();\n        this._x1 = x1;\n        this._y1 = y1;\n        this._x2 = x2;\n        this._y2 = y2;\n        this._doors = {};\n        if (doorX !== undefined && doorY !== undefined) {\n            this.addDoor(doorX, doorY);\n        }\n    }\n    ;\n    /**\n     * Room of random size, with a given doors and direction\n     */\n    static createRandomAt(x, y, dx, dy, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        if (dx == 1) { /* to the right */\n            let y2 = y - Math.floor(RNG.getUniform() * height);\n            return new this(x + 1, y2, x + width, y2 + height - 1, x, y);\n        }\n        if (dx == -1) { /* to the left */\n            let y2 = y - Math.floor(RNG.getUniform() * height);\n            return new this(x - width, y2, x - 1, y2 + height - 1, x, y);\n        }\n        if (dy == 1) { /* to the bottom */\n            let x2 = x - Math.floor(RNG.getUniform() * width);\n            return new this(x2, y + 1, x2 + width - 1, y + height, x, y);\n        }\n        if (dy == -1) { /* to the top */\n            let x2 = x - Math.floor(RNG.getUniform() * width);\n            return new this(x2, y - height, x2 + width - 1, y - 1, x, y);\n        }\n        throw new Error(\"dx or dy must be 1 or -1\");\n    }\n    /**\n     * Room of random size, positioned around center coords\n     */\n    static createRandomCenter(cx, cy, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        let x1 = cx - Math.floor(RNG.getUniform() * width);\n        let y1 = cy - Math.floor(RNG.getUniform() * height);\n        let x2 = x1 + width - 1;\n        let y2 = y1 + height - 1;\n        return new this(x1, y1, x2, y2);\n    }\n    /**\n     * Room of random size within a given dimensions\n     */\n    static createRandom(availWidth, availHeight, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        let left = availWidth - width - 1;\n        let top = availHeight - height - 1;\n        let x1 = 1 + Math.floor(RNG.getUniform() * left);\n        let y1 = 1 + Math.floor(RNG.getUniform() * top);\n        let x2 = x1 + width - 1;\n        let y2 = y1 + height - 1;\n        return new this(x1, y1, x2, y2);\n    }\n    addDoor(x, y) {\n        this._doors[x + \",\" + y] = 1;\n        return this;\n    }\n    /**\n     * @param {function}\n     */\n    getDoors(cb) {\n        for (let key in this._doors) {\n            let parts = key.split(\",\");\n            cb(parseInt(parts[0]), parseInt(parts[1]));\n        }\n        return this;\n    }\n    clearDoors() {\n        this._doors = {};\n        return this;\n    }\n    addDoors(isWallCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x != left && x != right && y != top && y != bottom) {\n                    continue;\n                }\n                if (isWallCallback(x, y)) {\n                    continue;\n                }\n                this.addDoor(x, y);\n            }\n        }\n        return this;\n    }\n    debug() {\n        console.log(\"room\", this._x1, this._y1, this._x2, this._y2);\n    }\n    isValid(isWallCallback, canBeDugCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x == left || x == right || y == top || y == bottom) {\n                    if (!isWallCallback(x, y)) {\n                        return false;\n                    }\n                }\n                else {\n                    if (!canBeDugCallback(x, y)) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n    /**\n     * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty, 1 = wall, 2 = door. Multiple doors are allowed.\n     */\n    create(digCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        let value = 0;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x + \",\" + y in this._doors) {\n                    value = 2;\n                }\n                else if (x == left || x == right || y == top || y == bottom) {\n                    value = 1;\n                }\n                else {\n                    value = 0;\n                }\n                digCallback(x, y, value);\n            }\n        }\n    }\n    getCenter() {\n        return [Math.round((this._x1 + this._x2) / 2), Math.round((this._y1 + this._y2) / 2)];\n    }\n    getLeft() { return this._x1; }\n    getRight() { return this._x2; }\n    getTop() { return this._y1; }\n    getBottom() { return this._y2; }\n}\n/**\n * @class Corridor\n * @augments ROT.Map.Feature\n * @param {int} startX\n * @param {int} startY\n * @param {int} endX\n * @param {int} endY\n */\nexport class Corridor extends Feature {\n    constructor(startX, startY, endX, endY) {\n        super();\n        this._startX = startX;\n        this._startY = startY;\n        this._endX = endX;\n        this._endY = endY;\n        this._endsWithAWall = true;\n    }\n    static createRandomAt(x, y, dx, dy, options) {\n        let min = options.corridorLength[0];\n        let max = options.corridorLength[1];\n        let length = RNG.getUniformInt(min, max);\n        return new this(x, y, x + dx * length, y + dy * length);\n    }\n    debug() {\n        console.log(\"corridor\", this._startX, this._startY, this._endX, this._endY);\n    }\n    isValid(isWallCallback, canBeDugCallback) {\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        let length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        let nx = dy;\n        let ny = -dx;\n        let ok = true;\n        for (let i = 0; i < length; i++) {\n            let x = sx + i * dx;\n            let y = sy + i * dy;\n            if (!canBeDugCallback(x, y)) {\n                ok = false;\n            }\n            if (!isWallCallback(x + nx, y + ny)) {\n                ok = false;\n            }\n            if (!isWallCallback(x - nx, y - ny)) {\n                ok = false;\n            }\n            if (!ok) {\n                length = i;\n                this._endX = x - dx;\n                this._endY = y - dy;\n                break;\n            }\n        }\n        /**\n         * If the length degenerated, this corridor might be invalid\n         */\n        /* not supported */\n        if (length == 0) {\n            return false;\n        }\n        /* length 1 allowed only if the next space is empty */\n        if (length == 1 && isWallCallback(this._endX + dx, this._endY + dy)) {\n            return false;\n        }\n        /**\n         * We do not want the corridor to crash into a corner of a room;\n         * if any of the ending corners is empty, the N+1th cell of this corridor must be empty too.\n         *\n         * Situation:\n         * #######1\n         * .......?\n         * #######2\n         *\n         * The corridor was dug from left to right.\n         * 1, 2 - problematic corners, ? = N+1th cell (not dug)\n         */\n        let firstCornerBad = !isWallCallback(this._endX + dx + nx, this._endY + dy + ny);\n        let secondCornerBad = !isWallCallback(this._endX + dx - nx, this._endY + dy - ny);\n        this._endsWithAWall = isWallCallback(this._endX + dx, this._endY + dy);\n        if ((firstCornerBad || secondCornerBad) && this._endsWithAWall) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty.\n     */\n    create(digCallback) {\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        let length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        for (let i = 0; i < length; i++) {\n            let x = sx + i * dx;\n            let y = sy + i * dy;\n            digCallback(x, y, 0);\n        }\n        return true;\n    }\n    createPriorityWalls(priorityWallCallback) {\n        if (!this._endsWithAWall) {\n            return;\n        }\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        let nx = dy;\n        let ny = -dx;\n        priorityWallCallback(this._endX + dx, this._endY + dy);\n        priorityWallCallback(this._endX + nx, this._endY + ny);\n        priorityWallCallback(this._endX - nx, this._endY - ny);\n    }\n}\n","import Map from \"./map.js\";\nimport { DIRS } from \"../constants.js\";\nimport RNG from \"../rng.js\";\n;\n/**\n * @class Cellular automaton map generator\n * @augments ROT.Map\n * @param {int} [width=ROT.DEFAULT_WIDTH]\n * @param {int} [height=ROT.DEFAULT_HEIGHT]\n * @param {object} [options] Options\n * @param {int[]} [options.born] List of neighbor counts for a new cell to be born in empty space\n * @param {int[]} [options.survive] List of neighbor counts for an existing  cell to survive\n * @param {int} [options.topology] Topology 4 or 6 or 8\n */\nexport default class Cellular extends Map {\n    constructor(width, height, options = {}) {\n        super(width, height);\n        this._options = {\n            born: [5, 6, 7, 8],\n            survive: [4, 5, 6, 7, 8],\n            topology: 8\n        };\n        this.setOptions(options);\n        this._dirs = DIRS[this._options.topology];\n        this._map = this._fillMap(0);\n    }\n    /**\n     * Fill the map with random values\n     * @param {float} probability Probability for a cell to become alive; 0 = all empty, 1 = all full\n     */\n    randomize(probability) {\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                this._map[i][j] = (RNG.getUniform() < probability ? 1 : 0);\n            }\n        }\n        return this;\n    }\n    /**\n     * Change options.\n     * @see ROT.Map.Cellular\n     */\n    setOptions(options) { Object.assign(this._options, options); }\n    set(x, y, value) { this._map[x][y] = value; }\n    create(callback) {\n        let newMap = this._fillMap(0);\n        let born = this._options.born;\n        let survive = this._options.survive;\n        for (let j = 0; j < this._height; j++) {\n            let widthStep = 1;\n            let widthStart = 0;\n            if (this._options.topology == 6) {\n                widthStep = 2;\n                widthStart = j % 2;\n            }\n            for (let i = widthStart; i < this._width; i += widthStep) {\n                let cur = this._map[i][j];\n                let ncount = this._getNeighbors(i, j);\n                if (cur && survive.indexOf(ncount) != -1) { /* survive */\n                    newMap[i][j] = 1;\n                }\n                else if (!cur && born.indexOf(ncount) != -1) { /* born */\n                    newMap[i][j] = 1;\n                }\n            }\n        }\n        this._map = newMap;\n        callback && this._serviceCallback(callback);\n    }\n    _serviceCallback(callback) {\n        for (let j = 0; j < this._height; j++) {\n            let widthStep = 1;\n            let widthStart = 0;\n            if (this._options.topology == 6) {\n                widthStep = 2;\n                widthStart = j % 2;\n            }\n            for (let i = widthStart; i < this._width; i += widthStep) {\n                callback(i, j, this._map[i][j]);\n            }\n        }\n    }\n    /**\n     * Get neighbor count at [i,j] in this._map\n     */\n    _getNeighbors(cx, cy) {\n        let result = 0;\n        for (let i = 0; i < this._dirs.length; i++) {\n            let dir = this._dirs[i];\n            let x = cx + dir[0];\n            let y = cy + dir[1];\n            if (x < 0 || x >= this._width || y < 0 || y >= this._height) {\n                continue;\n            }\n            result += (this._map[x][y] == 1 ? 1 : 0);\n        }\n        return result;\n    }\n    /**\n     * Make sure every non-wall space is accessible.\n     * @param {function} callback to call to display map when do\n     * @param {int} value to consider empty space - defaults to 0\n     * @param {function} callback to call when a new connection is made\n     */\n    connect(callback, value, connectionCallback) {\n        if (!value)\n            value = 0;\n        let allFreeSpace = [];\n        let notConnected = {};\n        // find all free space\n        let widthStep = 1;\n        let widthStarts = [0, 0];\n        if (this._options.topology == 6) {\n            widthStep = 2;\n            widthStarts = [0, 1];\n        }\n        for (let y = 0; y < this._height; y++) {\n            for (let x = widthStarts[y % 2]; x < this._width; x += widthStep) {\n                if (this._freeSpace(x, y, value)) {\n                    let p = [x, y];\n                    notConnected[this._pointKey(p)] = p;\n                    allFreeSpace.push([x, y]);\n                }\n            }\n        }\n        let start = allFreeSpace[RNG.getUniformInt(0, allFreeSpace.length - 1)];\n        let key = this._pointKey(start);\n        let connected = {};\n        connected[key] = start;\n        delete notConnected[key];\n        // find what's connected to the starting point\n        this._findConnected(connected, notConnected, [start], false, value);\n        while (Object.keys(notConnected).length > 0) {\n            // find two points from notConnected to connected\n            let p = this._getFromTo(connected, notConnected);\n            let from = p[0]; // notConnected\n            let to = p[1]; // connected\n            // find everything connected to the starting point\n            let local = {};\n            local[this._pointKey(from)] = from;\n            this._findConnected(local, notConnected, [from], true, value);\n            // connect to a connected cell\n            let tunnelFn = (this._options.topology == 6 ? this._tunnelToConnected6 : this._tunnelToConnected);\n            tunnelFn.call(this, to, from, connected, notConnected, value, connectionCallback);\n            // now all of local is connected\n            for (let k in local) {\n                let pp = local[k];\n                this._map[pp[0]][pp[1]] = value;\n                connected[k] = pp;\n                delete notConnected[k];\n            }\n        }\n        callback && this._serviceCallback(callback);\n    }\n    /**\n     * Find random points to connect. Search for the closest point in the larger space.\n     * This is to minimize the length of the passage while maintaining good performance.\n     */\n    _getFromTo(connected, notConnected) {\n        let from = [0, 0], to = [0, 0], d;\n        let connectedKeys = Object.keys(connected);\n        let notConnectedKeys = Object.keys(notConnected);\n        for (let i = 0; i < 5; i++) {\n            if (connectedKeys.length < notConnectedKeys.length) {\n                let keys = connectedKeys;\n                to = connected[keys[RNG.getUniformInt(0, keys.length - 1)]];\n                from = this._getClosest(to, notConnected);\n            }\n            else {\n                let keys = notConnectedKeys;\n                from = notConnected[keys[RNG.getUniformInt(0, keys.length - 1)]];\n                to = this._getClosest(from, connected);\n            }\n            d = (from[0] - to[0]) * (from[0] - to[0]) + (from[1] - to[1]) * (from[1] - to[1]);\n            if (d < 64) {\n                break;\n            }\n        }\n        // console.log(\">>> connected=\" + to + \" notConnected=\" + from + \" dist=\" + d);\n        return [from, to];\n    }\n    _getClosest(point, space) {\n        let minPoint = null;\n        let minDist = null;\n        for (let k in space) {\n            let p = space[k];\n            let d = (p[0] - point[0]) * (p[0] - point[0]) + (p[1] - point[1]) * (p[1] - point[1]);\n            if (minDist == null || d < minDist) {\n                minDist = d;\n                minPoint = p;\n            }\n        }\n        return minPoint;\n    }\n    _findConnected(connected, notConnected, stack, keepNotConnected, value) {\n        while (stack.length > 0) {\n            let p = stack.splice(0, 1)[0];\n            let tests;\n            if (this._options.topology == 6) {\n                tests = [\n                    [p[0] + 2, p[1]],\n                    [p[0] + 1, p[1] - 1],\n                    [p[0] - 1, p[1] - 1],\n                    [p[0] - 2, p[1]],\n                    [p[0] - 1, p[1] + 1],\n                    [p[0] + 1, p[1] + 1],\n                ];\n            }\n            else {\n                tests = [\n                    [p[0] + 1, p[1]],\n                    [p[0] - 1, p[1]],\n                    [p[0], p[1] + 1],\n                    [p[0], p[1] - 1]\n                ];\n            }\n            for (let i = 0; i < tests.length; i++) {\n                let key = this._pointKey(tests[i]);\n                if (connected[key] == null && this._freeSpace(tests[i][0], tests[i][1], value)) {\n                    connected[key] = tests[i];\n                    if (!keepNotConnected) {\n                        delete notConnected[key];\n                    }\n                    stack.push(tests[i]);\n                }\n            }\n        }\n    }\n    _tunnelToConnected(to, from, connected, notConnected, value, connectionCallback) {\n        let a, b;\n        if (from[0] < to[0]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        for (let xx = a[0]; xx <= b[0]; xx++) {\n            this._map[xx][a[1]] = value;\n            let p = [xx, a[1]];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback && a[0] < b[0]) {\n            connectionCallback(a, [b[0], a[1]]);\n        }\n        // x is now fixed\n        let x = b[0];\n        if (from[1] < to[1]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        for (let yy = a[1]; yy < b[1]; yy++) {\n            this._map[x][yy] = value;\n            let p = [x, yy];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback && a[1] < b[1]) {\n            connectionCallback([b[0], a[1]], [b[0], b[1]]);\n        }\n    }\n    _tunnelToConnected6(to, from, connected, notConnected, value, connectionCallback) {\n        let a, b;\n        if (from[0] < to[0]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        // tunnel diagonally until horizontally level\n        let xx = a[0];\n        let yy = a[1];\n        while (!(xx == b[0] && yy == b[1])) {\n            let stepWidth = 2;\n            if (yy < b[1]) {\n                yy++;\n                stepWidth = 1;\n            }\n            else if (yy > b[1]) {\n                yy--;\n                stepWidth = 1;\n            }\n            if (xx < b[0]) {\n                xx += stepWidth;\n            }\n            else if (xx > b[0]) {\n                xx -= stepWidth;\n            }\n            else if (b[1] % 2) {\n                // Won't step outside map if destination on is map's right edge\n                xx -= stepWidth;\n            }\n            else {\n                // ditto for left edge\n                xx += stepWidth;\n            }\n            this._map[xx][yy] = value;\n            let p = [xx, yy];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback) {\n            connectionCallback(from, to);\n        }\n    }\n    _freeSpace(x, y, value) {\n        return x >= 0 && x < this._width && y >= 0 && y < this._height && this._map[x][y] == value;\n    }\n    _pointKey(p) { return p[0] + \".\" + p[1]; }\n}\n","import Dungeon from \"./dungeon.js\";\nimport { Room, Corridor } from \"./features.js\";\nimport RNG from \"../rng.js\";\nimport { DIRS } from \"../constants.js\";\nconst FEATURES = {\n    \"room\": Room,\n    \"corridor\": Corridor\n};\n/**\n * Random dungeon generator using human-like digging patterns.\n * Heavily based on Mike Anderson's ideas from the \"Tyrant\" algo, mentioned at\n * http://www.roguebasin.roguelikedevelopment.org/index.php?title=Dungeon-Building_Algorithm.\n */\nexport default class Digger extends Dungeon {\n    constructor(width, height, options = {}) {\n        super(width, height);\n        this._options = Object.assign({\n            roomWidth: [3, 9],\n            roomHeight: [3, 5],\n            corridorLength: [3, 10],\n            dugPercentage: 0.2,\n            timeLimit: 1000 /* we stop after this much time has passed (msec) */\n        }, options);\n        this._features = {\n            \"room\": 4,\n            \"corridor\": 4\n        };\n        this._map = [];\n        this._featureAttempts = 20; /* how many times do we try to create a feature on a suitable wall */\n        this._walls = {}; /* these are available for digging */\n        this._dug = 0;\n        this._digCallback = this._digCallback.bind(this);\n        this._canBeDugCallback = this._canBeDugCallback.bind(this);\n        this._isWallCallback = this._isWallCallback.bind(this);\n        this._priorityWallCallback = this._priorityWallCallback.bind(this);\n    }\n    create(callback) {\n        this._rooms = [];\n        this._corridors = [];\n        this._map = this._fillMap(1);\n        this._walls = {};\n        this._dug = 0;\n        let area = (this._width - 2) * (this._height - 2);\n        this._firstRoom();\n        let t1 = Date.now();\n        let priorityWalls;\n        do {\n            priorityWalls = 0;\n            let t2 = Date.now();\n            if (t2 - t1 > this._options.timeLimit) {\n                break;\n            }\n            /* find a good wall */\n            let wall = this._findWall();\n            if (!wall) {\n                break;\n            } /* no more walls */\n            let parts = wall.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            let dir = this._getDiggingDirection(x, y);\n            if (!dir) {\n                continue;\n            } /* this wall is not suitable */\n            //\t\tconsole.log(\"wall\", x, y);\n            /* try adding a feature */\n            let featureAttempts = 0;\n            do {\n                featureAttempts++;\n                if (this._tryFeature(x, y, dir[0], dir[1])) { /* feature added */\n                    //if (this._rooms.length + this._corridors.length == 2) { this._rooms[0].addDoor(x, y); } /* first room oficially has doors */\n                    this._removeSurroundingWalls(x, y);\n                    this._removeSurroundingWalls(x - dir[0], y - dir[1]);\n                    break;\n                }\n            } while (featureAttempts < this._featureAttempts);\n            for (let id in this._walls) {\n                if (this._walls[id] > 1) {\n                    priorityWalls++;\n                }\n            }\n        } while (this._dug / area < this._options.dugPercentage || priorityWalls); /* fixme number of priority walls */\n        this._addDoors();\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this._map[i][j]);\n                }\n            }\n        }\n        this._walls = {};\n        this._map = [];\n        return this;\n    }\n    _digCallback(x, y, value) {\n        if (value == 0 || value == 2) { /* empty */\n            this._map[x][y] = 0;\n            this._dug++;\n        }\n        else { /* wall */\n            this._walls[x + \",\" + y] = 1;\n        }\n    }\n    _isWallCallback(x, y) {\n        if (x < 0 || y < 0 || x >= this._width || y >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _canBeDugCallback(x, y) {\n        if (x < 1 || y < 1 || x + 1 >= this._width || y + 1 >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _priorityWallCallback(x, y) { this._walls[x + \",\" + y] = 2; }\n    ;\n    _firstRoom() {\n        let cx = Math.floor(this._width / 2);\n        let cy = Math.floor(this._height / 2);\n        let room = Room.createRandomCenter(cx, cy, this._options);\n        this._rooms.push(room);\n        room.create(this._digCallback);\n    }\n    /**\n     * Get a suitable wall\n     */\n    _findWall() {\n        let prio1 = [];\n        let prio2 = [];\n        for (let id in this._walls) {\n            let prio = this._walls[id];\n            if (prio == 2) {\n                prio2.push(id);\n            }\n            else {\n                prio1.push(id);\n            }\n        }\n        let arr = (prio2.length ? prio2 : prio1);\n        if (!arr.length) {\n            return null;\n        } /* no walls :/ */\n        let id = RNG.getItem(arr.sort()); // sort to make the order deterministic\n        delete this._walls[id];\n        return id;\n    }\n    /**\n     * Tries adding a feature\n     * @returns {bool} was this a successful try?\n     */\n    _tryFeature(x, y, dx, dy) {\n        let featureName = RNG.getWeightedValue(this._features);\n        let ctor = FEATURES[featureName];\n        let feature = ctor.createRandomAt(x, y, dx, dy, this._options);\n        if (!feature.isValid(this._isWallCallback, this._canBeDugCallback)) {\n            //\t\tconsole.log(\"not valid\");\n            //\t\tfeature.debug();\n            return false;\n        }\n        feature.create(this._digCallback);\n        //\tfeature.debug();\n        if (feature instanceof Room) {\n            this._rooms.push(feature);\n        }\n        if (feature instanceof Corridor) {\n            feature.createPriorityWalls(this._priorityWallCallback);\n            this._corridors.push(feature);\n        }\n        return true;\n    }\n    _removeSurroundingWalls(cx, cy) {\n        let deltas = DIRS[4];\n        for (let i = 0; i < deltas.length; i++) {\n            let delta = deltas[i];\n            let x = cx + delta[0];\n            let y = cy + delta[1];\n            delete this._walls[x + \",\" + y];\n            x = cx + 2 * delta[0];\n            y = cy + 2 * delta[1];\n            delete this._walls[x + \",\" + y];\n        }\n    }\n    /**\n     * Returns vector in \"digging\" direction, or false, if this does not exist (or is not unique)\n     */\n    _getDiggingDirection(cx, cy) {\n        if (cx <= 0 || cy <= 0 || cx >= this._width - 1 || cy >= this._height - 1) {\n            return null;\n        }\n        let result = null;\n        let deltas = DIRS[4];\n        for (let i = 0; i < deltas.length; i++) {\n            let delta = deltas[i];\n            let x = cx + delta[0];\n            let y = cy + delta[1];\n            if (!this._map[x][y]) { /* there already is another empty neighbor! */\n                if (result) {\n                    return null;\n                }\n                result = delta;\n            }\n        }\n        /* no empty neighbor */\n        if (!result) {\n            return null;\n        }\n        return [-result[0], -result[1]];\n    }\n    /**\n     * Find empty spaces surrounding rooms, and apply doors.\n     */\n    _addDoors() {\n        let data = this._map;\n        function isWallCallback(x, y) {\n            return (data[x][y] == 1);\n        }\n        ;\n        for (let i = 0; i < this._rooms.length; i++) {\n            let room = this._rooms[i];\n            room.clearDoors();\n            room.addDoors(isWallCallback);\n        }\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * Join lists with \"i\" and \"i+1\"\n */\nfunction addToList(i, L, R) {\n    R[L[i + 1]] = R[i];\n    L[R[i]] = L[i + 1];\n    R[i] = i + 1;\n    L[i + 1] = i;\n}\n/**\n * Remove \"i\" from its list\n */\nfunction removeFromList(i, L, R) {\n    R[L[i]] = R[i];\n    L[R[i]] = L[i];\n    R[i] = i;\n    L[i] = i;\n}\n/**\n * Maze generator - Eller's algorithm\n * See http://homepages.cwi.nl/~tromp/maze.html for explanation\n */\nexport default class EllerMaze extends Map {\n    create(callback) {\n        let map = this._fillMap(1);\n        let w = Math.ceil((this._width - 2) / 2);\n        let rand = 9 / 24;\n        let L = [];\n        let R = [];\n        for (let i = 0; i < w; i++) {\n            L.push(i);\n            R.push(i);\n        }\n        L.push(w - 1); /* fake stop-block at the right side */\n        let j;\n        for (j = 1; j + 3 < this._height; j += 2) {\n            /* one row */\n            for (let i = 0; i < w; i++) {\n                /* cell coords (will be always empty) */\n                let x = 2 * i + 1;\n                let y = j;\n                map[x][y] = 0;\n                /* right connection */\n                if (i != L[i + 1] && RNG.getUniform() > rand) {\n                    addToList(i, L, R);\n                    map[x + 1][y] = 0;\n                }\n                /* bottom connection */\n                if (i != L[i] && RNG.getUniform() > rand) {\n                    /* remove connection */\n                    removeFromList(i, L, R);\n                }\n                else {\n                    /* create connection */\n                    map[x][y + 1] = 0;\n                }\n            }\n        }\n        /* last row */\n        for (let i = 0; i < w; i++) {\n            /* cell coords (will be always empty) */\n            let x = 2 * i + 1;\n            let y = j;\n            map[x][y] = 0;\n            /* right connection */\n            if (i != L[i + 1] && (i == L[i] || RNG.getUniform() > rand)) {\n                /* dig right also if the cell is separated, so it gets connected to the rest of maze */\n                addToList(i, L, R);\n                map[x + 1][y] = 0;\n            }\n            removeFromList(i, L, R);\n        }\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                callback(i, j, map[i][j]);\n            }\n        }\n        return this;\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * @class Recursively divided maze, http://en.wikipedia.org/wiki/Maze_generation_algorithm#Recursive_division_method\n * @augments ROT.Map\n */\nexport default class DividedMaze extends Map {\n    constructor() {\n        super(...arguments);\n        this._stack = [];\n        this._map = [];\n    }\n    create(callback) {\n        let w = this._width;\n        let h = this._height;\n        this._map = [];\n        for (let i = 0; i < w; i++) {\n            this._map.push([]);\n            for (let j = 0; j < h; j++) {\n                let border = (i == 0 || j == 0 || i + 1 == w || j + 1 == h);\n                this._map[i].push(border ? 1 : 0);\n            }\n        }\n        this._stack = [\n            [1, 1, w - 2, h - 2]\n        ];\n        this._process();\n        for (let i = 0; i < w; i++) {\n            for (let j = 0; j < h; j++) {\n                callback(i, j, this._map[i][j]);\n            }\n        }\n        this._map = [];\n        return this;\n    }\n    _process() {\n        while (this._stack.length) {\n            let room = this._stack.shift(); /* [left, top, right, bottom] */\n            this._partitionRoom(room);\n        }\n    }\n    _partitionRoom(room) {\n        let availX = [];\n        let availY = [];\n        for (let i = room[0] + 1; i < room[2]; i++) {\n            let top = this._map[i][room[1] - 1];\n            let bottom = this._map[i][room[3] + 1];\n            if (top && bottom && !(i % 2)) {\n                availX.push(i);\n            }\n        }\n        for (let j = room[1] + 1; j < room[3]; j++) {\n            let left = this._map[room[0] - 1][j];\n            let right = this._map[room[2] + 1][j];\n            if (left && right && !(j % 2)) {\n                availY.push(j);\n            }\n        }\n        if (!availX.length || !availY.length) {\n            return;\n        }\n        let x = RNG.getItem(availX);\n        let y = RNG.getItem(availY);\n        this._map[x][y] = 1;\n        let walls = [];\n        let w = [];\n        walls.push(w); /* left part */\n        for (let i = room[0]; i < x; i++) {\n            this._map[i][y] = 1;\n            if (i % 2)\n                w.push([i, y]);\n        }\n        w = [];\n        walls.push(w); /* right part */\n        for (let i = x + 1; i <= room[2]; i++) {\n            this._map[i][y] = 1;\n            if (i % 2)\n                w.push([i, y]);\n        }\n        w = [];\n        walls.push(w); /* top part */\n        for (let j = room[1]; j < y; j++) {\n            this._map[x][j] = 1;\n            if (j % 2)\n                w.push([x, j]);\n        }\n        w = [];\n        walls.push(w); /* bottom part */\n        for (let j = y + 1; j <= room[3]; j++) {\n            this._map[x][j] = 1;\n            if (j % 2)\n                w.push([x, j]);\n        }\n        let solid = RNG.getItem(walls);\n        for (let i = 0; i < walls.length; i++) {\n            let w = walls[i];\n            if (w == solid) {\n                continue;\n            }\n            let hole = RNG.getItem(w);\n            this._map[hole[0]][hole[1]] = 0;\n        }\n        this._stack.push([room[0], room[1], x - 1, y - 1]); /* left top */\n        this._stack.push([x + 1, room[1], room[2], y - 1]); /* right top */\n        this._stack.push([room[0], y + 1, x - 1, room[3]]); /* left bottom */\n        this._stack.push([x + 1, y + 1, room[2], room[3]]); /* right bottom */\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * Icey's Maze generator\n * See http://www.roguebasin.roguelikedevelopment.org/index.php?title=Simple_maze for explanation\n */\nexport default class IceyMaze extends Map {\n    constructor(width, height, regularity = 0) {\n        super(width, height);\n        this._regularity = regularity;\n        this._map = [];\n    }\n    create(callback) {\n        let width = this._width;\n        let height = this._height;\n        let map = this._fillMap(1);\n        width -= (width % 2 ? 1 : 2);\n        height -= (height % 2 ? 1 : 2);\n        let cx = 0;\n        let cy = 0;\n        let nx = 0;\n        let ny = 0;\n        let done = 0;\n        let blocked = false;\n        let dirs = [\n            [0, 0],\n            [0, 0],\n            [0, 0],\n            [0, 0]\n        ];\n        do {\n            cx = 1 + 2 * Math.floor(RNG.getUniform() * (width - 1) / 2);\n            cy = 1 + 2 * Math.floor(RNG.getUniform() * (height - 1) / 2);\n            if (!done) {\n                map[cx][cy] = 0;\n            }\n            if (!map[cx][cy]) {\n                this._randomize(dirs);\n                do {\n                    if (Math.floor(RNG.getUniform() * (this._regularity + 1)) == 0) {\n                        this._randomize(dirs);\n                    }\n                    blocked = true;\n                    for (let i = 0; i < 4; i++) {\n                        nx = cx + dirs[i][0] * 2;\n                        ny = cy + dirs[i][1] * 2;\n                        if (this._isFree(map, nx, ny, width, height)) {\n                            map[nx][ny] = 0;\n                            map[cx + dirs[i][0]][cy + dirs[i][1]] = 0;\n                            cx = nx;\n                            cy = ny;\n                            blocked = false;\n                            done++;\n                            break;\n                        }\n                    }\n                } while (!blocked);\n            }\n        } while (done + 1 < width * height / 4);\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                callback(i, j, map[i][j]);\n            }\n        }\n        this._map = [];\n        return this;\n    }\n    _randomize(dirs) {\n        for (let i = 0; i < 4; i++) {\n            dirs[i][0] = 0;\n            dirs[i][1] = 0;\n        }\n        switch (Math.floor(RNG.getUniform() * 4)) {\n            case 0:\n                dirs[0][0] = -1;\n                dirs[1][0] = 1;\n                dirs[2][1] = -1;\n                dirs[3][1] = 1;\n                break;\n            case 1:\n                dirs[3][0] = -1;\n                dirs[2][0] = 1;\n                dirs[1][1] = -1;\n                dirs[0][1] = 1;\n                break;\n            case 2:\n                dirs[2][0] = -1;\n                dirs[3][0] = 1;\n                dirs[0][1] = -1;\n                dirs[1][1] = 1;\n                break;\n            case 3:\n                dirs[1][0] = -1;\n                dirs[0][0] = 1;\n                dirs[3][1] = -1;\n                dirs[2][1] = 1;\n                break;\n        }\n    }\n    _isFree(map, x, y, width, height) {\n        if (x < 1 || y < 1 || x >= width || y >= height) {\n            return false;\n        }\n        return map[x][y];\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\nimport { DIRS } from \"../constants.js\";\n/**\n * Dungeon generator which uses the \"orginal\" Rogue dungeon generation algorithm. See http://kuoi.com/~kamikaze/GameDesign/art07_rogue_dungeon.php\n * @author hyakugei\n */\nexport default class Rogue extends Map {\n    constructor(width, height, options) {\n        super(width, height);\n        this.map = [];\n        this.rooms = [];\n        this.connectedCells = [];\n        options = Object.assign({\n            cellWidth: 3,\n            cellHeight: 3 //     ie. as an array with min-max values for each direction....\n        }, options);\n        /*\n        Set the room sizes according to the over-all width of the map,\n        and the cell sizes.\n        */\n        if (!options.hasOwnProperty(\"roomWidth\")) {\n            options[\"roomWidth\"] = this._calculateRoomSize(this._width, options[\"cellWidth\"]);\n        }\n        if (!options.hasOwnProperty(\"roomHeight\")) {\n            options[\"roomHeight\"] = this._calculateRoomSize(this._height, options[\"cellHeight\"]);\n        }\n        this._options = options;\n    }\n    create(callback) {\n        this.map = this._fillMap(1);\n        this.rooms = [];\n        this.connectedCells = [];\n        this._initRooms();\n        this._connectRooms();\n        this._connectUnconnectedRooms();\n        this._createRandomRoomConnections();\n        this._createRooms();\n        this._createCorridors();\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this.map[i][j]);\n                }\n            }\n        }\n        return this;\n    }\n    _calculateRoomSize(size, cell) {\n        let max = Math.floor((size / cell) * 0.8);\n        let min = Math.floor((size / cell) * 0.25);\n        if (min < 2) {\n            min = 2;\n        }\n        if (max < 2) {\n            max = 2;\n        }\n        return [min, max];\n    }\n    _initRooms() {\n        // create rooms array. This is the \"grid\" list from the algo.\n        for (let i = 0; i < this._options.cellWidth; i++) {\n            this.rooms.push([]);\n            for (let j = 0; j < this._options.cellHeight; j++) {\n                this.rooms[i].push({ \"x\": 0, \"y\": 0, \"width\": 0, \"height\": 0, \"connections\": [], \"cellx\": i, \"celly\": j });\n            }\n        }\n    }\n    _connectRooms() {\n        //pick random starting grid\n        let cgx = RNG.getUniformInt(0, this._options.cellWidth - 1);\n        let cgy = RNG.getUniformInt(0, this._options.cellHeight - 1);\n        let idx;\n        let ncgx;\n        let ncgy;\n        let found = false;\n        let room;\n        let otherRoom;\n        let dirToCheck;\n        // find  unconnected neighbour cells\n        do {\n            //dirToCheck = [0, 1, 2, 3, 4, 5, 6, 7];\n            dirToCheck = [0, 2, 4, 6];\n            dirToCheck = RNG.shuffle(dirToCheck);\n            do {\n                found = false;\n                idx = dirToCheck.pop();\n                ncgx = cgx + DIRS[8][idx][0];\n                ncgy = cgy + DIRS[8][idx][1];\n                if (ncgx < 0 || ncgx >= this._options.cellWidth) {\n                    continue;\n                }\n                if (ncgy < 0 || ncgy >= this._options.cellHeight) {\n                    continue;\n                }\n                room = this.rooms[cgx][cgy];\n                if (room[\"connections\"].length > 0) {\n                    // as long as this room doesn't already coonect to me, we are ok with it.\n                    if (room[\"connections\"][0][0] == ncgx && room[\"connections\"][0][1] == ncgy) {\n                        break;\n                    }\n                }\n                otherRoom = this.rooms[ncgx][ncgy];\n                if (otherRoom[\"connections\"].length == 0) {\n                    otherRoom[\"connections\"].push([cgx, cgy]);\n                    this.connectedCells.push([ncgx, ncgy]);\n                    cgx = ncgx;\n                    cgy = ncgy;\n                    found = true;\n                }\n            } while (dirToCheck.length > 0 && found == false);\n        } while (dirToCheck.length > 0);\n    }\n    _connectUnconnectedRooms() {\n        //While there are unconnected rooms, try to connect them to a random connected neighbor\n        //(if a room has no connected neighbors yet, just keep cycling, you'll fill out to it eventually).\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        this.connectedCells = RNG.shuffle(this.connectedCells);\n        let room;\n        let otherRoom;\n        let validRoom;\n        for (let i = 0; i < this._options.cellWidth; i++) {\n            for (let j = 0; j < this._options.cellHeight; j++) {\n                room = this.rooms[i][j];\n                if (room[\"connections\"].length == 0) {\n                    let directions = [0, 2, 4, 6];\n                    directions = RNG.shuffle(directions);\n                    validRoom = false;\n                    do {\n                        let dirIdx = directions.pop();\n                        let newI = i + DIRS[8][dirIdx][0];\n                        let newJ = j + DIRS[8][dirIdx][1];\n                        if (newI < 0 || newI >= cw || newJ < 0 || newJ >= ch) {\n                            continue;\n                        }\n                        otherRoom = this.rooms[newI][newJ];\n                        validRoom = true;\n                        if (otherRoom[\"connections\"].length == 0) {\n                            break;\n                        }\n                        for (let k = 0; k < otherRoom[\"connections\"].length; k++) {\n                            if (otherRoom[\"connections\"][k][0] == i && otherRoom[\"connections\"][k][1] == j) {\n                                validRoom = false;\n                                break;\n                            }\n                        }\n                        if (validRoom) {\n                            break;\n                        }\n                    } while (directions.length);\n                    if (validRoom) {\n                        room[\"connections\"].push([otherRoom[\"cellx\"], otherRoom[\"celly\"]]);\n                    }\n                    else {\n                        console.log(\"-- Unable to connect room.\");\n                    }\n                }\n            }\n        }\n    }\n    _createRandomRoomConnections() {\n        // Empty for now.\n    }\n    _createRooms() {\n        let w = this._width;\n        let h = this._height;\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        let cwp = Math.floor(this._width / cw);\n        let chp = Math.floor(this._height / ch);\n        let roomw;\n        let roomh;\n        let roomWidth = this._options[\"roomWidth\"];\n        let roomHeight = this._options[\"roomHeight\"];\n        let sx;\n        let sy;\n        let otherRoom;\n        for (let i = 0; i < cw; i++) {\n            for (let j = 0; j < ch; j++) {\n                sx = cwp * i;\n                sy = chp * j;\n                if (sx == 0) {\n                    sx = 1;\n                }\n                if (sy == 0) {\n                    sy = 1;\n                }\n                roomw = RNG.getUniformInt(roomWidth[0], roomWidth[1]);\n                roomh = RNG.getUniformInt(roomHeight[0], roomHeight[1]);\n                if (j > 0) {\n                    otherRoom = this.rooms[i][j - 1];\n                    while (sy - (otherRoom[\"y\"] + otherRoom[\"height\"]) < 3) {\n                        sy++;\n                    }\n                }\n                if (i > 0) {\n                    otherRoom = this.rooms[i - 1][j];\n                    while (sx - (otherRoom[\"x\"] + otherRoom[\"width\"]) < 3) {\n                        sx++;\n                    }\n                }\n                let sxOffset = Math.round(RNG.getUniformInt(0, cwp - roomw) / 2);\n                let syOffset = Math.round(RNG.getUniformInt(0, chp - roomh) / 2);\n                while (sx + sxOffset + roomw >= w) {\n                    if (sxOffset) {\n                        sxOffset--;\n                    }\n                    else {\n                        roomw--;\n                    }\n                }\n                while (sy + syOffset + roomh >= h) {\n                    if (syOffset) {\n                        syOffset--;\n                    }\n                    else {\n                        roomh--;\n                    }\n                }\n                sx = sx + sxOffset;\n                sy = sy + syOffset;\n                this.rooms[i][j][\"x\"] = sx;\n                this.rooms[i][j][\"y\"] = sy;\n                this.rooms[i][j][\"width\"] = roomw;\n                this.rooms[i][j][\"height\"] = roomh;\n                for (let ii = sx; ii < sx + roomw; ii++) {\n                    for (let jj = sy; jj < sy + roomh; jj++) {\n                        this.map[ii][jj] = 0;\n                    }\n                }\n            }\n        }\n    }\n    _getWallPosition(aRoom, aDirection) {\n        let rx;\n        let ry;\n        let door;\n        if (aDirection == 1 || aDirection == 3) {\n            rx = RNG.getUniformInt(aRoom[\"x\"] + 1, aRoom[\"x\"] + aRoom[\"width\"] - 2);\n            if (aDirection == 1) {\n                ry = aRoom[\"y\"] - 2;\n                door = ry + 1;\n            }\n            else {\n                ry = aRoom[\"y\"] + aRoom[\"height\"] + 1;\n                door = ry - 1;\n            }\n            this.map[rx][door] = 0; // i'm not setting a specific 'door' tile value right now, just empty space.\n        }\n        else {\n            ry = RNG.getUniformInt(aRoom[\"y\"] + 1, aRoom[\"y\"] + aRoom[\"height\"] - 2);\n            if (aDirection == 2) {\n                rx = aRoom[\"x\"] + aRoom[\"width\"] + 1;\n                door = rx - 1;\n            }\n            else {\n                rx = aRoom[\"x\"] - 2;\n                door = rx + 1;\n            }\n            this.map[door][ry] = 0; // i'm not setting a specific 'door' tile value right now, just empty space.\n        }\n        return [rx, ry];\n    }\n    _drawCorridor(startPosition, endPosition) {\n        let xOffset = endPosition[0] - startPosition[0];\n        let yOffset = endPosition[1] - startPosition[1];\n        let xpos = startPosition[0];\n        let ypos = startPosition[1];\n        let tempDist;\n        let xDir;\n        let yDir;\n        let move; // 2 element array, element 0 is the direction, element 1 is the total value to move.\n        let moves = []; // a list of 2 element arrays\n        let xAbs = Math.abs(xOffset);\n        let yAbs = Math.abs(yOffset);\n        let percent = RNG.getUniform(); // used to split the move at different places along the long axis\n        let firstHalf = percent;\n        let secondHalf = 1 - percent;\n        xDir = xOffset > 0 ? 2 : 6;\n        yDir = yOffset > 0 ? 4 : 0;\n        if (xAbs < yAbs) {\n            // move firstHalf of the y offset\n            tempDist = Math.ceil(yAbs * firstHalf);\n            moves.push([yDir, tempDist]);\n            // move all the x offset\n            moves.push([xDir, xAbs]);\n            // move sendHalf of the  y offset\n            tempDist = Math.floor(yAbs * secondHalf);\n            moves.push([yDir, tempDist]);\n        }\n        else {\n            //  move firstHalf of the x offset\n            tempDist = Math.ceil(xAbs * firstHalf);\n            moves.push([xDir, tempDist]);\n            // move all the y offset\n            moves.push([yDir, yAbs]);\n            // move secondHalf of the x offset.\n            tempDist = Math.floor(xAbs * secondHalf);\n            moves.push([xDir, tempDist]);\n        }\n        this.map[xpos][ypos] = 0;\n        while (moves.length > 0) {\n            move = moves.pop();\n            while (move[1] > 0) {\n                xpos += DIRS[8][move[0]][0];\n                ypos += DIRS[8][move[0]][1];\n                this.map[xpos][ypos] = 0;\n                move[1] = move[1] - 1;\n            }\n        }\n    }\n    _createCorridors() {\n        // Draw Corridors between connected rooms\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        let room;\n        let connection;\n        let otherRoom;\n        let wall;\n        let otherWall;\n        for (let i = 0; i < cw; i++) {\n            for (let j = 0; j < ch; j++) {\n                room = this.rooms[i][j];\n                for (let k = 0; k < room[\"connections\"].length; k++) {\n                    connection = room[\"connections\"][k];\n                    otherRoom = this.rooms[connection[0]][connection[1]];\n                    // figure out what wall our corridor will start one.\n                    // figure out what wall our corridor will end on.\n                    if (otherRoom[\"cellx\"] > room[\"cellx\"]) {\n                        wall = 2;\n                        otherWall = 4;\n                    }\n                    else if (otherRoom[\"cellx\"] < room[\"cellx\"]) {\n                        wall = 4;\n                        otherWall = 2;\n                    }\n                    else if (otherRoom[\"celly\"] > room[\"celly\"]) {\n                        wall = 3;\n                        otherWall = 1;\n                    }\n                    else {\n                        wall = 1;\n                        otherWall = 3;\n                    }\n                    this._drawCorridor(this._getWallPosition(room, wall), this._getWallPosition(otherRoom, otherWall));\n                }\n            }\n        }\n    }\n}\n","import Simplex from \"./simplex.js\";\nexport default { Simplex };\n","import Noise from \"./noise.js\";\nimport RNG from \"../rng.js\";\nimport { mod } from \"../util.js\";\nconst F2 = 0.5 * (Math.sqrt(3) - 1);\nconst G2 = (3 - Math.sqrt(3)) / 6;\n/**\n * A simple 2d implementation of simplex noise by Ondrej Zara\n *\n * Based on a speed-improved simplex noise algorithm for 2D, 3D and 4D in Java.\n * Which is based on example code by Stefan Gustavson (stegu@itn.liu.se).\n * With Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\n * Better rank ordering method by Stefan Gustavson in 2012.\n */\nexport default class Simplex extends Noise {\n    /**\n     * @param gradients Random gradients\n     */\n    constructor(gradients = 256) {\n        super();\n        this._gradients = [\n            [0, -1],\n            [1, -1],\n            [1, 0],\n            [1, 1],\n            [0, 1],\n            [-1, 1],\n            [-1, 0],\n            [-1, -1]\n        ];\n        let permutations = [];\n        for (let i = 0; i < gradients; i++) {\n            permutations.push(i);\n        }\n        permutations = RNG.shuffle(permutations);\n        this._perms = [];\n        this._indexes = [];\n        for (let i = 0; i < 2 * gradients; i++) {\n            this._perms.push(permutations[i % gradients]);\n            this._indexes.push(this._perms[i] % this._gradients.length);\n        }\n    }\n    get(xin, yin) {\n        let perms = this._perms;\n        let indexes = this._indexes;\n        let count = perms.length / 2;\n        let n0 = 0, n1 = 0, n2 = 0, gi; // Noise contributions from the three corners\n        // Skew the input space to determine which simplex cell we're in\n        let s = (xin + yin) * F2; // Hairy factor for 2D\n        let i = Math.floor(xin + s);\n        let j = Math.floor(yin + s);\n        let t = (i + j) * G2;\n        let X0 = i - t; // Unskew the cell origin back to (x,y) space\n        let Y0 = j - t;\n        let x0 = xin - X0; // The x,y distances from the cell origin\n        let y0 = yin - Y0;\n        // For the 2D case, the simplex shape is an equilateral triangle.\n        // Determine which simplex we are in.\n        let i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n        if (x0 > y0) {\n            i1 = 1;\n            j1 = 0;\n        }\n        else { // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n            i1 = 0;\n            j1 = 1;\n        } // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n        // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n        // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n        // c = (3-sqrt(3))/6\n        let x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n        let y1 = y0 - j1 + G2;\n        let x2 = x0 - 1 + 2 * G2; // Offsets for last corner in (x,y) unskewed coords\n        let y2 = y0 - 1 + 2 * G2;\n        // Work out the hashed gradient indices of the three simplex corners\n        let ii = mod(i, count);\n        let jj = mod(j, count);\n        // Calculate the contribution from the three corners\n        let t0 = 0.5 - x0 * x0 - y0 * y0;\n        if (t0 >= 0) {\n            t0 *= t0;\n            gi = indexes[ii + perms[jj]];\n            let grad = this._gradients[gi];\n            n0 = t0 * t0 * (grad[0] * x0 + grad[1] * y0);\n        }\n        let t1 = 0.5 - x1 * x1 - y1 * y1;\n        if (t1 >= 0) {\n            t1 *= t1;\n            gi = indexes[ii + i1 + perms[jj + j1]];\n            let grad = this._gradients[gi];\n            n1 = t1 * t1 * (grad[0] * x1 + grad[1] * y1);\n        }\n        let t2 = 0.5 - x2 * x2 - y2 * y2;\n        if (t2 >= 0) {\n            t2 *= t2;\n            gi = indexes[ii + 1 + perms[jj + 1]];\n            let grad = this._gradients[gi];\n            n2 = t2 * t2 * (grad[0] * x2 + grad[1] * y2);\n        }\n        // Add contributions from each corner to get the final noise value.\n        // The result is scaled to return values in the interval [-1,1].\n        return 70 * (n0 + n1 + n2);\n    }\n}\n","/**\n * Base noise generator\n */\nexport default class Noise {\n}\n","import Dijkstra from \"./dijkstra.js\";\nimport AStar from \"./astar.js\";\nexport default { Dijkstra, AStar };\n","import Path from \"./path.js\";\n/**\n * @class Simplified Dijkstra's algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nexport default class Dijkstra extends Path {\n    constructor(toX, toY, passableCallback, options) {\n        super(toX, toY, passableCallback, options);\n        this._computed = {};\n        this._todo = [];\n        this._add(toX, toY, null);\n    }\n    /**\n     * Compute a path from a given point\n     * @see ROT.Path#compute\n     */\n    compute(fromX, fromY, callback) {\n        let key = fromX + \",\" + fromY;\n        if (!(key in this._computed)) {\n            this._compute(fromX, fromY);\n        }\n        if (!(key in this._computed)) {\n            return;\n        }\n        let item = this._computed[key];\n        while (item) {\n            callback(item.x, item.y);\n            item = item.prev;\n        }\n    }\n    /**\n     * Compute a non-cached value\n     */\n    _compute(fromX, fromY) {\n        while (this._todo.length) {\n            let item = this._todo.shift();\n            if (item.x == fromX && item.y == fromY) {\n                return;\n            }\n            let neighbors = this._getNeighbors(item.x, item.y);\n            for (let i = 0; i < neighbors.length; i++) {\n                let neighbor = neighbors[i];\n                let x = neighbor[0];\n                let y = neighbor[1];\n                let id = x + \",\" + y;\n                if (id in this._computed) {\n                    continue;\n                } /* already done */\n                this._add(x, y, item);\n            }\n        }\n    }\n    _add(x, y, prev) {\n        let obj = {\n            x: x,\n            y: y,\n            prev: prev\n        };\n        this._computed[x + \",\" + y] = obj;\n        this._todo.push(obj);\n    }\n}\n","import { DIRS } from \"../constants.js\";\n/**\n * @class Abstract pathfinder\n * @param {int} toX Target X coord\n * @param {int} toY Target Y coord\n * @param {function} passableCallback Callback to determine map passability\n * @param {object} [options]\n * @param {int} [options.topology=8]\n */\nexport default class Path {\n    constructor(toX, toY, passableCallback, options = {}) {\n        this._toX = toX;\n        this._toY = toY;\n        this._passableCallback = passableCallback;\n        this._options = Object.assign({\n            topology: 8\n        }, options);\n        this._dirs = DIRS[this._options.topology];\n        if (this._options.topology == 8) { /* reorder dirs for more aesthetic result (vertical/horizontal first) */\n            this._dirs = [\n                this._dirs[0],\n                this._dirs[2],\n                this._dirs[4],\n                this._dirs[6],\n                this._dirs[1],\n                this._dirs[3],\n                this._dirs[5],\n                this._dirs[7]\n            ];\n        }\n    }\n    _getNeighbors(cx, cy) {\n        let result = [];\n        for (let i = 0; i < this._dirs.length; i++) {\n            let dir = this._dirs[i];\n            let x = cx + dir[0];\n            let y = cy + dir[1];\n            if (!this._passableCallback(x, y)) {\n                continue;\n            }\n            result.push([x, y]);\n        }\n        return result;\n    }\n}\n","import Path from \"./path.js\";\n/**\n * @class Simplified A* algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nexport default class AStar extends Path {\n    constructor(toX, toY, passableCallback, options = {}) {\n        super(toX, toY, passableCallback, options);\n        this._todo = [];\n        this._done = {};\n    }\n    /**\n     * Compute a path from a given point\n     * @see ROT.Path#compute\n     */\n    compute(fromX, fromY, callback) {\n        this._todo = [];\n        this._done = {};\n        this._fromX = fromX;\n        this._fromY = fromY;\n        this._add(this._toX, this._toY, null);\n        while (this._todo.length) {\n            let item = this._todo.shift();\n            let id = item.x + \",\" + item.y;\n            if (id in this._done) {\n                continue;\n            }\n            this._done[id] = item;\n            if (item.x == fromX && item.y == fromY) {\n                break;\n            }\n            let neighbors = this._getNeighbors(item.x, item.y);\n            for (let i = 0; i < neighbors.length; i++) {\n                let neighbor = neighbors[i];\n                let x = neighbor[0];\n                let y = neighbor[1];\n                let id = x + \",\" + y;\n                if (id in this._done) {\n                    continue;\n                }\n                this._add(x, y, item);\n            }\n        }\n        let item = this._done[fromX + \",\" + fromY];\n        if (!item) {\n            return;\n        }\n        while (item) {\n            callback(item.x, item.y);\n            item = item.prev;\n        }\n    }\n    _add(x, y, prev) {\n        let h = this._distance(x, y);\n        let obj = {\n            x: x,\n            y: y,\n            prev: prev,\n            g: (prev ? prev.g + 1 : 0),\n            h: h\n        };\n        /* insert into priority queue */\n        let f = obj.g + obj.h;\n        for (let i = 0; i < this._todo.length; i++) {\n            let item = this._todo[i];\n            let itemF = item.g + item.h;\n            if (f < itemF || (f == itemF && h < item.h)) {\n                this._todo.splice(i, 0, obj);\n                return;\n            }\n        }\n        this._todo.push(obj);\n    }\n    _distance(x, y) {\n        switch (this._options.topology) {\n            case 4:\n                return (Math.abs(x - this._fromX) + Math.abs(y - this._fromY));\n                break;\n            case 6:\n                let dx = Math.abs(x - this._fromX);\n                let dy = Math.abs(y - this._fromY);\n                return dy + Math.max(0, (dx - dy) / 2);\n                break;\n            case 8:\n                return Math.max(Math.abs(x - this._fromX), Math.abs(y - this._fromY));\n                break;\n        }\n    }\n}\n","/**\n * @class Asynchronous main loop\n * @param {ROT.Scheduler} scheduler\n */\nexport default class Engine {\n    constructor(scheduler) {\n        this._scheduler = scheduler;\n        this._lock = 1;\n    }\n    /**\n     * Start the main loop. When this call returns, the loop is locked.\n     */\n    start() { return this.unlock(); }\n    /**\n     * Interrupt the engine by an asynchronous action\n     */\n    lock() {\n        this._lock++;\n        return this;\n    }\n    /**\n     * Resume execution (paused by a previous lock)\n     */\n    unlock() {\n        if (!this._lock) {\n            throw new Error(\"Cannot unlock unlocked engine\");\n        }\n        this._lock--;\n        while (!this._lock) {\n            let actor = this._scheduler.next();\n            if (!actor) {\n                return this.lock();\n            } /* no actors */\n            let result = actor.act();\n            if (result && result.then) { /* actor returned a \"thenable\", looks like a Promise */\n                this.lock();\n                result.then(this.unlock.bind(this));\n            }\n        }\n        return this;\n    }\n}\n","import * as Color from \"./color.js\";\n;\n;\n;\n;\n/**\n * Lighting computation, based on a traditional FOV for multiple light sources and multiple passes.\n */\nexport default class Lighting {\n    constructor(reflectivityCallback, options = {}) {\n        this._reflectivityCallback = reflectivityCallback;\n        this._options = {};\n        options = Object.assign({\n            passes: 1,\n            emissionThreshold: 100,\n            range: 10\n        }, options);\n        this._lights = {};\n        this._reflectivityCache = {};\n        this._fovCache = {};\n        this.setOptions(options);\n    }\n    /**\n     * Adjust options at runtime\n     */\n    setOptions(options) {\n        Object.assign(this._options, options);\n        if (options && options.range) {\n            this.reset();\n        }\n        return this;\n    }\n    /**\n     * Set the used Field-Of-View algo\n     */\n    setFOV(fov) {\n        this._fov = fov;\n        this._fovCache = {};\n        return this;\n    }\n    /**\n     * Set (or remove) a light source\n     */\n    setLight(x, y, color) {\n        let key = x + \",\" + y;\n        if (color) {\n            this._lights[key] = (typeof (color) == \"string\" ? Color.fromString(color) : color);\n        }\n        else {\n            delete this._lights[key];\n        }\n        return this;\n    }\n    /**\n     * Remove all light sources\n     */\n    clearLights() { this._lights = {}; }\n    /**\n     * Reset the pre-computed topology values. Call whenever the underlying map changes its light-passability.\n     */\n    reset() {\n        this._reflectivityCache = {};\n        this._fovCache = {};\n        return this;\n    }\n    /**\n     * Compute the lighting\n     */\n    compute(lightingCallback) {\n        let doneCells = {};\n        let emittingCells = {};\n        let litCells = {};\n        for (let key in this._lights) { /* prepare emitters for first pass */\n            let light = this._lights[key];\n            emittingCells[key] = [0, 0, 0];\n            Color.add_(emittingCells[key], light);\n        }\n        for (let i = 0; i < this._options.passes; i++) { /* main loop */\n            this._emitLight(emittingCells, litCells, doneCells);\n            if (i + 1 == this._options.passes) {\n                continue;\n            } /* not for the last pass */\n            emittingCells = this._computeEmitters(litCells, doneCells);\n        }\n        for (let litKey in litCells) { /* let the user know what and how is lit */\n            let parts = litKey.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            lightingCallback(x, y, litCells[litKey]);\n        }\n        return this;\n    }\n    /**\n     * Compute one iteration from all emitting cells\n     * @param emittingCells These emit light\n     * @param litCells Add projected light to these\n     * @param doneCells These already emitted, forbid them from further calculations\n     */\n    _emitLight(emittingCells, litCells, doneCells) {\n        for (let key in emittingCells) {\n            let parts = key.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            this._emitLightFromCell(x, y, emittingCells[key], litCells);\n            doneCells[key] = 1;\n        }\n        return this;\n    }\n    /**\n     * Prepare a list of emitters for next pass\n     */\n    _computeEmitters(litCells, doneCells) {\n        let result = {};\n        for (let key in litCells) {\n            if (key in doneCells) {\n                continue;\n            } /* already emitted */\n            let color = litCells[key];\n            let reflectivity;\n            if (key in this._reflectivityCache) {\n                reflectivity = this._reflectivityCache[key];\n            }\n            else {\n                let parts = key.split(\",\");\n                let x = parseInt(parts[0]);\n                let y = parseInt(parts[1]);\n                reflectivity = this._reflectivityCallback(x, y);\n                this._reflectivityCache[key] = reflectivity;\n            }\n            if (reflectivity == 0) {\n                continue;\n            } /* will not reflect at all */\n            /* compute emission color */\n            let emission = [0, 0, 0];\n            let intensity = 0;\n            for (let i = 0; i < 3; i++) {\n                let part = Math.round(color[i] * reflectivity);\n                emission[i] = part;\n                intensity += part;\n            }\n            if (intensity > this._options.emissionThreshold) {\n                result[key] = emission;\n            }\n        }\n        return result;\n    }\n    /**\n     * Compute one iteration from one cell\n     */\n    _emitLightFromCell(x, y, color, litCells) {\n        let key = x + \",\" + y;\n        let fov;\n        if (key in this._fovCache) {\n            fov = this._fovCache[key];\n        }\n        else {\n            fov = this._updateFOV(x, y);\n        }\n        for (let fovKey in fov) {\n            let formFactor = fov[fovKey];\n            let result;\n            if (fovKey in litCells) { /* already lit */\n                result = litCells[fovKey];\n            }\n            else { /* newly lit */\n                result = [0, 0, 0];\n                litCells[fovKey] = result;\n            }\n            for (let i = 0; i < 3; i++) {\n                result[i] += Math.round(color[i] * formFactor);\n            } /* add light color */\n        }\n        return this;\n    }\n    /**\n     * Compute FOV (\"form factor\") for a potential light source at [x,y]\n     */\n    _updateFOV(x, y) {\n        let key1 = x + \",\" + y;\n        let cache = {};\n        this._fovCache[key1] = cache;\n        let range = this._options.range;\n        function cb(x, y, r, vis) {\n            let key2 = x + \",\" + y;\n            let formFactor = vis * (1 - r / range);\n            if (formFactor == 0) {\n                return;\n            }\n            cache[key2] = formFactor;\n        }\n        ;\n        this._fov.compute(x, y, range, cb.bind(this));\n        return cache;\n    }\n}\n","import InputKeyboardEvent from './events/InputKeyboardEvent';\nimport InputMouseEvent from './events/InputMouseEvent';\n\nexport default class InputController {\n    #renderer = null;\n\n    constructor(renderer) {\n        this.#renderer = renderer;\n        document.addEventListener('keydown', this.onKeydown.bind(this));\n\n        const container = this.#renderer.getDOMContainer();\n\n        container.addEventListener('click', this.onMouseClick.bind(this));\n        container.addEventListener('mousemove', this.onMouseMove.bind(this));\n        container.addEventListener('mouseenter', this.onMouseEnter.bind(this));\n        container.addEventListener('mouseleave', this.onMouseLeave.bind(this));\n    }\n\n    onKeydown(e) {\n        const evt = new InputKeyboardEvent({\n            key: e.keyCode,\n            isShift: e.shiftKey,\n            isAlt: e.altKey,\n            isCtrl: e.ctrlKey,\n            isMeta: e.metaKey,\n        });\n\n        console.log('onKeydown', evt);\n    }\n\n    onMouseClick(e) {\n        const [tileX, tileY] = this.#renderer.eventToPosition(e);\n\n        const evt = new InputMouseEvent({\n            button: e.button,\n            x: e.offsetX,\n            y: e.offsetY,\n            isShift: e.shiftKey,\n            isAlt: e.altKey,\n            isCtrl: e.ctrlKey,\n            isMeta: e.metaKey,\n            tileX,\n            tileY,\n        });\n\n        console.log('onMouseClick', e, evt);\n    }\n\n    onMouseMove(e) {\n        console.log('onMouseMove');\n    }\n\n    onMouseEnter(e) {\n        console.log('onMouseEnter');\n    }\n\n    onMouseLeave(e) {\n        console.log('onMouseLeave');\n    }\n}\n","export default class InputKeyboardEvent {\n    key = false;\n    isShift = false;\n    isAlt = false;\n    isCtrl = false;\n    isMeta = false;\n\n    constructor(data) {\n        (this.key = data.key), (this.isShift = data.isShift);\n        this.isAlt = data.isAlt;\n        this.isCtrl = data.isCtrl;\n        this.isMeta = data.isMeta;\n    }\n}\n","export default class InputMouseEvent {\n    button = false;\n    x = false;\n    y = false;\n    isShift = false;\n    isAlt = false;\n    isCtrl = false;\n    isMeta = false;\n    tileX = false;\n    tileY = false;\n\n    constructor(data) {\n        this.button = data.button;\n        this.x = data.x;\n        this.y = data.y;\n        this.isShift = data.isShift;\n        this.isAlt = data.isAlt;\n        this.isCtrl = data.isCtrl;\n        this.isMeta = data.isMeta;\n        this.tileX = data.tileX;\n        this.tileY = data.tileY;\n    }\n}\n","import ecs from '../ecs';\nimport { Eater } from '../ecs/components';\nimport System from './System';\n\nexport default class HungerSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = ecs.createQuery({\n            all: [Eater],\n        });\n    }\n\n    update(dt) {\n        if (this.game.actionSystem.tickDelta > 0) {\n            this.#query.get().forEach((entity) => {\n                entity.eater.hunger -= this.game.actionSystem.tickDelta;\n            });\n        }\n    }\n}\n","export default class System {\n    #game = null;\n\n    get game() {\n        return this.#game;\n    }\n\n    constructor(game) {\n        this.#game = game;\n    }\n\n    update(dt) {}\n}\n","import ecs from '../ecs';\nimport { Actor } from '../ecs/components';\nimport System from './System';\n\nexport default class ActionSystem extends System {\n    #tick = 0;\n    #tickDelta = 0;\n    #query = null;\n\n    constructor(game) {\n        super(game);\n\n        this.#query = ecs.createQuery({\n            all: [Actor],\n        });\n    }\n\n    get tick() {\n        return this.#tick;\n    }\n\n    get tickDelta() {\n        return this.#tickDelta;\n    }\n\n    get turn() {\n        return Math.floor(this.#tick / 1000);\n    }\n\n    get subTurn() {\n        return this.#tick - this.turn * 1000;\n    }\n\n    update(dt) {\n        const entities = this.#query.get();\n        const sorted = Array.from(entities);\n        sorted.sort((a, b) => (a.actor.energy < b.actor.energy ? 1 : -1));\n\n        const entity = sorted[0];\n        this.#tickDelta = 0;\n\n        if (!entity.actor.hasEnergy) {\n            this.#tickDelta = entity.actor.energy * -1;\n            this.#tick -= entity.actor.energy;\n\n            entities.forEach((entity) => {\n                entity.actor.addEnergy(this.#tickDelta);\n            });\n        }\n\n        if (entity.actor.hasEnergy && !entity.isPlayer) {\n            entity.fireEvent('take-action');\n        }\n    }\n}\n","import ecs from '../ecs';\nimport { Glyph, Position } from '../ecs/components';\nimport System from './System';\n\nexport default class RenderSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = ecs.createQuery({\n            all: [Glyph, Position],\n        });\n    }\n\n    update(dt) {\n        this.game.renderer.clear();\n\n        this.#query.get().forEach((renderable) => {\n            this.game.renderer.draw(\n                renderable.position.x,\n                renderable.position.y,\n                renderable.glyph.char,\n                renderable.glyph.fg,\n                renderable.glyph.bg\n            );\n        });\n    }\n}\n","import ecs from '../ecs';\nimport { MoveCommand, Position } from '../ecs/components';\nimport * as Directions from '../enums/Directions';\nimport System from './System';\n\nexport default class MovementSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = ecs.createQuery({\n            all: [MoveCommand, Position],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            const delta = Directions.delta(entity.moveCommand.direction);\n\n            entity.fireEvent('TryMove', delta);\n\n            entity.moveCommand.destroy();\n        });\n    }\n}\n","import ecs from '../ecs';\nimport { Moniker, Actor } from '../ecs/components';\nimport System from './System';\n\nexport default class UISystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = ecs.createQuery({\n            all: [Moniker, Actor],\n        });\n    }\n\n    update(dt) {\n        const turn = this.game.actionSystem.turn;\n        const subTurn = `${this.game.actionSystem.subTurn}`.padEnd(3, '0');\n\n        this.game.renderer.drawText(1, 1, `%c{cyan}Knossonia`);\n\n        const entities = Array.from(this.#query.get());\n\n        entities.forEach((entity, i) => {\n            this.game.renderer.drawText(\n                1,\n                this.game.renderer.height - (2 + i),\n                `energy (${entity.moniker.name}) %c{yellow}${entity.actor.energy}`\n            );\n        });\n\n        this.game.renderer.drawText(\n            this.game.renderer.width - 6 - `${turn}`.length,\n            1,\n            `%c{cyan}${turn}%c{white}.%c{yellow}${subTurn}`\n        );\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tif(mode & 2 && typeof value == 'object' && value) {\n\t\tfor(const key in value) def[key] = () => value[key];\n\t}\n\tdef['default'] = () => value;\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(0);\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}