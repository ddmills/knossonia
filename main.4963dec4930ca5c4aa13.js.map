{"version":3,"sources":["webpack://knossonia/webpack/runtime/create fake namespace object","webpack://knossonia/./src/index.js","webpack://knossonia/./src/utils/ImageLoader.js","webpack://knossonia/./src/core/Game.js","webpack://knossonia/./src/core/rendering/RenderManager.js","webpack://knossonia/./src/core/Manager.js","webpack://knossonia/./src/core/rendering/Display.js","webpack://knossonia/./src/core/rendering/spritesheets.js","webpack://knossonia/./src/core/rendering/SpriteSheet.js","webpack://knossonia/./src/core/rendering/cp437.js","webpack://knossonia/./src/core/rendering/Sprite.js","webpack://knossonia/./src/utils/ColorParser.js","webpack://knossonia/./node_modules/color-parse/index.mjs","webpack://knossonia/./node_modules/color-name/index.js","webpack://knossonia/./src/core/input/InputController.js","webpack://knossonia/./src/core/input/events/InputKeyboardEvent.js","webpack://knossonia/./src/core/input/events/InputEvent.js","webpack://knossonia/./src/core/input/events/InputMouseEvent.js","webpack://knossonia/./src/systems/HungerSystem.js","webpack://knossonia/./src/ecs/components/Actor.js","webpack://knossonia/../node_modules/camelcase/index.js","webpack://knossonia/../src/util/string-util.js","webpack://knossonia/../src/Properties/Property.js","webpack://knossonia/../src/Properties/SimpleProperty.js","webpack://knossonia/../src/Properties/EntityProperty.js","webpack://knossonia/../src/Properties/EntityArrayProperty.js","webpack://knossonia/../src/Properties/PropertyFactory.js","webpack://knossonia/../src/Component.js","webpack://knossonia/../src/registries/ComponentRegistry.js","webpack://knossonia/../node_modules/deepmerge/dist/cjs.js","webpack://knossonia/../src/PrefabComponent.js","webpack://knossonia/../src/Prefab.js","webpack://knossonia/../src/registries/PrefabRegistry.js","webpack://knossonia/../node_modules/nanoid/non-secure/index.js","webpack://knossonia/../src/EntityEvent.js","webpack://knossonia/../src/Entity.js","webpack://knossonia/../src/registries/EntityRegistry.js","webpack://knossonia/../src/Query.js","webpack://knossonia/../src/registries/QueryRegistry.js","webpack://knossonia/../src/Engine.js","webpack://knossonia/./src/ecs/components/IsDestroying.js","webpack://knossonia/./src/ecs/components/LiquidContainer.js","webpack://knossonia/./src/enums/LiquidTypes.js","webpack://knossonia/./src/ecs/components/Door.js","webpack://knossonia/./src/ecs/components/Blocker.js","webpack://knossonia/./src/ecs/components/Shadowcaster.js","webpack://knossonia/./src/ecs/components/Loot.js","webpack://knossonia/./src/ecs/components/Inventory.js","webpack://knossonia/./src/core/screens/ScreenType.js","webpack://knossonia/./src/ecs/components/IsInventoried.js","webpack://knossonia/./src/ecs/components/Stackable.js","webpack://knossonia/./src/enums/Stackables.js","webpack://knossonia/./src/ecs/components/Throwable.js","webpack://knossonia/./src/enums/CursorSegments.js","webpack://knossonia/./src/utils/BresenhamLine.js","webpack://knossonia/./src/ecs/components/Body.js","webpack://knossonia/./src/ecs/components/IsVisible.js","webpack://knossonia/./src/ecs/components/FragileGlass.js","webpack://knossonia/./src/enums/ConsoleEvents.js","webpack://knossonia/./src/ecs/components/Dead.js","webpack://knossonia/./src/ecs/components/Brain.js","webpack://knossonia/./src/ai/GoalActionResult.js","webpack://knossonia/./src/ecs/components/Goal.js","webpack://knossonia/./src/ai/GoalEvaluator.js","webpack://knossonia/./src/ai/GoalTypes/BoredGoalType.js","webpack://knossonia/./src/ai/GoalTypes/GoalType.js","webpack://knossonia/./src/ai/GoalTypes/KillSomethingGoalType.js","webpack://knossonia/./src/ai/GoalTypes/EatFoodGoalType.js","webpack://knossonia/./src/ai/GoalTypes/SatisfyHungerGoalType.js","webpack://knossonia/./src/ai/GoalTypes/MoveGoalType.js","webpack://knossonia/./src/ecs/components/Eater.js","webpack://knossonia/./src/ecs/components/Moniker.js","webpack://knossonia/./src/ecs/components/Logger.js","webpack://knossonia/./src/ecs/components/Position.js","webpack://knossonia/./src/ecs/components/Glyph.js","webpack://knossonia/./src/ecs/components/Arms.js","webpack://knossonia/./src/ecs/components/Legs.js","webpack://knossonia/./src/ecs/components/Faction.js","webpack://knossonia/./src/ecs/components/MoveCommand.js","webpack://knossonia/./src/enums/Directions.js","webpack://knossonia/./src/ecs/components/MeleeCommand.js","webpack://knossonia/./src/ecs/components/IsPlayer.js","webpack://knossonia/./src/ecs/components/Wandering.js","webpack://knossonia/./src/ecs/components/Explorable.js","webpack://knossonia/./src/ecs/components/Explored.js","webpack://knossonia/./src/ecs/components/Health.js","webpack://knossonia/./src/ecs/components/Eyes.js","webpack://knossonia/./src/ecs/components/Particle.js","webpack://knossonia/./src/ecs/components/ParticleEmitter.js","webpack://knossonia/./src/systems/System.js","webpack://knossonia/./src/systems/ActionSystem.js","webpack://knossonia/./src/systems/RenderSystem.js","webpack://knossonia/./src/systems/MovementSystem.js","webpack://knossonia/./src/systems/UISystem.js","webpack://knossonia/./src/core/input/MouseManager.js","webpack://knossonia/./src/core/input/CommandManager.js","webpack://knossonia/./src/core/input/InputDomainType.js","webpack://knossonia/./src/core/input/commands.js","webpack://knossonia/./src/core/input/InputCommand.js","webpack://knossonia/./src/core/input/InputCommandType.js","webpack://knossonia/./src/core/input/KeyCodes.js","webpack://knossonia/./src/core/screens/ScreenManager.js","webpack://knossonia/./src/core/screens/screens/AdventureScreen.js","webpack://knossonia/./src/core/screens/screens/Screen.js","webpack://knossonia/./src/core/screens/screens/MainMenuScreen.js","webpack://knossonia/./src/core/screens/screens/DeathScreen.js","webpack://knossonia/./src/core/screens/screens/InventoryScreen.js","webpack://knossonia/./src/core/screens/screens/InteractModalScreen.js","webpack://knossonia/./src/core/screens/screens/CursorScreen.js","webpack://knossonia/./src/utils/AStar.js","webpack://knossonia/./src/utils/diagonalDistance.js","webpack://knossonia/./src/utils/ManhattanDistance.js","webpack://knossonia/./src/utils/PriorityQueue.js","webpack://knossonia/./src/core/screens/screens/LoadSectorScreen.js","webpack://knossonia/./src/core/PlayerManager.js","webpack://knossonia/./src/ecs/index.js","webpack://knossonia/./src/core/GameStateManager.js","webpack://knossonia/./src/core/ClockManager.js","webpack://knossonia/./src/systems/CursorSystem.js","webpack://knossonia/./src/core/MapManager.js","webpack://knossonia/./src/utils/FastMap.js","webpack://knossonia/./src/systems/FOVSystem.js","webpack://knossonia/./node_modules/rot-js/lib/index.js","webpack://knossonia/./node_modules/rot-js/lib/rng.js","webpack://knossonia/./node_modules/rot-js/lib/display/display.js","webpack://knossonia/./node_modules/rot-js/lib/display/hex.js","webpack://knossonia/./node_modules/rot-js/lib/display/canvas.js","webpack://knossonia/./node_modules/rot-js/lib/display/backend.js","webpack://knossonia/./node_modules/rot-js/lib/util.js","webpack://knossonia/./node_modules/rot-js/lib/display/rect.js","webpack://knossonia/./node_modules/rot-js/lib/display/tile.js","webpack://knossonia/./node_modules/rot-js/lib/display/tile-gl.js","webpack://knossonia/./node_modules/rot-js/lib/color.js","webpack://knossonia/./node_modules/rot-js/lib/display/term.js","webpack://knossonia/./node_modules/rot-js/lib/text.js","webpack://knossonia/./node_modules/rot-js/lib/constants.js","webpack://knossonia/./node_modules/rot-js/lib/stringgenerator.js","webpack://knossonia/./node_modules/rot-js/lib/eventqueue.js","webpack://knossonia/./node_modules/rot-js/lib/MinHeap.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/index.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/simple.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/scheduler.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/speed.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/action.js","webpack://knossonia/./node_modules/rot-js/lib/fov/index.js","webpack://knossonia/./node_modules/rot-js/lib/fov/discrete-shadowcasting.js","webpack://knossonia/./node_modules/rot-js/lib/fov/fov.js","webpack://knossonia/./node_modules/rot-js/lib/fov/precise-shadowcasting.js","webpack://knossonia/./node_modules/rot-js/lib/fov/recursive-shadowcasting.js","webpack://knossonia/./node_modules/rot-js/lib/map/index.js","webpack://knossonia/./node_modules/rot-js/lib/map/arena.js","webpack://knossonia/./node_modules/rot-js/lib/map/map.js","webpack://knossonia/./node_modules/rot-js/lib/map/uniform.js","webpack://knossonia/./node_modules/rot-js/lib/map/dungeon.js","webpack://knossonia/./node_modules/rot-js/lib/map/features.js","webpack://knossonia/./node_modules/rot-js/lib/map/cellular.js","webpack://knossonia/./node_modules/rot-js/lib/map/digger.js","webpack://knossonia/./node_modules/rot-js/lib/map/ellermaze.js","webpack://knossonia/./node_modules/rot-js/lib/map/dividedmaze.js","webpack://knossonia/./node_modules/rot-js/lib/map/iceymaze.js","webpack://knossonia/./node_modules/rot-js/lib/map/rogue.js","webpack://knossonia/./node_modules/rot-js/lib/noise/index.js","webpack://knossonia/./node_modules/rot-js/lib/noise/simplex.js","webpack://knossonia/./node_modules/rot-js/lib/noise/noise.js","webpack://knossonia/./node_modules/rot-js/lib/path/index.js","webpack://knossonia/./node_modules/rot-js/lib/path/dijkstra.js","webpack://knossonia/./node_modules/rot-js/lib/path/path.js","webpack://knossonia/./node_modules/rot-js/lib/path/astar.js","webpack://knossonia/./node_modules/rot-js/lib/engine.js","webpack://knossonia/./node_modules/rot-js/lib/lighting.js","webpack://knossonia/./src/systems/MeleeSystem.js","webpack://knossonia/./src/systems/DeathSystem.js","webpack://knossonia/./src/systems/ParticleSystem.js","webpack://knossonia/./src/core/FactionManager.js","webpack://knossonia/./src/core/CameraManager.js","webpack://knossonia/./src/systems/FPSMonitoringSystem.js","webpack://knossonia/./src/core/WorldManager.js","webpack://knossonia/./src/data/WorldData.js","webpack://knossonia/./src/data/Sector.js","webpack://knossonia/./src/level/generators/generators.js","webpack://knossonia/./src/level/generators/ForestCabinsGenerator.js","webpack://knossonia/./src/utils/rand.js","webpack://knossonia/./src/level/LevelConnections.js","webpack://knossonia/./src/level/TileData.js","webpack://knossonia/./src/level/themes/TileTheme.js","webpack://knossonia/./src/level/themes/CastleTheme.js","webpack://knossonia/./src/level/themes/TileThemePopulator.js","webpack://knossonia/./src/level/themes/ForestTheme.js","webpack://knossonia/./src/level/themes/CabinTheme.js","webpack://knossonia/./src/level/schemes/UniformScheme.js","webpack://knossonia/./src/level/TileContainer.js","webpack://knossonia/./src/utils/Grid.js","webpack://knossonia/./src/level/RoomData.js","webpack://knossonia/./node_modules/nanoid/index.prod.js","webpack://knossonia/./node_modules/nanoid/url-alphabet/index.js","webpack://knossonia/./src/level/TileScheme.js","webpack://knossonia/./src/level/generators/SectorGenerator.js","webpack://knossonia/./src/level/generators/ForestGenerator.js","webpack://knossonia/./src/level/generators/ForestStrongholdGenerator.js","webpack://knossonia/./src/level/schemes/DenseCastleScheme.js","webpack://knossonia/./src/level/generators/ForestTownGenerator.js","webpack://knossonia/./src/level/schemes/ScatteredScheme.js","webpack://knossonia/./src/level/generators/GeneratorUtils.js","webpack://knossonia/./src/core/ConsoleManager.js","webpack://knossonia/./src/systems/DestroySystem.js","webpack://knossonia/webpack/bootstrap","webpack://knossonia/webpack/runtime/define property getters","webpack://knossonia/webpack/runtime/hasOwnProperty shorthand","webpack://knossonia/webpack/runtime/make namespace object","webpack://knossonia/webpack/startup"],"names":["leafPrototypes","getProto","loadImages","then","game","require","window","ecs","start","loadImage","img","Promise","resolve","reject","complete","addEventListener","error","imgs","Array","from","document","querySelectorAll","all","map","Game","this","engine","ECS","mouse","MouseManager","clock","ClockManager","camera","CameraManager","renderer","Renderer","state","GameStateManager","world","WorldManager","MapManager","factions","FactionManager","player","PlayerManager","commands","CommandManager","screens","ScreenManager","input","InputController","console","ConsoleManager","hungerSystem","HungerSystem","actionSystem","ActionSystem","movementSystem","MovementSystem","meleeSystem","MeleeSystem","deathSystem","DeathSystem","FOVSystem","renderSystem","RenderSystem","UISystem","cursor","CursorSystem","particles","ParticleSystem","fps","FPSMonitoringSystem","destroySystem","DestroySystem","Date","now","boundLoop","loop","bind","requestAnimationFrame","dt","update","render","t","spritesheets","forEach","spritesheet","name","Display","width","height","tileWidth","tileHeight","body","appendChild","display","canvas","setSize","x","y","char","fg1","fg2","bg","sprite","tiles","getSprite","draw","text","length","i","font","charAt","len","computeTextWidth","drawText","clear","clearArea","xPx","yPx","Math","trunc","Manager","Set","createElement","ctx","getContext","alpha","textBaseline","widthPx","heightPx","style","cssText","pixelX","pixelY","colorize","fillStyle","clearColor","isDirty","fillRect","drawImage","_markDirty","_dirtyCells","color","clearRect","add","has","tileImage","getElementById","fontImage","SpriteSheet","image","spriteWidth","spriteCountX","spriteHeight","spriteCountY","cp437","row","glyph","j","Sprite","isBlack","r","g","b","sheet","sourceX","sourceY","primaryCss","secondaryCss","primary","parseColor","secondary","key","_cache","hasOwnProperty","pixels","getImageData","data","cvs","putImageData","cache","colorStr","parsed","colorParse","values","cstr","m","space","parts","names","slice","test","size","base","parseInt","exec","isRGB","replace","trim","split","parseFloat","undefined","baseHues","push","match","value","join","toLowerCase","isNaN","isArray","Object","red","R","green","G","blue","B","h","hue","H","s","saturation","S","l","lightness","L","brightness","a","opacity","orange","yellow","purple","module","exports","onKeydown","container","onMouseClick","onMouseMove","onMouseEnter","onMouseLeave","e","evt","InputKeyboardEvent","keyCode","shift","shiftKey","ctrl","ctrlKey","alt","altKey","meta","metaKey","preventDefault","onInputEvent","offsetX","offsetY","pxToTile","InputMouseEvent","button","updatePosition","updateMouseEnter","updateMouseLeave","InputEvent","tileX","tileY","createQuery","Eater","tickDelta","get","entity","eater","hunger","System","Actor","reduceEnergy","addEnergy","energy","Component","camelCase","options","TypeError","pascalCase","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","character","preserveCamelCase","p1","camelCache","camelString","camelcaseSlow","pascalCache","constructor","component","enumerable","set","v","id","getEntity","Proxy","Reflect","old","deleteProperty","proxy","ref","filter","EntityProperty","EntityArrayProperty","SimpleProperty","properties","Boolean","ob","prop","destroy","createComponent","handlerName","initialValue","initialProperties","_defaultPropertyValue","property","PropertyFactory","Map","type","_getType","_definitions","definition","typeOrClassOrComponent","isMergeableObject","isNonNullObject","stringValue","isReactElement","isSpecial","REACT_ELEMENT_TYPE","Symbol","cloneUnlessOtherwiseSpecified","deepmerge","val","defaultArrayMerge","target","source","element","getKeys","getEnumerableOwnPropertySymbols","propertyIsOnObject","object","mergeObject","destination","propertyIsUnsafe","customMerge","getMergeFunction","sourceIsArray","array","Error","prev","next","overwrite","componentDef","initialProps","props","merge","parent","arrComps","accessor","initialCompProps","registered","prefab","Prefab","inherit","componentData","def","_ecs","components","PrefabComponent","PrefabRegistry","_prefabs","nameOrClassOrPrefab","urlAlphabet","getAccessor","hasType","nestedComponent","typeOrClass","attach","create","configurable","allowMultiple","isComponent","instance","index","v2","EntityEvent","_entities","Entity","refs","_refs","json","entities","list","entityData","createOrGetById","pascalString","d","any","none","hasAny","_filter","some","c","hasAll","every","hasNone","isTracking","isMatch","cb","query","Query","nanoid","ComponentRegistry","EntityRegistry","QueryRegistry","prefabs","nameOrClass","queries","serialize","deserializeEntity","deserialize","IsDestroying","pass","LiquidContainer","destroyOnEmpty","isEmpty","quantity","isPourable","volume","warn","createPrefab","liquidContainer","contents","position","setPos","_checkDestroyOnEmpty","pos","interactor","getPos","pour","handle","drinkLiquid","interactions","liquids","maxVolume","overridePrimary","liquid","overrideSecondary","LIQUID_BLOOD","LIQUID_WATER","LIQUID_HONEY","colorDesc","onDrink","log","fireEvent","direction","glyphs","fg1s","speed","lifetime","Door","isOpen","ch","remove","Blocker","Shadowcaster","closeDoor","openDoor","stopProjectile","deflectProjectile","chOpen","chClosed","isAttached","Loot","isInventoried","IsInventoried","Inventory","inventory","hasLoot","addLoot","owner","removeLoot","content","result","stackableIdentifier","find","Stackable","stackable","identifier","loot","existing","getStackable","addOther","indexOf","idx","splice","SCREEN_INVENTORY","accessible","SCREEN_MAIN_MENU","SCREEN_ADVENTURE","SCREEN_DEATH","SCREEN_INTERACT_MODAL","SCREEN_CURSOR","SCREEN_LOAD_SECTOR","dropLoot","amount","other","increment","clone","STACKABLE_DEFAULT","STACKABLE_STONE","STACKABLE_GLASS_SHARD","Throwable","trajectory","initiator","stopped","deflected","hit","projectile","drawLine","drawTags","onResult","bresenhamLine","onCancel","getSegmentTypes","line","lineValid","CURSOR_SEGMENT_NONE","blocker","IsVisible","Body","CURSOR_SEGMENT_INTEREST","CURSOR_SEGMENT_UNKNOWN","CURSOR_SEGMENT_INVALID","interestIdx","blockerIdx","colorMap","glyphMap","getCursorSegmentTypeColor","getCursorSegmentTypeGlyph","x0","y0","x1","y1","dx","abs","dy","sx","sy","err","e2","bresenhamLineExclusive","pop","corpse","moniker","range","FragileGlass","CONSOLE_EVENT_SHATTER","shatter","CONSOLE_EVENT_DAMAGE","CONSOLE_EVENT_DEAD","getMonikerSubject","Moniker","simpleDisplay","getMonikerIndirectObject","IsPlayer","mapping","message","damage","shouldAppear","getMessage","Dead","Brain","goals","peekGoal","isFinished","popGoal","currentGoal","takeAction","FAILURE","removeGoal","INVALID","goal","goalsToDestroy","isSelf","isSiblingGoal","originalIntent","SUCCESS","Goal","GoalEvaluator","goalTypeMap","GoalTypes","goalType","getGoalType","BoredGoalType","GoalType","detectHostiles","handled","killGoal","KillSomethingGoalType","brain","pushGoal","boredomGoal","isDestroyed","EatFoodGoalType","food","SatisfyHungerGoalType","isHungry","MoveGoalType","random","disp","door","Logger","Position","getPosition","setPosition","Glyph","col","primaryColorOverride","secondaryColorOverride","Arms","actor","hasEnergy","targetPos","selfPos","isAdjacent","createParticle","Legs","targetX","targetY","targetTileEntities","getEntitiesAt","nonHostile","Faction","areEntitiesHostile","MoveCommand","DIR_Z","directions","shortName","fullName","delta","DIR_NW","DIR_N","DIR_NE","DIR_W","DIR_E","DIR_SW","DIR_S","DIR_SE","MeleeCommand","Wandering","floor","Directions","Explorable","Explored","Health","max","Eyes","getNeighborEntities","flat","neighbor","Particle","arr","chunks","percent","age","frame","fg2s","bgs","startX","startY","ParticleEmitter","particle","createEntity","particleData","count","duration","rate","not","sorted","sort","incrementTick","isPlayer","explored","renderable","isInView","screen","worldToScreen","renderables","background","moveCommand","turn","subTurn","padEnd","str","ceil","hp","health","INPUT_DOMAIN_DEFAULT","cmd","registerCommand","getCommandForInputEvent","onInputCommand","domain","lastIndexOf","getDomainCommands","matches","command","INPUT_DOMAIN_MAIN_MENU","INPUT_DOMAIN_ADVENTURE","INPUT_DOMAIN_LOOK","INPUT_DOMAIN_LIST","isKeyboard","InputCommand","INPUT_CMD_CONFIRM","KEY_ENTER","KEY_SPACE","INPUT_CMD_CANCEL","KEY_ESCAPE","INPUT_CMD_SAVE","KEY_S","INPUT_CMD_LOAD","KEY_L","INPUT_CMD_NEW_GAME","KEY_N","INPUT_CMD_WAIT","INPUT_CMD_MOVE_NW","KEY_Q","INPUT_CMD_MOVE_N","KEY_W","KEY_UP","INPUT_CMD_MOVE_NE","KEY_E","INPUT_CMD_MOVE_W","KEY_A","KEY_LEFT","INPUT_CMD_MOVE_E","KEY_D","KEY_RIGHT","INPUT_CMD_MOVE_SW","KEY_Z","INPUT_CMD_MOVE_S","KEY_X","KEY_DOWN","INPUT_CMD_MOVE_SE","KEY_C","INPUT_CMD_SELECT_NW","INPUT_CMD_SELECT_N","INPUT_CMD_SELECT_NE","INPUT_CMD_SELECT_W","INPUT_CMD_SELECT_E","INPUT_CMD_SELECT_SW","INPUT_CMD_SELECT_S","INPUT_CMD_SELECT_SE","INPUT_CMD_INTERACT","INPUT_CMD_LOOK","INPUT_CMD_PICK_UP","KEY_G","KEY_J","INPUT_CMD_INVENTORY","KEY_I","inputEvent","KEY_CANCEL","KEY_HELP","KEY_BACK_SPACE","KEY_TAB","KEY_CLEAR","KEY_ENTER_SPECIAL","KEY_SHIFT","KEY_CONTROL","KEY_ALT","KEY_PAUSE","KEY_CAPS_LOCK","KEY_KANA","KEY_EISU","KEY_JUNJA","KEY_FINAL","KEY_HANJA","KEY_CONVERT","KEY_NONCONVERT","KEY_ACCEPT","KEY_MODECHANGE","KEY_PAGE_UP","KEY_PAGE_DOWN","KEY_END","KEY_HOME","KEY_SELECT","KEY_PRINT","KEY_EXECUTE","KEY_PRINTSCREEN","KEY_INSERT","KEY_DELETE","KEY_NUM_0","KEY_NUM_1","KEY_NUM_2","KEY_NUM_3","KEY_NUM_4","KEY_NUM_5","KEY_NUM_6","KEY_NUM_7","KEY_NUM_8","KEY_NUM_9","KEY_COLON","KEY_SEMICOLON","KEY_LESS_THAN","KEY_EQUALS","KEY_GREATER_THAN","KEY_QUESTION_MARK","KEY_AT","KEY_B","KEY_F","KEY_H","KEY_K","KEY_M","KEY_O","KEY_P","KEY_R","KEY_T","KEY_U","KEY_V","KEY_Y","KEY_META","KEY_CONTEXT_MENU","KEY_SLEEP","KEY_NUMPAD_0","KEY_NUMPAD_1","KEY_NUMPAD_2","KEY_NUMPAD_3","KEY_NUMPAD_4","KEY_NUMPAD_5","KEY_NUMPAD_6","KEY_NUMPAD_7","KEY_NUMPAD_8","KEY_NUMPAD_9","KEY_MULTIPLY","KEY_ADD","KEY_SEPARATOR","KEY_SUBTRACT","KEY_DECIMAL","KEY_DIVIDE","KEY_F1","KEY_F2","KEY_F3","KEY_F4","KEY_F5","KEY_F6","KEY_F7","KEY_F8","KEY_F9","KEY_F10","KEY_F11","KEY_F12","KEY_F13","KEY_F14","KEY_F15","KEY_F16","KEY_F17","KEY_F18","KEY_F19","KEY_F20","KEY_F21","KEY_F22","KEY_F23","KEY_F24","KEY_NUM_LOCK","KEY_SCROLL_LOCK","KEY_WIN_OEM_FJ_JISHO","KEY_WIN_OEM_FJ_MASSHOU","KEY_WIN_OEM_FJ_TOUROKU","KEY_WIN_OEM_FJ_LOYA","KEY_WIN_OEM_FJ_ROYA","KEY_CIRCUMFLEX","KEY_EXCLAMATION","KEY_DOUBLE_QUOTE","KEY_HASH","KEY_DOLLAR","KEY_PERCENT","KEY_AMPERSAND","KEY_UNDERSCORE","KEY_OPEN_PAREN","KEY_CLOSE_PAREN","KEY_ASTERISK","KEY_PLUS","KEY_PIPE","KEY_HYPHEN_MINUS","KEY_OPEN_CURLY_BRACKET","KEY_CLOSE_CURLY_BRACKET","KEY_TILDE","KEY_VOLUME_MUTE","KEY_VOLUME_DOWN","KEY_VOLUME_UP","KEY_SEMICOLON_2","KEY_EQUALS_2","KEY_COMMA","KEY_MINUS","KEY_PERIOD","KEY_SLASH","KEY_BACK_QUOTE","KEY_OPEN_BRACKET","KEY_BACK_SLASH","KEY_CLOSE_BRACKET","KEY_QUOTE","KEY_META_2","KEY_ALTGR","KEY_WIN_ICO_HELP","KEY_WIN_ICO_00","KEY_WIN_ICO_CLEAR","KEY_WIN_OEM_RESET","KEY_WIN_OEM_JUMP","KEY_WIN_OEM_PA1","KEY_WIN_OEM_PA2","KEY_WIN_OEM_PA3","KEY_WIN_OEM_WSCTRL","KEY_WIN_OEM_CUSEL","KEY_WIN_OEM_ATTN","KEY_WIN_OEM_FINISH","KEY_WIN_OEM_COPY","KEY_WIN_OEM_AUTO","KEY_WIN_OEM_ENLW","KEY_WIN_OEM_BACKTAB","KEY_ATTN","KEY_CRSEL","KEY_EXSEL","KEY_EREOF","KEY_PLAY","KEY_ZOOM","KEY_PA1","KEY_WIN_OEM_CLEAR","MainMenuScreen","AdventureScreen","DeathScreen","InventoryScreen","InteractModalScreen","CursorScreen","LoadSectorScreen","setScreen","screenType","onLeave","onEnter","screenCtx","onUpdate","pushDomain","computeFOV","setFocus","popDomain","dir","directionDelta","playerPosition","targetPosition","hostileEntities","melee","doorEntity","move","lootable","item","pushScreen","interactable","onInteract","saveGame","loadGame","popScreen","onPickUpCommand","wait","onDirectionInput","onInteractDirection","updateAdventureSystems","Screen","isStarted","newGame","onConfirm","drawTextCenter","gameOver","items","pointerUp","pointerDown","selectItem","ypos","resetInteractions","interaction","left","top","xpos","isSelected","NOOP","enable","disable","cursorColor","types","segment","drawCursor","getNeighbors","defaultSettings","cost","allowDiagonals","computeAStar","settings","heuristic","diagonalDistance","manhattanDistance","open","PriorityQueue","cameFrom","costSoFar","startKey","goalKey","success","path","costs","Infinity","put","currentKey","current","neighbors","nextKey","graphCost","newCost","priority","previous","previousKey","unshift","min","createItem","prevousSector","nextSector","renderLoadingText","sectorId","entry","loadGameData","onSectorLoaded","prevText","nextText","entityId","serialized","isTurn","turns","Engine","registerComponent","registerPrefab","destroyEntities","generateId","teardown","setup","prompt","deleteFile","filename","initiateTeardown","getSetupData","initiateSetup","getSaveGameData","localStorage","setItem","JSON","stringify","keys","file","startsWith","removeItem","positionData","getItem","parse","loadSavefileData","tick","isEnabled","getEntities","FastMap","onEntityAdded","onEntityRemoved","getRandomEmptyPosition","saveSectorPositionData","sector","loadSectorPositionData","isOutOfBounds","x2","y2","enterSector","northSector","southSector","eastSector","westSector","onPlayerOutOfBounds","_width","_height","_data","_idHash","entries","coord","fov","FOV","isSquareVisible","compute","visibility","setVisible","Util","util","Color","Text","FRAC","_seed","_s0","_s1","_s2","_c","seed","lowerBound","upperBound","getUniform","u","mean","stddev","gauss","sqrt","total","part","RNG","setState","getState","setSeed","BACKENDS","Hex","Rect","Tile","TileGL","Term","DEFAULT_OPTIONS","DEFAULT_WIDTH","DEFAULT_HEIGHT","transpose","layout","fontSize","spacing","border","forceSquareRatio","fontFamily","fontStyle","fg","tileMap","tileSet","tileColorize","_dirty","_options","assign","setOptions","DEBUG","_tick","_backend","schedule","what","colors","ctor","getContainer","availWidth","availHeight","computeSize","computeFontSize","touches","clientX","clientY","eventToPosition","maxWidth","cx","cy","lines","tokens","token","isSpace","isPrevSpace","isFullWidth","isPrevFullWidth","cc","charCodeAt","cch","_draw","clearBefore","_spacingX","_spacingY","_hexSize","px","reverse","_ctx","_fill","chars","concat","fillText","hexSizeWidth","hexSizeHeight","hexSize","oldFont","measureText","ratio","nodeSize","mod","beginPath","moveTo","lineTo","fill","xprop","yprop","opts","charWidth","Canvas","_updateSize","textAlign","rect","getBoundingClientRect","_normalizedEventToPosition","Backend","n","clamp","capitalize","toUpperCase","substring","format","template","args","replacer","group1","group2","obj","method","replaced","apply","first","_canvasCache","_drawWithCache","_drawNoCache","hash","boxWidth","boxHeight","widthFraction","_colorCanvas","fgs","tile","context","globalCompositeOperation","_uniforms","_gl","_initWebGL","alert","preserveDrawingBuffer","_updateTexture","gl","scissorY","scissor","COLOR_BUFFER_BIT","uniform2fv","uniform1f","uniform4fv","drawArrays","TRIANGLE_STRIP","program","vss","fss","vs","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","fs","FRAGMENT_SHADER","p","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","VS","FS","useProgram","Float32Array","buf","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","createQuad","UNIFORMS","getUniformLocation","_program","BLEND","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","SCISSOR_TEST","canvasSize","viewport","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","REPEAT","TEXTURE_WRAP_T","pixelStorei","UNPACK_FLIP_Y_WEBGL","texImage2D","RGBA","UNSIGNED_BYTE","colorCache","Number","$","fromString","cached","CACHE","color1","add_","multiply","round","multiply_","interpolate","color2","factor","lerp","interpolateHSL","hsl1","rgb2hsl","hsl2","hsl2rgb","lerpHSL","randomize","diff","hue2rgb","q","toRGB","clamped","toHex","toString","padStart","termcolor","rgb","DST_COLORS","_offset","_cursor","_lastColor","setTimeout","avail","process","stdout","write","positionToAnsi","newColor","colorToAnsi","columns","rows","RE_COLORS","TYPE_TEXT","TYPE_NEWLINE","TYPE_FG","TYPE_BG","measure","tokenize","lineWidth","offset","lineLength","lastTokenWithSpace","breakInsideToken","nextIndex","breakIndex","lastTextToken","breakLines","tokenIndex","removeBreakChar","newBreakToken","newTextToken","DIRS","4","8","6","KEYS","VK_CANCEL","VK_HELP","VK_BACK_SPACE","VK_TAB","VK_CLEAR","VK_RETURN","VK_ENTER","VK_SHIFT","VK_CONTROL","VK_ALT","VK_PAUSE","VK_CAPS_LOCK","VK_ESCAPE","VK_SPACE","VK_PAGE_UP","VK_PAGE_DOWN","VK_END","VK_HOME","VK_LEFT","VK_UP","VK_RIGHT","VK_DOWN","VK_PRINTSCREEN","VK_INSERT","VK_DELETE","VK_0","VK_1","VK_2","VK_3","VK_4","VK_5","VK_6","VK_7","VK_8","VK_9","VK_COLON","VK_SEMICOLON","VK_LESS_THAN","VK_EQUALS","VK_GREATER_THAN","VK_QUESTION_MARK","VK_AT","VK_A","VK_B","VK_C","VK_D","VK_E","VK_F","VK_G","VK_H","VK_I","VK_J","VK_K","VK_L","VK_M","VK_N","VK_O","VK_P","VK_Q","VK_R","VK_S","VK_T","VK_U","VK_V","VK_W","VK_X","VK_Y","VK_Z","VK_CONTEXT_MENU","VK_NUMPAD0","VK_NUMPAD1","VK_NUMPAD2","VK_NUMPAD3","VK_NUMPAD4","VK_NUMPAD5","VK_NUMPAD6","VK_NUMPAD7","VK_NUMPAD8","VK_NUMPAD9","VK_MULTIPLY","VK_ADD","VK_SEPARATOR","VK_SUBTRACT","VK_DECIMAL","VK_DIVIDE","VK_F1","VK_F2","VK_F3","VK_F4","VK_F5","VK_F6","VK_F7","VK_F8","VK_F9","VK_F10","VK_F11","VK_F12","VK_F13","VK_F14","VK_F15","VK_F16","VK_F17","VK_F18","VK_F19","VK_F20","VK_F21","VK_F22","VK_F23","VK_F24","VK_NUM_LOCK","VK_SCROLL_LOCK","VK_CIRCUMFLEX","VK_EXCLAMATION","VK_DOUBLE_QUOTE","VK_HASH","VK_DOLLAR","VK_PERCENT","VK_AMPERSAND","VK_UNDERSCORE","VK_OPEN_PAREN","VK_CLOSE_PAREN","VK_ASTERISK","VK_PLUS","VK_PIPE","VK_HYPHEN_MINUS","VK_OPEN_CURLY_BRACKET","VK_CLOSE_CURLY_BRACKET","VK_TILDE","VK_COMMA","VK_PERIOD","VK_SLASH","VK_BACK_QUOTE","VK_OPEN_BRACKET","VK_BACK_SLASH","VK_CLOSE_BRACKET","VK_QUOTE","VK_META","VK_ALTGR","VK_WIN","VK_KANA","VK_HANGUL","VK_EISU","VK_JUNJA","VK_FINAL","VK_HANJA","VK_KANJI","VK_CONVERT","VK_NONCONVERT","VK_ACCEPT","VK_MODECHANGE","VK_SELECT","VK_PRINT","VK_EXECUTE","VK_SLEEP","StringGenerator","words","order","prior","_boundary","String","fromCharCode","_suffix","_prefix","_priorValues","_sample","_join","_split","event","subcontext","_observeEvent","priorCount","dataCount","eventCount","_backoff","available","EventQueue","_time","_events","MinHeap","time","heap","timestamp","loc","updateUp","updateDown","last","numbers","validnumbers","existNode","minimal","lessThan","parentNode","swap","leftChild","leftChildNode","rightChild","rightChildNode","minNode","Simple","Speed","Action","repeat","_queue","_current","_repeat","Scheduler","getTime","getEventTime","getSpeed","_defaultDuration","_duration","DiscreteShadowcasting","PreciseShadowcasting","RecursiveShadowcasting","callback","_lightPasses","A","blocks","DATA","_getCircle","angle","_visibleCoords","v1","lightPassesCallback","topology","dirs","countFactor","startOffset","A1","A2","SHADOWS","neighborCount","_checkVisibility","index1","edge1","index2","edge2","visibleLength","visible","P","P1","P2","OCTANTS","_renderOctant","previousOctant","nextPreviousOctant","nextOctant","octant","_castVisibility","visSlopeStart","visSlopeEnd","radius","xx","xy","yx","yy","blocked","newStart","mapX","mapY","slopeStart","slopeEnd","Arena","Uniform","Cellular","Digger","EllerMaze","DividedMaze","IceyMaze","Rogue","w","roomWidth","roomHeight","roomDugPercentage","timeLimit","_map","_dug","_roomAttempts","_corridorAttempts","_connected","_unconnected","_digCallback","_canBeDugCallback","_isWallCallback","t1","_fillMap","_rooms","_generateRooms","_generateCorridors","room","_generateRoom","Room","isValid","cnt","_corridors","clearDoors","connected","room1","_closestRoom","room2","_connectRooms","rooms","dist","center","getCenter","end","dirIndex1","dirIndex2","center1","center2","diffX","diffY","getLeft","getRight","getTop","getBottom","_placeInWall","_digLine","rotation","mid","mid1","mid2","addDoor","dirIndex","lastBadIndex","points","corridor","Corridor","Dungeon","Feature","doorX","doorY","_x1","_y1","_x2","_y2","_doors","isWallCallback","right","bottom","canBeDugCallback","digCallback","endX","endY","_startX","_startY","_endX","_endY","_endsWithAWall","nx","ny","ok","firstCornerBad","secondCornerBad","priorityWallCallback","corridorLength","born","survive","_dirs","probability","newMap","widthStep","widthStart","cur","ncount","_getNeighbors","_serviceCallback","connectionCallback","allFreeSpace","notConnected","widthStarts","_freeSpace","_pointKey","_findConnected","_getFromTo","to","local","tunnelFn","_tunnelToConnected6","_tunnelToConnected","k","call","pp","connectedKeys","notConnectedKeys","_getClosest","point","minPoint","minDist","stack","keepNotConnected","tests","pkey","stepWidth","FEATURES","dugPercentage","_features","_featureAttempts","_walls","_priorityWallCallback","area","_firstRoom","priorityWalls","wall","_findWall","_getDiggingDirection","featureAttempts","_tryFeature","_removeSurroundingWalls","_addDoors","prio1","prio2","featureName","feature","createRandomAt","createPriorityWalls","deltas","addDoors","addToList","removeFromList","arguments","_stack","_process","_partitionRoom","availX","availY","walls","solid","hole","regularity","_regularity","done","_randomize","_isFree","connectedCells","cellWidth","cellHeight","_calculateRoomSize","_initRooms","_connectUnconnectedRooms","_createRandomRoomConnections","_createRooms","_createCorridors","cell","ncgx","ncgy","otherRoom","dirToCheck","cgx","cgy","found","validRoom","cw","dirIdx","newI","newJ","roomw","roomh","cwp","chp","sxOffset","syOffset","ii","jj","aRoom","aDirection","rx","ry","startPosition","endPosition","tempDist","xDir","yDir","xOffset","yOffset","moves","xAbs","yAbs","firstHalf","secondHalf","connection","otherWall","_drawCorridor","_getWallPosition","Simplex","F2","G2","gradients","_gradients","permutations","_perms","_indexes","xin","yin","gi","i1","j1","perms","indexes","n0","n1","n2","t0","grad","t2","Noise","Dijkstra","AStar","toX","toY","passableCallback","_computed","_todo","_add","fromX","fromY","_compute","Path","_toX","_toY","_passableCallback","_done","_fromX","_fromY","_distance","f","itemF","scheduler","_scheduler","_lock","unlock","lock","act","Lighting","reflectivityCallback","_reflectivityCallback","passes","emissionThreshold","_lights","_reflectivityCache","_fovCache","reset","_fov","lightingCallback","doneCells","emittingCells","litCells","light","_emitLight","_computeEmitters","litKey","_emitLightFromCell","reflectivity","emission","intensity","fovKey","_updateFOV","formFactor","key1","vis","meleeCommand","emitter","particleEmitter","isExpired","targetCount","factionA","factionB","entityA","entityB","isHostile","onWindowResize","innerWidth","innerHeight","resizeDisplay","topLeftWorldX","topLeftWorldY","worldX","worldY","sectorTxt","textWidth","WorldData","getSector","getStartingSector","exploredSectorIds","saveSectorEntityData","loadSectorEntityData","generate","Sector","getSectorByCoord","exits","connectionsNorth","connectionsWest","getExits","generator","getGenerator","populate","ForestGenerator","ForestStrongholdGenerator","ForestCabinsGenerator","ForestTownGenerator","UniformScheme","theme","TILE_THEME_FOREST","mediumRooms","pickRandom","TILE_THEME_CABIN","includeWalls","distancedRooms","getUnassignedTiles","digExits","SectorGenerator","randomInt","digExit","exit","closest","closestDistance","isType","TILE_TYPE_FLOOR","distance","getClosestTile","setTileType","TILE_TYPE_WALL","isOnEdge","tileTypeMatches","getRoomForTile","addExit","TILE_TYPE_OUT_OF_BOUNDS","TileData","TILE_THEME_CASTLE","createTileData","ForestTheme","CastleTheme","CabinTheme","getThemePopulator","populateTile","TileThemePopulator","tileArr","attempts","getRandomEmptyTile","interiorTiles","trySpawn","goblin","vial","chest","stone","wanderer","TileContainer","MapGenerator","digPercentage","getRooms","createRoom","getDoors","TileScheme","defaultType","Grid","getTile","RoomData","addRoom","cloneTo","setTileTheme","includes","defaultValueGenerator","relativeExits","endWidth","endHeight","borders","interior","addRelativeExit","c1","c2","c3","c4","bytes","crypto","getRandomValues","Uint8Array","customRandom","alphabet","getRandom","mask","LN2","step","customAlphabet","byte","populateRoom","setTheme","exitOffset","padding","castle","DenseCastleScheme","combineOther","curId","createNodeId","splitNodeVertical","node","cut","leftId","rightId","isLeaf","parentId","siblingId","splitNodeHorizontal","topId","bottomId","minRoomWidth","minRoomHeight","maxRoomWidth","maxRoomHeight","splitIgnoreChance","loopiness","nodes","graph","sibling","doorCandidates","hasSib","tryAddLoop","north","south","east","west","ScatteredScheme","edges","borderTiles","isTopLeftCorner","isBottomLeftCorner","isBottomRightCorner","isTopRightCorner","addBorder","doors","walkways","generatePath","doorA","doorB","attempt","maxAttempts","roomPadding","minCount","maxCount","minWidth","minHeight","maxHeight","createBox","overlaps","box","intersects","msgs","isDestroying","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","getPrototypeOf","__proto__","mode","__esModule","ns","getOwnPropertyNames","o","defineProperty","prototype","toStringTag"],"mappings":"uBACIA,eADAC,S,qICEJC,E,uBAAAA,cAAaC,MAAK,WAAM,IACZC,KAASC,oBAAQ,GAAjBD,KAERE,OAAOF,KAAOA,KACdE,OAAOC,IAAMH,KAAKG,IAElBH,KAAKI,Y,sLCRT,IAAMC,UAAY,SAACC,KAAD,OACd,IAAIC,SAAQ,SAACC,QAASC,QACdH,IAAII,UACJF,UAGJF,IAAIK,iBAAiB,QAAQ,WACzBH,aAGJF,IAAIK,iBAAiB,SAAS,SAACC,OAC3BH,OAAOG,cAINd,WAAa,WACtB,IAAMe,KAAOC,MAAMC,KAAKC,SAASC,iBAAiB,QAElD,OAAOV,QAAQW,IAAIL,KAAKM,IAAId,c,05FCSXe,K,WAOjB,iB,8HAAc,6DACVC,KAAKC,OAAS,IAAIC,2CAAIF,MACtBA,KAAKG,MAAQ,IAAIC,yDAAaJ,MAC9BA,KAAKK,MAAQ,IAAIC,oDAAaN,MAC9BA,KAAKO,OAAS,IAAIC,qDAAcR,MAChCA,KAAKS,SAAW,IAAIC,8DAASV,MAC7BA,KAAKW,MAAQ,IAAIC,wDAAiBZ,MAClCA,KAAKa,MAAQ,IAAIC,yDAAad,MAC9BA,KAAKF,IAAM,IAAIiB,kDAAWf,MAC1BA,KAAKgB,SAAW,IAAIC,sDAAejB,MACnCA,KAAKkB,OAAS,IAAIC,qDAAcnB,MAChCA,KAAKoB,SAAW,IAAIC,2DAAerB,MACnCA,KAAKsB,QAAU,IAAIC,4DAAcvB,MACjCA,KAAKwB,MAAQ,IAAIC,4DAAgBzB,MACjCA,KAAK0B,QAAU,IAAIC,sDAAe3B,MAElCA,KAAK4B,aAAe,IAAIC,2DAAa7B,MACrCA,KAAK8B,aAAe,IAAIC,2DAAa/B,MACrCA,KAAKgC,eAAiB,IAAIC,6DAAejC,MACzCA,KAAKkC,YAAc,IAAIC,2DAAYnC,MACnCA,KAAKoC,YAAc,IAAIC,2DAAYrC,MACnCA,KAAKsC,UAAY,IAAIA,yDAAUtC,MAC/BA,KAAKuC,aAAe,IAAIC,2DAAaxC,MACrCA,KAAKyC,SAAW,IAAIA,uDAASzC,MAC7BA,KAAK0C,OAAS,IAAIC,4DAAa3C,MAC/BA,KAAK4C,UAAY,IAAIC,8DAAe7C,MACpCA,KAAK8C,IAAM,IAAIC,mEAAoB/C,MACnCA,KAAKgD,cAAgB,IAAIC,6DAAcjD,M,oDA9BvC,OAAOA,KAAKC,OAAOA,W,iDAkCnB,sBAAAD,KAAA,YAAmBkD,KAAKC,OACxBnD,KAAKoD,UAAYpD,KAAKqD,KAAKC,KAAKtD,MAChCuD,sBAAsBvD,KAAKqD,KAAKC,KAAKtD,S,6CAGlBwD,IACnBxD,KAAKK,MAAMoD,OAAOD,IAClBxD,KAAK8B,aAAa2B,OAAOD,IACzBxD,KAAK4B,aAAa6B,OAAOD,IACzBxD,KAAKgC,eAAeyB,OAAOD,IAC3BxD,KAAKkC,YAAYuB,OAAOD,IACxBxD,KAAKoC,YAAYqB,OAAOD,IACxBxD,KAAKsC,UAAUmB,OAAOD,IACtBxD,KAAKuC,aAAakB,OAAOD,IACzBxD,KAAK4C,UAAUa,OAAOD,IACtBxD,KAAKyC,SAASgB,OAAOD,IACrBxD,KAAKF,IAAI2D,OAAOD,IAChBxD,KAAKgD,cAAcS,OAAOD,IAC1BxD,KAAK0B,QAAQgC,OAAOF,M,2BAGnBG,GACD,IAAMR,IAAMD,KAAKC,MACXK,GAAKL,I,gOAAM,CAAAnD,KAAH,aAEdA,KAAKsB,QAAQmC,OAAOD,IACpBxD,KAAK8C,IAAIW,OAAOD,IAEhB,sBAAAxD,KAAA,YAAmBmD,KAEnBI,sBAAsBvD,KAAKoD,e,QAItBzE,KAAO,IAAIoB,M,ijFC/FHW,S,qZAsBjB,kBAAY/B,MAAM,iB,8HAAA,gBACd,uBAAMA,MADQ,gEArBL,KAqBK,iEApBJ,KAoBI,mEAnBF,KAmBE,8DAlBP,QAqBPiF,wDAAeC,SAAQ,SAACC,aACpB,mEAAmBA,YAAYC,MAAQD,e,4UAG3C,wCAAgB,IAAIE,8CAAQ,CACxBC,MAAO,MAAKtF,KAAK4B,OAAO0D,MACxBC,OAAQ,MAAKvF,KAAK4B,OAAO2D,OACzBC,UAAW,MAAKA,UAChBC,WAAY,MAAKA,cAGrBzE,SAAS0E,KAAKC,YAAY,MAAKC,QAAQC,QAdzB,M,8DAfd,6BAAOxE,KAAP,c,iCAIA,6BAAOA,KAAP,e,8BAIA,6BAAOA,KAAP,Y,6BAIA,OAAOA,KAAKuE,QAAQC,W,2DAoBVP,MAAOC,QACjBlE,KAAKuE,QAAQE,QAAQR,MAAOC,U,2BAG3BQ,EAAGC,EAAGC,OAAyC,IAAnCC,IAAmC,uDAA7B,UAAWC,IAAkB,uDAAZ,OAAQC,GAAI,uCAC1CC,OAAS,sBAAAhF,KAAA,eAAmBiF,MAAMC,UAAUN,OAElD5E,KAAKuE,QAAQY,KAAKT,EAAGC,EAAGK,OAAQH,IAAKC,IAAKC,M,uCAG7BK,MACb,MAAqB,GAAdA,KAAKC,S,+BAGPX,EAAGC,EAAGS,MACX,IADoD,IAAnCP,IAAmC,uDAA7B,UAAWC,IAAkB,uDAAZ,OAAQC,GAAI,uCAC3CO,EAAI,EAAGA,EAAIF,KAAKC,OAAQC,IAAK,CAClC,IAAMN,OAAS,sBAAAhF,KAAA,eAAmBuF,KAAKL,UAAUE,KAAKI,OAAOF,IAE7DtF,KAAKuE,QAAQY,KAAKT,EAAI,GAAMY,EAAGX,EAAGK,OAAQH,IAAKC,IAAKC,O,qCAI7CJ,EAAGS,MAAyC,IAAnCP,IAAmC,uDAA7B,UAAWC,IAAkB,uDAAZ,OAAQC,GAAI,uCACjDU,IAAMzF,KAAK0F,iBAAiBN,MAElCpF,KAAK2F,UACA3F,KAAKrB,KAAK4B,OAAO0D,MAAQwB,KAAO,EACjCd,EACAS,KACAP,IACAC,IACAC,M,8BAKJ/E,KAAKuE,QAAQqB,U,gCAGPlB,EAAGC,EAAGV,MAAOC,QACnBlE,KAAKuE,QAAQsB,UAAUnB,EAAGC,EAAGV,MAAOC,U,+BAG/B4B,IAAKC,KAIV,MAAO,CAAErB,EAHCsB,KAAKC,MAAMH,IAAM9F,KAAKmE,WAGpBQ,EAFFqB,KAAKC,MAAMF,IAAM/F,KAAKoE,iB,UApFF8B,gD,+pBCJjBA,Q,WAOjB,iBAAYvH,O,8HAAM,0D,4UACd,CAAAqB,KAAA,MAAarB,M,wDAJb,O,gOAAA,CAAOqB,KAAP,W,0tBCJagE,Q,WAUjB,uBAAsD,IAAxCC,MAAwC,KAAxCA,MAAOC,OAAiC,KAAjCA,OAAQC,UAAyB,KAAzBA,UAAWC,WAAc,KAAdA,Y,8HAAc,yRAHxC,IAAI+B,KAGoC,kCAFzC,WAGTnG,KAAKmE,UAAYA,UACjBnE,KAAKoE,WAAaA,WAElBpE,KAAKwE,OAAS7E,SAASyG,cAAc,UACrCpG,KAAKqG,IAAMrG,KAAKwE,OAAO8B,WAAW,KAAM,CAAEC,OAAO,IAEjDvG,KAAKqG,IAAId,KAAT,UAAmBvF,KAAKoE,WAAxB,gBACApE,KAAKqG,IAAIG,aAAe,MAExBxG,KAAKyE,QAAQR,MAAOC,Q,6GAGhBD,MAAOC,QACXlE,KAAKiE,MAAQA,MACbjE,KAAKkE,OAASA,OAEd,IAAMuC,QAAUzG,KAAKmE,UAAYnE,KAAKiE,MAChCyC,SAAW1G,KAAKoE,WAAapE,KAAKkE,OAExClE,KAAKwE,OAAOmC,MAAMC,QAAlB,iBAAsCH,QAAtC,uBAA4DC,SAA5D,MACA1G,KAAKwE,OAAOP,MAAQwC,QACpBzG,KAAKwE,OAAON,OAASwC,W,2BAGpBhC,EAAGC,EAAGK,OAAQH,IAAKC,IAAKC,IACzB,IAAM8B,OAASnC,EAAI1E,KAAKmE,UAClB2C,OAASnC,EAAI3E,KAAKoE,WAElBnF,IAAM+F,OAAO+B,SAASlC,IAAKC,KAEjC9E,KAAKqG,IAAIW,UAAYjC,IAAM/E,KAAKiH,YAE5BjH,KAAKkH,QAAQxC,EAAGC,IAAMI,KACtB/E,KAAKqG,IAAIc,SAASN,OAAQC,OAAQ9B,OAAOf,MAAOe,OAAOd,QAG3DlE,KAAKqG,IAAIe,UAAUnI,IAAK4H,OAAQC,QAChC9G,KAAKqH,WAAW3C,EAAGC,K,8BAInB3E,KAAKqG,IAAIW,UAAYhH,KAAKiH,WAC1BjH,KAAKqG,IAAIc,SAAS,EAAG,EAAGnH,KAAKwE,OAAOP,MAAOjE,KAAKwE,OAAON,QACvDlE,KAAKsH,YAAY1B,U,gCAGXlB,EAAGC,EAAGV,MAAOC,QACnBlE,KAAKqG,IAAIW,UAAYhH,KAAKiH,WAC1BjH,KAAKqG,IAAIc,SACLzC,EAAI1E,KAAKmE,UACTQ,EAAI3E,KAAKoE,WACTpE,KAAKmE,UAAYF,MACjBjE,KAAKoE,WAAaF,U,+BAIjBQ,EAAGC,EAAG4C,OACXvH,KAAKqG,IAAIW,UAAYO,MACrBvH,KAAKqG,IAAIc,SAASzC,EAAGC,EAAG3E,KAAKmE,UAAWnE,KAAKoE,c,gCAGvCM,EAAGC,GACT3E,KAAKqG,IAAImB,UACL9C,EAAI1E,KAAKmE,UACTQ,EAAI3E,KAAKoE,WACTpE,KAAKmE,UACLnE,KAAKoE,c,iCAIFM,EAAGC,GACV3E,KAAKsH,YAAYG,IAAjB,UAAwB/C,EAAxB,YAA6BC,M,8BAGzBD,EAAGC,GACP3E,KAAKsH,YAAYI,IAAjB,UAAwBhD,EAAxB,YAA6BC,S,gYCpFrC,4CACI,IAAMgD,UAAYhI,SAASiI,eAAe,qBACpCC,UAAYlI,SAASiI,eAAe,oBAE1C,MAAO,CACH,IAAIE,kDAAY,QAASH,WACzB,IAAIG,kDAAY,OAAQD,c,mkCCLXC,Y,WAyBjB,qBAAY/D,KAAMgE,OAAO,gB,8HAAA,qDAxBjB,OAwBiB,0CAvBT,MAuBS,qCAtBd,K,4UAuBP,CAAA/H,KAAA,MAAa+D,MACb/D,KAAK+H,MAAQA,MAEb/H,KAAKgI,YAAchI,KAAK+H,MAAM9D,MAAQjE,KAAKiI,aAC3CjI,KAAKkI,aAAelI,KAAK+H,MAAM7D,OAASlE,KAAKmI,aAE7CC,qDAAc,SAACC,IAAK/C,GAChB+C,IAAIxE,SAAQ,SAACyE,MAAOC,GAChB,4BAAI,UAAUD,OAAS,IAAIE,6CAAOF,MAAO,MAAMC,EAAGjD,S,4DA5B1D,6BAAOtF,KAAP,S,4BAIA,OAAOA,KAAK+H,MAAM9D,Q,6BAIlB,OAAOjE,KAAK+H,MAAM7D,S,mCAIlB,OAAO,K,mCAIP,OAAO,O,0DAiBDoE,OACN,OAAI,sBAAAtI,KAAA,UAAcsI,OACP,sBAAAtI,KAAA,UAAcsI,OAGlB,sBAAAtI,KAAA,gCAAcA,KAAd,oB,mNC9Cf,kCACI,CAAC,MAAO,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC9E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC7E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,KAC7E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,U,wzCCfhF,IACMyI,QAAU,SAACC,EAAGC,EAAGC,GAAP,OAAmB,IAANF,GAAiB,IAANC,GAAiB,IAANC,G,qFAE9BJ,O,WA4CjB,gBAAYF,MAAOO,MAAOnE,EAAGC,G,iJAAG,+CA3CzB,OA2CyB,mCA1CvB,OA0CuB,mCAzCvB,OAyCuB,+BAxC3B,OAwC2B,+BAvC3B,O,MACI,I,IAsCuB,Y,IAAA,M,gGAC5B,sBAAA3E,KAAA,OAAcsI,OACd,sBAAAtI,KAAA,OAAc6I,OACd,sBAAA7I,KAAA,GAAU0E,GACV,sBAAA1E,KAAA,GAAU2E,GAEV,IAAMH,OAAS7E,SAASyG,cAAc,UAEtC5B,OAAOP,MAAQjE,KAAKiE,MACpBO,OAAON,OAASlE,KAAKkE,OAErB,sBAAAlE,KAAA,KAAYwE,OAAO8B,WAAW,OAE9B,sBAAAtG,KAAA,MAAUoH,UACNpH,KAAK6I,MAAMd,MACX/H,KAAK8I,QACL9I,KAAK+I,QACL/I,KAAKiE,MACLjE,KAAKkE,OACL,EACA,EACAlE,KAAKiE,MACLjE,KAAKkE,Q,wDAzDT,6BAAOlE,KAAP,U,wBAIA,6BAAOA,KAAP,M,wBAIA,6BAAOA,KAAP,M,4BAIA,6BAAOA,KAAP,U,4BAIA,OAAOA,KAAK6I,MAAMd,Q,8BAIlB,OAAO/H,KAAK6I,MAAMb,YAAchI,KAAK0E,I,8BAIrC,OAAO1E,KAAK6I,MAAMX,aAAelI,KAAK2E,I,4BAItC,OAAO3E,KAAK6I,MAAMb,c,6BAIlB,OAAOhI,KAAK6I,MAAMX,iB,oDA6Bbc,WAAYC,cACjB,IAAMC,SAAUC,8DAAWH,YACrBI,WAAYD,8DAAWF,cAEvBI,IAAM,GAAH,OAAMH,QAAQG,IAAd,YAAqBD,UAAUC,KAExC,GAAIrJ,KAAKsJ,OAAOC,eAAeF,KAC3B,OAAOrJ,KAAKsJ,OAAOD,KAKvB,IAFA,IAAMG,OAAS,sBAAAxJ,KAAA,MAAUyJ,aAAa,EAAG,EAAGzJ,KAAKiE,MAAOjE,KAAKkE,QAEpDoB,EAAI,EAAGA,EAAIkE,OAAOE,KAAKrE,OAAQC,GAAK,EAAG,CAC5C,IAAMoD,EAAIc,OAAOE,KAAKpE,GAChBqD,EAAIa,OAAOE,KAAKpE,EAAI,GACpBsD,EAAIY,OAAOE,KAAKpE,EAAI,GAEtBmD,QAAQC,EAAGC,EAAGC,IACdY,OAAOE,KAAKpE,GAAK4D,QAAQ,GACzBM,OAAOE,KAAKpE,EAAI,GAAK4D,QAAQ,GAC7BM,OAAOE,KAAKpE,EAAI,GAAK4D,QAAQ,GAC7BM,OAAOE,KAAKpE,EAAI,GAAK4D,QAAQ,KAE7BM,OAAOE,KAAKpE,GAAK8D,UAAU,GAC3BI,OAAOE,KAAKpE,EAAI,GAAK8D,UAAU,GAC/BI,OAAOE,KAAKpE,EAAI,GAAK8D,UAAU,GAC/BI,OAAOE,KAAKpE,EAAI,GAAK8D,UAAU,IAIvC,IAAMO,IAAMhK,SAASyG,cAAc,UASnC,OAPAuD,IAAI1F,MAAQjE,KAAKiE,MACjB0F,IAAIzF,OAASlE,KAAKkE,OAElByF,IAAIrD,WAAW,MAAMsD,aAAaJ,OAAQ,EAAG,GAE7CxJ,KAAKsJ,OAAOD,KAAOM,IAEZA,Q,sQChHTE,MAAQ,GAEDV,WAAa,SAACW,UACvB,IAAKD,MAAMN,eAAeO,UAAW,CACjC,IAAMC,QAASC,oDAAWF,UAAUG,OAC9BP,KAAO,CACTK,OAAO,GACPA,OAAO,GACPA,OAAO,GACPA,OAAOxD,OAGXmD,KAAKL,IAAL,UAAcK,KAAK,GAAnB,YAAyBA,KAAK,GAA9B,YAAoCA,KAAK,GAAzC,YAA+CA,KAAK,IAEpDG,MAAMC,UAAYJ,KAGtB,OAAOG,MAAMC,Y,mRCdjB,iCAqBA,SAAgBI,MACf,IAAIC,EAA0BC,MAAvBC,MAAQ,GAAI9D,MAAQ,EAE3B,GAAoB,iBAAT2D,KAEV,GAAII,wCAAMJ,MACTG,MAAQC,wCAAMJ,MAAMK,QACpBH,MAAQ,WAIJ,GAAa,gBAATF,KACR3D,MAAQ,EACR6D,MAAQ,MACRC,MAAQ,CAAC,EAAE,EAAE,QAIT,GAAI,kBAAkBG,KAAKN,MAAO,CACtC,IACIO,MADAC,KAAOR,KAAKK,MAAM,IACNlF,OAEhBkB,MAAQ,EADMkE,MAAQ,GAIrBJ,MAAQ,CACPM,SAASD,KAAK,GAAKA,KAAK,GAAI,IAC5BC,SAASD,KAAK,GAAKA,KAAK,GAAI,IAC5BC,SAASD,KAAK,GAAKA,KAAK,GAAI,KAEhB,IAATD,OACHlE,MAAQoE,SAASD,KAAK,GAAKA,KAAK,GAAI,IAAM,OAI3CL,MAAQ,CACPM,SAASD,KAAK,GAAKA,KAAK,GAAI,IAC5BC,SAASD,KAAK,GAAKA,KAAK,GAAI,IAC5BC,SAASD,KAAK,GAAKA,KAAK,GAAI,KAEhB,IAATD,OACHlE,MAAQoE,SAASD,KAAK,GAAKA,KAAK,GAAI,IAAM,MAIvCL,MAAM,KAAIA,MAAM,GAAK,GACrBA,MAAM,KAAIA,MAAM,GAAK,GACrBA,MAAM,KAAIA,MAAM,GAAK,GAE1BD,MAAQ,WAIJ,GAAID,EAAI,mFAAmFS,KAAKV,MAAO,CAC3G,IAAInG,KAAOoG,EAAE,GACTU,MAAiB,QAAT9G,KACR2G,KAAO3G,KAAK+G,QAAQ,KAAM,IAC9BV,MAAQM,KACJD,KAAgB,SAATC,KAAkB,EAAa,SAATA,KAAkB,EAAI,EACvDL,MAAQF,EAAE,GAAGY,OACXC,MAAM,mBACNlL,KAAI,SAAU4E,EAAGY,GAEjB,GAAI,KAAKkF,KAAK9F,GAEb,OAAIY,IAAMmF,KAAaQ,WAAWvG,GAAK,IAE1B,QAATgG,KAAuC,IAAhBO,WAAWvG,GAAW,IAC1CuG,WAAWvG,GAGd,GAAgB,MAAZgG,KAAKpF,GAAY,CAEzB,GAAI,OAAOkF,KAAK9F,GACf,OAAOuG,WAAWvG,GAGd,QAAoBwG,IAAhBC,SAASzG,GACjB,OAAOyG,SAASzG,GAGlB,OAAOuG,WAAWvG,MAGhBX,OAAS2G,MAAML,MAAMe,KAAK,GAC9B7E,MAASsE,YAA8BK,IAAhBb,MAAMI,MAAX,EAAsCJ,MAAMI,MAC9DJ,MAAQA,MAAME,MAAM,EAAGE,WAIfP,KAAK7E,OAAS,IAAM,iBAAiBmF,KAAKN,QAClDG,MAAQH,KAAKmB,MAAM,aAAavL,KAAI,SAAUwL,OAC7C,OAAOL,WAAWK,UAGnBlB,MAAQF,KAAKmB,MAAM,aAAaE,KAAK,IAAIC,oBAKjCC,MAAMvB,MAMPzK,MAAMiM,QAAQxB,OAASA,KAAK7E,QACpCgF,MAAQ,CAACH,KAAK,GAAIA,KAAK,GAAIA,KAAK,IAChCE,MAAQ,MACR7D,MAAwB,IAAhB2D,KAAK7E,OAAe6E,KAAK,GAAK,GAI9BA,gBAAgByB,SACV,MAAVzB,KAAKxB,GAAyB,MAAZwB,KAAK0B,KAAyB,MAAV1B,KAAK2B,GAC9CzB,MAAQ,MACRC,MAAQ,CACPH,KAAKxB,GAAKwB,KAAK0B,KAAO1B,KAAK2B,GAAK,EAChC3B,KAAKvB,GAAKuB,KAAK4B,OAAS5B,KAAK6B,GAAK,EAClC7B,KAAKtB,GAAKsB,KAAK8B,MAAQ9B,KAAK+B,GAAK,KAIlC7B,MAAQ,MACRC,MAAQ,CACPH,KAAKgC,GAAKhC,KAAKiC,KAAOjC,KAAKkC,GAAK,EAChClC,KAAKmC,GAAKnC,KAAKoC,YAAcpC,KAAKqC,GAAK,EACvCrC,KAAKsC,GAAKtC,KAAKuC,WAAavC,KAAKwC,GAAKxC,KAAKtB,GAAKsB,KAAKyC,aAIvDpG,MAAQ2D,KAAK0C,GAAK1C,KAAK3D,OAAS2D,KAAK2C,SAAW,EAE5B,MAAhB3C,KAAK2C,UAAiBtG,OAAS,OAhCnC6D,MAAQ,MACRC,MAAQ,CAACH,OAAS,IAAY,MAAPA,QAAqB,EAAU,IAAPA,OAkChD,MAAO,CACNE,MACAH,OAAQI,MACR9D,QAzJF,IAAI4E,SAAW,CACdS,IAAK,EACLkB,OAAQ,GACRC,OAAQ,IACRjB,MAAO,IACPE,KAAM,IACNgB,OAAQ,M,SChBTC,OAAOC,QAAU,CAChB,UAAa,CAAC,IAAK,IAAK,KACxB,aAAgB,CAAC,IAAK,IAAK,KAC3B,KAAQ,CAAC,EAAG,IAAK,KACjB,WAAc,CAAC,IAAK,IAAK,KACzB,MAAS,CAAC,IAAK,IAAK,KACpB,MAAS,CAAC,IAAK,IAAK,KACpB,OAAU,CAAC,IAAK,IAAK,KACrB,MAAS,CAAC,EAAG,EAAG,GAChB,eAAkB,CAAC,IAAK,IAAK,KAC7B,KAAQ,CAAC,EAAG,EAAG,KACf,WAAc,CAAC,IAAK,GAAI,KACxB,MAAS,CAAC,IAAK,GAAI,IACnB,UAAa,CAAC,IAAK,IAAK,KACxB,UAAa,CAAC,GAAI,IAAK,KACvB,WAAc,CAAC,IAAK,IAAK,GACzB,UAAa,CAAC,IAAK,IAAK,IACxB,MAAS,CAAC,IAAK,IAAK,IACpB,eAAkB,CAAC,IAAK,IAAK,KAC7B,SAAY,CAAC,IAAK,IAAK,KACvB,QAAW,CAAC,IAAK,GAAI,IACrB,KAAQ,CAAC,EAAG,IAAK,KACjB,SAAY,CAAC,EAAG,EAAG,KACnB,SAAY,CAAC,EAAG,IAAK,KACrB,cAAiB,CAAC,IAAK,IAAK,IAC5B,SAAY,CAAC,IAAK,IAAK,KACvB,UAAa,CAAC,EAAG,IAAK,GACtB,SAAY,CAAC,IAAK,IAAK,KACvB,UAAa,CAAC,IAAK,IAAK,KACxB,YAAe,CAAC,IAAK,EAAG,KACxB,eAAkB,CAAC,GAAI,IAAK,IAC5B,WAAc,CAAC,IAAK,IAAK,GACzB,WAAc,CAAC,IAAK,GAAI,KACxB,QAAW,CAAC,IAAK,EAAG,GACpB,WAAc,CAAC,IAAK,IAAK,KACzB,aAAgB,CAAC,IAAK,IAAK,KAC3B,cAAiB,CAAC,GAAI,GAAI,KAC1B,cAAiB,CAAC,GAAI,GAAI,IAC1B,cAAiB,CAAC,GAAI,GAAI,IAC1B,cAAiB,CAAC,EAAG,IAAK,KAC1B,WAAc,CAAC,IAAK,EAAG,KACvB,SAAY,CAAC,IAAK,GAAI,KACtB,YAAe,CAAC,EAAG,IAAK,KACxB,QAAW,CAAC,IAAK,IAAK,KACtB,QAAW,CAAC,IAAK,IAAK,KACtB,WAAc,CAAC,GAAI,IAAK,KACxB,UAAa,CAAC,IAAK,GAAI,IACvB,YAAe,CAAC,IAAK,IAAK,KAC1B,YAAe,CAAC,GAAI,IAAK,IACzB,QAAW,CAAC,IAAK,EAAG,KACpB,UAAa,CAAC,IAAK,IAAK,KACxB,WAAc,CAAC,IAAK,IAAK,KACzB,KAAQ,CAAC,IAAK,IAAK,GACnB,UAAa,CAAC,IAAK,IAAK,IACxB,KAAQ,CAAC,IAAK,IAAK,KACnB,MAAS,CAAC,EAAG,IAAK,GAClB,YAAe,CAAC,IAAK,IAAK,IAC1B,KAAQ,CAAC,IAAK,IAAK,KACnB,SAAY,CAAC,IAAK,IAAK,KACvB,QAAW,CAAC,IAAK,IAAK,KACtB,UAAa,CAAC,IAAK,GAAI,IACvB,OAAU,CAAC,GAAI,EAAG,KAClB,MAAS,CAAC,IAAK,IAAK,KACpB,MAAS,CAAC,IAAK,IAAK,KACpB,SAAY,CAAC,IAAK,IAAK,KACvB,cAAiB,CAAC,IAAK,IAAK,KAC5B,UAAa,CAAC,IAAK,IAAK,GACxB,aAAgB,CAAC,IAAK,IAAK,KAC3B,UAAa,CAAC,IAAK,IAAK,KACxB,WAAc,CAAC,IAAK,IAAK,KACzB,UAAa,CAAC,IAAK,IAAK,KACxB,qBAAwB,CAAC,IAAK,IAAK,KACnC,UAAa,CAAC,IAAK,IAAK,KACxB,WAAc,CAAC,IAAK,IAAK,KACzB,UAAa,CAAC,IAAK,IAAK,KACxB,UAAa,CAAC,IAAK,IAAK,KACxB,YAAe,CAAC,IAAK,IAAK,KAC1B,cAAiB,CAAC,GAAI,IAAK,KAC3B,aAAgB,CAAC,IAAK,IAAK,KAC3B,eAAkB,CAAC,IAAK,IAAK,KAC7B,eAAkB,CAAC,IAAK,IAAK,KAC7B,eAAkB,CAAC,IAAK,IAAK,KAC7B,YAAe,CAAC,IAAK,IAAK,KAC1B,KAAQ,CAAC,EAAG,IAAK,GACjB,UAAa,CAAC,GAAI,IAAK,IACvB,MAAS,CAAC,IAAK,IAAK,KACpB,QAAW,CAAC,IAAK,EAAG,KACpB,OAAU,CAAC,IAAK,EAAG,GACnB,iBAAoB,CAAC,IAAK,IAAK,KAC/B,WAAc,CAAC,EAAG,EAAG,KACrB,aAAgB,CAAC,IAAK,GAAI,KAC1B,aAAgB,CAAC,IAAK,IAAK,KAC3B,eAAkB,CAAC,GAAI,IAAK,KAC5B,gBAAmB,CAAC,IAAK,IAAK,KAC9B,kBAAqB,CAAC,EAAG,IAAK,KAC9B,gBAAmB,CAAC,GAAI,IAAK,KAC7B,gBAAmB,CAAC,IAAK,GAAI,KAC7B,aAAgB,CAAC,GAAI,GAAI,KACzB,UAAa,CAAC,IAAK,IAAK,KACxB,UAAa,CAAC,IAAK,IAAK,KACxB,SAAY,CAAC,IAAK,IAAK,KACvB,YAAe,CAAC,IAAK,IAAK,KAC1B,KAAQ,CAAC,EAAG,EAAG,KACf,QAAW,CAAC,IAAK,IAAK,KACtB,MAAS,CAAC,IAAK,IAAK,GACpB,UAAa,CAAC,IAAK,IAAK,IACxB,OAAU,CAAC,IAAK,IAAK,GACrB,UAAa,CAAC,IAAK,GAAI,GACvB,OAAU,CAAC,IAAK,IAAK,KACrB,cAAiB,CAAC,IAAK,IAAK,KAC5B,UAAa,CAAC,IAAK,IAAK,KACxB,cAAiB,CAAC,IAAK,IAAK,KAC5B,cAAiB,CAAC,IAAK,IAAK,KAC5B,WAAc,CAAC,IAAK,IAAK,KACzB,UAAa,CAAC,IAAK,IAAK,KACxB,KAAQ,CAAC,IAAK,IAAK,IACnB,KAAQ,CAAC,IAAK,IAAK,KACnB,KAAQ,CAAC,IAAK,IAAK,KACnB,WAAc,CAAC,IAAK,IAAK,KACzB,OAAU,CAAC,IAAK,EAAG,KACnB,cAAiB,CAAC,IAAK,GAAI,KAC3B,IAAO,CAAC,IAAK,EAAG,GAChB,UAAa,CAAC,IAAK,IAAK,KACxB,UAAa,CAAC,GAAI,IAAK,KACvB,YAAe,CAAC,IAAK,GAAI,IACzB,OAAU,CAAC,IAAK,IAAK,KACrB,WAAc,CAAC,IAAK,IAAK,IACzB,SAAY,CAAC,GAAI,IAAK,IACtB,SAAY,CAAC,IAAK,IAAK,KACvB,OAAU,CAAC,IAAK,GAAI,IACpB,OAAU,CAAC,IAAK,IAAK,KACrB,QAAW,CAAC,IAAK,IAAK,KACtB,UAAa,CAAC,IAAK,GAAI,KACvB,UAAa,CAAC,IAAK,IAAK,KACxB,UAAa,CAAC,IAAK,IAAK,KACxB,KAAQ,CAAC,IAAK,IAAK,KACnB,YAAe,CAAC,EAAG,IAAK,KACxB,UAAa,CAAC,GAAI,IAAK,KACvB,IAAO,CAAC,IAAK,IAAK,KAClB,KAAQ,CAAC,EAAG,IAAK,KACjB,QAAW,CAAC,IAAK,IAAK,KACtB,OAAU,CAAC,IAAK,GAAI,IACpB,UAAa,CAAC,GAAI,IAAK,KACvB,OAAU,CAAC,IAAK,IAAK,KACrB,MAAS,CAAC,IAAK,IAAK,KACpB,MAAS,CAAC,IAAK,IAAK,KACpB,WAAc,CAAC,IAAK,IAAK,KACzB,OAAU,CAAC,IAAK,IAAK,GACrB,YAAe,CAAC,IAAK,IAAK,M,ggEClJNzL,gB,scACjB,yBAAY9C,MAAM,W,8HAAA,uBACd,uBAAMA,MACNgB,SAASL,iBAAiB,UAAW,MAAK6N,UAAU7J,KAAf,gCAErC,IAAM8J,UAAY,MAAKzO,KAAK8B,SAAS+D,OAJvB,OAMd4I,UAAU9N,iBAAiB,QAAS,MAAK+N,aAAa/J,KAAlB,gCACpC8J,UAAU9N,iBAAiB,YAAa,MAAKgO,YAAYhK,KAAjB,gCACxC8J,UAAU9N,iBAAiB,aAAc,MAAKiO,aAAajK,KAAlB,gCACzC8J,UAAU9N,iBAAiB,aAAc,MAAKkO,aAAalK,KAAlB,gCAT3B,M,gFAYRmK,GACN,IAAMC,IAAM,IAAIC,gEAAmB,CAC/BtE,IAAKoE,EAAEG,QACPC,MAAOJ,EAAEK,SACTC,KAAMN,EAAEO,QACRC,IAAKR,EAAES,OACPC,KAAMV,EAAEW,UAGZX,EAAEY,iBAEFrO,KAAKrB,KAAKyC,SAASkN,aAAaZ,O,mCAGvBD,GACT,IAAM3H,IAAM2H,EAAEc,QACRxI,IAAM0H,EAAEe,QAFF,sBAGKxO,KAAKrB,KAAK8B,SAASgO,SAAS3I,IAAKC,KAA1CrB,EAHI,sBAGJA,EAAGC,EAHC,sBAGDA,EAEL+I,IAAM,IAAIgB,6DAAgB,CAC5BrF,IAAKoE,EAAEkB,OACPjK,EACAC,EACAkJ,MAAOJ,EAAEK,SACTC,KAAMN,EAAEO,QACRC,IAAKR,EAAES,OACPC,KAAMV,EAAEW,QACRtI,IACAC,MAGJ/F,KAAKrB,KAAKyC,SAASkN,aAAaZ,O,kCAGxBD,GACR,IAAM3H,IAAM2H,EAAEc,QACRxI,IAAM0H,EAAEe,QAFH,uBAGMxO,KAAKrB,KAAK8B,SAASgO,SAAS3I,IAAKC,KAA1CrB,EAHG,uBAGHA,EAAGC,EAHA,uBAGAA,EAEX3E,KAAKrB,KAAKwB,MAAMyO,eAAelK,EAAGC,K,mCAGzB8I,GACTzN,KAAKrB,KAAKwB,MAAM0O,qB,mCAGPpB,GACTzN,KAAKrB,KAAKwB,MAAM2O,wB,oJA5DqB5I,U,+qDCFxByH,mB,6kBAA2BoB,U,qVCF3BA,WAOjB,oBAAYrF,O,8HAAM,8CANZ,GAMY,8BALV,GAKU,6BAJX,GAIW,4BAHZ,GAGY,6BAFX,GAGH1J,KAAKqJ,IAAMK,KAAKL,IAChBrJ,KAAK6N,MAAQnE,KAAKmE,MAClB7N,KAAK+N,KAAOrE,KAAKqE,KACjB/N,KAAKiO,IAAMvE,KAAKuE,IAChBjO,KAAKmO,KAAOzE,KAAKyE,O,yuDCVJO,gB,yaAMjB,yBAAYhF,MAAM,iB,8HAAA,8DACd,uBAAMA,OADQ,KALd,GAKc,mDAJd,GAIc,uDAHV,GAGU,uDAFV,GAIJ,MAAKhF,EAAIgF,KAAKhF,EACd,MAAKC,EAAI+E,KAAK/E,EACd,MAAKqK,MAAQtF,KAAKsF,MAClB,MAAKC,MAAQvF,KAAKuF,MALJ,M,gDANuBF,U,q/DCCxBlN,a,8bAGjB,sBAAYlD,MAAM,iB,8HAAA,oBACd,uBAAMA,MADQ,4DAFT,O,4UAIL,sCAAcA,KAAKG,IAAIoQ,YAAY,CAC/BrP,IAAK,CAACsP,uDAHI,M,0EAOX3L,IAAI,gBACHxD,KAAKrB,KAAKmD,aAAasN,UAAY,G,gOACnC,CAAApP,KAAA,QAAYqP,MAAMxL,SAAQ,SAACyL,QACvBA,OAAOC,MAAMC,QAAU,OAAK7Q,KAAKmD,aAAasN,kB,0HAbpBK,+C,+1MCDnC,I,cAAMC,MAAb,sB,2UAAA,uB,mCAAA,mH,YAAA,O,WAAA,wCASqBhC,KACb1N,KAAK2P,aAAajC,IAAIhE,QAV9B,6BAaWgE,KACH1N,KAAK4P,UAAU,KAdvB,gCAiBctE,OACNtL,KAAK6P,QAAUvE,MAEXtL,KAAK6P,QAAU,IACf7P,KAAK6P,OAAS,KArB1B,mCAyBiBvE,OACTtL,KAAK4P,WAAmB,EAATtE,SA1BvB,gCAMQ,OAAOtL,KAAK6P,QAAU,O,4GAN9B,O,wBAA2BC,W,MACH,CAChBD,OAAQ,I,wBAFHH,O,ouMCAb,IA6BMK,UAAY,SAACvO,MAAOwO,SACzB,GAAuB,iBAAVxO,QAAsB/B,cAAnC,OACC,MAAM,IAAIwQ,UAAV,gDAGDD,QAAU,cAAH,iBACH,CAACE,YAAY,IACbF,SAGJ,IAAoBtL,EAUpB,YAPClD,MADG/B,cAAJ,OACS+B,WAAUkD,YAAC,OAAIA,EAAflD,kBACCkD,YAAC,OAAIA,EADNlD,eAARA,KAIQA,MAARA,QAGGA,OACH,GAGD,IAAIA,aACIwO,mBAAqBxO,MAArBwO,oBAAiDxO,MAAxD,qBAGoBA,QAAUA,MAA/B,sBAGCA,MA5DwB2O,iBAKzB,IAJA,IAAIC,iBAAJ,EACIC,iBAAJ,EACIC,qBAAJ,EAEShL,EAAT,EAAgBA,EAAI6K,OAApB,OAAmC7K,IAAK,CACvC,IAAMiL,UAAYJ,OAAlB,GAEIC,iBAAmB,s5IAAvB,YACCD,OAASA,sBAA2BA,aAApCA,GACAC,mBACAE,oCACAD,mBACA/K,KACU+K,sCAA0C,khJAA9C,YACNF,OAASA,eAAgB7K,EAAhB6K,OAA+BA,aAAa7K,EAArD6K,GACAG,oCACAD,mBACAD,qBAEAA,gBAAkBG,2CAA+CA,gCAAjEH,UACAE,oCACAD,gBAAkBE,2CAA+CA,gCAAjEF,WAIF,cAkCSG,CAARhP,QAGDA,MAAQA,i7SAGqC,sBAAWiP,GAHhDjP,i5SAIgC2I,YAAC,OAAIA,EAJ7C3I,uBAxBoBkD,EA8BpB,MA9ByBsL,mBAAqBtL,gCAAkCA,QAAvDsL,GAAzB,IAiCD/C,oBAEAA,mB,2BC1EA,IAAMyD,WAAa,IAAnB,IAEaC,YAAerF,gBAKxB,OAJKoF,eAAL,QACIA,qBAAsBE,UAAtBF,QAGGA,eAAP,QAGEG,YAAc,IAApB,ICZe,S,WAGXC,kBAAW,WAAY,wEACnB9Q,KAAA,oB,uFAmBD,U,mHAQa,W,0BAvBZ,OAAOA,KAAK+Q,UAAZ,M,iCAGa,eACb,MAAO,CACHC,YADG,EAEH3B,IAAK,kBAAM,MAFR,OAGH4B,IAAMC,YAAD,OAAO,mB,YCbT,e,gGAAsC,yS,8DAG9C,OACClR,KAAA,c,4BAIA,OAAOA,KAAP,Q,kCAIA,OAAOA,KAAP,U,gBAZO,UCAA,e,mGAAsC,kT,8DAG9C,OAKC,OAJIA,KAAKmR,IAAQ7F,OAASA,WAAatL,KAAvB,IAAkCsL,QAAUtL,KAA5D,IACIA,KAAA,uBAA4BA,KAA5B,GAAAA,MAGAsL,OAASA,MAAb,IACItL,KAAA,oBAAyBsL,MAAzB,GAAAtL,WACAA,KAAA,GAAUsL,MAAV,KAIJ,iBAAWA,OACPtL,KAAA,0BAAAA,WACAA,KAAA,gBAIJA,KAAA,a,4BAIA,OAAOA,KAAKmR,IAAMnR,KAAK+Q,UAAUjS,IAAIsS,UAAUpR,KAA/C,M,kCAIA,OAAOA,KAAP,K,oCAIIA,KAAJ,IACIA,KAAA,uBAA4BA,KAA5B,GAAAA,Q,uCAIQ,QACRA,KAAKmR,KAAO7B,OAAhB,GACItP,KAAA,UAEA0B,4EAC4D4N,OAD5D5N,0C,gBAzCG,UCAA,oB,6GAGXoP,6BAAW,WAAY,mGACnB,qCADmB,QAFf,IAIJ,aAAa,IAAIO,MAAM,GAAI,CACvBhC,IAAK,+BACD,OAAOiC,wBAAP,WAEJL,IAAK,qCACD,GAAIxF,MAAJ,MACI,OAAO6F,8BAAP,UAGJ,IAAMC,IAAMD,wBAAZ,UAUA,MARA,iBAAWhG,QACPA,MAAQ,wBAARA,QAGAiG,KAAOA,KAAX,OACI,oEAGAjG,OAASA,MAAb,IACI,2BAAyBA,MAAzB,mCAEOgG,8BAAP,WAGGA,8BAAP,WAEJE,eAAgB,sBACZ,GAAI/F,MAAJ,MACI,OAAO6F,8BAAP,MAGJ,IAAMhG,MAAQgG,mBAAd,MAGA,OAFA,oEAEOA,8BAAP,SArCW,O,qEA6CnB,IAHa,IAAbrH,OAAa,uDAAd,GACOxE,IAAMO,SAASiE,OAATjE,OAAwBhG,KAAKyR,MAAzC,QAESnM,EAAT,EAAgBA,EAAhB,IAAyBA,IACjBA,KAAJ,OACItF,KAAA,SAAgBiK,OAAhB,UAEOjK,KAAKyR,MAAZ,GAIRzR,KAAA,aAAoBiK,OAApB,S,4BAIA,OAAOjK,KAAP,Q,kCAIA,OAAOA,KAAKyR,MAAM3R,KAAK4R,cAAD,OAASA,IAA/B,Q,oCAIA1R,KAAA,U,uCAGY,QACZA,KAAA,IAASA,KAAKyR,MAAME,QAAQD,cAAD,OAASA,SAAWpC,OAA/C,W,qBAxEO,UCGA,iB,sJACX,iBACI,cACI,eACI,OAAO,IAAIsC,eAAX,WACJ,oBACI,OAAO,IAAIC,oBAAX,WACJ,QACI,OAAO,IAAIC,eAAX,gB,oBCVD,U,WAgDXhB,mBAAW,KAAuB,IAAjBiB,WAAiB,uDAAvB,GAAuB,8DA/CzB,MA+CyB,2BA9C5B,MA8C4B,8BA7CzB,IA6CyB,qCA5CnB,GA6CX/R,KAAA,QACAA,KAAA,2B,0DAnCA,OAAOA,KAAK8Q,YAAZ,O,iCAIA,OAAOkB,QAAQhS,KAAf,U,kCAIA,OAAOA,KAAP,e,oCAIA,OAAOA,KAAK8Q,YAAZ,gB,kCAIA,OAAO9Q,KAAK8Q,YAAZ,c,iCAMA,IAFA,IAAMmB,GAAN,GAEA,qBAA2BtG,eAAe3L,KAA1C,uCAAwD,8DAA7C,IAA6C,sBAAxD,MAAwD,sBACpDiS,QAAU3G,MAAV2G,MAGJ,Y,0BAIA,OAAOjS,KAAKA,KAAZ,gB,4BAlCA,OAAOA,KAAP,S,0DA2CA,OAAO2L,OAAA,QAAe3L,KAAf,gBACH,kDAAI,IAAJ,8DAAsB,GAAtB,uBAEI,IAAOsL,sBAHf,M,kCASO,QACPtL,KAAA,cACAA,KAAA,oCAAAA,MACAA,KAAA,e,oCAIA,GAAIA,KAAJ,WAAqB,CACjBA,KAAA,aACA,IAAMsP,OAAStP,KAAf,OAEAA,KAAA,YACAA,KAAA,sCAAAA,S,qCAKJA,KAAA,gBACAA,KAAA,cAEA,6BAAmB2L,cAAc3L,KAAjC,wCAA+C,CAA/C,oBACIkS,iB,kJAUe,IAAhBC,UAAgB,yDACfnS,KAAJ,YACIA,KAAA,cAAAA,MAEJ,SACIA,KAAA,iB,gCAKJA,KAAA,a,8BAIA,OAAOA,KAAKlB,IAAIsT,gBAAgBpS,KAAzB,KAAoCA,KAA3C,e,+BAGI,KACJA,KAAA,aAEA,IAAMqS,YAAc1B,YAAY,MAAD,OAAOjD,IAAtC,OAEA,mBAAW1N,KAAP,cACAA,KAAA,oB,8BAID,Q,4CAEc,cACjB,IAAMsL,MAAQtL,KAAK8Q,YAAYiB,WAA/B,cAEA,wBAAIzG,MACA,GAGJ,aAAIA,MAIJ,WAJA,I,qCAOU,mBACV,IAAK,IAAL,OAAkBtL,KAAK8Q,YAAvB,WAA+C,CAC3C,IAAMwB,aAAeC,sCACfA,kBADeA,KAEfvS,KAAKwS,sBAFX,KAGMC,SAAWC,6BAEb1S,KAAK8Q,YAAYiB,WAFrB,MAKA/R,KAAA,qBACA2L,+BAAiC8G,SAAjC9G,YACA8G,gC,6BArJS3C,2BAMM,G,gBANNA,wBAOI,M,gBAPJA,uBAQG,I,ICRT,kB,WAIXgB,2BAAW,KAAM,4EAHF,IAAI6B,KAGF,4BAFV,MAGH3S,KAAA,S,sEAGI,WACJA,KAAA,iBAAsB+Q,UAAtB,gBACAJ,YAAYI,UAFI,Q,kCAKT,MACP,OAAOJ,YAAP,Q,0BAGD,wBACC,IAAMiC,KAAO5S,KAAK6S,SAAlB,wBAEA,YAOO7S,KAAK8S,aAAazD,IAAzB,OANI3N,4JAGA,Q,6BAMF,aAA+B,IAAjBqQ,WAAiB,uDAA/B,GACIgB,WAAa/S,KAAKqP,IAAxB,aAEA,cACI,OAAO,IAAI0D,WAAW/S,KAAf,KAAP,YAGJ0B,+G,+BAKI,wBACJ,uBAAWsR,uBACP,uBAGAA,kCAAJ,UACWA,uBAAP,KAGAA,4CAAJ,UACWA,uBAAP,KAGJ,S,qBCxDJC,kBAAoB,SAA2B3H,OAClD,OAID,SAAyBA,OACxB,QAAO,OAAP,WAAkB,eALX4H,UAQR,SAAmB5H,OAClB,IAAI6H,YAAcxH,+BAAlB,OAEA,MAAOwH,mDACHA,aAQL,SAAwB7H,OACvB,OAAOA,iBAAP,mBARI8H,CAFJ,OAVKC,CADL,QAiBD,IACIC,mBADiC,mBAAXC,QAAyBA,OAAnD,IACwCA,WAAH,iBAArC,MAUA,SAASC,8BAA8BlI,MAAO0E,SAC7C,OAAQA,mBAA2BA,0BAA5B,OACJyD,WANiBC,IAMR,MALLjU,sBAAP,IAKY,MADL,SAAP,MALD,IAAqBiU,IAUrB,SAASC,kBAAkBC,OAAQC,OAAQ7D,SAC1C,OAAO4D,OAAA,oBAA0B,kBAChC,OAAOJ,8BAA8BM,QAArC,YAoBF,SAASC,QAAQH,QAChB,OAAOjI,2BATR,SAAyCiI,QACxC,OAAOjI,OAAA,sBACJA,OAAA,sCAA4C,iBAC7C,OAAOiI,4BAAP,WAFF,GAQkCI,CAAlC,SAGD,SAASC,mBAAmBC,OAAQzB,UACnC,IACC,OAAOA,YAAP,OACC,SACD,UAWF,SAAS0B,YAAYP,OAAQC,OAAQ7D,SACpC,IAAIoE,YAAJ,GAiBA,OAhBIpE,0BAAJ,SACC+D,yBAAwB,cACvBK,iBAAmBZ,8BAA8BI,OAAD,KAAhDQ,YAGFL,yBAAwB,eAbzB,SAA0BH,OAAQvK,KACjC,OAAO4K,mBAAmBL,OAAnB,QACDjI,OAAA,iCACDA,wCAHiC,OAcjC0I,CAAiBT,OAArB,OAIIK,mBAAmBL,OAAnBK,MAAmCjE,0BAA0B6D,OAAjE,MACCO,iBAhDH,SAA0B/K,IAAK2G,SAC9B,IAAKA,QAAL,YACC,iBAED,IAAIsE,YAActE,oBAAlB,KACA,MAA8B,mBAAhBsE,YAA6BA,YAA3C,UA2CqBC,CAAiBlL,IAAjBkL,SAA+BX,OAA/BW,KAA4CV,OAA5CU,KAAnBH,SAEAA,iBAAmBZ,8BAA8BK,OAAD,KAAhDO,aAGF,YAGD,SAASX,UAAUG,OAAQC,OAAQ7D,UAClCA,QAAUA,SAAVA,IACAA,WAAqBA,oBAArBA,kBACAA,0BAA4BA,2BAHe,kBAM3CA,oEAEA,IAAIwE,cAAgB/U,cAApB,QAIA,OAFgC+U,gBADZ/U,cAApB,QAKW+U,cACHxE,iCAAP,SAEOmE,YAAYP,OAAQC,OAA3B,SAJOL,8BAA8BK,OAArC,SAQFJ,cAAgB,SAAsBgB,MAAOzE,SAC5C,IAAKvQ,cAAL,OACC,MAAM,IAAIiV,MAAV,qCAGD,OAAOD,MAAA,QAAa,oBACnB,OAAOhB,UAAUkB,KAAMC,KAAvB,WADD,KAKD,IAEA3H,IAFA,UChIe,gB,WAKX6D,yBAAW,cAAkD,IAAnCiB,WAAmC,uDAAlD,GAAgC8C,YAAkB,+FACzD7U,KAAA,0BACAA,KAAA,sBACAA,KAAA,oB,gEANA,OAAOA,KAAK8U,aAAZ,S,kEASS,QAA4B,IAAnBC,aAAmB,uDAA5B,GACT,IAAK/U,KAAK8U,aAAN,eAAoCxF,WAAWtP,KAAnD,cAAuE,CACnE,IAAIA,KAAJ,UAMI,YAHA0B,iDACkC1B,KAAK4S,KADvClR,+BACkE4N,OADlE5N,0BAFA4N,cAActP,KAAdsP,cASR,IAAM0F,MAAQC,IAAMjV,KAAD,WAAnB,cAEAsP,WAAWtP,KAAXsP,wB,mBC3BO,O,WAKXwB,gBAAW,UAAY,yDAJhB,IAIgB,+BAHb,IAGa,kCAFV,IAGT9Q,KAAA,QACAA,KAAA,U,+DAGQ,iBACRA,KAAA,mC,oCAGS,QAA4B,gBAAnB+U,aAAmB,uDAA5B,GACT/U,KAAA,iBAAsBkV,iBAClBA,6CAGJ,IAAMC,SAAN,GAqCA,OAnCAnV,KAAA,oBAAwB,sBACpB,IAAM+S,WAAahC,UAAnB,aACMqE,SAAW,kCAAgCrC,WAAjD,MAEIsC,iBAAJ,GAEA,GAAItC,WAAJ,cACI,GAAIA,WAAJ,YAA4B,CACxB,IAAM1J,IAAM0H,qBAAqBgC,WAAjC,aAEIgC,wBAA0BA,uBAA9B,OACIM,iBAAmBN,uBAAnBM,WAGCF,SAAL,YACIA,sBAIAJ,wBACAA,uBAAuBI,SAF3B,aAIIE,iBACIN,uBAAuBI,SAD3BE,YAIJF,0BAGJE,iBAAmBN,aAAnBM,UAGJtE,oDAGJ,W,UCpDO,e,WAIXD,wBAAW,KAAM,qEAHN,IAGM,4BAFV,MAGH9Q,KAAA,S,sEAGO,MAAO,gBACRsV,WAAatV,KAAKqP,IAAI3F,KAA5B,MAEA,cACI,kBAGJ,IAEA,QAFM6L,OAAS,IAAIC,OAAOxV,KAAX,KAAsB0J,KAArC,MAKI+L,QADAhW,cAAciK,KAAlB,SACcA,KAAV+L,QACG,iBAAW/L,KAAP,QACG,CAACA,KAAX+L,SAEAA,GAGJF,eAAiBE,QAAA,KAAaP,iBAC1B,IAAMxD,IAAM,WAAZ,QAEA,aACIhQ,+BACegI,KAAK3F,KADpBrC,oIAGA,WAMR,IAhCc,2CAgCAgI,iBAAd,IAhCc,IAkCd,+CAAmC,KAAnC,cAAmC,YAC/B,GAC6B,iBAAlBgM,eACPA,mCAFJ,UAGE,CACE,IAAMC,IAAM3V,KAAK4V,KAAKC,WAAWxG,IAAjC,eACA,KACIkG,oBAAoB,IAAIO,gBAAxBP,WAED,cAAI,uBAAmC,CAC1C,IAAM3C,KAAO8C,cAAb,KACMC,KAAM3V,KAAK4V,KAAKC,WAAWxG,IAAjC,MACA,MACIkG,oBACI,IAAIO,gBAAgB,KAEhBJ,cAFJ,WAGIA,cAJRH,iBASJ7T,yDACyCgU,cADzChU,wBACsEgI,KADtEhI,mEAxDM,kDAgEd,OAFA1B,KAAA,iBAEA,S,+BAGI,QACJA,KAAA,SAAcuV,OAAd,e,0BAGD,qBACC,IAAMxR,KAAOgS,wBAAb,qBAEA,OAAO/V,KAAKgW,SAAZ,Q,6BAGE,aAAiC,IAAnBjB,aAAmB,uDAAjC,GACIQ,OAASvV,KAAKqP,IAApB,aAEA,WAQA,IAAMC,OAAStP,KAAK4V,KAApB,eAGA,OAFAL,0CAEA,OAVI7T,uG,gCAaR,qBACI,uBAAWuU,oBACP,oBAGAA,+BAAJ,QAIIA,yCAAJ,OAHWA,oBAAP,KAOJ,S,kBCrHJC,YAAJ,mECFe,Y,WAaXpF,qBAAW,MAAkB,IAAXpH,KAAW,uDAAlB,GAAkB,8DAZtB,IAYsB,mCAXhB,GAWgB,iCAVlB,GAWP1J,KAAA,UACAA,KAAA,U,iEATA,OAAOA,KAAP,a,8BAIA,OAAOA,KAAP,a,mDAQF,MACE,OAAOA,KAAK+D,OAAZ,O,+BAIA/D,KAAA,YACAA,KAAA,gB,gCAIAA,KAAA,kB,eCzBO,O,WAUX8Q,gBAAW,KAAiB,IAAXK,GAAW,uDAAjB,KAAiB,uDATvB,MASuB,kCARf,IAQe,2BAPtB,MAOsB,qCANb,GAOXnR,KAAA,QACAA,KAAA,GAAUmR,IAAMrS,IAAhB,a,8DALA,OAAOkB,KAAP,iB,+CAQD,aAA0B,IAAZqJ,IAAY,uDAA1B,KACOuJ,KAAO5S,KAAKlB,IAAI+W,WAAWhD,SAAjC,aACMuC,SAAWpV,KAAKlB,IAAI+W,WAAWM,YAArC,MACMC,QAAUpW,KAAKuJ,eAArB,UAEA,OAAI6M,SAAJ,IACWpW,KAAKoV,UAAU7L,eAAtB,KAGJ,U,0BAGD,aAA0B,IAAZF,IAAY,uDAA1B,KACOuJ,KAAO5S,KAAKlB,IAAI+W,WAAWhD,SAAjC,aACMuC,SAAWpV,KAAKlB,IAAI+W,WAAWM,YAArC,MACMN,WAAa7V,KAAnB,UAEA,OAAI6V,YAAJ,IACWA,WAAP,KAGJ,a,gCAIA7V,KAAA,gBAEA,8BAAwB2L,cAAc3L,KAAtC,6CAAwD,CAAnD,IAAM+Q,UAAX,qBACI,GAAIA,qBAAJ,UACIA,yBAEA,8BAA8BpF,cAA9B,4CAAwD,CAAxD,qBACI0K,WAKZrW,KAAA,+BAAAA,Q,0BAGD,aAA+B,IAAjB+R,WAAiB,uDAA/B,GACC,GAAIuE,uBAAJ,UACI,OAAIA,YAAJ,YACI5U,wBACQ4U,YADR5U,kFAGA,GAGG1B,KAAKuW,OAAZ,aAGJ,IAAMxF,UAAY/Q,KAAKlB,IAAI+W,WAAWW,OAAOF,YAA7C,YAEA,iBAOOtW,KAAKuW,OAAZ,YANI7U,kGAGA,K,6BAMF,WACF,IAAM0T,SAAWpV,KAAKlB,IAAI+W,WAAWM,YAAYpF,UAAjD,MAEA,OAAKA,UAAL,cAwBKA,UAAL,YAoBKA,UAAL,KAOK/Q,KAAK6V,WAAV,YACI7V,KAAA,wBACA2L,oCAAsC,CAClC8K,cADkC,EAElCzF,YAFkC,EAGlC3B,IAHkC,WAI9B,OAAOrP,KAAK6V,WAAZ,cAKZ7V,KAAA,qBAA0B+Q,UAA1B,eAEAA,4BACA/Q,KAAA,6BAAAA,KAAA,YAEA,IAtBI0B,wBACQqP,UAAU6B,KADlBlR,2CACyDqP,UAAU1H,IADnE3H,yCACuGqP,UADvGrP,oBAGA,IAvBK1B,KAAK6V,WAAV,YACI7V,KAAA,wBACA2L,oCAAsC,CAClC8K,cADkC,EAElCzF,YAFkC,EAGlC3B,IAHkC,WAI9B,OAAOrP,KAAK6V,WAAZ,cAKZ7V,KAAA,qCAEA+Q,4BACA/Q,KAAA,6BAAAA,OAEA,GAxCIA,KAAK0H,IAAIqJ,UAAb,OACIrP,wBACQqP,UAAU6B,KADlBlR,gDAC8DqP,UAAU2F,cADxEhV,8BAC2GqP,UAD3GrP,0DAGA,IAGJ1B,KAAA,+BAEA2L,oCAAsC,CAClCqF,YADkC,EAElCyF,cAFkC,EAGlCpH,IAHkC,WAI9B,OAAOrP,KAAK6V,WAAZ,aAIR9E,4BACA/Q,KAAA,6BAAAA,OAEA,K,2BAiDJ,WACA,OAAO+Q,mBAAP,O,6BAGE,wBAAqC,IAAZ1H,IAAY,uDAArC,KACIsN,YAAc3D,kCAApB,UACA3J,IAAMsN,YAAc3D,uBAAH,IAAjB3J,IAEA,IAAM0J,WAAa/S,KAAKlB,IAAI+W,WAAWxG,IAAvC,wBAEM+F,SAAWpV,KAAKlB,IAAI+W,WAAWM,YAAYpD,WAAjD,MAEA,GAAIA,WAAJ,cAA8B,CAC1B,IAAKA,WAAL,YAA6B,CACzB,gBAyBO,kDACoB/S,KAAK6V,WAA5B,WADG,IACH,kDAAkD,KAAlD,SAAkD,aAC9Ce,wBAFD,oDASH,cAJO5W,KAAP,iBACOA,KAAK6V,WAAZ,UACA7V,KAAA,+BAAAA,OAEA,EAjCA,IAAMH,KAAMG,KAAK6V,WAAjB,UAEA,SAII,YAHAnU,2CAC2BqR,WAD3BrR,2DAMJ,IAAMmV,MAAQhX,aAAd,wBAEA,GAAIgX,OAAJ,EAWI,OAVAhX,qBACAmT,qCAEA,IAAInT,qBACOG,KAAP,iBACOA,KAAK6V,WAAZ,WAGJ7V,KAAA,+BAAAA,OAEA,EAeZ,QAII,YAHA0B,2CAC2BqR,WAD3BrR,sEAMJ,IAAM7B,IAAMG,KAAK6V,WAAjB,UACM9E,UAAYlR,IAAlB,KAEA,yBACWA,IAAP,KACAkR,wBACIpF,yBAAJ,WACW3L,KAAP,iBACOA,KAAK6V,WAAZ,WAEJ7V,KAAA,+BAAAA,MAEA,gBAEA0B,2CAC2BqR,WAAWH,KADtClR,2EAOR,GAAI0T,YAAJ,KAAsB,CAClB,IAAMrE,WAAY/Q,KAAK6V,WAAvB,UAOA,cALO7V,KAAP,iBACOA,KAAK6V,WAAZ,UACA9E,yBACA/Q,KAAA,+BAAAA,MAEA,WAGJ0B,2CAC2BqR,WAD3BrR,6D,kCAMA,OAAOiK,OAAA,QAAe3L,KAAf,oBACH,kBAAqB,kCAAjB,IAAiB,SAArB,MAAqB,SACjB,OAAIsL,iBAAJ,UACI,+BAAO,GAAP,uBAEI,IAAOA,oBAIX7L,cAAJ,OACI,+BAAO,GAAP,uBAEI,IAAO6L,WAAW4F,YAAD,OAAOA,EAAjB5F,iBAIf,+BAAO,GAAP,uBAEI,IAAOK,OAAA,uBACH,qDAAK,GAAL,2DAAmB,IAAnB,uBAEI,GAAMmL,mBAHP,QASf,CACI3F,GAAInR,KAAKmR,O,gCAKZ,WAGL,IAFA,IAAMzD,IAAM,IAAIqJ,YAAYhT,KAA5B,MAEA,sBAAwB4H,cAAc3L,KAAtC,6CAAwD,CAAnD,IAAM+Q,UAAX,qBACI,GAAIA,qBAAJ,WAGI,GAFAA,wBAEIrD,IAAJ,UACI,gBAGJ,8BAA8B/B,cAA9B,4CAAwD,CAGpD,GAHJ,qBACI0K,cAEI3I,IAAJ,UACI,YAMhB,e,UC/SO,e,WAKXoD,wBAAW,KAAM,sEAJL,IAAI6B,KAIC,4BAHV,MAGU,6BAFT,IAAIA,KAGR3S,KAAA,S,mEAOI,QAGJ,OAFAA,KAAA,cAAmBsP,OAAnB,WAEA,S,0BAGD,IACC,OAAOtP,KAAKgX,UAAU3H,IAAtB,M,sCAGW,IACX,IAAMC,OAAStP,KAAKqP,IAApB,IAEA,eAIOrP,KAAKwW,OAAZ,M,+BAGmB,IAAhBrF,GAAgB,4DAAjB,EACI7B,OAAS,IAAI2H,OAAOjX,KAAX,KAAf,IAMA,OAJAA,KAAA,iBAEAA,KAAA,qCAEA,S,8BAGG,QACHsP,mB,wCAGa,QACbtP,KAAA,oBACAA,KAAA,iBAAsBsP,OAAtB,IACAtP,KAAA,yC,kCAGO,QACP,IAAMkX,KAAOlX,KAAKmX,MAAM9H,IAAIC,OAA5B,IAEA,SAHgB,iDAOhB,MAPgB,IAOhB,kDAAwB,cACpBoC,0BARY,2DAWT1R,KAAKmX,MAAM7H,OAAlB,O,6BAGE,mBACGtP,KAAKmX,MAAMzP,IAAhB,UAKA1H,KAAA,kCAJIA,KAAA,mBAAyB,IAAImG,IAAI,CAAjC,c,gCAOC,mBACDnG,KAAKmX,MAAMzP,IAAf,WACI1H,KAAA,uC,gCAIC,UACL,IAAMoX,KAAN,GAOA,OANaC,UAAsBrX,KAAnC,WAEAsX,SAAchI,iBACV8H,UAAU9H,OAAV8H,gBAGJ,O,kCAGO,MAAO,iDACW1N,KAAzB,UADc,IACd,kDAAwC,KAAxC,WAAwC,aACpC1J,KAAA,gBAAqBuX,WAArB,KAFU,qGAKW7N,KAAzB,UALc,IAKd,kDAAwC,KAAxC,YAAwC,aACpC1J,KAAA,gCANU,uD,wCAUD,MAAO,gBACd,GAAN,KAAM,GAAS0V,cADK,yBACpB,KADoB,QAEdpG,OAAStP,KAAKwX,gBAApB,IAEA7L,uCAAsC,gBAAkB,kCAAjB,IAAiB,SAAlB,MAAkB,SAC9CiH,KfjGWtH,gBAKzB,OAJKuF,gBAAL,QACIA,sBAAuBD,UAActF,MAAO,CAAE4E,YAAY,KAGvDW,gBAAP,Oe4FqB4G,CAAb,KACM1E,WAAa,2BAAnB,MAEIA,WAAJ,cACIpH,8BAA8B+L,YAC1BpI,4BAGJA,kC,0BA1GR,OAAOtP,KAAKgX,UAAZ,a,kBCXO,M,WAOXlG,eAAW,KAAmB,IAAba,OAAa,uDAAnB,GAAmB,sJAJJ,IAII,iDAHF,IAGE,8BAFrB,IAAIxL,KAGTnG,KAAA,SACAA,KAAA,QAAeiV,IAAM,CAAE0C,IAAF,GAAW9X,IAAX,GAAoB+X,KAAM,IAA/C,QACA5X,KAAA,Y,yDAGG,QACH,IAAM6X,QAAS7X,KAAK8X,QAAQH,IAAItS,QAC1BrF,KAAK8X,QAAQH,IAAII,MAAMC,YAAD,OAAO1I,WADpB,MAGT2I,OAASjY,KAAK8X,QAAQjY,IAAIqY,OAAOF,YAAD,OAAO1I,WAA7C0I,MACMG,SAAWnY,KAAK8X,QAAQF,KAAKG,MAAMC,YAAD,OAAO1I,WAA/C0I,MAEA,OAAOH,gBAAP,U,oCAGS,IACT7X,KAAA,mC,sCAGW,IACXA,KAAA,qC,0BAGD,QACC,OAAOA,KAAKsJ,OAAO5B,IAAnB,U,gCAGK,QACL,IAAM0Q,WAAapY,KAAK0H,IAAxB,QAEA,OAAI1H,KAAKqY,QAAT,SACI,aACIrY,KAAA,mBACAA,KAAA,iCAAsCsY,aAAD,OAAQA,GAA7C,aAGJ,IAGJ,aACItY,KAAA,sBACAA,KAAA,mCAAwCsY,aAAD,OAAQA,GAA/C,aAGJ,K,uCAGY,QACZtY,KAAA,oB,wCAGa,QACbA,KAAA,oB,0CAGe,QACfA,KAAA,oB,yCAGc,QACVA,KAAK0H,IAAT,UACI1H,KAAA,sBACAA,KAAA,mCAAwCsY,aAAD,OAAQA,GAA/C,c,kCAKJtY,KAAA,eADQ,iDAGaA,KAAK4V,KAAKyB,SAA/B,KAHQ,IAGR,kDAA6C,KAA7C,OAA6C,aACzCrX,KAAA,mBAJI,oDAOR,OAAOA,KAAP,S,4BAIA,OAAOA,KAAP,W,SCrFO,c,WAIX8Q,uBAAW,KAAM,wGAFN,IAGP9Q,KAAA,S,gEAGE,SACF,IAAMuY,MAAQ,IAAIC,MAAMxY,KAAV,KAAd,SAIA,OAFAA,KAAA,qBAEA,Q,uCAGY,QACZA,KAAA,kBAAuBuY,gBAAD,OAAWA,wBAAjC,a,yCAGc,QACdvY,KAAA,kBAAuBuY,gBAAD,OAAWA,0BAAjC,a,sCAGW,QACXvY,KAAA,kBAAuBuY,gBAAD,OAAWA,uBAAjC,a,wCAGa,QACbvY,KAAA,kBAAuBuY,gBAAD,OAAWA,yBAAjC,e,iBCzBO,O,WACXzH,kBAAc,6BACV9Q,KAAA,YAAmB,kBNUd,WAIX,IAJ0B,IACtBmR,GADsB,GAGtB7L,EAHsB,uDAAf,GAIJA,KAEL6L,IAAM+E,YAAYlQ,iBAAlBmL,GAEF,UMlB+BsH,IACzBzY,KAAA,WAAkB,IAAI0Y,kBAAtB1Y,MACAA,KAAA,QAAe,IAAI+V,eAAnB/V,MACAA,KAAA,SAAgB,IAAI2Y,eAApB3Y,MACAA,KAAA,QAAe,IAAI4Y,cAAnB5Y,M,+DAIA,OAAOA,KAAP,gB,mCAGQ,IACR,OAAOA,KAAKqX,SAASb,OAArB,M,mCAGQ,aAAiC,IAAnBzB,aAAmB,uDAAjC,GACR,OAAO/U,KAAK6Y,QAAQrC,OAAOsC,YAA3B,gB,oCAGS,QACT,OAAO9Y,KAAKqX,SAASlF,QAArB,U,qCAGU,MACVnS,KAAA,4B,wCAGa,WACbA,KAAA,iC,gCAGK,IACL,OAAOA,KAAKqX,SAAShI,IAArB,M,sCAGW,iBACX,OAAOrP,KAAK6V,WAAWW,OAAO5D,KAA9B,c,kCAGO,SACP,OAAO5S,KAAK+Y,QAAQvC,OAApB,W,gCAGK,UACL,MAAO,CACHa,SAAUrX,KAAKqX,SAAS2B,UAAU3B,a,kCAI/B,MACP,OAAI3N,KAAJ,GACW1J,KAAKqX,SAAS4B,kBAArB,MAGGjZ,KAAKqX,SAAS6B,YAArB,U,qrDC5DD,I,cAAMC,aAAb,sB,2UAAA,oL,wBAAkCrJ,W,MACV,CAChBsJ,KAAM,I,wBAFDD,c,ywECGN,I,cAAME,gBAAb,sB,2UAAA,iC,mCAAA,iJ,YAAA,iB,WAAA,8CA8CYrZ,KAAKsZ,gBAAkBtZ,KAAKuZ,SAC5BvZ,KAAKsP,OAAO7H,IAAI0R,2DA/C5B,2BAmDSzU,EAAGC,EAAG6U,UACP,OAAKxZ,KAAKyZ,WAKNzZ,KAAK0Z,QAAU,GACfhY,QAAQiY,KAAK,iDACN,KAGPlO,MAAM+N,WAAaA,UAAYxZ,KAAK0Z,UACpCF,SAAWxZ,KAAK0Z,QAGpB1Z,KAAK0Z,QAAUF,SAEFxZ,KAAKlB,IAAI8a,aAAa,OAAQ,CACvCC,gBAAiB,CACbC,SAAU9Z,KAAK8Z,SACfJ,OAAQF,YAGXO,SAASC,OAAOtV,EAAGC,GACxB3E,KAAKia,wBAEE,IAxBHvY,QAAQiY,KAAK,oCACN,KAtDnB,gCAgFcjM,KACN,GAAI1N,KAAKuZ,QACL7X,QAAQiY,KAAK,+BADjB,CAKA,IAAMO,IAAMxM,IAAIhE,KAAKyQ,WAAWJ,SAASK,SAEzCpa,KAAKqa,KAAKH,IAAIxV,EAAGwV,IAAIvV,EAAG+I,IAAIhE,KAAKgQ,QAEjChM,IAAI4M,YA1FZ,iCA6Fe5M,KACH1N,KAAKuZ,QACL7X,QAAQiY,KAAK,6BAIjBY,+DAAY7M,IAAIhE,KAAKyQ,WAAYna,KAAK8Z,SAAU9Z,KAAK0Z,QACrD1Z,KAAK0Z,OAAS,EACd1Z,KAAKia,uBACLvM,IAAI4M,YAtGZ,wCAyGsB5M,KACV1N,KAAKuZ,UAIT7L,IAAIhE,KAAK8Q,aAAapP,KAAK,CACvBrH,KAAM,QACN2J,IAAK,cAGL1N,KAAKyZ,YACL/L,IAAIhE,KAAK8Q,aAAapP,KAAK,CACvBrH,KAAM,OACN2J,IAAK,gBAtHrB,6BAYQ,OAAQ1N,KAAKuZ,SAAWkB,wDAAQza,KAAK8Z,YAZ7C,8BAgBQ,OAAOrO,MAAMzL,KAAK8Z,WAAa9Z,KAAK0Z,QAAU,IAhBtD,8BAoBQ,OAAI1Z,KAAKuZ,QACL,kBAAkBvZ,KAAK0Z,OAAvB,YAAiC1Z,KAAK0a,WAG1C,WAAWD,wDAAQza,KAAK8Z,UAAU/V,KAAlC,aAA2C/D,KAAK0Z,OAAhD,YACI1Z,KAAK0a,aAzBjB,2CA8BQ,OAAI1a,KAAK2a,iBAAmB3a,KAAK4a,OACtB5a,KAAK4a,OAAO1R,QAGhB,OAlCf,6CAsCQ,OAAIlJ,KAAK6a,mBAAqB7a,KAAK4a,OACxB5a,KAAK4a,OAAOxR,UAGhB,U,4GA1Cf,iBAAqC0G,+C,IAAxBuJ,gB,uBACW,CAChBS,SAAUgB,6DACVpB,OAAQ,GACRgB,UAAW,GACXC,iBAAiB,EACjBE,mBAAmB,EACnBpB,YAAY,EACZH,gBAAgB,G,4nBCXjB,IAAMyB,aAAe,EACfD,aAAe,EACfE,aAAe,EAEfP,SAAO,4BACfM,aAAe,CACZhX,KAAM,QACNkX,UAAW,SACX/R,QAAS,UACTE,UAAW,UACX8R,QAAS,SAAC5L,QACN5N,QAAQyZ,IAAI,8BAPJ,yBAUfL,aAAe,CACZ/W,KAAM,QACNkX,UAAW,SACX/R,QAAS,UACTE,UAAW,UACX8R,QAAS,SAAC5L,OAAQoK,QACdhY,QAAQyZ,IAAI,uCACZ7L,OAAO8L,UAAU,OAAQ,CACrB9P,MAAgB,EAAToO,YAlBH,yBAsBfsB,aAAe,CACZjX,KAAM,QACNkX,UAAW,eACX/R,QAAS,UACTE,UAAW,UACX8R,QAAS,SAAC5L,OAAQoK,QACd,IAAMQ,IAAM5K,OAAOyK,SAASK,SAE5Bzb,qEAA6Bub,IAAIxV,EAAGwV,IAAIvV,EAAI,EAAG,CAC3C0W,UAAW,CACP3W,EAAG,EACHC,GAAI,GAER2W,OAAQ,CAAC,IAAK,KACdC,KAAM,CAAC,WACPC,MAAO,IACPC,SAAU,MAGdnM,OAAO8L,UAAU,OAAQ,CACrB9P,MAAgB,EAAToO,YA1CH,UAgDPa,YAAc,SAACjL,OAAQsD,KAAM8G,QACtCe,QAAQ7H,MAAMsI,QAAQ5L,OAAQoK,U,+mECnD3B,I,cAAMgC,KAAb,sB,2UAAA,sB,mCAAA,gH,YAAA,M,WAAA,kCAgBQ,IAAI1b,KAAK2b,OAAT,CAIA3b,KAAK2b,QAAS,EAEd,IAAMrT,MAAQtI,KAAKsP,OAAOhH,MAEtBA,QACAA,MAAMsT,GAAK5b,KAAK4b,IAGpB5b,KAAKsP,OAAOuM,OAAOC,+CACnB9b,KAAKsP,OAAOuM,OAAOE,4DA7B3B,kCAiCQ,GAAK/b,KAAK2b,OAAV,CAKA3b,KAAK2b,QAAS,EAEd,IAAMrT,MAAQtI,KAAKsP,OAAOhH,MAEtBA,QACAA,MAAMsT,GAAK5b,KAAK4b,IAGpB5b,KAAKsP,OAAO7H,IAAIqU,+CAChB9b,KAAKsP,OAAO7H,IAAIsU,4DA/CxB,wCAkDsBrO,KACV1N,KAAK2b,OACLjO,IAAIhE,KAAK8Q,aAAapP,KAAK,CACvBrH,KAAM,aACN2J,IAAK,mBAGTA,IAAIhE,KAAK8Q,aAAapP,KAAK,CACvBrH,KAAM,YACN2J,IAAK,oBA3DrB,qCAgEmBA,KACX1N,KAAKgc,YACLtO,IAAI4M,WAlEZ,oCAqEkB5M,KACV1N,KAAKic,WACLvO,IAAI4M,WAvEZ,sCA0EoB5M,KACP1N,KAAK2b,SACNjO,IAAIhE,KAAKwS,gBAAiB,EAC1BxO,IAAIhE,KAAKyS,mBAAoB,GAGjCnc,KAAKic,aAhFb,yBAQQ,OAAOjc,KAAK2b,OAAS3b,KAAKoc,OAASpc,KAAKqc,WARhD,8BAYQ,OAAOrc,KAAK2b,OAAS,SAAW,gB,4GAZxC,MAA0B7L,+C,MACF,CAChB6L,QAAQ,EACRS,OAAQ,IACRC,SAAU,M,wBAJLX,M,qhECFN,IAAMI,QAAb,sB,2UAAA,yB,mCAAA,yH,YAAA,S,WAAA,uCACoBpO,KAEP1N,KAAKsc,aAIV5O,IAAIhE,KAAKwS,gBAAiB,EAC1BxO,IAAIhE,KAAKyS,mBAAoB,Q,4GARrC,S,wBAA6BrM,Y,0qDCAtB,IAAMiM,aAAb,sB,2UAAA,oL,wBAAkCjM,Y,knECE3B,IAAMyM,KAAb,sB,2UAAA,sB,mCAAA,gH,YAAA,M,WAAA,yCACsB7O,KACd,IAAMyM,WAAazM,IAAIhE,KAAKyQ,WACtBqC,cAAgBxc,KAAKsP,OAAO5H,IAAI+U,2DAEjCtC,WAAWzS,IAAIgV,qDAIhBF,cACIrC,WAAWwC,UAAUC,QAAQ5c,KAAKsP,QAClC5B,IAAIhE,KAAK8Q,aAAapP,KAAK,CACvBrH,KAAM,OACN2J,IAAK,aAGTA,IAAIhE,KAAK8Q,aAAapP,KAAK,CACvBrH,KAAM,OACN2J,IAAK,aAIbA,IAAIhE,KAAK8Q,aAAapP,KAAK,CACvBrH,KAAM,SACN2J,IAAK,mBAxBrB,kCA6BgBA,KACRA,IAAIhE,KAAKyQ,WAAWwC,UAAUE,QAAQ7c,KAAKsP,QAC3C5B,IAAI4M,WA/BZ,gCAkCc5M,KACQ1N,KAAKsP,OAAOkN,cAAcM,MAElCH,UAAUI,WAAW/c,KAAKsP,QAChC5B,IAAIhE,KAAKyQ,WAAWwC,UAAUE,QAAQ7c,KAAKsP,QAE3C5B,IAAI4M,c,4GAxCZ,MAA0BxK,gD,ywECEnB,I,cAAM4M,UAAb,sB,2UAAA,2B,mCAAA,+H,YAAA,W,WAAA,qCAMQ1c,KAAKgd,QAAQnZ,SAAQ,SAACyL,QAAD,OAAYA,OAAO6C,eANhD,uCASqBzE,KACb1N,KAAKgd,QAAQnZ,SAAQ,SAACyL,QAClB5B,IAAIhE,KAAKuT,OAAOxV,IAAI6H,QACpBA,OAAO8L,UAAU,kBAAmB,CAAE6B,OAAQvP,IAAIhE,KAAKuT,cAZnE,mCAgBiBC,qBACT,OAAOld,KAAKgd,QAAQG,MAAK,SAAC7N,QACtB,OACIA,OAAO5H,IAAI0V,oDACX9N,OAAO+N,UAAUC,aAAeJ,yBApBhD,8BAyBYK,MACJ,GAAIA,KAAK7V,IAAI0V,mDAAY,CACrB,IAAMI,SAAWxd,KAAKyd,aAAaF,KAAKF,UAAUC,YAElD,GAAIE,SAGA,YAFAA,SAASH,UAAUK,SAASH,MAMpCA,KAAK9V,IAAIgV,0DAAe,CACpBK,MAAO9c,KAAKsP,SAGhBtP,KAAKgd,QAAQ5R,KAAKmS,QAxC1B,8BA2CYA,MAGJ,OAFYvd,KAAKgd,QAAQW,QAAQJ,OAEnB,IA9CtB,iCAiDeA,KAAM/D,UAGb,GAFoB+D,KAAK7V,IAAI0V,qDAET3R,MAAM+N,UAGtB,OAFA+D,KAAKF,UAAUrS,MAAMwO,UAEdxZ,KAAK+c,WAAWQ,MAG3B,IAAMK,IAAM5d,KAAKgd,QAAQW,QAAQJ,MAOjC,OALIK,KAAO,IACP5d,KAAKgd,QAAQa,OAAOD,IAAK,GACzBL,KAAK1B,OAAOY,4DAGTc,OAjEf,+BAoEaA,KAAM/D,UACX,IAAMvH,GAAKjS,KAAK+c,WAAWQ,KAAM/D,UAC3BU,IAAMla,KAAKsP,OAAOyK,SAASK,SAIjC,OAFAnI,GAAG8H,SAASC,OAAOE,IAAIxV,EAAGwV,IAAIvV,GAEvBsN,KA1Ef,gCA6EcvE,KACN/O,gEAAwBmf,uEAAkB,CACtCC,WAAY/d,KAAKsP,OACjB8F,SAAU1H,IAAIhE,KAAKyQ,aAEvBzM,IAAI4M,WAlFZ,wCAqFsB5M,KACdA,IAAIhE,KAAK8Q,aAAapP,KAAK,CACvBrH,KAAM,OACN2J,IAAK,kB,4GAxFjB,WAA+BoC,+C,MACP,CAChBkN,QAAS,kB,wBAFJN,W,ugBCNN,IAAMsB,iBAAmB,EACnBC,iBAAmB,EACnBC,aAAe,EACfJ,iBAAmB,EACnBK,sBAAwB,EACxBC,cAAgB,EAChBC,mBAAqB,G,gkECH3B,I,cAAM5B,cAAb,sB,2UAAA,+B,mCAAA,2I,YAAA,e,WAAA,wCAKqB/O,KACbA,IAAIhE,KAAKuT,OAAOxV,IAAIzH,KAAKsP,UANjC,gCASc5B,KACN1N,KAAK8c,MAAMH,UAAU2B,SAASte,KAAKsP,QAEnC5B,IAAI4M,WAZZ,+BAea5M,KACL,IACM8L,SADcxZ,KAAKsP,OAAO5H,IAAI0V,mDACL,EAAI,KAEnCpd,KAAK8c,MAAMH,UAAUI,WAAW/c,KAAKsP,OAAQkK,e,4GAnBrD,eAAmC1J,+C,MACX,CAChBgN,MAAO,a,wBAFFL,e,s2ECGN,I,cAAMW,UAAb,sB,2UAAA,2B,mCAAA,+H,YAAA,W,WAAA,iCAUcmB,QACNve,KAAKwZ,UAAY+E,SAXzB,+BAcaC,OACLxe,KAAKye,UAAUD,MAAMnB,UAAU7D,UAC/BgF,MAAMnB,UAAU7D,SAAW,EAC3BgF,MAAM/W,IAAI0R,2DAjBlB,4BAoBUK,UACF,GAAIA,UAAYxZ,KAAKwZ,SAEjB,OADAA,SAAWxZ,KAAKwZ,SACTxZ,KAAKsP,OAGhB,IAAMoP,MAAQ/f,gEAAwBqB,KAAKsP,QAU3C,OATAoP,MAAMrB,UAAU7D,UAAYA,SAE5BxZ,KAAKwZ,SAAWA,SAEZkF,MAAMhX,IAAI+U,4DAEViC,MAAMlC,cAAcM,MAAMH,UAAUK,QAAQ5R,KAAKsT,OAG9CA,QApCf,8BAOQ,kBAAY1e,KAAKwZ,e,4GAPzB,WAA+B1J,+C,IAAlBsN,U,uBACW,CAChBE,WAAYqB,iEACZnF,SAAU,G,oYCTX,IAAMmF,kBAAoB,oBACpBC,gBAAkB,kBAClBC,sBAAwB,yB,mhFCa9B,IAAMC,UAAb,sB,2UAAA,2B,mCAAA,+H,YAAA,W,WAAA,yCACsBpR,KACTA,IAAIhE,KAAKyQ,WAAWzS,IAAIgV,oDAIxBhP,IAAIhE,KAAKyQ,WAAWwC,UAAUC,QAAQ5c,KAAKsP,SAIhD5B,IAAIhE,KAAK8Q,aAAapP,KAAK,CACvBrH,KAAM,QACN2J,IAAK,gBAZjB,4BAgBUqR,WAAYC,WAAW,eACzBhf,KAAKsP,OAAO8L,UAAU,SAAU,CAC5B4D,UACAD,aAGJ,IANyB,mBAMhBzZ,GACL,GAAS,GAALA,EACA,iBAGJ,IAAMyU,SAAWgF,WAAWzZ,GACtB+R,SAAW0C,SAAS1C,SAEtB4H,SAAU,EACVC,WAAY,EAEVC,IAAM9H,SAAS8F,MAAK,SAAC7N,QACvB,IAAM5B,IAAM4B,OAAO8L,UAAU,iBAAkB,CAC3C4D,UACAD,WACAK,WAAY,MAAK9P,SAMrB,OAHA2P,QAAUvR,IAAIhE,KAAKwS,eACnBgD,UAAYxR,IAAIhE,KAAKyS,kBAEd8C,SAAWC,aAGtB,GAAIC,IAAK,CACL,GAAID,UAAW,CACX,IAAMvK,KAAOoK,WAAWzZ,EAAI,GAE5B,MAAKgK,OAAOyK,SAASC,OAAOrF,KAAKjQ,EAAGiQ,KAAKhQ,GACzC,MAAK2K,OAAO8L,UAAU,iBAAkB,CACpC4D,UACAta,EAAGiQ,KAAKjQ,EACRC,EAAGgQ,KAAKhQ,SAGZ,MAAK2K,OAAOyK,SAASC,OAAOD,SAASrV,EAAGqV,SAASpV,GACjD,MAAK2K,OAAO8L,UAAU,UAAW,CAC7B4D,UACAG,IACAza,EAAGqV,SAASrV,EACZC,EAAGoV,SAASpV,IAIpB,cACOW,IAAMyZ,WAAW1Z,OAAS,IACjC,MAAKiK,OAAOyK,SAASC,OAAOD,SAASrV,EAAGqV,SAASpV,GACjD,MAAK2K,OAAO8L,UAAU,iBAAkB,CACpC4D,UACAta,EAAGqV,SAASrV,EACZC,EAAGoV,SAASpV,MAlDfW,EAAI,EAAGA,EAAIyZ,WAAW1Z,OAAQC,IAAK,gBAAnCA,GAAmC,qCA4CpC,SAlEhB,iCA8EeoI,KAAK,gBACZ/O,gEAAwByf,oEAAe,CACnCrf,MAAO2O,IAAIhE,KAAKyQ,WAAWJ,SAASK,SACpCiF,UAAU,EACVC,UAAU,EACVC,SAAU,SAAC7c,QACP/D,+DAAuBsf,wEAEvB,OAAK3O,OAAOyK,SAASC,OAAOtX,OAAO3D,MAAM2F,EAAGhC,OAAO3D,MAAM4F,GAEzD,IAMMoa,YANOS,mEACT9c,OAAO3D,MAAM2F,EACbhC,OAAO3D,MAAM4F,EACbjC,OAAOqX,SAASrV,EAChBhC,OAAOqX,SAASpV,GAEI7E,KAAI,SAACoa,KAAD,MAAU,CAClCxV,EAAGwV,IAAIxV,EACPC,EAAGuV,IAAIvV,EACP0S,SAAU1Y,+DAAuBub,IAAIxV,EAAGwV,IAAIvV,OAGhD,OAAI,MAAOoa,WAAYrR,IAAIhE,KAAKyQ,aAEpCsF,SAAU,WACN9gB,kEAEJ+gB,gBAAiB,SAACC,MACd,IAAIC,WAAY,EACV3C,OAAS0C,KAAK7f,KAAI,cAAW8d,KAAQ,IAAhBlZ,EAAgB,KAAhBA,EAAGC,EAAa,KAAbA,EAC1B,GAAY,IAARiZ,IACA,OAAOiC,uEAIX,IAAMxI,SAAW1Y,+DAAuB+F,EAAGC,GACrCmb,QAAUzI,SAAS8F,MACrB,SAAC7N,QAAD,OAAYA,OAAO5H,IAAIqY,oDAAczQ,OAAO5H,IAAIoU,kDAE9CzX,KAAOgT,SAAS8F,MAClB,SAAC7N,QAAD,OAAYA,OAAO5H,IAAIqY,oDAAczQ,OAAO5H,IAAIsY,4CAOpD,OAJIF,UACAF,WAAY,GAGZA,WAAavb,MACbub,WAAY,EACLK,4EAGHL,UAEFM,0EADAC,6EAIJC,YAAcnD,OAAOU,QAAQsC,4EAC7BI,WAAapD,OAAOU,QAAQwC,2EAMlC,OAJIC,YAAc,GAAKC,YAAc,IACjCpD,OAAOoD,WAAa,GAAKJ,4EAGtBhD,e,4GA9IvB,WAA+BnN,gD,soBCfxB,IAAMoQ,uBAAyB,EACzBC,uBAAyB,EACzBN,oBAAsB,EACtBI,wBAA0B,EAEjCK,UAAQ,6BACTJ,uBAAyB,QADhB,0BAETC,uBAAyB,WAFhB,0BAGTF,wBAA0B,WAHjB,WAMRM,UAAQ,6BACTL,uBAAyB,KADhB,0BAETC,uBAAyB,KAFhB,0BAGTF,wBAA0B,KAHjB,WAMDO,0BAA4B,SAAC5N,MAAD,OAAU0N,SAAS1N,OAC/C6N,0BAA4B,SAAC7N,MAAD,OAAU2N,SAAS3N,Q,8OClBrD,IAAM4M,cAAgB,SAACkB,GAAIC,GAAIC,GAAIC,IAStC,IARA,IAAMC,GAAK9a,KAAK+a,IAAIH,GAAKF,IACnBM,GAAKhb,KAAK+a,IAAIF,GAAKF,IACnBM,GAAKP,GAAKE,GAAK,GAAK,EACpBM,GAAKP,GAAKE,GAAK,GAAK,EACpB5D,OAAS,GAEXkE,IAAML,GAAKE,GAGX/D,OAAO7R,KAAK,CACR1G,EAAGgc,GACH/b,EAAGgc,KAGHD,KAAOE,IAAMD,KAAOE,IANf,CAUT,IAAMO,GAAK,EAAID,IAEXC,IAAMJ,KACNG,KAAOH,GACPN,IAAMO,IAENG,GAAKN,KACLK,KAAOL,GACPH,IAAMO,IAId,OAAOjE,QAGEoE,uBAAyB,SAACX,GAAIC,GAAIC,GAAIC,IAC/C,IAAMlB,KAAOH,cAAckB,GAAIC,GAAIC,GAAIC,IAKvC,OAHAlB,KAAK9R,QACL8R,KAAK2B,MAEE3B,O,86DCtCJ,IAAMK,KAAb,sB,2UAAA,sB,mCAAA,gH,YAAA,M,WAAA,+BACYtS,KACJ,GAAK1N,KAAKsP,OAAO5H,IAAI,YAArB,CAIA,IAAM6Z,OAASvhB,KAAKlB,IAAI8a,aAAa,UAC/BM,IAAMla,KAAKsP,OAAOyK,SAASK,SAE7Bpa,KAAKsP,OAAO5H,IAAI,aAChB6Z,OAAOC,QAAQzd,KAAf,UAAyB/D,KAAKsP,OAAOkS,QAAQzd,KAA7C,YAGJwd,OAAOxH,SAASC,OAAOE,IAAIxV,EAAGwV,IAAIvV,MAb1C,sCAgBoB+I,KACZA,IAAIhE,KAAKwS,gBAAiB,O,4GAjBlC,M,wBAA0BpM,Y,oqDCAnB,I,cAAMiQ,UAAb,sB,2UAAA,qK,wBAA+BjQ,W,MACP,CAChByO,OAAQ,EACRkD,MAAO,I,wBAHF1B,W,24ECKN,IAAM2B,aAAb,sB,2UAAA,8B,mCAAA,wI,YAAA,c,WAAA,+BACYhd,EAAGC,GACQ3E,KAAKlB,IAAI8a,aAAa,aAAc,CAC/CyD,UAAW,CACP7D,SAAU,KAIXO,SAASC,OAAOtV,EAAGC,GAEtB3E,KAAKsP,OAAO5H,IAAI2R,+DACZrZ,KAAKsP,OAAOuK,gBAAgBQ,KAAK3V,EAAGC,IACpChG,2DAAmBgjB,wEAAuB,CACtC/N,OAAQ5T,KAAKsP,OACbsL,OAAQ5a,KAAKsP,OAAOuK,gBAAgBC,WAI5Cnb,2DAAmBgjB,wEAAuB,CACtC/N,OAAQ5T,KAAKsP,SAIrBtP,KAAKsP,OAAO7H,IAAI0R,2DAvBxB,sCA0BoBzL,KACZ1N,KAAK4hB,QAAQlU,IAAIhE,KAAKhF,EAAGgJ,IAAIhE,KAAK/E,KA3B1C,gCA8Bc+I,KACN1N,KAAK4hB,QAAQlU,IAAIhE,KAAKhF,EAAGgJ,IAAIhE,KAAK/E,Q,4GA/B1C,cAAkCmL,gD,8oBCJ3B,IAAM+R,qBAAuB,EACvBC,mBAAqB,EACrBH,sBAAwB,EAE/BI,kBAAoB,SAACzS,QACvB,OAAIA,OAAO5H,IAAIsa,sDACX,cAAc1S,OAAOkS,QAAQS,cAAczW,eAG/C,aAGE0W,yBAA2B,SAAC5S,QAC9B,OAAIA,OAAO5H,IAAIya,uDACJ,MAGP7S,OAAO5H,IAAIsa,sDACX,cAAc1S,OAAOkS,QAAQS,cAAczW,oBAD/C,GAKE4W,SAAO,4BACRP,qBAAuB,CACpBQ,QADoB,SACZ3Y,MACJ,gBAAUqY,kBAAkBrY,KAAKkK,QAAjC,kBACIlK,KAAK4Y,OAAOhX,MADhB,YAEI5B,KAAK4Y,OAAO1P,KAFhB,wBAEoCsP,yBAChCxY,KAAKmK,UAGb0O,aARoB,SAQP7Y,MACT,OAAOA,KAAKkK,OAAOlM,IAAIya,wDAAazY,KAAKkK,OAAOlM,IAAIqY,2DAVnD,yBAaR+B,mBAAqB,CAClBO,QADkB,SACV3Y,MACJ,gBAAUqY,kBAAkBrY,KAAKkK,QAAjC,kBACIlK,KAAK4Y,OAAOhX,MADhB,YAEI5B,KAAK4Y,OAAO1P,KAFhB,wBAEoCsP,yBAChCxY,KAAKmK,QAHT,cAMJ0O,aARkB,SAQL7Y,MACT,OAAOA,KAAKkK,OAAOlM,IAAIya,wDAAazY,KAAKkK,OAAOlM,IAAIqY,2DAtBnD,yBAyBR4B,sBAAwB,CACrBU,QADqB,SACb3Y,MACJ,OAAI+B,MAAM/B,KAAKkR,QACX,UAAUmH,kBAAkBrY,KAAKkK,QAAjC,cAEA,UAAUmO,kBACNrY,KAAKkK,QADT,oCAGI6G,kDAAQ/Q,KAAKkR,QAAQK,UAHzB,eAORsH,aAZqB,SAYR7Y,MACT,OAAOA,KAAKkK,OAAOlM,IAAIqY,2DAtCtB,UA2CAyC,WAAa,SAAC9U,IAAKhE,MAC5B,OAAO0Y,QAAQ1U,KAAK2U,QAAQ3Y,OAGnB6Y,aAAe,SAAC7U,IAAKhE,MAC9B,OAAO0Y,QAAQ1U,KAAK6U,aAAa7Y,Q,0pDCvE9B,IAAM+Y,KAAb,sB,2UAAA,4I,wBAA0B3S,Y,0jECCnB,I,cAAM4S,MAAb,sB,2UAAA,uB,mCAAA,mH,YAAA,O,WAAA,qCAMQ1iB,KAAK2iB,MAAM9e,SAAQ,SAACyL,QAChBA,OAAO6C,eAPnB,mCAWiBzE,KACT,KAAO1N,KAAK4iB,YAAc5iB,KAAK4iB,WAAWC,cACtC7iB,KAAK8iB,UAAUxT,OAAO6C,UAG1B,IAAM4Q,YAAc/iB,KAAK4iB,WACnB3F,OAAS8F,YAAYC,aAEvB/F,SAAWgG,0DACXjjB,KAAKkjB,WAAWH,aACT9F,SAAWkG,4DAClBnjB,KAAKkjB,WAAWH,aAChB/iB,KAAKsP,OAAO8L,UAAU,gBAG1B1N,IAAI4M,WA1BZ,iCA6Be8I,MACP,IAAMC,eAAiB,GAEvBrjB,KAAK2iB,MAAQ3iB,KAAK2iB,MAAMhR,QAAO,SAAChJ,GAC5B,IAAM2a,OAAStR,QAAQrJ,EAAEwI,KAAOiS,KAAK9T,OAAO6B,IACtCoS,cAAgBvR,QAClBrJ,EAAEya,KAAKI,gBACH7a,EAAEya,KAAKI,eAAerS,KAAOiS,KAAKI,eAAerS,IAGzD,OAAImS,SAAUC,gBACVF,eAAejY,KAAKzC,EAAEya,OACf,MAMfC,eAAexf,SAAQ,SAAC8E,GAAD,OAAOA,EAAE2G,OAAO6C,eA/C/C,+BAkDaiR,MACL,KAAMA,gBAAgBtT,+CAClB,MAAM,IAAI4E,MAAM,8BAA+B0O,MAKnD,OAFAA,KAAKlO,OAASlV,KAAKsP,OAEZtP,KAAK2iB,MAAMvX,KAAKgY,KAAK9T,UAzDpC,gCA6DQ,OAAOtP,KAAK2iB,MAAMrB,MAAM8B,OA7DhC,iCAiEQ,OAAOpjB,KAAK2iB,MAAM3iB,KAAK2iB,MAAMtd,OAAS,GAAG+d,U,4GAjEjD,OAA2BtT,+C,MACH,CAChB6S,MAAO,kB,wBAFFD,O,yTCHN,IAAMe,QAAU,UACVR,QAAU,UACVE,QAAU,W,qjECChB,I,cAAMO,KAAb,sB,2UAAA,sB,mCAAA,gH,YAAA,M,WAAA,oCAWQ,OAAOC,0DAAyB3jB,KAAKkV,OAAQlV,QAXrD,mCAeQ,OAAO2jB,0DAAyB3jB,KAAKkV,OAAQlV,W,4GAfrD,MAA0B8P,+C,MACF,CAChB/L,KAAM,QACNyf,eAAgB,WAChBtO,OAAQ,WACRtB,OAAQ,WACRvU,UAAU,EACVqK,KAAM,K,wBAPDga,M,qXCDPE,YAAc,GAEpBjY,OAAO1B,OAAO4Z,yCAAWhgB,SAAQ,SAACigB,UAC9BF,YAAYE,SAAS/f,MAAQ+f,YAGjC,IAAMC,YAAc,SAAChgB,MACjB,IAAM6O,KAAOgR,YAAY7f,MAMzB,OAJK6O,MACDlR,QAAQiY,KAAR,oBAA0B5V,KAA1B,iBAGG6O,MAGEiQ,WAAa,SAACvT,OAAQ8T,MAG/B,OAFaW,YAAYX,KAAKrf,MAElB8e,WAAWvT,OAAQ8T,OAGtBJ,WAAa,SAAC1T,OAAQ8T,MAG/B,OAFaW,YAAYX,KAAKrf,MAElBif,WAAW1T,OAAQ8T,Q,q9FCvB5B,IAAMY,cAAb,qB,2UAAA,wLAAmCC,iD,gBAAtBD,c,OACK,S,gBADLA,c,cAGW,SAAC1U,OAAQ8T,MACzB,OAAO,K,gBAJFY,c,cAOW,SAAC1U,OAAQ8T,MAEzB,IAAMc,eAAiB5U,OAAO8L,UAAU,uBAExC,GAAI8I,eAAeC,QAAS,CACxB,IAAMC,SAAWC,0FAAsCjB,KAAM,CACzDxP,OAAQsQ,eAAexa,KAAKkK,OAAOzC,KAOvC,OAJA7B,OAAOgV,MAAMC,SAASH,UAEtB9U,OAAO8L,UAAU,eAEVqI,uDAIX,IAAMe,YAAclV,OAAO8L,UAAU,WAErC,OAAIoJ,YAAY9a,KAAK0Z,MACjB9T,OAAOgV,MAAMC,SAASC,YAAY9a,KAAK0Z,MACvC9T,OAAO8L,UAAU,eAEVqI,yDAIXnU,OAAO8L,UAAU,kBAAmB,KAE7BqI,4D,k/CCrCR,IAAMQ,SAAb,gC,8HAAA,gB,uCAAA,O,YAAA,S,YAAA,kCAGsB3U,OAAQ8T,MACtB,OAAO,IAJf,iCAOsB9T,OAAQ8T,MACtB,OAAOH,yDARf,sCAW2BO,gBAAiC,IAAjBzR,WAAiB,uDAAJ,GAChD,OAAO/R,KAAKwW,OAAL,+BACAzE,YADA,IAEHyR,eAAgBA,eAAelU,OAAO6B,QAdlD,+BAkBmC,IAAjBY,WAAiB,uDAAJ,GACvB,OAAOpT,8DAAsB,OAAQ,CACjCykB,KAAM,cAAF,CACArf,KAAM/D,KAAK+D,MACRgO,cAERqR,S,WAxBX,O,4GAAA,Y,gBAAaa,S,OACK,Y,yiECAX,IAAMI,sBAAb,qB,2UAAA,gOAA2CJ,iD,gBAA9BI,sB,OACK,iB,gBADLA,sB,cAGW,SAAC/U,OAAQ8T,MACzB,OAAQA,KAAKxP,QAAUwP,KAAKxP,OAAOlM,IAAI+a,oDAASW,KAAKxP,OAAO6Q,e,gBAJvDJ,sB,cAOW,SAAC/U,OAAQ8T,MAKzB,OAJU9T,OAAO8L,UAAU,YAAa,CACpCxH,OAAQwP,KAAKxP,SAGTuQ,QACGV,uDASJR,2D,w9DCvBR,IAAMyB,gBAAb,qB,2UAAA,kMAAqCT,iD,gBAAxBS,gB,OACK,W,gBADLA,gB,cAGW,SAACpV,OAAQ8T,MACzB,OAAOA,KAAK/jB,Y,gBAJPqlB,gB,cAOW,SAACpV,OAAQ8T,MAKzB,OAJY9T,OAAO8L,UAAU,eAAgB,CACzCuJ,KAAM,MAGFR,SACJf,KAAK/jB,UAAW,EAETokB,wDAGJR,2D,0iECjBR,IAAM2B,sBAAb,qB,2UAAA,gOAA2CX,iD,gBAA9BW,sB,OACK,iB,gBADLA,sB,cAGW,SAACtV,OAAQ8T,MACzB,OAAQ9T,OAAOC,MAAMsV,Y,gBAJhBD,sB,cAOW,SAACtV,OAAQ8T,MAMzB,OALA9T,OAAOgV,MAAMC,SAASG,8EAAgCtB,OACtD9T,OAAOgV,MAAMC,SAASG,8EAAgCtB,OAEtD9T,OAAO8L,UAAU,eAEVqI,2D,k9DCdR,IAAMqB,aAAb,qB,2UAAA,mLAAkCb,iD,gBAArBa,a,OACK,Q,gBADLA,a,cAGW,SAACxV,OAAQ8T,MACzB,OAAOA,KAAK/jB,Y,gBAJPylB,a,cAOW,SAACxV,OAAQ8T,MAMzB,OALY9T,OAAO8L,UAAU,WAAY,CACrC1W,EAAG0e,KAAK1Z,KAAKhF,EACbC,EAAGye,KAAK1Z,KAAK/E,IAGTwf,SACJf,KAAK/jB,UAAW,EAETokB,wDAGJR,2D,mjECnBR,I,cAAM9T,MAAb,sB,2UAAA,uB,mCAAA,mH,YAAA,O,WAAA,iCASczB,KACF1N,KAAK6kB,WACLnX,IAAIhE,KAAK0Z,KAAOwB,0EAChBlX,IAAI4M,YAZhB,mCAgBiB5M,KACL1H,KAAK+e,SAAW,KAChB/kB,KAAKsP,OAAO8L,UAAU,MAAO,kBAC7Bpb,KAAKwP,QAAU9B,IAAIhE,KAAKib,KACxB3kB,KAAKsP,OAAO8L,UAAU,kBAAmB,KAEzC1N,IAAI4M,UAEJta,KAAKsP,OAAO8L,UAAU,MAAO,2BAxBzC,+BAMQ,OAAOpb,KAAKwP,QAAU,S,4GAN9B,OAA2BM,+C,MACH,CAChBN,OAAQ,M,wBAFHL,O,sxECEN,I,cAAM6S,QAAb,sB,2UAAA,yB,mCAAA,yH,YAAA,S,WAAA,qCAMQ,OAAOhiB,KAAK+D,OANpB,8BAYQ,GAFkB/D,KAAKsP,OAAO5H,IAAI2R,+DAEnB,CACX,IAAM2L,KAAOhlB,KAAKsP,OAAOuK,gBAAgBtV,QAEzC,gBAAUvE,KAAK+D,KAAf,YAAuBihB,MAK3B,GAFqBhlB,KAAKsP,OAAO5H,IAAI0V,mDAEnB,CACd,IAAM4H,MAAOhlB,KAAKsP,OAAO+N,UAAU9Y,QAEnC,gBAAUvE,KAAK+D,KAAf,YAAuBihB,OAK3B,GAFgBhlB,KAAKsP,OAAO5H,IAAIgU,yCAEnB,CACT,IAAMsJ,OAAOhlB,KAAKsP,OAAO2V,KAAK1gB,QAE9B,gBAAUvE,KAAK+D,KAAf,YAAuBihB,QAG3B,OAAOhlB,KAAK+D,U,4GAlCpB,SAA6B+L,+C,MACL,CAChB/L,KAAM,Y,wBAFDie,S,ipECFN,IAAMkD,OAAb,sB,2UAAA,wB,mCAAA,sH,YAAA,Q,WAAA,6BAOUxX,KACFhM,QAAQyZ,IAAR,WAAgBnb,KAAKwhB,QAArB,KAAiC9T,IAAIhE,MACrCgE,IAAI4M,WATZ,8BAEQ,OAAOta,KAAKsP,OAAO5H,IAAIsa,+CACjBhiB,KAAKsP,OAAOkS,QAAQjd,QACpB,e,4GAJd,QAA4BuL,gD,s7DCDrB,IAAMqV,SAAb,sB,2UAAA,0B,mCAAA,4H,YAAA,U,WAAA,gCAEQ,OAAOtmB,OAAOF,KAAKmB,IAAIslB,YAAYplB,KAAKsP,OAAO6B,MAFvD,6BAKWzM,EAAGC,GACN,OAAO9F,OAAOF,KAAKmB,IAAIulB,YAAY3gB,EAAGC,EAAG3E,KAAKsP,OAAO6B,MAN7D,6BASWzM,EAAGC,GACN,IAAMuV,IAAMla,KAAKoa,SAEjB,OAAOF,IAAIxV,IAAMA,GAAKwV,IAAIvV,IAAMA,O,4GAZxC,U,wBAA8BmL,Y,sjECCvB,I,cAAMwV,MAAb,sB,2UAAA,uB,mCAAA,mH,YAAA,O,WAAA,+BASQ,GAAItlB,KAAKsP,OAAO5H,IAAI2R,+DAAkB,CAClC,IAAMkM,IAAMvlB,KAAKsP,OAAOuK,gBAAgB2L,qBAExC,GAAID,IACA,OAAOA,IAIf,OAAOvlB,KAAK6E,MAjBpB,gCAqBQ,GAAI7E,KAAKsP,OAAO5H,IAAI2R,+DAAkB,CAClC,IAAMkM,IAAMvlB,KAAKsP,OAAOuK,gBAAgB4L,uBAExC,GAAIF,IACA,OAAOA,IAIf,OAAOvlB,KAAK8E,MA7BpB,iCAiCQ,OAAO9E,KAAK+E,KAjCpB,2BAqCQ,OAAO/E,KAAK4b,Q,4GArCpB,OAA2B9L,+C,MACH,CAChBjL,IAAK,OACLC,IAAK,OACLC,GAAI,KACJ6W,GAAI,M,wBALC0J,O,2oECAN,IAAMI,KAAb,sB,2UAAA,sB,mCAAA,gH,YAAA,M,WAAA,kCACehY,KACP,IAAI1N,KAAKsP,OAAO5H,IAAIgI,4CAAW1P,KAAKsP,OAAOqW,MAAMC,UAAjD,CAKA,IAKM9lB,IAAMjB,OAAOF,KAAKmB,IAElB+lB,UAAYnY,IAAIhE,KAAKkK,OAAOmG,SAASK,SACrC0L,QAAU9lB,KAAKsP,OAAOyK,SAASK,SAClBta,IAAIimB,WACnBD,QAAQphB,EACRohB,QAAQnhB,EACRkhB,UAAUnhB,EACVmhB,UAAUlhB,KAOd9F,OAAOF,KAAKiE,UAAUojB,eAAeH,UAAUnhB,EAAGmhB,UAAUlhB,EAAG,CAC3D8W,SAAU,IACVF,KAAM,CAAC,UAAW,WAClBD,OAAQ,CAAC,OAGb5N,IAAIhE,KAAKkK,OAAOwH,UAAU,SAAU,CAChCvH,OAAQ7T,KAAKsP,OACbgT,OA5BW,CACX1P,KAAM,QACNtH,MAAO,KA6BXtL,KAAKsP,OAAO8L,UAAU,kBAAmB,KAEzC1N,IAAI4M,eArCA5Y,QAAQiY,KAAK,iC,4GAHzB,MAA0B7J,gD,moECEnB,IAAMmW,KAAb,sB,2UAAA,sB,mCAAA,gH,YAAA,M,WAAA,iCACcvY,KAAK,eACLqM,SAAW/Z,KAAKsP,OAAOyK,SAASK,SAChC8L,QAAUnM,SAASrV,EAAIgJ,IAAIhE,KAAKhF,EAChCyhB,QAAUpM,SAASpV,EAAI+I,IAAIhE,KAAK/E,EAEhCyhB,mBAAqBvnB,OAAOF,KAAKmB,IAAIumB,cACvCH,QACAC,SAGJ,IAAIC,mBAAmBrO,MAAK,SAACzI,QAAD,OAAYA,OAAO5H,IAAIoU,kDAAnD,CAIA,IAAMwK,WAAaF,mBAAmBjJ,MAAK,SAAC7N,QACxC,OACIA,OAAO5H,IAAI6e,iDACV1nB,OAAOF,KAAKqC,SAASwlB,mBAAmBlX,OAAQ,MAAKA,WAK1DgX,YACAA,WAAWvM,SAASC,OAAOD,SAASrV,EAAGqV,SAASpV,GAGpD3E,KAAKsP,OAAO8L,UAAU,kBAAmB,KACzCpb,KAAKsP,OAAOyK,SAASC,OAAOkM,QAASC,SAErCzY,IAAI4M,e,4GA9BZ,MAA0BxK,gD,gqDCHnB,I,cAAMyW,QAAb,sB,2UAAA,2J,wBAA6BzW,W,MACL,CAChB/L,KAAM,Y,wBAFDwiB,S,g5DCCN,I,cAAME,YAAb,sB,2UAAA,+KAAiC3W,+C,IAApB2W,Y,uBACW,CAChBpL,UAAWqL,sD,8dCLnB,IAAMC,WAAa,CACf,CACItd,IAAK,EACLud,UAAW,KACXC,SAAU,YACVC,MAAO,CACHpiB,GAAI,EACJC,GAAI,IAGZ,CACI0E,IAAK,EACLud,UAAW,IACXC,SAAU,QACVC,MAAO,CACHpiB,EAAG,EACHC,GAAI,IAGZ,CACI0E,IAAK,EACLud,UAAW,KACXC,SAAU,YACVC,MAAO,CACHpiB,EAAG,EACHC,GAAI,IAGZ,CACI0E,IAAK,EACLud,UAAW,IACXC,SAAU,OACVC,MAAO,CACHpiB,GAAI,EACJC,EAAG,IAGX,CACI0E,IAAK,EACLud,UAAW,IACXC,SAAU,OACVC,MAAO,CACHpiB,EAAG,EACHC,EAAG,IAGX,CACI0E,IAAK,EACLud,UAAW,IACXC,SAAU,OACVC,MAAO,CACHpiB,EAAG,EACHC,EAAG,IAGX,CACI0E,IAAK,EACLud,UAAW,KACXC,SAAU,YACVC,MAAO,CACHpiB,GAAI,EACJC,EAAG,IAGX,CACI0E,IAAK,EACLud,UAAW,IACXC,SAAU,QACVC,MAAO,CACHpiB,EAAG,EACHC,EAAG,IAGX,CACI0E,IAAK,EACLud,UAAW,KACXC,SAAU,YACVC,MAAO,CACHpiB,EAAG,EACHC,EAAG,KAKFoiB,OAAS,EACTC,MAAQ,EACRC,OAAS,EACTC,MAAQ,EACRR,MAAQ,EACRS,MAAQ,EACRC,OAAS,EACTC,MAAQ,EACRC,OAAS,EAETV,UAAY,SAACvL,WAAD,OAAesL,WAAWtL,WAAWuL,WAEjDC,SAAW,SAACxL,WAAD,OAAesL,WAAWtL,WAAWwL,UAEhDC,MAAQ,SAACzL,WAAD,OAAesL,WAAWtL,WAAWyL,Q,kwDC/FnD,I,cAAMS,aAAb,sB,2UAAA,oLAAkCzX,+C,MACV,CAChB8D,OAAQ,a,wBAFH2T,c,mwDCDN,IAAMpF,SAAb,sB,2UAAA,gK,wBAA8BrS,Y,koECEvB,IAAM0X,UAAb,sB,2UAAA,2B,mCAAA,+H,YAAA,W,WAAA,iCACc9Z,KACN,KAAI1H,KAAK+e,SAAW,IAApB,CAIA,IAAM1J,UAAYrV,KAAKyhB,MAAsB,EAAhBzhB,KAAK+e,UAC5B+B,MAAQY,qDAAiBrM,WAE/B3N,IAAIhE,KAAK0Z,KAAO0B,+DAAoB,CAChCpb,KAAMod,QAEVpZ,IAAI4M,e,4GAZZ,WAA+BxK,gD,sqDCFxB,IAAM6X,WAAb,sB,2UAAA,0K,wBAAgC7X,Y,kqDCAzB,IAAM8X,SAAb,sB,2UAAA,gK,wBAA8B9X,Y,srECMvB,I,cAAM+X,OAAb,sB,2UAAA,wB,mCAAA,sH,YAAA,Q,WAAA,gCAMana,KACL1N,KAAKsL,OAASoC,IAAIhE,KAAK4Y,OAAOhX,MAE1BtL,KAAKsL,OAAS,IACd3M,2DAAmBmjB,qEAAoB,CACnClO,OAAQ5T,KAAKsP,OACbuE,OAAQnG,IAAIhE,KAAKmK,OACjByO,OAAQ5U,IAAIhE,KAAK4Y,SAGrBtiB,KAAKsL,MAAQ,EACbtL,KAAKsP,OAAO7H,IAAIgb,0CAGpB9jB,2DAAmBkjB,uEAAsB,CACrCjO,OAAQ5T,KAAKsP,OACbuE,OAAQnG,IAAIhE,KAAKmK,OACjByO,OAAQ5U,IAAIhE,KAAK4Y,SAGrB5U,IAAI4M,WA1BZ,6BA6BW5M,KACH1N,KAAKsL,OAASoC,IAAIhE,KAAK4B,MAEnBtL,KAAKsL,MAAQtL,KAAK8nB,MAClB9nB,KAAKsL,MAAQtL,KAAK8nB,KAGtBpa,IAAI4M,c,4GApCZ,QAA4BxK,+C,MACJ,CAChBxE,MAAO,GACPwc,IAAK,K,wBAHAD,Q,6oECLN,IAAME,KAAb,sB,2UAAA,sB,mCAAA,gH,YAAA,M,WAAA,2CACwBra,KAAK,eACfqM,SAAWlb,OAAOF,KAAKmB,IAAIslB,YAAYplB,KAAKsP,OAAO6B,IAEzD,GAAK4I,SAAL,CAIA,IAAMnG,OAAS/U,OAAOF,KAAKmB,IACtBkoB,oBAAoBjO,SAASrV,EAAGqV,SAASpV,GACzCsjB,OACAtW,QAAO,SAAClE,GAAD,OAAOA,EAAE/F,IAAI6e,kDACpBpJ,MAAK,SAAC+K,UACH,OAAOrpB,OAAOF,KAAKqC,SAASwlB,mBACxB,MAAKlX,OACL4Y,aAIRtU,SACAlG,IAAIhE,KAAKkK,OAASA,OAClBlG,IAAI4M,gB,4GArBhB,MAA0BxK,gD,s7DCDnB,I,cAAMqY,SAAb,sB,2UAAA,0B,mCAAA,4H,YAAA,U,WAAA,+BA2BoB,IAAVC,IAAU,uDAAJ,GACF3iB,IAAM2iB,IAAI/iB,OACVgjB,OAAS,EAAI5iB,IAEnB,OAAOO,KAAKC,MAAMjG,KAAKsoB,QAAUD,UA/BzC,gCAoBQ,OAAOroB,KAAKuoB,KAAOvoB,KAAKyb,WApBhC,8BAwBQ,OAAOzb,KAAKuoB,IAAMvoB,KAAKyb,WAxB/B,4BAmCQ,IAAM+M,MAAQxoB,KAAKwoB,MAAMxoB,KAAKsb,QAE9B,OAAOtb,KAAKsb,OAAOkN,SArC3B,0BAyCQ,IAAMA,MAAQxoB,KAAKwoB,MAAMxoB,KAAKub,MAE9B,OAAOvb,KAAKub,KAAKiN,SA3CzB,0BA+CQ,IAAMA,MAAQxoB,KAAKwoB,MAAMxoB,KAAKyoB,MAE9B,OAAOzoB,KAAKyoB,KAAKD,SAjDzB,yBAqDQ,IAAMA,MAAQxoB,KAAKwoB,MAAMxoB,KAAK0oB,KAE9B,OAAO1oB,KAAK0oB,IAAIF,Y,4GAvDxB,U,wBAA8B1Y,W,MACN,CAChB2L,SAAU,IACVF,KAAM,CAAC,UAAW,WAClBkN,KAAM,GACNC,IAAK,GACLpN,OAAQ,CAAC,KACTE,MAAO,IACP+M,IAAK,EACL7jB,EAAG,EACHC,EAAG,EACHgkB,OAAQ,EACRC,OAAQ,EACRvN,UAAW,CACP3W,EAAG,EACHC,EAAG,K,wBAfFwjB,U,skGCCN,IAAMU,gBAAb,sB,2UAAA,iC,mCAAA,iJ,YAAA,iB,WAAA,wCAoBQ,IAAMC,SAAW9oB,KAAKlB,IAAIiqB,eAU1B,OARAD,SAASrhB,IAAI0gB,gDAAb,+BACOnoB,KAAKgpB,cADZ,IAEItkB,EAAG1E,KAAK0E,EACRC,EAAG3E,KAAK2E,KAGZ3E,KAAKipB,OAAS,EAEPH,WA9Bf,8BAiCoB,IAAVV,IAAU,uDAAJ,GACF3iB,IAAM2iB,IAAI/iB,OACVgjB,OAAS,EAAI5iB,IAEnB,OAAOO,KAAKC,MAAMjG,KAAKsoB,QAAUD,UArCzC,gCAYQ,OAAOroB,KAAKuoB,KAAOvoB,KAAKkpB,WAZhC,8BAgBQ,OAAOlpB,KAAKuoB,IAAMvoB,KAAKkpB,c,4GAhB/B,iBAAqCpZ,+C,gBAAxB+Y,gB,aACW,CAChBG,aAAc,GACdE,SAAU,IACVC,KAAM,EACNZ,IAAK,EACL7jB,EAAG,EACHC,EAAG,EACHskB,MAAO,K,8pBCXMxZ,O,WAOjB,gBAAY9Q,O,8HAAM,gDANV,O,4UAOJ,CAAAqB,KAAA,MAAarB,M,uDAJb,O,gOAAA,CAAOqB,KAAP,W,kDAOGwD,S,ggECRUzB,a,8bAGjB,sBAAYpD,MAAM,iB,8HAAA,oBACd,uBAAMA,MADQ,4DAFT,O,4UAKL,sCAAcA,KAAKG,IAAIoQ,YAAY,CAC/BrP,IAAK,CAAC6P,oDACN0Z,IAAK,CAACjQ,8DALI,M,0EASX3V,IAAI,gBACD6T,S,gOAAW,CAAArX,KAAA,QAAYqP,MACvBga,OAAS5pB,MAAMC,KAAK2X,UAC1BgS,OAAOC,MAAK,SAAC1c,EAAGhE,GAAJ,OAAWgE,EAAE+Y,MAAM9V,OAASjH,EAAE+c,MAAM9V,OAAS,GAAK,KAE9D,IAAIP,OAAS+Z,OAAO,GAUpB,IARI/Z,SAAWA,OAAOqW,MAAMC,YACxB5lB,KAAKrB,KAAK0B,MAAMkpB,eAAe,EAAIja,OAAOqW,MAAM9V,QAEhDwH,SAASxT,SAAQ,SAACyL,QACdA,OAAOqW,MAAM/V,UAAU,OAAKjR,KAAK0B,MAAM+O,eAIxCE,QAAUA,OAAOqW,MAAMC,YAActW,OAAOka,UAC/Cla,OAAO8L,UAAU,eACjB9L,OAAS+Z,OAAOxb,a,0HA7Bc4B,+C,+mFCOrBjN,a,8bAIjB,sBAAY7D,MAAM,iB,8HAAA,oBACd,uBAAMA,MADQ,4DAHT,OAGS,+DAFN,OAIR,2DAAcA,KAAKG,IAAIoQ,YAAY,CAC/BrP,IAAK,CAACylB,mDAAOH,sDAAUpF,wDACvBnI,KAAM,CAAC6E,2DAAetD,8DAE1B,8DAAiBxa,KAAKG,IAAIoQ,YAAY,CAClCrP,IAAK,CAACylB,mDAAOH,sDAAUyC,uDACvBhQ,KAAM,CAAC6E,2DAAesD,uDAAW5G,8DARvB,M,0EAYX3V,IACHxD,KAAKrB,KAAK8B,SAASmF,QAInB,IAFA,IAAM6jB,SAAWhqB,MAAMC,KAAK,sBAAAM,KAAA,WAAeqP,OAElC/J,EAAI,EAAGA,EAAImkB,SAASpkB,OAAQC,IAAK,CACtC,IAAMokB,WAAaD,SAASnkB,GACtB4U,IAAMwP,WAAW3P,SAASK,SAEhC,GAAKpa,KAAKrB,KAAK4B,OAAOopB,SAASzP,IAAIxV,EAAGwV,IAAIvV,GAA1C,CAIA,IAAMilB,OAAS5pB,KAAKrB,KAAK4B,OAAOspB,cAAc3P,IAAIxV,EAAGwV,IAAIvV,GAEzD3E,KAAKrB,KAAK8B,SAAS0E,KACfykB,OAAOllB,EACPklB,OAAOjlB,EACP+kB,WAAWphB,MAAX,KACA,UACA,YAMR,IAFA,IAAMwhB,YAAcrqB,MAAMC,KAAK,sBAAAM,KAAA,QAAYqP,OAElC/J,GAAI,EAAGA,GAAIwkB,YAAYzkB,OAAQC,KAAK,CACzC,IAAMokB,YAAaI,YAAYxkB,IACzB4U,KAAMwP,YAAW3P,SAASK,SAEhC,GAAKpa,KAAKrB,KAAK4B,OAAOopB,SAASzP,KAAIxV,EAAGwV,KAAIvV,GAA1C,CAIA,IAAMilB,QAAS5pB,KAAKrB,KAAK4B,OAAOspB,cAAc3P,KAAIxV,EAAGwV,KAAIvV,GAEzD3E,KAAKrB,KAAK8B,SAAS0E,KACfykB,QAAOllB,EACPklB,QAAOjlB,EACP+kB,YAAWphB,MAAX,KACAohB,YAAWphB,MAAMY,QACjBwgB,YAAWphB,MAAMc,UACjBsgB,YAAWphB,MAAMyhB,gB,6BAKtBvmB,IACHxD,KAAK0D,c,0HAhE6B+L,+C,8jECNrBxN,e,kcAGjB,wBAAYtD,MAAM,iB,8HAAA,sBACd,uBAAMA,MADQ,4DAFT,O,4UAIL,sCAAcA,KAAKG,IAAIoQ,YAAY,CAC/BrP,IAAK,CAAC4mB,yDAAatB,uDACnBiE,IAAK,CAACjQ,8DAJI,M,4EAQX3V,K,iOACH,CAAAxD,KAAA,QAAYqP,MAAMxL,SAAQ,SAACyL,QACvB,IAAMwX,MAAQY,qDAAiBpY,OAAO0a,YAAY3O,WAElD/L,OAAO8L,UAAU,WAAY0L,OAE7BxX,OAAO0a,YAAY7X,kB,4HAjBa1C,+C,i/DCDvBhN,S,sbAGjB,kBAAY9D,MAAM,iB,8HAAA,gBACd,uBAAMA,MADQ,4DAFT,O,4UAIL,sCAAc,MAAKA,KAAKG,IAAIoQ,YAAY,CACpCrP,IAAK,CAACmiB,qDAAStS,uDAHL,M,sEAOXlM,IACH,IAAMymB,KAAOjqB,KAAKrB,KAAK0B,MAAM4pB,KACvBC,QAAU,UAAGlqB,KAAKrB,KAAK0B,MAAM6pB,SAAUC,OAAO,EAAG,KAEjDC,IAAM,GAAH,OAAMH,KAAN,YAAcC,SACjBzkB,IAAMO,KAAKqkB,KAAKrqB,KAAKrB,KAAK8B,SAASiF,iBAAiB0kB,MAE1DpqB,KAAKrB,KAAK8B,SAASkF,SAAS3F,KAAKrB,KAAK4B,OAAO0D,MAAQ,EAAIwB,IAAK,EAAG2kB,KAEjE,IAAME,GAAKtqB,KAAKrB,KAAKuC,OAAOoO,OAAOib,OAEnCvqB,KAAKrB,KAAK8B,SAASkF,SAAS,EAAG,EAA/B,UAAqC2kB,GAAGhf,MAAxC,YAAiDgf,GAAGxC,KAAO,gB,sHArB7BrY,+C,msFCDjBrP,a,8tBACZ,I,wDACA,I,gEACO,I,wFAcGsE,EAAGC,GACd,sBAAA3E,KAAA,GAAUgG,KAAK8hB,IAAI,EAAGpjB,IACtB,sBAAA1E,KAAA,GAAUgG,KAAK8hB,IAAI,EAAGnjB,M,yCAItB,sBAAA3E,KAAA,WAAiB,K,yCAIjB,sBAAAA,KAAA,WAAiB,K,wBArBjB,6BAAOA,KAAP,M,wBAIA,6BAAOA,KAAP,M,+BAIA,6BAAOA,KAAP,gB,0HAdkCkG,gD,8sFCErB7E,e,ocAKjB,wBAAY1C,MAAM,iB,8HAAA,sBACd,uBAAMA,MADQ,+DAJN,KAIM,kEAHH,CAAC6rB,sEAGE,iEAFL,IAITppB,wDAAiB,SAACqpB,KAAD,OAAS,MAAKC,gBAAgBD,QAFjC,M,+EAMd,sBAAAzqB,KAAA,YAAkB,K,+BAIlB,sBAAAA,KAAA,YAAkB,K,mCAGT0N,KACT,IAAM+c,IAAMzqB,KAAK2qB,wBAAwBjd,KAErC+c,KACAzqB,KAAKrB,KAAK2C,QAAQspB,eAAeH,O,iCAI9BI,QACP,sBAAA7qB,KAAA,cAAkBoL,KAAKyf,U,gCAGjBA,QACN,IAAMhU,MAAQ,sBAAA7W,KAAA,cAAkB8qB,YAAYD,QAExChU,OAAS,GACT,sBAAA7W,KAAA,cAAkB6d,OAAOhH,MAAO,K,wCAItBgU,QACd,OAAO,sBAAA7qB,KAAA,WAAe6qB,SAAW,K,8CAGbnd,KACpB,IAAK,IAAIpI,EAAI,sBAAAtF,KAAA,cAAkBqF,OAAS,EAAGC,GAAK,EAAGA,IAAK,CACpD,IAAMulB,OAAS,sBAAA7qB,KAAA,cAAkBsF,GAE3BmlB,IADOzqB,KAAK+qB,kBAAkBF,QACnB1N,MAAK,SAACsN,KAAD,OAASA,IAAIO,QAAQtd,QAE3C,GAAI+c,IACA,OAAOA,O,sCAKHQ,SACP,sBAAAjrB,KAAA,WAAeirB,QAAQJ,UACxB,sBAAA7qB,KAAA,WAAeirB,QAAQJ,QAAU,IAGrC,sBAAA7qB,KAAA,WAAeirB,QAAQJ,QAAQzf,KAAK6f,c,4HA3DA/kB,gD,8XCJrC,IAAMskB,qBAAuB,EACvBU,uBAAyB,EACzBC,uBAAyB,EACzBC,kBAAoB,EACpBC,kBAAoB,G,sdCsD3BZ,IAAM,SAACI,OAAQjY,KAAM7O,KAAMunB,WAAYjiB,IAAKwE,MAAOE,KAAME,IAAKE,MAAxD,OACR,IAAIod,mDAAa,CACbV,OACAjY,KACA7O,KACAunB,WACAjiB,IACAwE,MACAE,KACAE,IACAE,QAIR,kCAEIsc,IAAID,mEAAwBgB,iEAAgC,WAA0B,EAAMC,kDAAc,GAAO,GAAO,GAAO,GAC/HhB,IAAID,mEAAwBgB,iEAAgC,YAA0B,EAAME,kDAAc,GAAO,GAAO,GAAO,GAC/HjB,IAAID,mEAAwBmB,gEAAgC,UAA0B,EAAMC,mDAAc,GAAO,GAAO,GAAO,GAC/HnB,IAAIS,qEAAwBW,8DAAgC,QAA0B,EAAMC,8CAAc,GAAO,GAAO,GAAO,GAC/HrB,IAAIS,qEAAwBa,8DAAgC,QAA0B,EAAMC,8CAAc,GAAO,GAAO,GAAO,GAC/HvB,IAAIS,qEAAwBe,kEAAgC,YAA0B,EAAMC,8CAAc,GAAO,GAAO,GAAO,GAC/HzB,IAAIU,qEAAwBgB,8DAAgC,QAA0B,EAAML,8CAAc,GAAO,GAAO,GAAO,GAE/HrB,IAAID,mEAAwB4B,iEAAgC,WAA0B,EAAMC,8CAAc,GAAO,GAAO,GAAO,GAC/H5B,IAAID,mEAAwB8B,gEAAgC,UAA0B,EAAMC,8CAAc,GAAO,GAAO,GAAO,GAC/H9B,IAAID,mEAAwB8B,gEAAgC,WAA0B,EAAME,+CAAc,GAAO,GAAO,GAAO,GAC/H/B,IAAID,mEAAwBiC,iEAAgC,WAA0B,EAAMC,8CAAc,GAAO,GAAO,GAAO,GAC/HjC,IAAID,mEAAwBmC,gEAAgC,UAA0B,EAAMC,8CAAc,GAAO,GAAO,GAAO,GAC/HnC,IAAID,mEAAwBmC,gEAAgC,WAA0B,EAAME,iDAAc,GAAO,GAAO,GAAO,GAC/HpC,IAAID,mEAAwBsC,gEAAgC,UAA0B,EAAMC,8CAAc,GAAO,GAAO,GAAO,GAC/HtC,IAAID,mEAAwBsC,gEAAgC,WAA0B,EAAME,kDAAc,GAAO,GAAO,GAAO,GAC/HvC,IAAID,mEAAwByC,iEAAgC,WAA0B,EAAMC,8CAAc,GAAO,GAAO,GAAO,GAC/HzC,IAAID,mEAAwB2C,gEAAgC,UAA0B,EAAMC,8CAAc,GAAO,GAAO,GAAO,GAC/H3C,IAAID,mEAAwB2C,gEAAgC,WAA0B,EAAME,iDAAc,GAAO,GAAO,GAAO,GAC/H5C,IAAID,mEAAwB8C,iEAAgC,WAA0B,EAAMC,8CAAc,GAAO,GAAO,GAAO,GAE/H9C,IAAID,mEAAwBgD,mEAAgC,aAA0B,EAAMnB,8CAAc,GAAO,GAAO,GAAO,GAC/H5B,IAAID,mEAAwBiD,kEAAgC,YAA0B,EAAMlB,8CAAc,GAAO,GAAO,GAAO,GAC/H9B,IAAID,mEAAwBiD,kEAAgC,aAA0B,EAAMjB,+CAAc,GAAO,GAAO,GAAO,GAC/H/B,IAAID,mEAAwBkD,mEAAgC,aAA0B,EAAMhB,8CAAc,GAAO,GAAO,GAAO,GAC/HjC,IAAID,mEAAwBmD,kEAAgC,YAA0B,EAAMf,8CAAc,GAAO,GAAO,GAAO,GAC/HnC,IAAID,mEAAwBmD,kEAAgC,aAA0B,EAAMd,iDAAc,GAAO,GAAO,GAAO,GAC/HpC,IAAID,mEAAwBoD,kEAAgC,YAA0B,EAAMb,8CAAc,GAAO,GAAO,GAAO,GAC/HtC,IAAID,mEAAwBoD,kEAAgC,aAA0B,EAAMZ,kDAAc,GAAO,GAAO,GAAO,GAC/HvC,IAAID,mEAAwBqD,mEAAgC,aAA0B,EAAMX,8CAAc,GAAO,GAAO,GAAO,GAC/HzC,IAAID,mEAAwBsD,kEAAgC,YAA0B,EAAMV,8CAAc,GAAO,GAAO,GAAO,GAC/H3C,IAAID,mEAAwBsD,kEAAgC,aAA0B,EAAMT,iDAAc,GAAO,GAAO,GAAO,GAC/H5C,IAAID,mEAAwBuD,mEAAgC,aAA0B,EAAMR,8CAAc,GAAO,GAAO,GAAO,GAC/H9C,IAAID,mEAAwBwD,kEAAgC,UAA0B,EAAMlC,8CAAc,GAAO,GAAO,GAAO,GAE/HrB,IAAIU,qEAAwB8C,8DAAgC,QAA0B,EAAMjC,8CAAc,GAAO,GAAO,GAAO,GAC/HvB,IAAIU,qEAAwB+C,iEAAgC,WAA0B,EAAMC,8CAAc,GAAO,GAAO,GAAO,GAC/H1D,IAAIU,qEAAwB6C,kEAAgC,YAA0B,EAAMI,8CAAc,GAAO,GAAO,GAAO,GAC/H3D,IAAIU,qEAAwBkD,mEAAgC,aAA0B,EAAMC,8CAAc,GAAO,GAAO,GAAO,K,yhBC9G9G/C,a,WACjB,sBAAY7hB,O,8HAAM,oBACd1J,KAAK6qB,OAASnhB,KAAKmhB,OACnB7qB,KAAK4S,KAAOlJ,KAAKkJ,KACjB5S,KAAK+D,KAAO2F,KAAK3F,KACjB/D,KAAKsrB,WAAa5hB,KAAK4hB,WACvBtrB,KAAKqJ,IAAMK,KAAKL,IAChBrJ,KAAK6N,MAAQnE,KAAKmE,MAClB7N,KAAK+N,KAAOrE,KAAKqE,KACjB/N,KAAKiO,IAAMvE,KAAKuE,IAChBjO,KAAKmO,KAAOzE,KAAKyE,K,kHAGbogB,YACJ,IAAMjD,WAAaiD,sBAAsB5gB,wDAEzC,OACI3N,KAAKsrB,YAAcA,YACnBtrB,KAAKqJ,KAAOklB,WAAWllB,KACvBrJ,KAAK6N,OAAS0gB,WAAW1gB,OACzB7N,KAAK+N,MAAQwgB,WAAWxgB,MACxB/N,KAAKiO,KAAOsgB,WAAWtgB,KACvBjO,KAAKmO,MAAQogB,WAAWpgB,U,uyCCxB7B,IAAMie,kBAAoB,EACpBE,iBAAmB,EACnBG,kBAAoB,EACpBE,iBAAmB,EACnBG,iBAAmB,EACnBG,kBAAoB,EACpBE,iBAAmB,EACnBG,kBAAoB,EAEpBnB,eAAiB,EACjBX,kBAAoB,EACpBG,iBAAmB,GACnBE,eAAiB,GACjBE,eAAiB,GACjBkC,eAAiB,GAEjBC,kBAAoB,GACpBF,mBAAqB,GACrBK,oBAAsB,GAEtBb,oBAAsB,GACtBC,mBAAqB,GACrBC,oBAAsB,GACtBC,mBAAqB,GACrBC,mBAAqB,GACrBC,oBAAsB,GACtBC,mBAAqB,GACrBC,oBAAsB,GACtB9B,mBAAqB,I,oiKC5B3B,IAAMuC,WAAa,EACbC,SAAW,EACXC,eAAiB,EACjBC,QAAU,EACVC,UAAY,GACZnD,UAAY,GACZoD,kBAAoB,GACpBC,UAAY,GACZC,YAAc,GACdC,QAAU,GACVC,UAAY,GACZC,cAAgB,GAChBC,SAAW,GACXC,SAAW,GACXC,UAAY,GACZC,UAAY,GACZC,UAAY,GACZ3D,WAAa,GACb4D,YAAc,GACdC,eAAiB,GACjBC,WAAa,GACbC,eAAiB,GACjBjE,UAAY,GACZkE,YAAc,GACdC,cAAgB,GAChBC,QAAU,GACVC,SAAW,GACXlD,SAAW,GACXL,OAAS,GACTQ,UAAY,GACZK,SAAW,GACX2C,WAAa,GACbC,UAAY,GACZC,YAAc,GACdC,gBAAkB,GAClBC,WAAa,GACbC,WAAa,GACbC,UAAY,GACZC,UAAY,GACZC,UAAY,GACZC,UAAY,GACZC,UAAY,GACZC,UAAY,GACZC,UAAY,GACZC,UAAY,GACZC,UAAY,GACZC,UAAY,GACZC,UAAY,GACZC,cAAgB,GAChBC,cAAgB,GAChBC,WAAa,GACbC,iBAAmB,GACnBC,kBAAoB,GACpBC,OAAS,GACT1E,MAAQ,GACR2E,MAAQ,GACRhE,MAAQ,GACRR,MAAQ,GACRL,MAAQ,GACR8E,MAAQ,GACRrD,MAAQ,GACRsD,MAAQ,GACRnD,MAAQ,GACRF,MAAQ,GACRsD,MAAQ,GACR1F,MAAQ,GACR2F,MAAQ,GACRzF,MAAQ,GACR0F,MAAQ,GACRC,MAAQ,GACRxF,MAAQ,GACRyF,MAAQ,GACRhG,MAAQ,GACRiG,MAAQ,GACRC,MAAQ,GACRC,MAAQ,GACR1F,MAAQ,GACRa,MAAQ,GACR8E,MAAQ,GACRhF,MAAQ,GACRiF,SAAW,GACXC,iBAAmB,GACnBC,UAAY,GACZC,aAAe,GACfC,aAAe,GACfC,aAAe,GACfC,aAAe,GACfC,aAAe,IACfC,aAAe,IACfC,aAAe,IACfC,aAAe,IACfC,aAAe,IACfC,aAAe,IACfC,aAAe,IACfC,QAAU,IACVC,cAAgB,IAChBC,aAAe,IACfC,YAAc,IACdC,WAAa,IACbC,OAAS,IACTC,OAAS,IACTC,OAAS,IACTC,OAAS,IACTC,OAAS,IACTC,OAAS,IACTC,OAAS,IACTC,OAAS,IACTC,OAAS,IACTC,QAAU,IACVC,QAAU,IACVC,QAAU,IACVC,QAAU,IACVC,QAAU,IACVC,QAAU,IACVC,QAAU,IACVC,QAAU,IACVC,QAAU,IACVC,QAAU,IACVC,QAAU,IACVC,QAAU,IACVC,QAAU,IACVC,QAAU,IACVC,QAAU,IACVC,aAAe,IACfC,gBAAkB,IAClBC,qBAAuB,IACvBC,uBAAyB,IACzBC,uBAAyB,IACzBC,oBAAsB,IACtBC,oBAAsB,IACtBC,eAAiB,IACjBC,gBAAkB,IAClBC,iBAAmB,IACnBC,SAAW,IACXC,WAAa,IACbC,YAAc,IACdC,cAAgB,IAChBC,eAAiB,IACjBC,eAAiB,IACjBC,gBAAkB,IAClBC,aAAe,IACfC,SAAW,IACXC,SAAW,IACXC,iBAAmB,IACnBC,uBAAyB,IACzBC,wBAA0B,IAC1BC,UAAY,IACZC,gBAAkB,IAClBC,gBAAkB,IAClBC,cAAgB,IAChBC,gBAAkB,IAClBC,aAAe,IACfC,UAAY,IACZC,UAAY,IACZC,WAAa,IACbC,UAAY,IACZC,eAAiB,IACjBC,iBAAmB,IACnBC,eAAiB,IACjBC,kBAAoB,IACpBC,UAAY,IACZC,WAAa,IACbC,UAAY,IACZC,iBAAmB,IACnBC,eAAiB,IACjBC,kBAAoB,IACpBC,kBAAoB,IACpBC,iBAAmB,IACnBC,gBAAkB,IAClBC,gBAAkB,IAClBC,gBAAkB,IAClBC,mBAAqB,IACrBC,kBAAoB,IACpBC,iBAAmB,IACnBC,mBAAqB,IACrBC,iBAAmB,IACnBC,iBAAmB,IACnBC,iBAAmB,IACnBC,oBAAsB,IACtBC,SAAW,IACXC,UAAY,IACZC,UAAY,IACZC,UAAY,IACZC,SAAW,IACXC,SAAW,IACXC,QAAU,IACVC,kBAAoB,K,g8FCxKZt3B,c,kcAIjB,uBAAY5C,MAAM,wC,8HAAA,qBACd,uBAAMA,MADQ,8DAHP,KAGO,kEAFH,K,4UAIX,mFACKqf,0DAAmB,IAAI8a,6DAAen6B,OAD3C,uCAEKsf,0DAAmB,IAAI8a,8DAAgBp6B,OAF5C,uCAGKuf,sDAAe,IAAI8a,0DAAYr6B,OAHpC,uCAIKmf,0DAAmB,IAAImb,8DAAgBt6B,OAJ5C,uCAKKwf,+DAAwB,IAAI+a,kEAAoBv6B,OALrD,uCAMKyf,uDAAgB,IAAI+a,2DAAax6B,OANtC,uCAOK0f,4DAAqB,IAAI+a,+DAAiBz6B,OAP/C,yBASA,MAAK06B,UAAUrb,2DAXD,M,8EA0BRsb,YACN,IAD4B,IAAVjzB,IAAU,uDAAJ,GACjB,sBAAArG,KAAA,cAAkBqF,OAAS,GAC9BrF,KAAK4pB,OAAO2P,QAAQlzB,KACpB,sBAAArG,KAAA,cAAkBshB,MAGtB,sBAAAthB,KAAA,cAAkBoL,KAAK,CACnBwH,KAAM0mB,WACNjzB,MAEJrG,KAAK4pB,OAAO4P,QAAQx5B,KAAKy5B,a,iCAGlBH,YAAsB,IAAVjzB,IAAU,uDAAJ,GACzBrG,KAAK4pB,OAAO2P,QAAQlzB,KACpB,sBAAArG,KAAA,cAAkBoL,KAAK,CACnBwH,KAAM0mB,WACNjzB,MAEJrG,KAAK4pB,OAAO4P,QAAQx5B,KAAKy5B,a,kCAGT,IAAVpzB,IAAU,uDAAJ,GACZrG,KAAK4pB,OAAO2P,QAAQlzB,KACpB,sBAAArG,KAAA,cAAkBshB,MAClBthB,KAAK4pB,OAAO4P,QAAQx5B,KAAKy5B,a,qCAGdhP,KACXzqB,KAAK4pB,OAAOgB,eAAeH,O,6BAGxBjnB,IACHxD,KAAK4pB,OAAO8P,SAASl2B,M,iCA5CrB,OAAO,sBAAAxD,KAAA,cAAkB,sBAAAA,KAAA,cAAkBqF,OAAS,GAAGuN,O,gCAIvD,OAAO,sBAAA5S,KAAA,cAAkB,sBAAAA,KAAA,cAAkBqF,OAAS,GAAGgB,M,6BAIvD,OAAO,sBAAArG,KAAA,UAAcA,KAAKs5B,iB,2HA3BSpzB,gD,u2EC6BtB6yB,gB,ynBAEb/4B,KAAKrB,KAAK8B,SAASmF,QACnB5F,KAAKrB,KAAKyC,SAASu4B,WAAWxO,4EAC9BnrB,KAAKrB,KAAK2D,UAAUs3B,aAEpB,IAAM7f,SAAW/Z,KAAKrB,KAAKuC,OAAO6Y,SAElC/Z,KAAKrB,KAAK4B,OAAOs5B,SAAS9f,SAASrV,EAAGqV,SAASpV,K,gCAI/C3E,KAAKrB,KAAKyC,SAAS04B,UAAU3O,8E,uCAGhB4O,KAAK,eACZjT,OAAQkT,wDAAeD,KACvBE,eAAiBj6B,KAAKrB,KAAKuC,OAAO6Y,SAClCmgB,eAAiB,CACnBx1B,EAAGu1B,eAAev1B,EAAIoiB,MAAMpiB,EAC5BC,EAAGs1B,eAAet1B,EAAImiB,MAAMniB,GAE1B0S,SAAWrX,KAAKrB,KAAKmB,IAAIumB,cAC3B6T,eAAex1B,EACfw1B,eAAev1B,GAGbw1B,gBAAkB9iB,SAAS1F,QAAO,SAAClE,GAAD,OACpC,MAAK9O,KAAKqC,SAASwlB,mBAAmB/Y,EAAG,MAAK9O,KAAKuC,OAAOoO,WAG9D,GAAI6qB,gBAAgB90B,OAAS,EACzBrF,KAAKrB,KAAKuC,OAAOk5B,MAAMD,gBAAgB,QACpC,CACH,IAAME,WAAahjB,SAAS8F,MAAK,SAAC1P,GAAD,OAAOA,EAAE/F,IAAIgU,sDAE1C2e,aAAeA,WAAWpV,KAAKtJ,OAC/B0e,WAAWjf,UAAU,gBAAiB,CAClCjB,WAAYna,KAAKrB,KAAKuC,OAAOoO,SAGjCtP,KAAKrB,KAAKuC,OAAOo5B,KAAKP,Q,wCAM9B,IAAMhgB,SAAW/Z,KAAKrB,KAAKuC,OAAO6Y,SAG5BwgB,SAFWv6B,KAAKrB,KAAKmB,IAAIumB,cAActM,SAASrV,EAAGqV,SAASpV,GAExCwY,MAAK,SAAC7N,QAAD,OAAYA,OAAO5H,IAAI6U,sDAElDge,SACAA,SAASnf,UAAU,cAAe,CAC9BjB,WAAYna,KAAKrB,KAAKuC,OAAOoO,SAGjC5N,QAAQyZ,IAAI,uC,iCAITzW,EAAGC,GAAG,gBAKP61B,KAJWx6B,KAAKrB,KAAKmB,IACtBumB,cAAc3hB,EAAGC,GACjBgN,QAAO,SAAClE,GAAD,OAAQA,EAAE+b,YAEArM,MAAK,SAAC7N,QAKxB,OAJYA,OAAO8L,UAAU,mBAAoB,CAC7CjB,WAAY,OAAKxb,KAAKuC,OAAOoO,OAC7BkL,aAAc,KAEP9Q,KAAK8Q,aAAanV,OAAS,KAGtCm1B,MACAx6B,KAAKrB,KAAK2C,QAAQm5B,WAAWtc,+DAAuB,CAChDhE,WAAYna,KAAKrB,KAAKuC,OAAOoO,OAC7BorB,aAAcF,S,0CAKNT,KAChB,IAAMjT,OAAQkT,wDAAeD,KACvBE,eAAiBj6B,KAAKrB,KAAKuC,OAAO6Y,SAClCmgB,eAAiB,CACnBx1B,EAAGu1B,eAAev1B,EAAIoiB,MAAMpiB,EAC5BC,EAAGs1B,eAAet1B,EAAImiB,MAAMniB,GAGhC3E,KAAK26B,WAAWT,eAAex1B,EAAGw1B,eAAev1B,K,qCAGtC8lB,KAiBX,GAhBIA,IAAI7X,OAASiZ,qEACb7rB,KAAKrB,KAAKgC,MAAMi6B,WAEhBnQ,IAAI7X,OAASmZ,qEACb/rB,KAAKrB,KAAKgC,MAAMk6B,WAEhBpQ,IAAI7X,OAASqb,qEACbtvB,KAAK2C,QAAQm5B,WAAWrc,uDAAe,CACnCkB,UAAU,EACVC,SAAU,kBAAM5gB,KAAK2C,QAAQw5B,aAC7Brb,SAAU,kBAAM9gB,KAAK2C,QAAQw5B,eAGjCrQ,IAAI7X,OAASsb,wEACbluB,KAAK+6B,kBAELtQ,IAAI7X,OAASob,wEAAoB,CACjC,IAAM9T,IAAMla,KAAKrB,KAAKuC,OAAO6Y,SAE7B/Z,KAAK26B,WAAWzgB,IAAIxV,EAAGwV,IAAIvV,GAE3B8lB,IAAI7X,OAASyb,0EACbruB,KAAKrB,KAAK2C,QAAQm5B,WAAW3c,0DAAkB,CAC3CC,WAAY/d,KAAKrB,KAAKuC,OAAOoO,OAC7B8F,SAAUpV,KAAKrB,KAAKuC,OAAOoO,SAG/Bmb,IAAI7X,OAAS+Y,uEACb3rB,KAAKrB,KAAK2C,QAAQ+3B,UAAUrb,2DAE5ByM,IAAI7X,OAASuZ,qEACbnsB,KAAKrB,KAAKuC,OAAO85B,OAEjBvQ,IAAI7X,OAASwZ,wEACbpsB,KAAKi7B,iBAAiBlU,uDAEtB0D,IAAI7X,OAAS0Z,uEACbtsB,KAAKi7B,iBAAiBjU,sDAEtByD,IAAI7X,OAAS6Z,wEACbzsB,KAAKi7B,iBAAiBhU,uDAEtBwD,IAAI7X,OAAS+Z,uEACb3sB,KAAKi7B,iBAAiB/T,sDAEtBuD,IAAI7X,OAASka,uEACb9sB,KAAKi7B,iBAAiB9T,sDAEtBsD,IAAI7X,OAASqa,wEACbjtB,KAAKi7B,iBAAiB7T,uDAEtBqD,IAAI7X,OAASua,uEACbntB,KAAKi7B,iBAAiB5T,sDAEtBoD,IAAI7X,OAAS0a,wEACbttB,KAAKi7B,iBAAiB3T,uDAEtBmD,IAAI7X,OAAS4a,0EACbxtB,KAAKk7B,oBAAoBnU,uDAEzB0D,IAAI7X,OAAS6a,yEACbztB,KAAKk7B,oBAAoBlU,sDAEzByD,IAAI7X,OAAS8a,0EACb1tB,KAAKk7B,oBAAoBjU,uDAEzBwD,IAAI7X,OAAS+a,yEACb3tB,KAAKk7B,oBAAoBhU,sDAEzBuD,IAAI7X,OAASgb,yEACb5tB,KAAKk7B,oBAAoB/T,sDAEzBsD,IAAI7X,OAASib,0EACb7tB,KAAKk7B,oBAAoB9T,uDAEzBqD,IAAI7X,OAASkb,yEACb9tB,KAAKk7B,oBAAoB7T,sDAEzBoD,IAAI7X,OAASmb,0EACb/tB,KAAKk7B,oBAAoB5T,yD,+BAIxB9jB,IACLxD,KAAKrB,KAAKw8B,uBAAuB33B,S,6HAlLI43B,+C,8pBC/CxBA,O,WAOjB,gBAAYz8B,O,8HAAM,yD,4UACd,CAAAqB,KAAA,MAAarB,M,uDAJb,O,gOAAA,CAAOqB,KAAP,W,gIAWWyqB,Q,+BAENjnB,S,quECPQs1B,e,onBAEb94B,KAAKrB,KAAKyC,SAASu4B,WAAWzO,8E,gCAI9BlrB,KAAKrB,KAAKyC,SAAS04B,UAAU5O,8E,kCAIzBlrB,KAAKrB,KAAKgC,MAAM06B,UAChBr7B,KAAKrB,KAAK2C,QAAQ+3B,UAAUpb,2DAE5Bje,KAAKrB,KAAKgC,MAAM26B,Y,qCAIT7Q,KACPA,IAAI7X,OAAS4Y,wEACbxrB,KAAKu7B,YAGL9Q,IAAI7X,OAASiZ,qEACb7rB,KAAKrB,KAAKgC,MAAMi6B,WAGhBnQ,IAAI7X,OAASmZ,qEACb/rB,KAAKrB,KAAKgC,MAAMk6B,WAGhBpQ,IAAI7X,OAASqZ,yEACbjsB,KAAKrB,KAAKgC,MAAM26B,Y,+BAIf93B,IACLxD,KAAKrB,KAAK8B,SAASmF,QACnB5F,KAAKrB,KAAK8B,SAASkF,SAAS,EAAG,EAA/B,YAA+C,QAE/C3F,KAAKrB,KAAK8B,SAASkF,SAAS,EAAG,EAA/B,uCACA3F,KAAKrB,KAAK8B,SAASkF,SAAS,EAAG,EAA/B,kBACA3F,KAAKrB,KAAK8B,SAASkF,SAAS,EAAG,EAA/B,gCACA3F,KAAKrB,KAAK8B,SAASkF,SAAS,EAAG,EAA/B,kBACA3F,KAAKrB,KAAK8B,SAASkF,SAAS,EAAG,EAA/B,kBACA3F,KAAKrB,KAAK8B,SAASkF,SAAS,EAAG,EAA/B,uBACA3F,KAAKrB,KAAK8B,SAASkF,SAAS,EAAG,GAA/B,uBACA3F,KAAKrB,KAAK8B,SAASkF,SAAS,EAAG,GAA/B,sBACA3F,KAAKrB,KAAK8B,SAASkF,SAAS,EAAG,GAA/B,oBAEA3F,KAAKrB,KAAK8B,SAAS+6B,eAAe,GAAlC,8BACAx7B,KAAKrB,KAAK8B,SAAS+6B,eAAe,GAAlC,sB,4HAlDoCJ,+C,utECLvBpC,Y,qmBAEbh5B,KAAKrB,KAAKgC,MAAM86B,WAChBz7B,KAAKrB,KAAKyC,SAASu4B,WAAWzO,8E,gCAI9BlrB,KAAKrB,KAAKyC,SAAS04B,UAAU5O,8E,qCAGlBT,KACPA,IAAI7X,OAAS4Y,wEACbxrB,KAAKrB,KAAK2C,QAAQ+3B,UAAUrb,6D,+BAI3Bxa,IAGLxD,KAAKrB,KAAK8B,SAAS+6B,eAAe,GAFrB,mCAE+B,gB,yHAnBXJ,+C,m7FCKpBnC,gB,kvBACF,I,sOAIP5yB,KACJrG,KAAKrB,KAAKyC,SAASu4B,WAAWzO,4EAC9B,sBAAAlrB,KAAA,aAAoB,GACpB,sBAAAA,KAAA,YAAmBqG,IAAI0X,YACvB,sBAAA/d,KAAA,UAAiBqG,IAAI+O,Y,gCAIrBpV,KAAKrB,KAAKyC,SAAS04B,UAAU5O,8E,kCAI7BllB,KAAK8hB,IAAI,EAAT,sBAAc9nB,KAAd,oCAAcA,KAAd,oB,oCAIA,sBAAAA,KAAA,oCAAAA,KAAA,mB,mCAIA,IAAM07B,MAAQ,sBAAA17B,KAAA,aAAiB2c,UAAUK,QAEnC0d,aAAegB,MADT,sBAAA17B,KAAA,cAAoB07B,MAAMr2B,QAGlCq1B,cACA16B,KAAKrB,KAAK2C,QAAQm5B,WAAWtc,+DAAuB,CAChDuc,aACAvgB,WAAY,sBAAAna,KAAF,e,qCAKPyqB,KACPA,IAAI7X,OAAS+Y,uEACb3rB,KAAKrB,KAAK2C,QAAQw5B,YAGlBrQ,IAAI7X,OAAS0Z,uEACbtsB,KAAK27B,YAGLlR,IAAI7X,OAASua,uEACbntB,KAAK47B,cAGLnR,IAAI7X,OAAS4Y,wEACbxrB,KAAK67B,e,+BAIJr4B,IAAI,gBACTxD,KAAKrB,KAAK8B,SAASmF,QACnB5F,KAAKrB,KAAK8B,SAAS+6B,eACf,EADJ,YAES,sBAAAx7B,KAAA,aAAiBwhB,QAAQjd,QAFlC,gBAGI,UAGJ,IAAMm3B,MAAQ,sBAAA17B,KAAA,aAAiB2c,UAAUK,QACnCY,IAAM,sBAAA5d,KAAA,cAAoB07B,MAAMr2B,OAEjB,IAAjBq2B,MAAMr2B,QACNrF,KAAKrB,KAAK8B,SAAS+6B,eAAe,EAAG,0BAGzCE,MAAM73B,SAAQ,SAAC22B,KAAMl1B,GACjB,IACMw2B,KAAOx2B,EAAI,EADEA,IAAMsY,IAIrB,OAAKjf,KAAK8B,SAASkF,SAAS,EAAGm2B,KAAM,IAAK,UAE1C,OAAKn9B,KAAK8B,SAASkF,SAAS,EAAGm2B,KAAM,KAGzC,OAAKn9B,KAAK8B,SAAS0E,KACf,EACA22B,KACAtB,KAAKlyB,MAAL,KACAkyB,KAAKlyB,MAAMY,QACXsxB,KAAKlyB,MAAMc,UACXoxB,KAAKlyB,MAAMyhB,YAGf,OAAKprB,KAAK8B,SAASkF,SAAS,EAAGm2B,KAAMtB,KAAKhZ,QAAQjd,YAGtDvE,KAAKrB,KAAK8B,SAASkF,SAAS,EAAG,EAAG,qB,6HA5FGy1B,+C,27FCDxBlC,oB,4vBACR,K,6DACC,K,kEACK,I,mEACC,K,8OAYR7yB,KACJrG,KAAKrB,KAAKyC,SAASu4B,WAAWzO,4EAC9B,sBAAAlrB,KAAA,aAAoB,GACpB,sBAAAA,KAAA,cAAqBqG,IAAIq0B,cACzB,sBAAA16B,KAAA,YAAmBqG,IAAI8T,YAEvBna,KAAK+7B,sB,0CAIL,IAAMruB,IAAM,sBAAA1N,KAAA,eAAmBob,UAAU,mBAAoB,CACzDjB,WAAY,sBAAAna,KAAF,aACVwa,aAAc,KAGlB,sBAAAxa,KAAA,cAAqB0N,IAAIhE,KAAK8Q,gB,gCAI9Bxa,KAAKrB,KAAKyC,SAAS04B,UAAU5O,8E,kCAI7BllB,KAAK8hB,IAAI,EAAT,sBAAc9nB,KAAd,oCAAcA,KAAd,oB,oCAIA,sBAAAA,KAAA,oCAAAA,KAAA,mB,mCAIA,IAAM4d,IAAM,sBAAA5d,KAAA,cAAoB,sBAAAA,KAAA,eAAmBqF,OAC7C22B,YAAc,sBAAAh8B,KAAA,eAAmB4d,KAEvC,GAAIoe,YAAa,CAKb,GAJA,sBAAAh8B,KAAA,eAAmBob,UAAU4gB,YAAYtuB,IAAK,CAC1CyM,WAAY,sBAAAna,KAAF,eAGV,sBAAAA,KAAA,eAAmBykB,YAGnB,YAFAzkB,KAAKrB,KAAK2C,QAAQw5B,YAKtB96B,KAAK+7B,uB,qCAIEtR,KACPA,IAAI7X,OAAS+Y,uEACb3rB,KAAKrB,KAAK2C,QAAQw5B,YAGlBrQ,IAAI7X,OAAS0Z,uEACbtsB,KAAK27B,YAGLlR,IAAI7X,OAASua,uEACbntB,KAAK47B,cAGLnR,IAAI7X,OAAS4Y,wEACbxrB,KAAK67B,e,+BAIJr4B,IAAI,gBACTxD,KAAKrB,KAAK4D,aAAakB,OAAOD,IAC9BxD,KAAKrB,KAAK8B,SAASoF,UACf7F,KAAKi8B,KACLj8B,KAAKk8B,IAFT,sBAGIl8B,KAHJ,8BAIIA,KAJJ,UAOAA,KAAKrB,KAAK8B,SAAS0E,KACfnF,KAAKi8B,KAAO,EACZj8B,KAAKk8B,IAAM,EACX,sBAAAl8B,KAAA,eAAmBsI,MAAnB,KACA,sBAAAtI,KAAA,eAAmBsI,MAAMY,QACzB,sBAAAlJ,KAAA,eAAmBsI,MAAMc,UACzB,sBAAApJ,KAAA,eAAmBsI,MAAMyhB,YAG7B/pB,KAAKrB,KAAK8B,SAAS+6B,eACfx7B,KAAKk8B,IAAM,EADf,UAEO,sBAAAl8B,KAAA,eAAmBwhB,QAAQjd,UAGlC,IAAK,IAAIe,EAAItF,KAAKi8B,KAAM32B,EAAItF,KAAKi8B,KAAL,sBAAYj8B,KAAZ,QAAyBsF,IACjDtF,KAAKrB,KAAK8B,SAAS0E,KAAKG,EAAGtF,KAAKk8B,IAAK,KACrCl8B,KAAKrB,KAAK8B,SAAS0E,KAAKG,EAAGtF,KAAKk8B,IAAL,sBAAWl8B,KAAX,SAAyB,KAGxD,IAAK,IAAIsF,GAAItF,KAAKk8B,IAAK52B,GAAItF,KAAKk8B,IAAL,sBAAWl8B,KAAX,SAAyBsF,KAChDtF,KAAKrB,KAAK8B,SAAS0E,KAAKnF,KAAKi8B,KAAM32B,GAAG,KACtCtF,KAAKrB,KAAK8B,SAAS0E,KAAKnF,KAAKi8B,KAAL,sBAAYj8B,KAAZ,QAAyBsF,GAAG,KAGxDtF,KAAKrB,KAAK8B,SAAS0E,KAAKnF,KAAKi8B,KAAMj8B,KAAKk8B,IAAK,KAC7Cl8B,KAAKrB,KAAK8B,SAAS0E,KAAKnF,KAAKi8B,KAAL,sBAAYj8B,KAAZ,QAAyBA,KAAKk8B,IAAK,KAC3Dl8B,KAAKrB,KAAK8B,SAAS0E,KAAKnF,KAAKi8B,KAAMj8B,KAAKk8B,IAAL,sBAAWl8B,KAAX,SAAyB,KAC5DA,KAAKrB,KAAK8B,SAAS0E,KACfnF,KAAKi8B,KAAL,sBAAYj8B,KAAZ,QACAA,KAAKk8B,IAAL,sBAAWl8B,KAAX,SACA,KAGJ,IAAM4d,IAAM,sBAAA5d,KAAA,cAAoB,sBAAAA,KAAA,eAAmBqF,OAEjB,IAA9B,sBAAArF,KAAA,eAAmBqF,QACnBrF,KAAKrB,KAAK8B,SAAS+6B,eAAe,EAAG,0BAGzC,IAAMW,KAAOn8B,KAAKi8B,KAAO,EAEzB,sBAAAj8B,KAAA,eAAmB6D,SAAQ,SAACm4B,YAAa12B,GACrC,IAAM82B,WAAa92B,IAAMsY,IACnBke,KAAOx2B,EAAI,OAAK42B,IAAM,EAExBE,WACA,OAAKz9B,KAAK8B,SAASkF,SAASw2B,KAAML,KAAM,IAAK,UAE7C,OAAKn9B,KAAK8B,SAASkF,SAASw2B,KAAML,KAAM,KAG5C,OAAKn9B,KAAK8B,SAASkF,SAASw2B,KAAO,EAAGL,KAAME,YAAYj4B,W,2BAtI5D,OAAQ/D,KAAKrB,KAAK4B,OAAO0D,MAAjB,sBAAyBjE,KAAzB,SAAwC,I,0BAIhD,OAAQA,KAAKrB,KAAK4B,OAAO2D,OAAjB,sBAA0BlE,KAA1B,UAA0C,O,iIAbTo7B,+C,mhGC8BjD,IAAMiB,KAAO,a,wIAEQlD,a,guBACR,K,+DACGkD,O,+DACAA,O,sEACOA,O,gEACP,I,gEACA,I,iFAEJh2B,KACJrG,KAAKrB,KAAK8B,SAASmF,QACnB5F,KAAKrB,KAAK2D,UAAUs3B,aACpB55B,KAAKrB,KAAK+D,OAAO45B,SACjB,sBAAAt8B,KAAA,OAAcqG,IAAItH,OAASiB,KAAKrB,KAAKuC,OAAO6Y,UAC5C,sBAAA/Z,KAAA,UAAiBqG,IAAIkZ,UAAY8c,MACjC,sBAAAr8B,KAAA,UAAiBqG,IAAIoZ,UAAY4c,MACjC,sBAAAr8B,KAAA,iBAAwBqG,IAAIqZ,iBAAmB2c,MAC/C,sBAAAr8B,KAAA,UAAiBgS,QAAQ3L,IAAIgZ,WAC7B,sBAAArf,KAAA,UAAiBgS,QAAQ3L,IAAIiZ,a,gCAI7Btf,KAAKrB,KAAK+D,OAAO65B,Y,uCAGJxC,KACb/5B,KAAKrB,KAAK+D,OAAO43B,KAAKP,O,kCAItB,sBAAA/5B,KAAA,gBAAAA,KAAe,CACXjB,MAAO,sBAAAiB,KAAF,QACL+Z,SAAU,CACNrV,EAAG1E,KAAKrB,KAAK+D,OAAOgC,EACpBC,EAAG3E,KAAKrB,KAAK+D,OAAOiC,O,iCAM5B,sBAAA3E,KAAA,gBAAAA,Q,qCAGWyqB,KACPA,IAAI7X,OAAS4Y,wEACbxrB,KAAKu7B,YAEL9Q,IAAI7X,OAAS+Y,uEACb3rB,KAAKyf,WAELgL,IAAI7X,OAASwZ,wEACbpsB,KAAKi7B,iBAAiBlU,uDAEtB0D,IAAI7X,OAAS0Z,uEACbtsB,KAAKi7B,iBAAiBjU,sDAEtByD,IAAI7X,OAAS6Z,wEACbzsB,KAAKi7B,iBAAiBhU,uDAEtBwD,IAAI7X,OAAS+Z,uEACb3sB,KAAKi7B,iBAAiB/T,sDAEtBuD,IAAI7X,OAASka,uEACb9sB,KAAKi7B,iBAAiB9T,sDAEtBsD,IAAI7X,OAASqa,wEACbjtB,KAAKi7B,iBAAiB7T,uDAEtBqD,IAAI7X,OAASua,uEACbntB,KAAKi7B,iBAAiB5T,sDAEtBoD,IAAI7X,OAAS0a,wEACbttB,KAAKi7B,iBAAiB3T,yD,+BAIrB9jB,IAAI,gBACTxD,KAAKrB,KAAKw8B,uBAAuB33B,IAEjC,IAAMmc,MAAOH,mEACT,sBAAAxf,KAAA,QAAY0E,EACZ,sBAAA1E,KAAA,QAAY2E,EACZ3E,KAAKrB,KAAK+D,OAAOgC,EACjB1E,KAAKrB,KAAK+D,OAAOiC,GAGjB63B,aAAchc,gFAA0BP,4EAE5C,yBAAIjgB,KAAJ,WAAoB,CAChB,IAAMy8B,MAAQ,sBAAAz8B,KAAH,uBAAGA,KAAsB2f,MAEpCA,KAAK9b,SAAQ,SAAC64B,QAAS9e,KACnB,IAAMhL,KAAO6pB,MAAM7e,KAEnB,GAAIhL,OAASiN,yEAAuBpU,MAAMmH,MAA1C,CAIA,IAAMrL,OAAQiZ,gFAA0B5N,MAClCtK,OAAQmY,gFAA0B7N,MAElCgX,OAAS,OAAKjrB,KAAK4B,OAAOspB,cAC5B6S,QAAQh4B,EACRg4B,QAAQ/3B,GAEZ,OAAKhG,KAAK8B,SAAS0E,KAAKykB,OAAOllB,EAAGklB,OAAOjlB,EAAG2D,MAAOf,OAE/CqW,MAAQ+B,KAAKta,OAAS,IACtBm3B,YAAcj1B,WAK1B,sBAAIvH,KAAJ,YACIA,KAAKrB,KAAK+D,OAAO4c,WAGrBtf,KAAKrB,KAAK+D,OAAOi6B,WAAWH,kB,0HApHMpB,+C,0oDCrC1C,IAAMwB,aAAe,SAACl4B,EAAGC,GAAJ,MAAU,CAC3B,CACID,EACAC,EAAGA,EAAI,GAEX,CACID,EAAGA,EAAI,EACPC,GAEJ,CACID,EAAGA,EAAI,EACPC,GAEJ,CACID,EACAC,EAAGA,EAAI,GAEX,CACID,EAAGA,EAAI,EACPC,EAAGA,EAAI,GAEX,CACID,EAAGA,EAAI,EACPC,EAAGA,EAAI,GAEX,CACID,EAAGA,EAAI,EACPC,EAAGA,EAAI,GAEX,CACID,EAAGA,EAAI,EACPC,EAAGA,EAAI,KAIT0E,IAAM,SAAC6Q,KAAD,gBAAYA,IAAIxV,EAAhB,YAAqBwV,IAAIvV,IAE/Bk4B,gBAAkB,CACpB99B,MAAO,GACPqkB,KAAM,GACN0Z,KAAM,aACNC,gBAAgB,GAGPC,aAAe,WAAgC,IAA/BC,SAA+B,uDAApBJ,gBAC9BK,UAAYD,SAASF,eAAiBI,gEAAmBC,kEACzDr+B,MAAQk+B,SAASl+B,MACjBqkB,KAAO6Z,SAAS7Z,KAChB0Z,KAAOG,SAASH,KAEhBO,KAAO,IAAIC,oDACXC,SAAW,GACXC,UAAY,GACZC,SAAWp0B,IAAItK,OACf2+B,QAAUr0B,IAAI+Z,MAEdnG,OAAS,CACX0gB,SAAS,EACTC,KAAM,GACNC,MAAO,GACPf,KAAMgB,IACN/+B,MACAqkB,MAGJ,GAAI0Z,KAAK/9B,MAAOqkB,QAAU0a,IACtB,OAAO7gB,OAUX,IAPAogB,KAAKU,IAAI,CACL10B,IAAKo0B,SACLvjB,IAAKnb,OACN,GAEHy+B,UAAUC,UAAY,GAEdJ,KAAK9jB,WAAW,eAIhB8jB,KAAK/b,MAFA0c,WAFW,UAEhB30B,IACK40B,QAHW,UAGhB/jB,IAGJ,GAAI8jB,aAAeN,QAAS,CACxBzgB,OAAO0gB,SAAU,EACjB,MAGJ,IAXoB,MAWdO,UAAYtB,aAAaqB,QAAQv5B,EAAGu5B,QAAQt5B,GAX9B,qCAaHu5B,WAbG,IAapB,+CAA4B,KAAnBtpB,KAAmB,YAClBupB,QAAU90B,IAAIuL,MACdwpB,UAAYD,UAAYT,QAAU,EAAIZ,KAAKmB,QAASrpB,MAE1D,GAAIwpB,YAAcN,IAAlB,CAIA,IAAMO,QAAUb,UAAUQ,YAAcI,UAExC,KAAMD,WAAWX,YAAca,QAAUb,UAAUW,SAAU,CACzDX,UAAUW,SAAWE,QAErB,IAAMC,SAAWD,QAAUnB,UAAUtoB,KAAMwO,MAE3Cia,KAAKU,IAAI,CACL10B,IAAK80B,QACLjkB,IAAKtF,MACN0pB,UAEHf,SAASY,SAAWF,WAjCR,mDAsCxB,IAAKhhB,OAAO0gB,QACR,OAAO1gB,OAGXA,OAAO2gB,KAAO,CAACxa,MACfnG,OAAO6f,KAAOU,UAAUE,SACxBzgB,OAAO4gB,MAAQ,CAACL,UAAUE,UAI1B,IAFA,IAAIa,SAAWhB,SAASl0B,IAAI+Z,OAErBmb,UAAU,CACb,IAAMC,YAAcn1B,IAAIk1B,UAExBthB,OAAO2gB,KAAKa,QAAQF,UACpBthB,OAAO4gB,MAAMY,QAAQjB,UAAUgB,cAE/BD,SAAWhB,SAASiB,aAGxB,OAAOvhB,S,kMCzIJ,IAAMkgB,iBAAmB,SAACvwB,EAAGhE,GAChC,IAAMkY,GAAK9a,KAAK+a,IAAInU,EAAElI,EAAIkE,EAAElE,GACtBsc,GAAKhb,KAAK+a,IAAInU,EAAEjI,EAAIiE,EAAEjE,GAE5B,OAAO,GAAKmc,GAAKE,KAAO,KAAO,GAAShb,KAAK04B,IAAI5d,GAAIE,M,oMCJlD,IAAMoc,kBAAoB,SAACxwB,EAAGhE,GACjC,OAAO5C,KAAK+a,IAAInU,EAAElI,EAAIkE,EAAElE,GAAKsB,KAAK+a,IAAInU,EAAEjI,EAAIiE,EAAEjE,K,gsBCDlD,I,mBAEqB24B,c,2NACR,K,qHAGL,OAAO,sBAAAt9B,KAAA,QAAYqF,QAAU,I,4BAI7B,IAAKrF,KAAKuZ,UACN,OAAO,sBAAAvZ,KAAA,QAAY6N,QAAQvC,Q,6BAK/B,IAAKtL,KAAKuZ,UACN,OAAO,sBAAAvZ,KAAA,QAAY,GAAGsL,Q,0BAI1BA,MAAOgzB,UAGP,IAFA,IAAM9D,KAtBK,SAAClvB,MAAOgzB,UAAR,MAAsB,CAAEhzB,MAAOgzB,UAsB7BK,CAAWrzB,MAAOgzB,UAEtBh5B,EAAI,EAAGA,EAAI,sBAAAtF,KAAA,QAAYqF,OAAQC,IACpC,GAAI,sBAAAtF,KAAA,QAAYsF,GAAGg5B,SAAW9D,KAAK8D,SAE/B,YADA,sBAAAt+B,KAAA,QAAY6d,OAAOvY,EAAG,EAAGk1B,MAKjC,sBAAAx6B,KAAA,QAAYoL,KAAKovB,W,q4FC5BJpB,iB,g6BAIT/yB,KAQJ,GAPArG,KAAKrB,KAAKyC,SAASm7B,UAEnB,sBAAAv8B,KAAA,eAAsBqG,IAAIu4B,eAC1B,sBAAA5+B,KAAA,YAAmBqG,IAAIw4B,YAEvB7+B,KAAK8+B,oBAEDz4B,IAAIu4B,cAAe,CACnB,IAAMl1B,KAAO1J,KAAKrB,KAAKgC,MAAMi6B,WAO7B,OALAlxB,KAAK7I,MAAMk+B,SAAW14B,IAAIw4B,WAAW1tB,GACrCzH,KAAK5J,IAAIm6B,eAAiB5zB,IAAI24B,WAE9Bh/B,KAAKrB,KAAKgC,MAAMs+B,aAAav1B,MAKjC1J,KAAKrB,KAAKkC,MAAMq+B,eAAe74B,IAAIw4B,WAAYx4B,IAAI24B,OACnDh/B,KAAKrB,KAAKmB,IAAIo/B,eAAe74B,IAAIw4B,WAAYx4B,IAAI24B,OAEjDh/B,KAAKrB,KAAK2C,QAAQ+3B,UAAUpb,6D,gCAI5Bje,KAAKrB,KAAKyC,SAASk7B,W,0CAKnB,GADAt8B,KAAKrB,KAAK8B,SAASmF,QACnB,sBAAI5F,KAAJ,gBAAyB,CACrB,IAAMm/B,SAAW,0BAAH,OAA6B,sBAAAn/B,KAAA,gBAAoBmR,IAC/DnR,KAAKrB,KAAK8B,SAAS+6B,eAAe,GAAI2D,SAAU,eAC7C,CACH,IAAMC,SAAW,2BAAH,OAA8B,sBAAAp/B,KAAA,aAAiBmR,IAC7DnR,KAAKrB,KAAK8B,SAAS+6B,eAAe,GAAI4D,SAAU,c,+BAI/C57B,IACLxD,KAAK8+B,yB,8HA7CiC1D,+C,2uFCAzBj6B,c,yuBACL,O,yFAuBR,IAAMmO,OAAStP,KAAKrB,KAAKG,IAAI8a,aAAa,UACpCylB,SAAW/vB,OAAO6B,GAClBmuB,WAAahwB,OAAO0J,YAI1B,OAFA1J,OAAO6C,UAEA,CACHktB,SACA/vB,OAAQgwB,c,4BAIV51B,MACF,sBAAA1J,KAAA,UAAiB0J,KAAK21B,UACtBr/B,KAAKrB,KAAKG,IAAIoa,YAAYxP,KAAK4F,U,wCAI/B,IAAM+vB,SAAWr/B,KAAKsP,OAAO6B,GAGvBzD,IAAM1N,KAAKsP,OAAO8L,UAAU,kBAAmB,CACjD6B,OAAQ,IAAI9W,IAAI,CAACnG,KAAKsP,WAEpBgwB,WAAat/B,KAAKrB,KAAKG,IAAIka,UAAUvZ,MAAMC,KAAKgO,IAAIhE,KAAKuT,SAI/D,OAFAvb,QAAQyZ,IAAImkB,YAEL,CACHD,SACA/vB,OAAQgwB,c,iCAKRt/B,KAAKsP,QACLtP,KAAKsP,OAAO6C,UAEhB,sBAAAnS,KAAA,UAAiB,Q,2BAGhBqb,WACIrb,KAAKu/B,SAINv/B,KAAKsP,OAAO5H,IAAI+e,2DAChBzmB,KAAKsP,OAAOuM,OAAO4K,0DAGvBzmB,KAAKsP,OAAO7H,IAAIgf,yDAAa,CACzBpL,e,4BAIFzH,QACG5T,KAAKu/B,SAINv/B,KAAKsP,OAAO5H,IAAI6f,4DAChBvnB,KAAKsP,OAAOuM,OAAO0L,2DAGvBvnB,KAAKsP,OAAO7H,IAAI8f,0DAAc,CAC1B3T,Y,6BAIQ,IAAX4rB,MAAW,uDAAH,EACJx/B,KAAKu/B,QAIVv/B,KAAKsP,OAAO8L,UAAU,kBAA2B,IAARokB,S,6BA9FzC,OAAOx/B,KAAKrB,KAAKG,IAAIsS,UAAd,sBAAwBpR,KAAxB,c,yBAIP,6BAAOA,KAAP,a,6BAIA,OAAOA,KAAKsP,OAAOqW,MAAMC,Y,+BAIzB,OAAO5lB,KAAKsP,OAAOyK,SAASK,c,2HAhBOlU,gD,4xHCGtBhG,I,2YAOjB,aAAYvB,MAAM,iB,8HAAA,WACd,uBAAMA,MADQ,sE,4UAEd,uCAAe,IAAI8gC,4CAEnB9zB,OAAO1B,OAAO4L,0CAAYhS,SAAQ,SAACkN,WAC/B,6DAAa2uB,kBAAkB3uB,cAGnCpF,OAAO1B,OAAO4O,uCAAShV,SAAQ,SAAC0R,QAC5B,6DAAaoqB,eAAepqB,WATlB,M,sDAHd,6BAAOvV,KAAP,a,mDAiBAA,KAAK4/B,oB,wCAGS,+CACK,sBAAA5/B,KAAA,SAAaqX,SAASxX,KAD3B,IACd,+CAA8C,aACnCsS,WAFG,qD,kCAMN7C,QACR,IAAM5F,KAAO4F,OAAO0J,YAMpB,OAJAtP,KAAKyH,GAAKnR,KAAKC,OAAO4/B,aAEtB7/B,KAAKC,OAAOiZ,YAAYxP,MAEjB1J,KAAKC,OAAOmR,UAAU1H,KAAKyH,Q,KArCTjL,qD,43fCJZtF,iB,uvBACJ,I,+DACD,S,wFAWR,sBAAAZ,KAAA,YAAkB,K,yCAIlB0B,QAAQyZ,IAAI,oBACZ,sBAAAnb,KAAA,YAAkB,GAElBA,KAAKrB,KAAKuC,OAAO4+B,WACjB9/B,KAAKrB,KAAKmB,IAAIggC,WACd9/B,KAAKrB,KAAKsB,OAAO6/B,WACjB9/B,KAAKrB,KAAKkC,MAAMi/B,a,oCAGNp2B,MACVhI,QAAQyZ,IAAI,iBACZ,sBAAAnb,KAAA,YAAkB,GAElBA,KAAKrB,KAAK0B,MAAM0/B,MAAMr2B,KAAKrJ,OAC3BL,KAAKrB,KAAKuC,OAAO6+B,MAAMr2B,KAAKxI,QAC5BlB,KAAKrB,KAAKkC,MAAMk/B,MAAMr2B,KAAK7I,OAC3Bb,KAAKrB,KAAKmB,IAAIigC,MAAMr2B,KAAK5J,O,gCAIzB,sBAAAE,KAAA,UAAiBggC,OAAO,kBAAmB,SAC3ChgC,KAAKigC,WAAWjgC,KAAKkgC,UACrBlgC,KAAKmgC,mBAEL,IAAMz2B,KAAO,CACTw2B,SAAUlgC,KAAKkgC,SACf7/B,MAAOL,KAAKrB,KAAK0B,MAAM+/B,eACvBl/B,OAAQlB,KAAKrB,KAAKuC,OAAOk/B,eACzBv/B,MAAOb,KAAKrB,KAAKkC,MAAMu/B,eACvBtgC,IAAKE,KAAKrB,KAAKmB,IAAIsgC,gBAGvBpgC,KAAKqgC,cAAc32B,Q,iCAInB,GAAK1J,KAAKq7B,UAAV,CAKA,IAAM3xB,KAAO,CACTw2B,SAAUlgC,KAAKkgC,SACf7/B,MAAOL,KAAKrB,KAAK0B,MAAMigC,kBACvBxgC,IAAKE,KAAKrB,KAAKmB,IAAIwgC,kBACnBp/B,OAAQlB,KAAKrB,KAAKuC,OAAOo/B,kBACzBz/B,MAAOb,KAAKrB,KAAKkC,MAAMy/B,mBAO3B,OAJA5+B,QAAQyZ,IAAI,YAAazR,MAEzB62B,aAAaC,QAAQxgC,KAAKkgC,SAAUO,KAAKC,UAAUh3B,OAE5CA,KAhBHhI,QAAQiY,KAAK,6C,iCAmBVumB,UACOv0B,OAAOg1B,KAAKJ,cAEpB18B,SAAQ,SAAC+8B,MACPA,KAAKC,WAAL,UAAmBX,SAAnB,OACAK,aAAaO,WAAWF,W,6CAKb7B,SAAUgC,cAC7BR,aAAaC,QAAb,UACOxgC,KAAKkgC,SADZ,YACwBnB,SADxB,cAEI0B,KAAKC,UAAUK,iB,2CAIFhC,SAAUxnB,YAC3BgpB,aAAaC,QAAb,UACOxgC,KAAKkgC,SADZ,YACwBnB,SADxB,aAEI0B,KAAKC,UAAUnpB,e,2CAIFwnB,UACjB,IAAM3nB,KAAOmpB,aAAaS,QAAb,UACNhhC,KAAKkgC,SADC,YACWnB,SADX,cAIb,OAAO3nB,MAAQqpB,KAAKQ,MAAM7pB,Q,6CAGP2nB,UACnB,IAAM3nB,KAAOmpB,aAAaS,QAAb,UACNhhC,KAAKkgC,SADC,YACWnB,SADX,eAIb,OAAO3nB,MAAQqpB,KAAKQ,MAAM7pB,Q,uCAGb8oB,UACb,IAAM9oB,KAAOmpB,aAAaS,QAAQd,UAElC,OAAO9oB,MAAQqpB,KAAKQ,MAAM7pB,Q,iCAI1B,IAAM8oB,SAAWF,OAAO,8BAA+B,QAEjDt2B,KAAO1J,KAAKkhC,iBAAiBhB,UAE9Bx2B,MACDhI,QAAQiY,KAAR,oBAA0BumB,SAA1B,eAGJ,sBAAAlgC,KAAA,UAAiBkgC,UAEjBx+B,QAAQyZ,IAAI,eAAgBzR,MAE5B1J,KAAKmgC,mBACLngC,KAAKqgC,cAAc32B,Q,mCAGVA,MACT1J,KAAKmgC,mBACLngC,KAAKqgC,cAAc32B,Q,+BArInB,6BAAO1J,KAAP,a,gCAIA,6BAAOA,KAAP,iB,8HATsCkG,gD,wrFCAzB5F,a,iuBACT,I,gEACK,I,wFAmBT,MAAO,CACH6gC,KAAM,EACN/xB,UAAW,K,wCAKf,MAAO,CACH+xB,KAAMnhC,KAAKmhC,KACX/xB,UAAWpP,KAAKoP,a,4BAIlB1F,MACF,sBAAA1J,KAAA,MAAa0J,KAAKy3B,MAClB,sBAAAnhC,KAAA,WAAkB0J,KAAK0F,a,oCAGb0X,OACV,sBAAA9mB,KAAA,WAAkB8mB,OAClB,sBAAA9mB,KAAA,4BAAAA,KAAA,OAAc8mB,S,6BAGXtjB,IACH,sBAAAxD,KAAA,WAAkB,K,2BAxClB,6BAAOA,KAAP,S,gCAIA,6BAAOA,KAAP,c,2BAIA,OAAOgG,KAAKyhB,MAAM,sBAAAznB,KAAA,OAAa,O,8BAI/B,OAAO,sBAAAA,KAAA,OAAyB,IAAZA,KAAKiqB,U,0HAjBS/jB,gD,g1FCErBvD,a,quBACJ,I,wDACR,I,wDACA,I,kFAeD,IAAMzB,OAASlB,KAAKrB,KAAKuC,OAAO6Y,SAEhC,sBAAA/Z,KAAA,GAAUkB,OAAOwD,GACjB,sBAAA1E,KAAA,GAAUkB,OAAOyD,GAEjB,sBAAA3E,KAAA,YAAkB,K,gCAIlB,sBAAAA,KAAA,YAAkB,K,+BAIdA,KAAKohC,UACLphC,KAAKu8B,UAELv8B,KAAKs8B,W,2BAIRjhB,WACD,IAAMyL,MAAQY,qDAAiBrM,WAC/B,sBAAArb,KAAA,yBAAAA,KAAA,IAAW8mB,MAAMpiB,GACjB,sBAAA1E,KAAA,yBAAAA,KAAA,IAAW8mB,MAAMniB,K,oCAIjB,OAAO3E,KAAKrB,KAAKmB,IACZumB,cAAcrmB,KAAK0E,EAAG1E,KAAK2E,GAC3BgN,QAAO,SAAClE,GAAD,OAAOA,EAAE/F,IAAIqY,6D,mCAGA,IAAlBxY,MAAkB,uDAAV,SACTqiB,OAAS5pB,KAAKrB,KAAK4B,OAAOspB,cAAc7pB,KAAK0E,EAAG1E,KAAK2E,GAE3D3E,KAAKrB,KAAK8B,SAAS0E,KAAKykB,OAAOllB,EAAGklB,OAAOjlB,EAAG,IAAK4C,S,iCAG1C,gBACD8P,SAAWrX,KAAKqhC,cAAc1vB,QAAO,SAAClE,GAAD,OAAOA,EAAE/F,IAAIsa,yDAClD4H,OAAS5pB,KAAKrB,KAAK4B,OAAOspB,cAAc7pB,KAAK0E,EAAG1E,KAAK2E,GAEvDilB,OAAOllB,EAAI1E,KAAKrB,KAAK4B,OAAO0D,MAAQ,EACpCoT,SAASxT,SAAQ,SAACyL,OAAQhK,GACtB,IAAM0S,EAAU,IAAN1S,EAAU,IAAM,IAC1B,OAAK3G,KAAK8B,SAASkF,SACfikB,OAAOllB,EAAI,EACXklB,OAAOjlB,EAAIW,EAFf,UAGO0S,EAHP,KAII,QAEJ,OAAKrZ,KAAK8B,SAASkF,SACfikB,OAAOllB,EAAI,EACXklB,OAAOjlB,EAAIW,EACXgK,OAAOkS,QAAQjd,QAAU,IACzB,UACA,QACA,WAIR8S,SAASxT,SAAQ,SAACyL,OAAQhK,GACtB,IAAM0S,EAAU,IAAN1S,EAAU,IAAM,IAC1B,OAAK3G,KAAK8B,SAASkF,SACfikB,OAAOllB,EAAI,EACXklB,OAAOjlB,EAAIW,EAFf,WAGQ0S,GACJ,QAEJ,IAAMvS,IAAM,OAAK9G,KAAK8B,SAASiF,iBAC3B4J,OAAOkS,QAAQjd,SAEnB,OAAK5F,KAAK8B,SAASkF,SACfikB,OAAOllB,EAAIe,IAAM,IACjBmkB,OAAOjlB,EAAIW,EACX,IAAMgK,OAAOkS,QAAQjd,QACrB,UACA,QACA,a,wBA1FZ,6BAAOvE,KAAP,M,wBAIA,6BAAOA,KAAP,M,gCAIA,6BAAOA,KAAP,iB,0HAdkCyP,+C,w6FCArB1O,W,yZAcjB,oBAAYpC,MAAM,iB,8HAAA,kBACd,uBAAMA,MADQ,wEAbG,OAaH,kIAXT,KAWS,6DAVR,KAaN,MAAK4Z,MAAQ,MAAK5Z,KAAKG,IAAIoQ,YAAY,CACnCrP,IAAK,CAACslB,yDAGV,4DAAe,IAAImc,oDAAQ,MAAKr9B,MAAO,MAAKC,SAE5C,MAAKqU,MAAMgpB,eAAc,SAAC9zB,GACtB,6DAAawD,IAAI,EAAG,EAAGxD,EAAE0D,OAG7B,MAAKoH,MAAMipB,iBAAgB,SAAC/zB,GACxB,6DAAaoO,OAAOpO,EAAE0D,OAdZ,M,4DAPd,6BAAOnR,KAAP,U,6BAIA,6BAAOA,KAAP,a,8DAsBA,MAAO,K,iCAIP,sBAAAA,KAAA,oBAA0B,GAC1B,sBAAAA,KAAA,SAAa4F,U,4BAGX8D,MACF,GAAIA,KAAKuwB,eACLj6B,KAAKrB,KAAKuC,OAAOoO,OAAOyK,SAASC,OAC7BtQ,KAAKuwB,eAAev1B,EACpBgF,KAAKuwB,eAAet1B,OAErB,CACH,IAAMoV,SAAW/Z,KAAKyhC,yBACtBzhC,KAAKrB,KAAKuC,OAAOoO,OAAOyK,SAASC,OAAOD,SAASrV,EAAGqV,SAASpV,GAGjE3E,KAAKrB,KAAK2D,UAAUs3B,e,wCAIpB,IAAMlwB,KAAO,sBAAA1J,KAAA,SAAagZ,YAI1B,OAFAhZ,KAAKrB,KAAKgC,MAAM+gC,uBAAuB1hC,KAAKrB,KAAKkC,MAAMk+B,SAAUr1B,MAE1D,CACHuwB,eAAgBj6B,KAAKrB,KAAKuC,OAAO6Y,Y,qCAI1B4nB,QACX,sBAAA3hC,KAAA,oBAA0B,GAE1B,IAAM0J,KAAO1J,KAAKrB,KAAKgC,MAAMihC,uBAAuBD,OAAOxwB,IAEvDzH,MACA,sBAAA1J,KAAA,SAAakZ,YAAYxP,Q,kCAIrB21B,UACR,OAAO,sBAAAr/B,KAAA,SAAaolB,YAAYia,Y,kCAGxB36B,EAAGC,EAAG06B,UACV,sBAAAr/B,KAAA,SAAa6hC,cAAcn9B,EAAGC,GAC1B3E,KAAKrB,KAAKuC,OAAOiQ,KAAOkuB,UACxB,sBAAAr/B,KAAA,mBAA0B,CAAE0E,EAAGC,KAMvC,sBAAA3E,KAAA,SAAaiR,IAAIvM,EAAGC,EAAG06B,UAEnBA,WAAar/B,KAAKrB,KAAKuC,OAAOiQ,IAC9BnR,KAAKrB,KAAK4B,OAAOs5B,SAASn1B,EAAGC,M,oCAIvBD,EAAGC,GAAG,gBAChB,OAAO,sBAAA3E,KAAA,SACFqP,IAAI3K,EAAGC,GACP7E,KAAI,SAACqR,IAAD,OAAQ,OAAKxS,KAAKG,IAAIsS,UAAUD,OACpCQ,QAAO,SAAClE,GAAD,OAAQA,EAAE/F,IAAI+U,iE,iCAGnBmE,GAAIC,GAAIihB,GAAIC,IACnB,OAAO/7B,KAAK+a,IAAIH,GAAKkhB,KAAO,GAAK97B,KAAK+a,IAAIF,GAAKkhB,KAAO,I,0CAGtCr9B,EAAGC,GACnB,MAAO,CACH3E,KAAKqmB,cAAc3hB,EAAI,EAAGC,EAAI,GAC9B3E,KAAKqmB,cAAc3hB,EAAGC,EAAI,GAC1B3E,KAAKqmB,cAAc3hB,EAAI,EAAGC,EAAI,GAC9B3E,KAAKqmB,cAAc3hB,EAAI,EAAGC,GAC1B3E,KAAKqmB,cAAc3hB,EAAI,EAAGC,GAC1B3E,KAAKqmB,cAAc3hB,EAAI,EAAGC,EAAI,GAC9B3E,KAAKqmB,cAAc3hB,EAAGC,EAAI,GAC1B3E,KAAKqmB,cAAc3hB,EAAI,EAAGC,EAAI,M,+CAKlC,IAAID,EAAGC,EACP,GACID,EAAIsB,KAAKC,MAAMD,KAAK+e,SAAW/kB,KAAKiE,OACpCU,EAAIqB,KAAKC,MAAMD,KAAK+e,SAAW/kB,KAAKkE,cAC/BlE,KAAKqmB,cAAc3hB,EAAGC,GAAGU,OAAS,GAE3C,MAAO,CAAEX,EAAGC,K,0CAGID,EAAGC,GACfA,EAAI,GACJ3E,KAAKrB,KAAKkC,MAAMmhC,YAAYhiC,KAAKrB,KAAKkC,MAAM8gC,OAAOM,YAAa,CAC5Dv9B,EACAC,EAAG3E,KAAKkE,OAAS,IAGrBS,GAAK3E,KAAKkE,QACVlE,KAAKrB,KAAKkC,MAAMmhC,YAAYhiC,KAAKrB,KAAKkC,MAAM8gC,OAAOO,YAAa,CAC5Dx9B,EACAC,EAAG,IAGPD,GAAK1E,KAAKiE,OACVjE,KAAKrB,KAAKkC,MAAMmhC,YAAYhiC,KAAKrB,KAAKkC,MAAM8gC,OAAOQ,WAAY,CAC3Dz9B,EAAG,EACHC,IAGJD,EAAI,GACJ1E,KAAKrB,KAAKkC,MAAMmhC,YAAYhiC,KAAKrB,KAAKkC,MAAM8gC,OAAOS,WAAY,CAC3D19B,EAAG1E,KAAKiE,MAAQ,EAChBU,M,6BAKLnB,IACH,sBAAIxD,KAAJ,qBACIA,KAAKqiC,oBACD,sBAAAriC,KAAA,oBAAwB0E,EACxB,sBAAA1E,KAAA,oBAAwB2E,O,YAhKAuB,gD,2yBCJnBo7B,Q,WAkBjB,iBAAYr9B,MAAOC,S,8HAAQ,6CAjBlB,GAiBkB,+BAhBjB,GAgBiB,6BAfnB,IAemB,+BAdjB,IAAIyO,KAeV3S,KAAKsiC,OAASr+B,MACdjE,KAAKuiC,QAAUr+B,OAEf,IAAK,IAAIoB,EAAI,EAAGA,EAAItF,KAAKyK,KAAMnF,IAC3BtF,KAAKwiC,MAAMl9B,GAAK,IAAIa,I,yDAhBxB,OAAOnG,KAAKsiC,S,6BAIZ,OAAOtiC,KAAKuiC,U,2BAIZ,OAAOviC,KAAKsiC,OAAStiC,KAAKuiC,Y,gDAY1B79B,EAAGC,GACH,OAAOA,EAAI3E,KAAKiE,MAAQS,I,4BAGtBkZ,KACF,MAAO,CACHlZ,EAAGsB,KAAKC,MAAM2X,IAAM5d,KAAKiE,OACzBU,EAAGqB,KAAKC,MAAM2X,IAAM5d,KAAKiE,U,8BAK7BjE,KAAKyiC,QAAQ78B,QAEb,IAAK,IAAIN,EAAI,EAAGA,EAAItF,KAAKyK,KAAMnF,IAC3BtF,KAAKwiC,MAAMl9B,GAAGM,U,kCAKlB,IAAM88B,QAAU1iC,KAAKwiC,MAAM1iC,KAAI,SAAC4X,GAAD,OAAOjY,MAAMC,KAAKgY,MAEjD,MAAO,CACHzT,MAAOjE,KAAKiE,MACZC,OAAQlE,KAAKkE,OACbw+B,W,kCAIIh5B,MAAM,eACd1J,KAAKsiC,OAAS54B,KAAKzF,MACnBjE,KAAKuiC,QAAU74B,KAAKxF,OACpBlE,KAAKyiC,QAAU,IAAI9vB,IAEnB,IALc,mBAKLrN,GACL,IAAMq9B,MAAQ,MAAKA,MAAMr9B,GACzB,MAAKk9B,MAAMl9B,GAAK,IAAIa,IAAIuD,KAAKg5B,QAAQp9B,IAErCoE,KAAKg5B,QAAQp9B,GAAGzB,SAAQ,SAACsN,IACrB,MAAKsxB,QAAQxxB,IAAIE,GAAIwxB,WALpBr9B,EAAI,EAAGA,EAAIoE,KAAKg5B,QAAQr9B,OAAQC,IAAK,MAArCA,K,0BAUTZ,EAAGC,EAAGwM,IACN,GAAInR,KAAK6hC,cAAcn9B,EAAGC,GACtBjD,QAAQiY,KAAR,kCAC+BxI,GAD/B,mCAC4DzM,EAD5D,aACkEC,QAFtE,CAOA,IAAMiZ,IAAM5d,KAAK4d,IAAIlZ,EAAGC,GAExB3E,KAAK6b,OAAO1K,IAEZnR,KAAKyiC,QAAQxxB,IAAIE,GAAI,CAAEzM,EAAGC,IAC1B3E,KAAKwiC,MAAM5kB,KAAKnW,IAAI0J,O,0BAGpBzM,EAAGC,GACH,OAAI3E,KAAK6hC,cAAcn9B,EAAGC,GACf,GAGJlF,MAAMC,KAAKM,KAAKwiC,MAAMxiC,KAAK4d,IAAIlZ,EAAGC,O,0BAGzCwM,IACA,OAAOnR,KAAKyiC,QAAQ/6B,IAAIyJ,M,kCAGhBA,IACR,IAAM+I,IAAMla,KAAKyiC,QAAQpzB,IAAI8B,IAM7B,OAJK+I,KACDxY,QAAQiY,KAAK,sBAAuBxI,IAGjC+I,M,6BAGJ/I,IACH,GAAKnR,KAAK0H,IAAIyJ,IAAd,CAIA,IAAM+I,IAAMla,KAAKolB,YAAYjU,IACvByM,IAAM5d,KAAK4d,IAAI1D,IAAIxV,EAAGwV,IAAIvV,GAEhC3E,KAAKyiC,QAAL,OAAoBtxB,IACpBnR,KAAKwiC,MAAM5kB,KAAX,OAAuBzM,O,oCAGbzM,EAAGC,GACb,OAAOD,EAAI,GAAKC,EAAI,GAAKD,GAAK1E,KAAKiE,OAASU,GAAK3E,KAAKkE,W,87DChHzC5B,U,wbACjB,mBAAY3D,MAAM,iB,8HAAA,kBACd,uBAAMA,OAEDikC,IAAM,IAAIC,8DAAyB,SAACn+B,EAAGC,GAAJ,OACpC,MAAKm+B,gBAAgBp+B,EAAGC,MAG5B,MAAK4T,MAAQ,MAAK5Z,KAAKG,IAAIoQ,YAAY,CACnCrP,IAAK,CAACkgB,wDACNqJ,IAAK,CAACjQ,6DATI,M,gFAaFzU,EAAGC,GACf,OAAQ3E,KAAKrB,KAAKmB,IACbumB,cAAc3hB,EAAGC,GACjBoT,MAAK,SAACtK,GAAD,OAAOA,EAAE/F,IAAIqU,gE,iCAGhBrX,EAAGC,EAAG4Z,OAAQkD,OACrBzhB,KAAKrB,KAAKmB,IAAIumB,cAAc3hB,EAAGC,GAAGd,SAAQ,SAAC4J,GACvCA,EAAEhG,IAAIsY,uDAAW,CACb0B,MACAlD,SAEA9Q,EAAE/F,IAAIigB,2DAAgBla,EAAE/F,IAAIkgB,wDAC5Bna,EAAEhG,IAAImgB,4D,mCAKL,gBACT5nB,KAAKuY,MAAMlJ,MAAMxL,SAAQ,SAAC4J,GAAD,OAAOA,EAAEoO,OAAOkE,2DAEzC,IAAM7F,IAAMla,KAAKrB,KAAKuC,OAAO6Y,SAE7B/Z,KAAK4iC,IAAIG,QAAQ7oB,IAAIxV,EAAGwV,IAAIvV,EAAG,GAAG,SAACD,EAAGC,EAAG+D,EAAGs6B,YACxC,OAAKC,WAAWv+B,EAAGC,EAAGq+B,WAAYt6B,Q,6BAInClF,IACCxD,KAAKrB,KAAK0B,MAAM+O,WAChBpP,KAAK45B,kB,+IA5CsBnqB,U,upECG1ByzB,KAAOC,uCAEPC,MAAQ77B,wCAER87B,KAAOj+B,wC,udCbpB,IAAMk+B,KAAO,uBAmIb,kCAAe,I,WAjIX,gB,8HAAc,WACVtjC,KAAKujC,MAAQ,EACbvjC,KAAKwjC,IAAM,EACXxjC,KAAKyjC,IAAM,EACXzjC,KAAK0jC,IAAM,EACX1jC,KAAK2jC,GAAK,E,2GAEF,OAAO3jC,KAAKujC,Q,8BAIhBK,MASJ,OARAA,KAAQA,KAAO,EAAI,EAAIA,KAAOA,KAC9B5jC,KAAKujC,MAAQK,KACb5jC,KAAKwjC,KAAOI,OAAS,GAAKN,KAC1BM,KAAe,MAAPA,KAAe,IAAO,EAC9B5jC,KAAKyjC,IAAMG,KAAON,KAClBM,KAAe,MAAPA,KAAe,IAAO,EAC9B5jC,KAAK0jC,IAAME,KAAON,KAClBtjC,KAAK2jC,GAAK,EACH3jC,O,mCAMP,IAAI2D,EAAI,QAAU3D,KAAKwjC,IAAMxjC,KAAK2jC,GAAKL,KAKvC,OAJAtjC,KAAKwjC,IAAMxjC,KAAKyjC,IAChBzjC,KAAKyjC,IAAMzjC,KAAK0jC,IAChB1jC,KAAK2jC,GAAS,EAAJhgC,EACV3D,KAAK0jC,IAAM//B,EAAI3D,KAAK2jC,GACb3jC,KAAK0jC,M,oCAOFG,WAAYC,YACtB,IAAIhc,IAAM9hB,KAAK8hB,IAAI+b,WAAYC,YAC3BpF,IAAM14B,KAAK04B,IAAImF,WAAYC,YAC/B,OAAO99B,KAAKyhB,MAAMznB,KAAK+jC,cAAgBjc,IAAM4W,IAAM,IAAMA,M,kCAO7B,IACxBsF,EAAG9yB,EAAGxI,EADJu7B,KAAsB,uDAAf,EAAGC,OAAY,uDAAH,EAEzB,GAGIx7B,GAFAs7B,EAAI,EAAIhkC,KAAK+jC,aAAe,GAEpBC,GADR9yB,EAAI,EAAIlR,KAAK+jC,aAAe,GACZ7yB,QACXxI,EAAI,GAAU,GAALA,GAClB,IAAIy7B,MAAQH,EAAIh+B,KAAKo+B,MAAM,EAAIp+B,KAAKmV,IAAIzS,GAAKA,GAC7C,OAAOu7B,KAAOE,MAAQD,S,sCAMtB,OAAO,EAAIl+B,KAAKyhB,MAA0B,IAApBznB,KAAK+jC,gB,8BAKvBtvB,OACJ,OAAKA,MAAMpP,OAGJoP,MAAMzO,KAAKyhB,MAAMznB,KAAK+jC,aAAetvB,MAAMpP,SAFvC,O,8BAOPoP,OAGJ,IAFA,IAAIwI,OAAS,GACTyB,MAAQjK,MAAMlK,QACXmU,MAAMrZ,QAAQ,CACjB,IAAIwR,MAAQ6H,MAAMf,QAAQ3d,KAAKghC,QAAQtiB,QACvCzB,OAAO7R,KAAKsT,MAAMb,OAAOhH,MAAO,GAAG,IAEvC,OAAOoG,S,uCAMMvT,MACb,IAAI26B,MAAQ,EACZ,IAAK,IAAIlzB,OAAMzH,KACX26B,OAAS36B,KAAKyH,KAElB,IACIA,GADA4T,OAAS/kB,KAAK+jC,aAAeM,MACzBC,KAAO,EACf,IAAKnzB,MAAMzH,KAEP,GAAIqb,QADJuf,MAAQ56B,KAAKyH,KAET,OAAOA,GAKf,OAAOA,K,iCAME,MAAO,CAACnR,KAAKwjC,IAAKxjC,KAAKyjC,IAAKzjC,KAAK0jC,IAAK1jC,KAAK2jC,M,+BAI/ChjC,OAKL,OAJAX,KAAKwjC,IAAM7iC,MAAM,GACjBX,KAAKyjC,IAAM9iC,MAAM,GACjBX,KAAK0jC,IAAM/iC,MAAM,GACjBX,KAAK2jC,GAAKhjC,MAAM,GACTX,O,8BAMP,IAAI0e,MAAQ,IAAI6lB,IAChB,OAAO7lB,MAAM8lB,SAASxkC,KAAKykC,iB,qHAGVC,QAAQxhC,KAAKC,Q,yiCChItC,IAAMwhC,SAAW,CACb,IAAOC,6CACP,KAAQC,8CACR,KAAQC,8CACR,UAAWC,iDACX,KAAQC,+CAENC,gBAAkB,CACpBhhC,MAAOihC,yDACPhhC,OAAQihC,0DACRC,WAAW,EACXC,OAAQ,OACRC,SAAU,GACVC,QAAS,EACTC,OAAQ,EACRC,kBAAkB,EAClBC,WAAY,YACZC,UAAW,GACXC,GAAI,OACJ7gC,GAAI,OACJZ,UAAW,GACXC,WAAY,GACZyhC,QAAS,GACTC,QAAS,KACTC,cAAc,GAuOlB,iCAlO6B,WAAM,IACzB/hC,QADyB,WAE3B,mBAA0B,IAAdgM,QAAc,uDAAJ,GAAI,8BACtBhQ,KAAKwiC,MAAQ,GACbxiC,KAAKgmC,QAAS,EACdhmC,KAAKimC,SAAW,GAChBj2B,QAAUrE,OAAOu6B,OAAO,GAAIjB,gBAAiBj1B,SAC7ChQ,KAAKmmC,WAAWn2B,SAChBhQ,KAAKomC,MAAQpmC,KAAKomC,MAAM9iC,KAAKtD,MAC7BA,KAAKqmC,MAAQrmC,KAAKqmC,MAAM/iC,KAAKtD,MAC7BA,KAAKsmC,SAASC,SAASvmC,KAAKqmC,O,uCAVL,O,YAAA,S,WAAA,6BAkBrB3hC,EAAGC,EAAG6hC,MACR,IAAIC,OAAS,CAACzmC,KAAKimC,SAASlhC,GAAI/E,KAAKimC,SAASL,IAC9C5lC,KAAKmF,KAAKT,EAAGC,EAAG,KAAM,KAAM8hC,OAAOD,KAAOC,OAAOphC,WApB1B,8BA0BvBrF,KAAKwiC,MAAQ,GACbxiC,KAAKgmC,QAAS,IA3BS,iCAgChBh2B,SAEP,GADArE,OAAOu6B,OAAOlmC,KAAKimC,SAAUj2B,SACzBA,QAAQ/L,OAAS+L,QAAQ9L,QAAU8L,QAAQs1B,UAAYt1B,QAAQ01B,YAAc11B,QAAQu1B,SAAWv1B,QAAQq1B,OAAQ,CAChH,GAAIr1B,QAAQq1B,OAAQ,CAChB,IAAIqB,KAAO/B,SAAS30B,QAAQq1B,QAC5BrlC,KAAKsmC,SAAW,IAAII,KAExB1mC,KAAKsmC,SAASH,WAAWnmC,KAAKimC,UAC9BjmC,KAAKgmC,QAAS,EAElB,OAAOhmC,OA1CgB,mCA+CZ,OAAOA,KAAKimC,WA/CA,qCAmDV,OAAOjmC,KAAKsmC,SAASK,iBAnDX,kCA0DfC,WAAYC,aACpB,OAAO7mC,KAAKsmC,SAASQ,YAAYF,WAAYC,eA3DtB,sCAmEXD,WAAYC,aACxB,OAAO7mC,KAAKsmC,SAASS,gBAAgBH,WAAYC,eApE1B,sCAsEXD,WAAYC,aAGxB,MAAO,CAFK7gC,KAAKyhB,MAAMmf,WAAa5mC,KAAKimC,SAAShiC,OACrC+B,KAAKyhB,MAAMof,YAAc7mC,KAAKimC,SAAS/hC,WAxE7B,sCAgFXuJ,GACZ,IAAI/I,EAAGC,EASP,MARI,YAAa8I,GACb/I,EAAI+I,EAAEu5B,QAAQ,GAAGC,QACjBtiC,EAAI8I,EAAEu5B,QAAQ,GAAGE,UAGjBxiC,EAAI+I,EAAEw5B,QACNtiC,EAAI8I,EAAEy5B,SAEHlnC,KAAKsmC,SAASa,gBAAgBziC,EAAGC,KA1FjB,2BAmGtBD,EAAGC,EAAGiX,GAAIgqB,GAAI7gC,IACV6gC,KACDA,GAAK5lC,KAAKimC,SAASL,IAElB7gC,KACDA,GAAK/E,KAAKimC,SAASlhC,IAEvB,IAAIsE,IAAM,GAAH,OAAM3E,EAAN,YAAWC,GAClB3E,KAAKwiC,MAAMn5B,KAAO,CAAC3E,EAAGC,EAAGiX,GAAIgqB,GAAI7gC,KACb,IAAhB/E,KAAKgmC,SAGJhmC,KAAKgmC,SACNhmC,KAAKgmC,OAAS,IAElBhmC,KAAKgmC,OAAO38B,MAAO,KAlHI,+BA4HlB3E,EAAGC,EAAGS,KAAMgiC,UACjB,IAAIxB,GAAK,KACL7gC,GAAK,KACLsiC,GAAK3iC,EACL4iC,GAAK3iC,EACL4iC,MAAQ,EACPH,WACDA,SAAWpnC,KAAKimC,SAAShiC,MAAQS,GAGrC,IADA,IAAI8iC,OAASnE,+CAAcj+B,KAAMgiC,UAC1BI,OAAOniC,QAAQ,CAClB,IAAIoiC,MAAQD,OAAO35B,QACnB,OAAQ45B,MAAM70B,MACV,KAAKywB,gDAED,IADA,IAAIqE,SAAU,EAAOC,aAAc,EAAOC,aAAc,EAAOC,iBAAkB,EACxEviC,EAAI,EAAGA,EAAImiC,MAAMn8B,MAAMjG,OAAQC,IAAK,CACzC,IAAIwiC,GAAKL,MAAMn8B,MAAMy8B,WAAWziC,GAC5B0S,EAAIyvB,MAAMn8B,MAAM9F,OAAOF,GAC3B,GAA6B,SAAzBtF,KAAKimC,SAASZ,OAAmB,CACjC,IAAI2C,IAAMF,IAAM,EAEhB,GADoB,KAARE,KAAiBA,KAAO,IAAQA,KAAO,KAAUA,KAAO,KAAQA,KAAO,KAAUF,IAAM,OAAUA,IAAM,MACxG,CACP9nC,KAAKmF,KAAKkiC,GAAK,EAAGC,GAAItvB,EAAG4tB,GAAI7gC,IAC7B/E,KAAKmF,KAAKkiC,GAAK,EAAGC,GAAI,KAAM1B,GAAI7gC,IAChCsiC,IAAM,EACN,UAIRO,YAAeE,GAAK,OAAUA,GAAK,OAAYA,GAAK,OAAUA,GAAK,OAAWA,GAAK,MAEnFJ,QAA8B,IAAnB1vB,EAAE+vB,WAAW,IAAiC,OAAnB/vB,EAAE+vB,WAAW,IAG/CF,iBAAoBD,aAAgBF,SACpCL,KAIAO,cAAgBD,aAChBN,KAEJrnC,KAAKmF,KAAKkiC,KAAMC,GAAItvB,EAAG4tB,GAAI7gC,IAC3B4iC,YAAcD,QACdG,gBAAkBD,YAEtB,MACJ,KAAKvE,8CACDuC,GAAK6B,MAAMn8B,OAAS,KACpB,MACJ,KAAK+3B,8CACDt+B,GAAK0iC,MAAMn8B,OAAS,KACpB,MACJ,KAAK+3B,mDACDgE,GAAK3iC,EACL4iC,KACAC,SAIZ,OAAOA,QAxLgB,8BA+LvB,GADAvnC,KAAKsmC,SAASC,SAASvmC,KAAKqmC,OACvBrmC,KAAKgmC,OAAV,CAGA,IAAoB,IAAhBhmC,KAAKgmC,OAEL,IAAK,IAAI70B,MADTnR,KAAKsmC,SAAS1gC,QACC5F,KAAKwiC,MAChBxiC,KAAKioC,MAAM92B,IAAI,QAInB,IAAK,IAAI9H,OAAOrJ,KAAKgmC,OACjBhmC,KAAKioC,MAAM5+B,KAAK,GAGxBrJ,KAAKgmC,QAAS,KA7MS,4BAmNrB38B,IAAK6+B,aACP,IAAIx+B,KAAO1J,KAAKwiC,MAAMn5B,KAClBK,KAAK,IAAM1J,KAAKimC,SAASlhC,KACzBmjC,aAAc,GAElBloC,KAAKsmC,SAASnhC,KAAKuE,KAAMw+B,kB,4GAxNF,WAgO/B,OALAlkC,QAAQ6gC,KAAOA,8CACf7gC,QAAQ4gC,IAAMA,6CACd5gC,QAAQ8gC,KAAOA,8CACf9gC,QAAQ+gC,OAASA,iDACjB/gC,QAAQghC,KAAOA,8CACRhhC,QAhOkB,I,+gGC9BR4gC,I,4aACjB,eAAc,iB,8HAAA,YACV,yBACKuD,UAAY,EACjB,MAAKC,UAAY,EACjB,MAAKC,SAAW,EAJN,M,+DAMT3+B,KAAMw+B,aAAa,yBACKx+B,KADL,GACfhF,EADe,SACZC,EADY,SACTiX,GADS,SACLgqB,GADK,SACD7gC,GADC,SAEhBujC,GAAK,EACJ5jC,EAAI,GAAK1E,KAAKmoC,UACfxjC,EAAI3E,KAAKooC,UAAYpoC,KAAKqoC,UAS9B,GAPIroC,KAAKimC,SAASb,WACdkD,GAAGC,UAEHL,cACAloC,KAAKwoC,KAAKxhC,UAAYjC,GACtB/E,KAAKyoC,MAAMH,GAAG,GAAIA,GAAG,KAEpB1sB,GAAL,CAGA5b,KAAKwoC,KAAKxhC,UAAY4+B,GAEtB,IADA,IAAI8C,MAAQ,GAAGC,OAAO/sB,IACbtW,EAAI,EAAGA,EAAIojC,MAAMrjC,OAAQC,IAC9BtF,KAAKwoC,KAAKI,SAASF,MAAMpjC,GAAIgjC,GAAG,GAAItiC,KAAKqkB,KAAKie,GAAG,Q,kCAG7C1B,WAAYC,aAQpB,OAPI7mC,KAAKimC,SAASb,YACdwB,YAAcC,YAEdD,YADAC,YAAcD,WAAaC,aAKxB,CAFK7gC,KAAKyhB,MAAMmf,WAAa5mC,KAAKmoC,WAAa,EACzCniC,KAAKyhB,OAAOof,YAAc,EAAI7mC,KAAKqoC,UAAYroC,KAAKooC,UAAY,M,sCAGjExB,WAAYC,aACpB7mC,KAAKimC,SAASb,YACdwB,YAAcC,YAEdD,YADAC,YAAcD,WAAaC,aAG/B,IAAIgC,aAAe,EAAIjC,aAAe5mC,KAAKimC,SAAShiC,MAAQ,GAAK+B,KAAKo+B,KAAK,IAAM,EAC7E0E,cAAgBjC,aAAe,EAAI,KAAO7mC,KAAKimC,SAAS/hC,OAAS,IACjE6kC,QAAU/iC,KAAK04B,IAAImK,aAAcC,eAEjCE,QAAUhpC,KAAKwoC,KAAKjjC,KACxBvF,KAAKwoC,KAAKjjC,KAAO,SAAWvF,KAAKimC,SAASP,WAC1C,IAAIzhC,MAAQ+B,KAAKqkB,KAAKrqB,KAAKwoC,KAAKS,YAAY,KAAKhlC,OACjDjE,KAAKwoC,KAAKjjC,KAAOyjC,QACjB,IAAIE,MAAQjlC,MAAQ,IAGhBqhC,SAAW,GAFfyD,QAAU/iC,KAAKyhB,MAAMshB,SAAW,IAEF/oC,KAAKimC,SAASV,SAAW,EAAI2D,MAAQljC,KAAKo+B,KAAK,KAE7E,OAAOp+B,KAAKqkB,KAAKib,UAAY,I,iDAEN5gC,EAAGC,GAC1B,IAAIwkC,SACAnpC,KAAKimC,SAASb,WACd1gC,GAAKC,EAELD,GADAC,EAAID,EAAIC,EAERwkC,SAAWnpC,KAAKwoC,KAAKhkC,OAAOP,OAG5BklC,SAAWnpC,KAAKwoC,KAAKhkC,OAAON,OAEhC,IAAIuG,KAAO0+B,SAAWnpC,KAAKimC,SAAS/hC,OASpC,OARAS,EAAIqB,KAAKyhB,MAAM9iB,EAAI8F,OACf2+B,6CAAIzkC,EAAG,IACPD,GAAK1E,KAAKmoC,UACVzjC,EAAI,EAAI,EAAIsB,KAAKyhB,MAAM/iB,GAAK,EAAI1E,KAAKmoC,aAGrCzjC,EAAI,EAAIsB,KAAKyhB,MAAM/iB,GAAK,EAAI1E,KAAKmoC,YAE9B,CAACzjC,EAAGC,K,4BAKT0iC,GAAIC,IACN,IAAI16B,EAAI5M,KAAKqoC,SACTz/B,EAAI5I,KAAKimC,SAAST,OAChBn/B,IAAMrG,KAAKwoC,KACjBniC,IAAIgjC,YACArpC,KAAKimC,SAASb,WACd/+B,IAAIijC,OAAOjC,GAAKz6B,EAAIhE,EAAG0+B,IACvBjhC,IAAIkjC,OAAOlC,GAAKz6B,EAAI,EAAIhE,EAAG0+B,GAAKtnC,KAAKmoC,UAAYv/B,GACjDvC,IAAIkjC,OAAOlC,GAAKz6B,EAAI,EAAIhE,EAAG0+B,GAAKtnC,KAAKmoC,UAAYv/B,GACjDvC,IAAIkjC,OAAOlC,GAAKz6B,EAAIhE,EAAG0+B,IACvBjhC,IAAIkjC,OAAOlC,GAAKz6B,EAAI,EAAIhE,EAAG0+B,GAAKtnC,KAAKmoC,UAAYv/B,GACjDvC,IAAIkjC,OAAOlC,GAAKz6B,EAAI,EAAIhE,EAAG0+B,GAAKtnC,KAAKmoC,UAAYv/B,GACjDvC,IAAIkjC,OAAOlC,GAAKz6B,EAAIhE,EAAG0+B,MAGvBjhC,IAAIijC,OAAOjC,GAAIC,GAAK16B,EAAIhE,GACxBvC,IAAIkjC,OAAOlC,GAAKrnC,KAAKmoC,UAAYv/B,EAAG0+B,GAAK16B,EAAI,EAAIhE,GACjDvC,IAAIkjC,OAAOlC,GAAKrnC,KAAKmoC,UAAYv/B,EAAG0+B,GAAK16B,EAAI,EAAIhE,GACjDvC,IAAIkjC,OAAOlC,GAAIC,GAAK16B,EAAIhE,GACxBvC,IAAIkjC,OAAOlC,GAAKrnC,KAAKmoC,UAAYv/B,EAAG0+B,GAAK16B,EAAI,EAAIhE,GACjDvC,IAAIkjC,OAAOlC,GAAKrnC,KAAKmoC,UAAYv/B,EAAG0+B,GAAK16B,EAAI,EAAIhE,GACjDvC,IAAIkjC,OAAOlC,GAAIC,GAAK16B,EAAIhE,IAE5BvC,IAAImjC,S,oCAGJ,IAKIC,MACAC,MANEC,KAAO3pC,KAAKimC,SACZ2D,UAAY5jC,KAAKqkB,KAAKrqB,KAAKwoC,KAAKS,YAAY,KAAKhlC,OACvDjE,KAAKqoC,SAAWriC,KAAKyhB,MAAMkiB,KAAKpE,SAAWoE,KAAKrE,SAAWsE,UAAY5jC,KAAKo+B,KAAK,IAAM,GACvFpkC,KAAKmoC,UAAYnoC,KAAKqoC,SAAWriC,KAAKo+B,KAAK,GAAK,EAChDpkC,KAAKooC,UAA4B,IAAhBpoC,KAAKqoC,SAGlBsB,KAAKvE,WACLqE,MAAQ,SACRC,MAAQ,UAGRD,MAAQ,QACRC,MAAQ,UAEZ1pC,KAAKwoC,KAAKhkC,OAAOilC,OAASzjC,KAAKqkB,MAAMsf,KAAK1lC,MAAQ,GAAKjE,KAAKmoC,WAC5DnoC,KAAKwoC,KAAKhkC,OAAOklC,OAAS1jC,KAAKqkB,MAAMsf,KAAKzlC,OAAS,GAAKlE,KAAKooC,UAAY,EAAIpoC,KAAKqoC,e,iHA/HzDwB,kD,wvECLZA,O,obACjB,kBAAc,iB,8HAAA,eACV,yBACKrB,KAAO7oC,SAASyG,cAAc,UAAUE,WAAW,MAF9C,M,sEAILgS,IAAM/U,sBAAsB+U,M,qCACpB,OAAOtY,KAAKwoC,KAAKhkC,S,iCACvBmlC,MACP,oEAAiBA,MACjB,IAAMhjC,MAASgjC,KAAKhE,UAAL,UAAoBgE,KAAKhE,UAAzB,QACTpgC,KAAO,GAAH,OAAMoB,MAAN,YAAegjC,KAAKrE,SAApB,cAAkCqE,KAAKjE,YACjD1lC,KAAKwoC,KAAKjjC,KAAOA,KACjBvF,KAAK8pC,cACL9pC,KAAKwoC,KAAKjjC,KAAOA,KACjBvF,KAAKwoC,KAAKuB,UAAY,SACtB/pC,KAAKwoC,KAAKhiC,aAAe,W,8BAGzBxG,KAAKwoC,KAAKxhC,UAAYhH,KAAKimC,SAASlhC,GACpC/E,KAAKwoC,KAAKrhC,SAAS,EAAG,EAAGnH,KAAKwoC,KAAKhkC,OAAOP,MAAOjE,KAAKwoC,KAAKhkC,OAAON,U,sCAEtDQ,EAAGC,GACf,IAAIH,OAASxE,KAAKwoC,KAAKhkC,OACnBwlC,KAAOxlC,OAAOylC,wBAKlB,OAJAvlC,GAAKslC,KAAK/N,KACVt3B,GAAKqlC,KAAK9N,IACVx3B,GAAKF,OAAOP,MAAQ+lC,KAAK/lC,MACzBU,GAAKH,OAAON,OAAS8lC,KAAK9lC,OACtBQ,EAAI,GAAKC,EAAI,GAAKD,GAAKF,OAAOP,OAASU,GAAKH,OAAON,OAC5C,EAAE,GAAI,GAEVlE,KAAKkqC,2BAA2BxlC,EAAGC,Q,6IA/BdwlC,U,wcCGfA,Q,gSACA,OAAO,O,iCACbn6B,SAAWhQ,KAAKimC,SAAWj2B,a,4LCAnC,SAASo5B,IAAI1kC,EAAG0lC,GACnB,OAAQ1lC,EAAI0lC,EAAIA,GAAKA,EAElB,SAASC,MAAM32B,KAAuB,IAAlBgrB,IAAkB,uDAAZ,EAAG5W,IAAS,uDAAH,EACtC,OAAIpU,IAAMgrB,IACCA,IACPhrB,IAAMoU,IACCA,IACJpU,IAEJ,SAAS42B,WAAWn6B,QACvB,OAAOA,OAAO3K,OAAO,GAAG+kC,cAAgBp6B,OAAOq6B,UAAU,GAOtD,SAASC,OAAOC,UAAmB,8BAANC,KAAM,mDAANA,KAAM,wBACtC,IAAI7qC,IAAM2qC,OAAO3qC,IACb8qC,SAAW,SAAUv/B,MAAOw/B,OAAQC,OAAQj0B,OAC5C,GAAkC,KAA9B6zB,SAASllC,OAAOqR,MAAQ,GACxB,OAAOxL,MAAMm/B,UAAU,GAE3B,IAAKG,KAAKtlC,OACN,OAAOgG,MAEX,IAAI0/B,IAAMJ,KAAK,GAEXtgC,OADQwgC,QAAUC,QACJ9/B,MAAM,KACpBjH,KAAOsG,MAAMwD,SAAW,GACxBm9B,OAASlrC,IAAIiE,KAAKyH,eACtB,IAAKw/B,OACD,OAAO3/B,MAGX,IAAI4/B,UADJF,IAAMJ,KAAK98B,SACQm9B,QAAQE,MAAMH,IAAK1gC,OAClC8gC,MAAQpnC,KAAKyB,OAAO,GAIxB,OAHI2lC,OAASA,MAAM3/B,gBACfy/B,SAAWX,WAAWW,WAEnBA,UAEX,OAAOP,SAAS5/B,QAAQ,gCAAiC8/B,U,gKAE7DH,OAAO3qC,IAAM,CACT,EAAK,a,k7GCwDT,iCAvG0B,WAAM,IACtB+kC,KADsB,mB,2UAAA,mB,mCAAA,0BAExB,gBAAc,iB,8HAAA,aACV,yBACKsD,UAAY,EACjB,MAAKC,UAAY,EACjB,MAAKgD,aAAe,GAJV,MAFU,O,YAAA,M,WAAA,kCAQbp7B,SACP,kEAAiBA,SACjBhQ,KAAKorC,aAAe,KAVA,2BAYnB1hC,KAAMw+B,aACHrD,KAAKh7B,MACL7J,KAAKqrC,eAAe3hC,MAGpB1J,KAAKsrC,aAAa5hC,KAAMw+B,eAjBR,qCAoBTx+B,MAAM,IAGblF,OAHa,qBACQkF,KADR,GACZhF,EADY,SACTC,EADS,SACNiX,GADM,SACFgqB,GADE,SACE7gC,GADF,SAEbwmC,KAAO,GAAK3vB,GAAKgqB,GAAK7gC,GAE1B,GAAIwmC,QAAQvrC,KAAKorC,aACb5mC,OAASxE,KAAKorC,aAAaG,UAE1B,CACD,IAAI3iC,EAAI5I,KAAKimC,SAAST,OAElBn/B,KADJ7B,OAAS7E,SAASyG,cAAc,WACfE,WAAW,MAK5B,GAJA9B,OAAOP,MAAQjE,KAAKmoC,UACpB3jC,OAAON,OAASlE,KAAKooC,UACrB/hC,IAAIW,UAAYjC,GAChBsB,IAAIc,SAASyB,EAAGA,EAAGpE,OAAOP,MAAQ2E,EAAGpE,OAAON,OAAS0E,GACjDgT,GAAI,CACJvV,IAAIW,UAAY4+B,GAChBv/B,IAAId,KAAOvF,KAAKwoC,KAAKjjC,KACrBc,IAAI0jC,UAAY,SAChB1jC,IAAIG,aAAe,SAEnB,IADA,IAAIkiC,MAAQ,GAAGC,OAAO/sB,IACbtW,EAAI,EAAGA,EAAIojC,MAAMrjC,OAAQC,IAC9Be,IAAIuiC,SAASF,MAAMpjC,GAAItF,KAAKmoC,UAAY,EAAGniC,KAAKqkB,KAAKrqB,KAAKooC,UAAY,IAG9EpoC,KAAKorC,aAAaG,MAAQ/mC,OAE9BxE,KAAKwoC,KAAKphC,UAAU5C,OAAQE,EAAI1E,KAAKmoC,UAAWxjC,EAAI3E,KAAKooC,aA/CrC,mCAiDX1+B,KAAMw+B,aAAa,0BACHx+B,KADG,GACvBhF,EADuB,UACpBC,EADoB,UACjBiX,GADiB,UACbgqB,GADa,UACT7gC,GADS,UAE5B,GAAImjC,YAAa,CACb,IAAIt/B,EAAI5I,KAAKimC,SAAST,OACtBxlC,KAAKwoC,KAAKxhC,UAAYjC,GACtB/E,KAAKwoC,KAAKrhC,SAASzC,EAAI1E,KAAKmoC,UAAYv/B,EAAGjE,EAAI3E,KAAKooC,UAAYx/B,EAAG5I,KAAKmoC,UAAYv/B,EAAG5I,KAAKooC,UAAYx/B,GAE5G,GAAKgT,GAAL,CAGA5b,KAAKwoC,KAAKxhC,UAAY4+B,GAEtB,IADA,IAAI8C,MAAQ,GAAGC,OAAO/sB,IACbtW,EAAI,EAAGA,EAAIojC,MAAMrjC,OAAQC,IAC9BtF,KAAKwoC,KAAKI,SAASF,MAAMpjC,IAAKZ,EAAI,IAAO1E,KAAKmoC,UAAWniC,KAAKqkB,MAAM1lB,EAAI,IAAO3E,KAAKooC,eA9DpE,kCAiEZxB,WAAYC,aAGpB,MAAO,CAFK7gC,KAAKyhB,MAAMmf,WAAa5mC,KAAKmoC,WAC5BniC,KAAKyhB,MAAMof,YAAc7mC,KAAKooC,cAnEvB,sCAsERxB,WAAYC,aACxB,IAAI2E,SAAWxlC,KAAKyhB,MAAMmf,WAAa5mC,KAAKimC,SAAShiC,OACjDwnC,UAAYzlC,KAAKyhB,MAAMof,YAAc7mC,KAAKimC,SAAS/hC,QAEnD8kC,QAAUhpC,KAAKwoC,KAAKjjC,KACxBvF,KAAKwoC,KAAKjjC,KAAO,SAAWvF,KAAKimC,SAASP,WAC1C,IAAIzhC,MAAQ+B,KAAKqkB,KAAKrqB,KAAKwoC,KAAKS,YAAY,KAAKhlC,OACjDjE,KAAKwoC,KAAKjjC,KAAOyjC,QACjB,IACI0C,cADQznC,MAAQ,IACQwnC,UAAYD,SAIxC,OAHIE,cAAgB,IAChBD,UAAYzlC,KAAKyhB,MAAMgkB,UAAYC,gBAEhC1lC,KAAKyhB,MAAMgkB,UAAYzrC,KAAKimC,SAASV,WAnFxB,iDAqFG7gC,EAAGC,GAC1B,MAAO,CAACqB,KAAKyhB,MAAM/iB,EAAI1E,KAAKmoC,WAAYniC,KAAKyhB,MAAM9iB,EAAI3E,KAAKooC,cAtFxC,oCAyFpB,IAAMuB,KAAO3pC,KAAKimC,SACZ2D,UAAY5jC,KAAKqkB,KAAKrqB,KAAKwoC,KAAKS,YAAY,KAAKhlC,OACvDjE,KAAKmoC,UAAYniC,KAAKqkB,KAAKsf,KAAKpE,QAAUqE,WAC1C5pC,KAAKooC,UAAYpiC,KAAKqkB,KAAKsf,KAAKpE,QAAUoE,KAAKrE,UAC3CqE,KAAKlE,mBACLzlC,KAAKmoC,UAAYnoC,KAAKooC,UAAYpiC,KAAK8hB,IAAI9nB,KAAKmoC,UAAWnoC,KAAKooC,YAEpEpoC,KAAKwoC,KAAKhkC,OAAOP,MAAQ0lC,KAAK1lC,MAAQjE,KAAKmoC,UAC3CnoC,KAAKwoC,KAAKhkC,OAAON,OAASylC,KAAKzlC,OAASlE,KAAKooC,e,4GAjGzB,MACTyB,iDAoGnB,OADAhF,KAAKh7B,OAAQ,EACNg7B,KArGe,I,44FCALC,K,8aACjB,gBAAc,iB,8HAAA,aACV,yBACK6G,aAAehsC,SAASyG,cAAc,UAFjC,M,gEAITsD,KAAMw+B,aAAa,yBACKx+B,KADL,GACfhF,EADe,SACZC,EADY,SACTiX,GADS,SACLgqB,GADK,SACD7gC,GADC,SAEhBZ,UAAYnE,KAAKimC,SAAS9hC,UAC1BC,WAAapE,KAAKimC,SAAS7hC,WAU/B,GATI8jC,cACIloC,KAAKimC,SAASF,aACd/lC,KAAKwoC,KAAKhhC,UAAU9C,EAAIP,UAAWQ,EAAIP,WAAYD,UAAWC,aAG9DpE,KAAKwoC,KAAKxhC,UAAYjC,GACtB/E,KAAKwoC,KAAKrhC,SAASzC,EAAIP,UAAWQ,EAAIP,WAAYD,UAAWC,cAGhEwX,GAML,IAHA,IAAI8sB,MAAQ,GAAGC,OAAO/sB,IAClBgwB,IAAM,GAAGjD,OAAO/C,IAChBld,IAAM,GAAGigB,OAAO5jC,IACXO,EAAI,EAAGA,EAAIojC,MAAMrjC,OAAQC,IAAK,CACnC,IAAIumC,KAAO7rC,KAAKimC,SAASJ,QAAQ6C,MAAMpjC,IACvC,IAAKumC,KACD,MAAM,IAAIn3B,MAAJ,gBAAmBg0B,MAAMpjC,GAAzB,2BAEV,GAAItF,KAAKimC,SAASF,aAAc,CAC5B,IAAIvhC,OAASxE,KAAK2rC,aACdG,QAAUtnC,OAAO8B,WAAW,MAChCwlC,QAAQC,yBAA2B,cACnCD,QAAQtkC,UAAU,EAAG,EAAGrD,UAAWC,YACnC,IAAIwhC,IAAKgG,IAAItmC,GACTP,IAAK2jB,IAAIpjB,GACbwmC,QAAQ1kC,UAAUpH,KAAKimC,SAASH,QAAS+F,KAAK,GAAIA,KAAK,GAAI1nC,UAAWC,WAAY,EAAG,EAAGD,UAAWC,YACzF,eAANwhC,MACAkG,QAAQ9kC,UAAY4+B,IACpBkG,QAAQC,yBAA2B,cACnCD,QAAQ3kC,SAAS,EAAG,EAAGhD,UAAWC,aAE5B,eAANW,MACA+mC,QAAQ9kC,UAAYjC,IACpB+mC,QAAQC,yBAA2B,mBACnCD,QAAQ3kC,SAAS,EAAG,EAAGhD,UAAWC,aAEtCpE,KAAKwoC,KAAKphC,UAAU5C,OAAQE,EAAIP,UAAWQ,EAAIP,WAAYD,UAAWC,iBAGtEpE,KAAKwoC,KAAKphC,UAAUpH,KAAKimC,SAASH,QAAS+F,KAAK,GAAIA,KAAK,GAAI1nC,UAAWC,WAAYM,EAAIP,UAAWQ,EAAIP,WAAYD,UAAWC,e,kCAI9HwiC,WAAYC,aAGpB,MAAO,CAFK7gC,KAAKyhB,MAAMmf,WAAa5mC,KAAKimC,SAAS9hC,WACrC6B,KAAKyhB,MAAMof,YAAc7mC,KAAKimC,SAAS7hC,e,wCAIpD,MAAM,IAAIsQ,MAAM,gD,iDAEOhQ,EAAGC,GAC1B,MAAO,CAACqB,KAAKyhB,MAAM/iB,EAAI1E,KAAKimC,SAAS9hC,WAAY6B,KAAKyhB,MAAM9iB,EAAI3E,KAAKimC,SAAS7hC,e,oCAG9E,IAAMulC,KAAO3pC,KAAKimC,SAClBjmC,KAAKwoC,KAAKhkC,OAAOP,MAAQ0lC,KAAK1lC,MAAQ0lC,KAAKxlC,UAC3CnE,KAAKwoC,KAAKhkC,OAAON,OAASylC,KAAKzlC,OAASylC,KAAKvlC,WAC7CpE,KAAK2rC,aAAa1nC,MAAQ0lC,KAAKxlC,UAC/BnE,KAAK2rC,aAAaznC,OAASylC,KAAKvlC,gB,2IAtENylC,U,u7HCCb9E,O,obACjB,kBAAc,W,8HAAA,eACV,yBACKiH,UAAY,GACjB,IACI,MAAKC,IAAM,MAAKC,aAEpB,MAAOz+B,GACH0+B,MAAM1+B,EAAE4U,SAPF,a,2EAWV,QAAS1iB,SAASyG,cAAc,UAAUE,WAAW,SAAU,CAAE8lC,uBAAuB,Q,2CAEnF9zB,IAAM/U,sBAAsB+U,M,qCACpB,OAAOtY,KAAKisC,IAAIznC,S,iCACtBmlC,MAAM,gBACb,oEAAiBA,MACjB3pC,KAAK8pC,cACL,IAAIhE,QAAU9lC,KAAKimC,SAASH,QACxBA,SAAW,aAAcA,UAAYA,QAAQzmC,SAC7CymC,QAAQxmC,iBAAiB,QAAQ,kBAAM,OAAK+sC,eAAevG,YAG3D9lC,KAAKqsC,eAAevG,W,2BAGvBp8B,KAAMw+B,aACP,IAAMoE,GAAKtsC,KAAKisC,IACVtC,KAAO3pC,KAAKimC,SAFE,qBAGKv8B,KAHL,GAGfhF,EAHe,SAGZC,EAHY,SAGTiX,GAHS,SAGLgqB,GAHK,SAGD7gC,GAHC,SAIhBwnC,SAAWD,GAAG9nC,OAAON,QAAUS,EAAI,GAAKglC,KAAKvlC,WAWjD,GAVAkoC,GAAGE,QAAQ9nC,EAAIilC,KAAKxlC,UAAWooC,SAAU5C,KAAKxlC,UAAWwlC,KAAKvlC,YAC1D8jC,cACIyB,KAAK5D,aACLuG,GAAGrlC,WAAW,EAAG,EAAG,EAAG,GAGvBqlC,GAAGrlC,WAAH,MAAAqlC,GAAE,mBAAenjC,WAAWpE,MAEhCunC,GAAG1mC,MAAM0mC,GAAGG,mBAEX7wB,GAAL,CAGA,IAAI8sB,MAAQ,GAAGC,OAAO/sB,IAClB8M,IAAM,GAAGigB,OAAO5jC,IAChB6mC,IAAM,GAAGjD,OAAO/C,IACpB0G,GAAGI,WAAW1sC,KAAKgsC,UAAL,aAAgC,CAACtnC,EAAGC,IAClD,IAAK,IAAIW,EAAI,EAAGA,EAAIojC,MAAMrjC,OAAQC,IAAK,CACnC,IAAIumC,KAAO7rC,KAAKimC,SAASJ,QAAQ6C,MAAMpjC,IACvC,IAAKumC,KACD,MAAM,IAAIn3B,MAAJ,gBAAmBg0B,MAAMpjC,GAAzB,2BAEVgnC,GAAGK,UAAU3sC,KAAKgsC,UAAL,SAA4BrC,KAAK5D,aAAe,EAAI,GACjEuG,GAAGI,WAAW1sC,KAAKgsC,UAAL,cAAiCH,MAC3ClC,KAAK5D,eACLuG,GAAGM,WAAW5sC,KAAKgsC,UAAL,KAAwB7iC,WAAWyiC,IAAItmC,KACrDgnC,GAAGM,WAAW5sC,KAAKgsC,UAAL,GAAsB7iC,WAAWuf,IAAIpjB,MAEvDgnC,GAAGO,WAAWP,GAAGQ,eAAgB,EAAG,O,8BA+CxC,IAAMR,GAAKtsC,KAAKisC,IAChBK,GAAGrlC,WAAH,MAAAqlC,GAAE,mBAAenjC,WAAWnJ,KAAKimC,SAASlhC,MAC1CunC,GAAGE,QAAQ,EAAG,EAAGF,GAAG9nC,OAAOP,MAAOqoC,GAAG9nC,OAAON,QAC5CooC,GAAG1mC,MAAM0mC,GAAGG,oB,kCAEJ7F,WAAYC,aAGpB,MAAO,CAFK7gC,KAAKyhB,MAAMmf,WAAa5mC,KAAKimC,SAAS9hC,WACrC6B,KAAKyhB,MAAMof,YAAc7mC,KAAKimC,SAAS7hC,e,wCAIpD,MAAM,IAAIsQ,MAAM,gD,sCAEJhQ,EAAGC,GACf,IAAIH,OAASxE,KAAKisC,IAAIznC,OAClBwlC,KAAOxlC,OAAOylC,wBAKlB,OAJAvlC,GAAKslC,KAAK/N,KACVt3B,GAAKqlC,KAAK9N,IACVx3B,GAAKF,OAAOP,MAAQ+lC,KAAK/lC,MACzBU,GAAKH,OAAON,OAAS8lC,KAAK9lC,OACtBQ,EAAI,GAAKC,EAAI,GAAKD,GAAKF,OAAOP,OAASU,GAAKH,OAAON,OAC5C,EAAE,GAAI,GAEVlE,KAAKkqC,2BAA2BxlC,EAAGC,K,mCAEjC,gBACL2nC,GAAK3sC,SAASyG,cAAc,UAAUE,WAAW,SAAU,CAAE8lC,uBAAuB,IACxFvtC,OAAOytC,GAAKA,GACZ,IAAIS,QAuEZ,SAAuBT,GAAIU,IAAKC,KAC5B,IAAMC,GAAKZ,GAAGa,aAAab,GAAGc,eAG9B,GAFAd,GAAGe,aAAaH,GAAIF,KACpBV,GAAGgB,cAAcJ,KACZZ,GAAGiB,mBAAmBL,GAAIZ,GAAGkB,gBAC9B,MAAM,IAAI94B,MAAM43B,GAAGmB,iBAAiBP,KAAO,IAE/C,IAAMQ,GAAKpB,GAAGa,aAAab,GAAGqB,iBAG9B,GAFArB,GAAGe,aAAaK,GAAIT,KACpBX,GAAGgB,cAAcI,KACZpB,GAAGiB,mBAAmBG,GAAIpB,GAAGkB,gBAC9B,MAAM,IAAI94B,MAAM43B,GAAGmB,iBAAiBC,KAAO,IAE/C,IAAME,EAAItB,GAAGuB,gBAIb,GAHAvB,GAAGwB,aAAaF,EAAGV,IACnBZ,GAAGwB,aAAaF,EAAGF,IACnBpB,GAAGyB,YAAYH,IACVtB,GAAG0B,oBAAoBJ,EAAGtB,GAAG2B,aAC9B,MAAM,IAAIv5B,MAAM43B,GAAG4B,kBAAkBN,IAAM,IAE/C,OAAOA,EA3FWC,CAAcvB,GAAI6B,GAAIC,IAQpC,OAPA9B,GAAG+B,WAAWtB,SA4FtB,SAAoBT,IAChB,IAAMpyB,IAAM,IAAIo0B,aAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC7CC,IAAMjC,GAAGkC,eACflC,GAAGmC,WAAWnC,GAAGoC,aAAcH,KAC/BjC,GAAGqC,WAAWrC,GAAGoC,aAAcx0B,IAAKoyB,GAAGsC,aACvCtC,GAAGuC,wBAAwB,GAC3BvC,GAAGwC,oBAAoB,EAAG,EAAGxC,GAAGyC,OAAO,EAAO,EAAG,GAjG7CC,CAAW1C,IACX2C,SAASprC,SAAQ,SAAAE,MAAI,OAAI,OAAKioC,UAAUjoC,MAAQuoC,GAAG4C,mBAAmBnC,QAAShpC,SAC/E/D,KAAKmvC,SAAWpC,QAChBT,GAAGhQ,OAAOgQ,GAAG8C,OACb9C,GAAG+C,kBAAkB/C,GAAGgD,UAAWhD,GAAGiD,oBAAqBjD,GAAGkD,IAAKlD,GAAGiD,qBACtEjD,GAAGhQ,OAAOgQ,GAAGmD,cACNnD,K,iDAEgB5nC,EAAGC,GAC1B,MAAO,CAACqB,KAAKyhB,MAAM/iB,EAAI1E,KAAKimC,SAAS9hC,WAAY6B,KAAKyhB,MAAM9iB,EAAI3E,KAAKimC,SAAS7hC,e,oCAG9E,IAAMkoC,GAAKtsC,KAAKisC,IACVtC,KAAO3pC,KAAKimC,SACZyJ,WAAa,CAAC/F,KAAK1lC,MAAQ0lC,KAAKxlC,UAAWwlC,KAAKzlC,OAASylC,KAAKvlC,YACpEkoC,GAAG9nC,OAAOP,MAAQyrC,WAAW,GAC7BpD,GAAG9nC,OAAON,OAASwrC,WAAW,GAC9BpD,GAAGqD,SAAS,EAAG,EAAGD,WAAW,GAAIA,WAAW,IAC5CpD,GAAGI,WAAW1sC,KAAKgsC,UAAL,SAA4B,CAACrC,KAAKxlC,UAAWwlC,KAAKvlC,aAChEkoC,GAAGI,WAAW1sC,KAAKgsC,UAAL,WAA8B0D,c,qCAEjC5J,SA8EnB,IAAuBwG,GAAI5iC,KACnB/F,EADe2oC,GA7EDtsC,KAAKisC,IA6EAviC,KA7EKo8B,QA8ExBniC,EAAI2oC,GAAGsD,gBACXtD,GAAGuD,YAAYvD,GAAGwD,WAAYnsC,GAC9B2oC,GAAGyD,cAAczD,GAAGwD,WAAYxD,GAAG0D,mBAAoB1D,GAAG2D,SAC1D3D,GAAGyD,cAAczD,GAAGwD,WAAYxD,GAAG4D,mBAAoB5D,GAAG2D,SAC1D3D,GAAGyD,cAAczD,GAAGwD,WAAYxD,GAAG6D,eAAgB7D,GAAG8D,QACtD9D,GAAGyD,cAAczD,GAAGwD,WAAYxD,GAAG+D,eAAgB/D,GAAG8D,QACtD9D,GAAGgE,YAAYhE,GAAGiE,oBAAqB,GACvCjE,GAAGkE,WAAWlE,GAAGwD,WAAY,EAAGxD,GAAGmE,KAAMnE,GAAGmE,KAAMnE,GAAGoE,cAAehnC,W,oHApPpCygC,kDAkK9B8E,SAAW,CAAC,eAAgB,gBAAiB,WAAY,aAAc,WAAY,KAAM,QACzFd,GAAK,ocAkBRpjC,OACGqjC,GAAK,ihBAuBRrjC,OA0CH,IAAI4lC,WAAa,GACjB,SAASxnC,WAAW5B,OAChB,KAAMA,SAASopC,YAAa,CACxB,IAAI5mC,OACJ,GAAa,eAATxC,MACAwC,OAAS,CAAC,EAAG,EAAG,EAAG,QAElB,GAAIxC,MAAMoW,QAAQ,SAAW,EAAG,CACjC5T,QAAUxC,MAAM8D,MAAM,YAAc,IAAIvL,IAAI8wC,QAC5C,IAAK,IAAItrC,EAAI,EAAGA,EAAI,EAAGA,IACnByE,OAAOzE,GAAKyE,OAAOzE,GAAK,SAI5ByE,OAASq5B,kDAAiB77B,OAAOzH,KAAI,SAAA+wC,GAAC,OAAIA,EAAI,QACvCzlC,KAAK,GAEhBulC,WAAWppC,OAASwC,OAExB,OAAO4mC,WAAWppC,S,+jBC9Qf,SAASupC,WAAW1mB,KACvB,IAAI2mB,OAAQroC,EACZ,GAAI0hB,OAAO4mB,MACPD,OAASC,MAAM5mB,SAEd,CACD,GAAqB,KAAjBA,IAAI5kB,OAAO,GAAW,CACtB,IACIyE,QADUmgB,IAAI/e,MAAM,eAAiB,IACpBvL,KAAI,SAAC4E,GAAD,OAAOiG,SAASjG,EAAG,OAC5C,GAAqB,GAAjBuF,OAAO5E,OACP0rC,OAAS9mC,OAAOnK,KAAI,SAAC4E,GAAD,OAAW,GAAJA,SAE1B,CACD,IAAK,IAAIY,EAAI,EAAGA,EAAI,EAAGA,IACnB2E,OAAO3E,EAAI,IAAM,GAAK2E,OAAO3E,GAC7B2E,OAAO4T,OAAOvY,EAAG,GAErByrC,OAAS9mC,aAIb8mC,QADMroC,EAAI0hB,IAAI/e,MAAM,uBACX3C,EAAE,GAAGsC,MAAM,WAAWlL,KAAI,SAAC4E,GAAD,OAAOiG,SAASjG,MAG1C,CAAC,EAAG,EAAG,GAEpBssC,MAAM5mB,KAAO2mB,OAEjB,OAAOA,OAAOxmC,QAKX,SAAS9C,IAAIwpC,QAAmB,IACnC,IAAIh0B,OAASg0B,OAAO1mC,QADe,sBAARk8B,OAAQ,mDAARA,OAAQ,wBAEnC,IAAK,IAAInhC,EAAI,EAAGA,EAAI,EAAGA,IACnB,IAAK,IAAIiD,EAAI,EAAGA,EAAIk+B,OAAOphC,OAAQkD,IAC/B0U,OAAO3X,IAAMmhC,OAAOl+B,GAAGjD,GAG/B,OAAO2X,OAKJ,SAASi0B,KAAKD,QAAmB,+BAARxK,OAAQ,yDAARA,OAAQ,0BACpC,IAAK,IAAInhC,EAAI,EAAGA,EAAI,EAAGA,IACnB,IAAK,IAAIiD,EAAI,EAAGA,EAAIk+B,OAAOphC,OAAQkD,IAC/B0oC,OAAO3rC,IAAMmhC,OAAOl+B,GAAGjD,GAG/B,OAAO2rC,OAKJ,SAASE,SAASF,QAAmB,IACxC,IAAIh0B,OAASg0B,OAAO1mC,QADoB,uBAARk8B,OAAQ,yDAARA,OAAQ,0BAExC,IAAK,IAAInhC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,IAAK,IAAIiD,EAAI,EAAGA,EAAIk+B,OAAOphC,OAAQkD,IAC/B0U,OAAO3X,IAAMmhC,OAAOl+B,GAAGjD,GAAK,IAEhC2X,OAAO3X,GAAKU,KAAKorC,MAAMn0B,OAAO3X,IAElC,OAAO2X,OAKJ,SAASo0B,UAAUJ,QAAmB,+BAARxK,OAAQ,yDAARA,OAAQ,0BACzC,IAAK,IAAInhC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,IAAK,IAAIiD,EAAI,EAAGA,EAAIk+B,OAAOphC,OAAQkD,IAC/B0oC,OAAO3rC,IAAMmhC,OAAOl+B,GAAGjD,GAAK,IAEhC2rC,OAAO3rC,GAAKU,KAAKorC,MAAMH,OAAO3rC,IAElC,OAAO2rC,OAKJ,SAASK,YAAYL,OAAQM,QAEhC,IAFsD,IAAdC,OAAc,uDAAL,GAC7Cv0B,OAASg0B,OAAO1mC,QACXjF,EAAI,EAAGA,EAAI,EAAGA,IACnB2X,OAAO3X,GAAKU,KAAKorC,MAAMn0B,OAAO3X,GAAKksC,QAAUD,OAAOjsC,GAAK2rC,OAAO3rC,KAEpE,OAAO2X,OAEJ,IAAMw0B,KAAOH,YAIb,SAASI,eAAeT,OAAQM,QAGnC,IAHyD,IAAdC,OAAc,uDAAL,GAChDG,KAAOC,QAAQX,QACfY,KAAOD,QAAQL,QACVjsC,EAAI,EAAGA,EAAI,EAAGA,IACnBqsC,KAAKrsC,IAAMksC,QAAUK,KAAKvsC,GAAKqsC,KAAKrsC,IAExC,OAAOwsC,QAAQH,MAEZ,IAAMI,QAAUL,eAMhB,SAASM,UAAUzqC,MAAO0qC,MACvBA,gBAAgBxyC,QAClBwyC,KAAOjsC,KAAKorC,MAAM7M,uDAAc,EAAG0N,QAGvC,IADA,IAAIh1B,OAAS1V,MAAMgD,QACVjF,EAAI,EAAGA,EAAI,EAAGA,IACnB2X,OAAO3X,IAAO2sC,gBAAgBxyC,MAAQuG,KAAKorC,MAAM7M,uDAAc,EAAG0N,KAAK3sC,KAAO2sC,KAElF,OAAOh1B,OAKJ,SAAS20B,QAAQrqC,OACpB,IAIW8E,EAJP3D,EAAInB,MAAM,GAAK,IACfoB,EAAIpB,MAAM,GAAK,IACfqB,EAAIrB,MAAM,GAAK,IACfugB,IAAM9hB,KAAK8hB,IAAIpf,EAAGC,EAAGC,GAAI81B,IAAM14B,KAAK04B,IAAIh2B,EAAGC,EAAGC,GAC9CsD,EAAI,EAAMM,GAAKsb,IAAM4W,KAAO,EAChC,GAAI5W,KAAO4W,IACPryB,EAAI,MAEH,CACD,IAAIqL,EAAIoQ,IAAM4W,IAEd,OADAryB,EAAKG,EAAI,GAAMkL,GAAK,EAAIoQ,IAAM4W,KAAOhnB,GAAKoQ,IAAM4W,KACxC5W,KACJ,KAAKpf,EACDwD,GAAKvD,EAAIC,GAAK8O,GAAK/O,EAAIC,EAAI,EAAI,GAC/B,MACJ,KAAKD,EACDuD,GAAKtD,EAAIF,GAAKgP,EAAI,EAClB,MACJ,KAAK9O,EACDsD,GAAKxD,EAAIC,GAAK+O,EAAI,EAG1BxL,GAAK,EAET,MAAO,CAACA,EAAGG,EAAGG,GAElB,SAAS0lC,QAAQtE,EAAGuE,EAAGxuC,GAKnB,OAJIA,EAAI,IACJA,GAAK,GACLA,EAAI,IACJA,GAAK,GACLA,EAAI,EAAI,EACDiqC,EAAc,GAATuE,EAAIvE,GAASjqC,EACzBA,EAAI,GACGwuC,EACPxuC,EAAI,EAAI,EACDiqC,GAAKuE,EAAIvE,IAAM,EAAI,EAAIjqC,GAAK,EAChCiqC,EAKJ,SAASkE,QAAQvqC,OACpB,IAAIiF,EAAIjF,MAAM,GACd,GAAgB,GAAZA,MAAM,GAEN,MAAO,CADPiF,EAAIxG,KAAKorC,MAAU,IAAJ5kC,GACJA,EAAGA,GAGd,IAAIH,EAAI9E,MAAM,GACV4qC,EAAK3lC,EAAI,GAAMA,GAAK,EAAIH,GAAKG,EAAIH,EAAIG,EAAIH,EACzCuhC,EAAI,EAAIphC,EAAI2lC,EACZzpC,EAAIwpC,QAAQtE,EAAGuE,EAAG5qC,MAAM,GAAK,EAAI,GACjCoB,EAAIupC,QAAQtE,EAAGuE,EAAG5qC,MAAM,IACxBqB,EAAIspC,QAAQtE,EAAGuE,EAAG5qC,MAAM,GAAK,EAAI,GACrC,MAAO,CAACvB,KAAKorC,MAAU,IAAJ1oC,GAAU1C,KAAKorC,MAAU,IAAJzoC,GAAU3C,KAAKorC,MAAU,IAAJxoC,IAG9D,SAASwpC,MAAM7qC,OAClB,IAAI8qC,QAAU9qC,MAAMzH,KAAI,SAAA4E,GAAC,OAAI2lC,+CAAM3lC,EAAG,EAAG,QACzC,oBAAc2tC,QAAQ9mC,KAAK,KAA3B,KAEG,SAAS+mC,MAAM/qC,OAClB,IAAI8qC,QAAU9qC,MAAMzH,KAAI,SAAA4E,GAAC,OAAI2lC,+CAAM3lC,EAAG,EAAG,KAAK6tC,SAAS,IAAIC,SAAS,EAAG,QACvE,iBAAWH,QAAQ9mC,KAAK,KAE5B,IAAMylC,MAAQ,CACV,MAAS,CAAC,EAAG,EAAG,GAChB,KAAQ,CAAC,EAAG,EAAG,KACf,SAAY,CAAC,EAAG,EAAG,KACnB,WAAc,CAAC,EAAG,EAAG,KACrB,KAAQ,CAAC,EAAG,EAAG,KACf,UAAa,CAAC,EAAG,IAAK,GACtB,MAAS,CAAC,EAAG,IAAK,GAClB,KAAQ,CAAC,EAAG,IAAK,KACjB,SAAY,CAAC,EAAG,IAAK,KACrB,YAAe,CAAC,EAAG,IAAK,KACxB,cAAiB,CAAC,EAAG,IAAK,KAC1B,kBAAqB,CAAC,EAAG,IAAK,KAC9B,KAAQ,CAAC,EAAG,IAAK,GACjB,YAAe,CAAC,EAAG,IAAK,KACxB,KAAQ,CAAC,EAAG,IAAK,KACjB,KAAQ,CAAC,EAAG,IAAK,KACjB,aAAgB,CAAC,GAAI,GAAI,KACzB,WAAc,CAAC,GAAI,IAAK,KACxB,YAAe,CAAC,GAAI,IAAK,IACzB,SAAY,CAAC,GAAI,IAAK,IACtB,cAAiB,CAAC,GAAI,GAAI,IAC1B,cAAiB,CAAC,GAAI,GAAI,IAC1B,UAAa,CAAC,GAAI,IAAK,IACvB,eAAkB,CAAC,GAAI,IAAK,KAC5B,UAAa,CAAC,GAAI,IAAK,KACvB,UAAa,CAAC,GAAI,IAAK,KACvB,UAAa,CAAC,GAAI,IAAK,KACvB,cAAiB,CAAC,GAAI,GAAI,KAC1B,gBAAmB,CAAC,GAAI,IAAK,KAC7B,OAAU,CAAC,GAAI,EAAG,KAClB,eAAkB,CAAC,GAAI,IAAK,IAC5B,UAAa,CAAC,GAAI,IAAK,KACvB,eAAkB,CAAC,IAAK,IAAK,KAC7B,iBAAoB,CAAC,IAAK,IAAK,KAC/B,QAAW,CAAC,IAAK,IAAK,KACtB,QAAW,CAAC,IAAK,IAAK,KACtB,UAAa,CAAC,IAAK,GAAI,KACvB,UAAa,CAAC,IAAK,IAAK,IACxB,UAAa,CAAC,IAAK,IAAK,KACxB,UAAa,CAAC,IAAK,IAAK,KACxB,eAAkB,CAAC,IAAK,IAAK,KAC7B,eAAkB,CAAC,IAAK,IAAK,KAC7B,gBAAmB,CAAC,IAAK,IAAK,KAC9B,UAAa,CAAC,IAAK,IAAK,GACxB,WAAc,CAAC,IAAK,IAAK,GACzB,WAAc,CAAC,IAAK,IAAK,KACzB,OAAU,CAAC,IAAK,EAAG,GACnB,OAAU,CAAC,IAAK,EAAG,KACnB,MAAS,CAAC,IAAK,IAAK,GACpB,KAAQ,CAAC,IAAK,IAAK,KACnB,KAAQ,CAAC,IAAK,IAAK,KACnB,QAAW,CAAC,IAAK,IAAK,KACtB,aAAgB,CAAC,IAAK,IAAK,KAC3B,WAAc,CAAC,IAAK,GAAI,KACxB,QAAW,CAAC,IAAK,EAAG,GACpB,YAAe,CAAC,IAAK,EAAG,KACxB,YAAe,CAAC,IAAK,GAAI,IACzB,aAAgB,CAAC,IAAK,IAAK,KAC3B,WAAc,CAAC,IAAK,IAAK,KACzB,aAAgB,CAAC,IAAK,IAAK,KAC3B,WAAc,CAAC,IAAK,EAAG,KACvB,UAAa,CAAC,IAAK,IAAK,KACxB,WAAc,CAAC,IAAK,GAAI,KACxB,YAAe,CAAC,IAAK,IAAK,IAC1B,OAAU,CAAC,IAAK,GAAI,IACpB,MAAS,CAAC,IAAK,GAAI,IACnB,SAAY,CAAC,IAAK,IAAK,KACvB,SAAY,CAAC,IAAK,IAAK,KACvB,UAAa,CAAC,IAAK,IAAK,KACxB,YAAe,CAAC,IAAK,IAAK,IAC1B,cAAiB,CAAC,IAAK,IAAK,KAC5B,eAAkB,CAAC,IAAK,IAAK,KAC7B,WAAc,CAAC,IAAK,IAAK,KACzB,UAAa,CAAC,IAAK,GAAI,IACvB,cAAiB,CAAC,IAAK,IAAK,IAC5B,aAAgB,CAAC,IAAK,GAAI,KAC1B,UAAa,CAAC,IAAK,IAAK,KACxB,UAAa,CAAC,IAAK,IAAK,KACxB,OAAU,CAAC,IAAK,IAAK,KACrB,gBAAmB,CAAC,IAAK,GAAI,KAC7B,UAAa,CAAC,IAAK,GAAI,IACvB,KAAQ,CAAC,IAAK,IAAK,IACnB,UAAa,CAAC,IAAK,IAAK,IACxB,IAAO,CAAC,IAAK,IAAK,KAClB,UAAa,CAAC,IAAK,IAAK,KACxB,UAAa,CAAC,IAAK,IAAK,KACxB,cAAiB,CAAC,IAAK,IAAK,KAC5B,QAAW,CAAC,IAAK,IAAK,KACtB,OAAU,CAAC,IAAK,IAAK,KACrB,UAAa,CAAC,IAAK,IAAK,IACxB,QAAW,CAAC,IAAK,GAAI,IACrB,UAAa,CAAC,IAAK,IAAK,KACxB,KAAQ,CAAC,IAAK,IAAK,KACnB,UAAa,CAAC,IAAK,IAAK,KACxB,UAAa,CAAC,IAAK,IAAK,KACxB,SAAY,CAAC,IAAK,IAAK,KACvB,WAAc,CAAC,IAAK,IAAK,KACzB,OAAU,CAAC,IAAK,IAAK,KACrB,cAAiB,CAAC,IAAK,IAAK,KAC5B,WAAc,CAAC,IAAK,IAAK,KACzB,MAAS,CAAC,IAAK,IAAK,KACpB,UAAa,CAAC,IAAK,IAAK,KACxB,SAAY,CAAC,IAAK,IAAK,KACvB,MAAS,CAAC,IAAK,IAAK,KACpB,WAAc,CAAC,IAAK,IAAK,IACzB,MAAS,CAAC,IAAK,IAAK,KACpB,MAAS,CAAC,IAAK,IAAK,KACpB,WAAc,CAAC,IAAK,IAAK,KACzB,UAAa,CAAC,IAAK,IAAK,KACxB,WAAc,CAAC,IAAK,IAAK,KACzB,OAAU,CAAC,IAAK,IAAK,KACrB,aAAgB,CAAC,IAAK,IAAK,KAC3B,MAAS,CAAC,IAAK,IAAK,KACpB,qBAAwB,CAAC,IAAK,IAAK,KACnC,QAAW,CAAC,IAAK,IAAK,KACtB,IAAO,CAAC,IAAK,EAAG,GAChB,QAAW,CAAC,IAAK,EAAG,KACpB,QAAW,CAAC,IAAK,EAAG,KACpB,SAAY,CAAC,IAAK,GAAI,KACtB,UAAa,CAAC,IAAK,GAAI,GACvB,OAAU,CAAC,IAAK,GAAI,IACpB,QAAW,CAAC,IAAK,IAAK,KACtB,MAAS,CAAC,IAAK,IAAK,IACpB,WAAc,CAAC,IAAK,IAAK,GACzB,YAAe,CAAC,IAAK,IAAK,KAC1B,OAAU,CAAC,IAAK,IAAK,GACrB,UAAa,CAAC,IAAK,IAAK,KACxB,KAAQ,CAAC,IAAK,IAAK,KACnB,KAAQ,CAAC,IAAK,IAAK,GACnB,UAAa,CAAC,IAAK,IAAK,KACxB,YAAe,CAAC,IAAK,IAAK,KAC1B,SAAY,CAAC,IAAK,IAAK,KACvB,OAAU,CAAC,IAAK,IAAK,KACrB,UAAa,CAAC,IAAK,IAAK,KACxB,eAAkB,CAAC,IAAK,IAAK,KAC7B,WAAc,CAAC,IAAK,IAAK,KACzB,cAAiB,CAAC,IAAK,IAAK,KAC5B,SAAY,CAAC,IAAK,IAAK,KACvB,SAAY,CAAC,IAAK,IAAK,KACvB,aAAgB,CAAC,IAAK,IAAK,KAC3B,YAAe,CAAC,IAAK,IAAK,KAC1B,KAAQ,CAAC,IAAK,IAAK,KACnB,OAAU,CAAC,IAAK,IAAK,GACrB,YAAe,CAAC,IAAK,IAAK,KAC1B,MAAS,CAAC,IAAK,IAAK,KACpB,MAAS,CAAC,IAAK,IAAK,O,69GCnUxB,SAASyB,UAAUlrC,OACf,IAGImrC,IAAMtP,kDAAiB77B,OAI3B,OAAW,GAHHvB,KAAKyhB,MAFOkrB,SAEDD,IAAI,IAGH,EAFZ1sC,KAAKyhB,MAHOkrB,SAGDD,IAAI,IAEK,EADpB1sC,KAAKyhB,MAJOkrB,SAIDD,IAAI,IACS,G,IAEf1N,K,gbACjB,gBAAc,iB,8HAAA,aACV,yBACK4N,QAAU,CAAC,EAAG,GACnB,MAAKC,QAAU,EAAE,GAAI,GACrB,MAAKC,WAAa,GAJR,M,oEAMLx6B,IAAMy6B,WAAWz6B,GAAI,IAAO,M,iCAC1BtI,SACP,kEAAiBA,SACjB,IAAIvF,KAAO,CAACuF,QAAQ/L,MAAO+L,QAAQ9L,QAC/B8uC,MAAQhzC,KAAK8mC,cACjB9mC,KAAK4yC,QAAUI,MAAMlzC,KAAI,SAAC4T,IAAKmD,OAAN,OAAgB7Q,KAAKyhB,OAAO/T,IAAMjJ,KAAKoM,QAAU,Q,8BA/BlF,IAAqB9R,GAkCbkuC,QAAQC,OAAOC,OAlCFpuC,GAkCoB/E,KAAKimC,SAASlhC,GAjCnD,mBAAsB0tC,UAAU1tC,IAAhC,a,2BAmCK2E,KAAMw+B,aAAa,yBAEKx+B,KAFL,GAEfhF,EAFe,SAEZC,EAFY,SAETiX,GAFS,SAELgqB,GAFK,SAED7gC,GAFC,SAIhB+b,GAAK9gB,KAAK4yC,QAAQ,GAAKluC,EACvBsc,GAAKhhB,KAAK4yC,QAAQ,GAAKjuC,EACvB8F,KAAOzK,KAAK8mC,cAChB,KAAIhmB,GAAK,GAAKA,IAAMrW,KAAK,OAGrBuW,GAAK,GAAKA,IAAMvW,KAAK,MAGrBqW,KAAO9gB,KAAK6yC,QAAQ,IAAM7xB,KAAOhhB,KAAK6yC,QAAQ,KAC9CI,QAAQC,OAAOC,MA5C3B,SAAwBzuC,EAAGC,GACvB,kBAAeA,EAAI,EAAnB,YAAwBD,EAAI,EAA5B,KA2C6B0uC,CAAetyB,GAAIE,KACxChhB,KAAK6yC,QAAQ,GAAK/xB,GAClB9gB,KAAK6yC,QAAQ,GAAK7xB,IAIlBknB,cACKtsB,KACDA,GAAK,MAIRA,IAAL,CAIA,IAAIy3B,SA/DZ,SAAqBzN,GAAI7gC,IACrB,yBAAsB0tC,UAAU7M,IAAhC,iBAA4C6M,UAAU1tC,IAAtD,KA8DmBuuC,CAAY1N,GAAI7gC,IAK/B,GAJIsuC,WAAarzC,KAAK8yC,aAClBG,QAAQC,OAAOC,MAAME,UACrBrzC,KAAK8yC,WAAaO,UAEZ,MAANz3B,GAAY,CAEZ,IAAI8sB,MAAQ,GAAGC,OAAO/sB,IACtBq3B,QAAQC,OAAOC,MAAMzK,MAAM,IAG/B1oC,KAAK6yC,QAAQ,KACT7yC,KAAK6yC,QAAQ,IAAMpoC,KAAK,KACxBzK,KAAK6yC,QAAQ,GAAK,EAClB7yC,KAAK6yC,QAAQ,S,wCAGD,MAAM,IAAIn+B,MAAM,iD,sCACpBhQ,EAAGC,GAAK,MAAO,CAACD,EAAGC,K,oCACnB,MAAO,CAACsuC,QAAQC,OAAOK,QAASN,QAAQC,OAAOM,W,kHAlEjCrJ,mD,oSCjBlC,IAAMsJ,UAAY,oBAELC,UAAY,EACZC,aAAe,EACfC,QAAU,EACVC,QAAU,EAIhB,SAASC,QAAQ1pB,IAAKgd,UAIzB,IAHA,IAAInqB,OAAS,CAAEhZ,MAAO,EAAGC,OAAQ,GAC7BsjC,OAASuM,SAAS3pB,IAAKgd,UACvB4M,UAAY,EACP1uC,EAAI,EAAGA,EAAIkiC,OAAOniC,OAAQC,IAAK,CACpC,IAAImiC,MAAQD,OAAOliC,GACnB,OAAQmiC,MAAM70B,MACV,KAAK8gC,UACDM,WAAavM,MAAMn8B,MAAMjG,OACzB,MACJ,KAAKsuC,aACD12B,OAAO/Y,SACP+Y,OAAOhZ,MAAQ+B,KAAK8hB,IAAI7K,OAAOhZ,MAAO+vC,WACtCA,UAAY,GAKxB,OADA/2B,OAAOhZ,MAAQ+B,KAAK8hB,IAAI7K,OAAOhZ,MAAO+vC,WAC/B/2B,OAKJ,SAAS82B,SAAS3pB,IAAKgd,UAC1B,IAAInqB,OAAS,GAETg3B,OAAS,EACb7pB,IAAItf,QAAQ2oC,WAAW,SAAUpoC,MAAOuH,KAAM7O,KAAM8S,OAEhD,IAAIytB,KAAOla,IAAIogB,UAAUyJ,OAAQp9B,OAajC,OAZIytB,KAAKj/B,QACL4X,OAAO7R,KAAK,CACRwH,KAAM8gC,UACNpoC,MAAOg5B,OAIfrnB,OAAO7R,KAAK,CACRwH,KAAe,KAARA,KAAcghC,QAAUC,QAC/BvoC,MAAOvH,KAAKgH,SAEhBkpC,OAASp9B,MAAQxL,MAAMhG,OAChB,MAGX,IAAIi/B,KAAOla,IAAIogB,UAAUyJ,QAOzB,OANI3P,KAAKj/B,QACL4X,OAAO7R,KAAK,CACRwH,KAAM8gC,UACNpoC,MAAOg5B,OAMnB,SAAoBkD,OAAQJ,UACnBA,WACDA,SAAWtJ,KAEf,IAAIx4B,EAAI,EACJ4uC,WAAa,EACbC,oBAAsB,EAC1B,KAAO7uC,EAAIkiC,OAAOniC,QAAQ,CACtB,IAAIoiC,MAAQD,OAAOliC,GAKnB,GAJImiC,MAAM70B,MAAQ+gC,eACdO,WAAa,EACbC,oBAAsB,GAEtB1M,MAAM70B,MAAQ8gC,UAAlB,CAKA,KAAqB,GAAdQ,YAA4C,KAAzBzM,MAAMn8B,MAAM9F,OAAO,IACzCiiC,MAAMn8B,MAAQm8B,MAAMn8B,MAAMk/B,UAAU,GAGxC,IAAI3zB,MAAQ4wB,MAAMn8B,MAAMqS,QAAQ,MAChC,IAAc,GAAV9G,MAAa,CACb4wB,MAAMn8B,MAAQ8oC,iBAAiB5M,OAAQliC,EAAGuR,OAAO,GAGjD,IADA,IAAIuR,IAAMqf,MAAMn8B,MAAMN,MAAM,IACrBod,IAAI/iB,QAAiC,KAAvB+iB,IAAIA,IAAI/iB,OAAS,IAClC+iB,IAAI9G,MAERmmB,MAAMn8B,MAAQ8c,IAAI7c,KAAK,IAG3B,GAAKk8B,MAAMn8B,MAAMjG,OAAjB,CAIA,GAAI6uC,WAAazM,MAAMn8B,MAAMjG,OAAS+hC,SAAU,CAG5C,IADA,IAAIvwB,QAAS,IACH,CACN,IAAIw9B,UAAY5M,MAAMn8B,MAAMqS,QAAQ,IAAK9G,OAAQ,GACjD,IAAkB,GAAdw9B,UACA,MAEJ,GAAIH,WAAaG,UAAYjN,SACzB,MAEJvwB,OAAQw9B,UAEZ,IAAc,GAAVx9B,OACA4wB,MAAMn8B,MAAQ8oC,iBAAiB5M,OAAQliC,EAAGuR,QAAO,QAEhD,IAA2B,GAAvBs9B,mBAA0B,CAC/B,IAAI1M,OAAQD,OAAO2M,oBACfG,WAAa7M,OAAMn8B,MAAMwf,YAAY,KACzC2c,OAAMn8B,MAAQ8oC,iBAAiB5M,OAAQ2M,mBAAoBG,YAAY,GACvEhvC,EAAI6uC,wBAGJ1M,MAAMn8B,MAAQ8oC,iBAAiB5M,OAAQliC,EAAG8hC,SAAW8M,YAAY,QAIrEA,YAAczM,MAAMn8B,MAAMjG,QACO,GAA7BoiC,MAAMn8B,MAAMqS,QAAQ,OACpBw2B,mBAAqB7uC,GAG7BA,SAnCIkiC,OAAO3pB,OAAOvY,EAAG,QApBjBA,IAyDRkiC,OAAOp8B,KAAK,CAAEwH,KAAM+gC,eAGpB,IADA,IAAIY,cAAgB,KACXjvC,GAAI,EAAGA,GAAIkiC,OAAOniC,OAAQC,KAAK,CACpC,IAAImiC,QAAQD,OAAOliC,IACnB,OAAQmiC,QAAM70B,MACV,KAAK8gC,UACDa,cAAgB9M,QAChB,MACJ,KAAKkM,aACD,GAAIY,cAAe,CAEf,IADA,IAAInsB,KAAMmsB,cAAcjpC,MAAMN,MAAM,IAC7Bod,KAAI/iB,QAAiC,KAAvB+iB,KAAIA,KAAI/iB,OAAS,IAClC+iB,KAAI9G,MAERizB,cAAcjpC,MAAQ8c,KAAI7c,KAAK,IAEnCgpC,cAAgB,MAK5B,OADA/M,OAAOlmB,MACAkmB,OAhGAgN,CAAWv3B,OAAQmqB,UA0G9B,SAASgN,iBAAiB5M,OAAQiN,WAAYH,WAAYI,iBACtD,IAAIC,cAAgB,CAChB/hC,KAAM+gC,cAENiB,aAAe,CACfhiC,KAAM8gC,UACNpoC,MAAOk8B,OAAOiN,YAAYnpC,MAAMk/B,UAAU8J,YAAcI,gBAAkB,EAAI,KAGlF,OADAlN,OAAO3pB,OAAO42B,WAAa,EAAG,EAAGE,cAAeC,cACzCpN,OAAOiN,YAAYnpC,MAAMk/B,UAAU,EAAG8J,c,0PCnL1C,IAAIpP,cAAgB,GAEhBC,eAAiB,GACf0P,KAAO,CAChBC,EAAG,CAAC,CAAC,GAAI,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,EAAE,EAAG,IAClCC,EAAG,CAAC,CAAC,GAAI,GAAI,CAAC,GAAI,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,EAAE,EAAG,GAAI,EAAE,EAAG,GAAI,EAAE,GAAI,IACtEC,EAAG,CAAC,EAAE,GAAI,GAAI,CAAC,GAAI,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,EAAE,EAAG,GAAI,EAAE,EAAG,KAE5CC,KAAO,CAEhBC,UAAW,EAEXC,QAAS,EAETC,cAAe,EAEfC,OAAQ,EAERC,SAAU,GAEVC,UAAW,GAEXC,SAAU,GAEVC,SAAU,GAEVC,WAAY,GAEZC,OAAQ,GAERC,SAAU,GAEVC,aAAc,GAEdC,UAAW,GAEXC,SAAU,GAEVC,WAAY,GAEZC,aAAc,GAEdC,OAAQ,GAERC,QAAS,GAETC,QAAS,GAETC,MAAO,GAEPC,SAAU,GAEVC,QAAS,GAETC,eAAgB,GAEhBC,UAAW,GAEXC,UAAW,GAEXC,KAAM,GAENC,KAAM,GAENC,KAAM,GAENC,KAAM,GAENC,KAAM,GAENC,KAAM,GAENC,KAAM,GAENC,KAAM,GAENC,KAAM,GAENC,KAAM,GAENC,SAAU,GAEVC,aAAc,GAEdC,aAAc,GAEdC,UAAW,GAEXC,gBAAiB,GAEjBC,iBAAkB,GAElBC,MAAO,GAEPC,KAAM,GAENC,KAAM,GAENC,KAAM,GAENC,KAAM,GAENC,KAAM,GAENC,KAAM,GAENC,KAAM,GAENC,KAAM,GAENC,KAAM,GAENC,KAAM,GAENC,KAAM,GAENC,KAAM,GAENC,KAAM,GAENC,KAAM,GAENC,KAAM,GAENC,KAAM,GAENC,KAAM,GAENC,KAAM,GAENC,KAAM,GAENC,KAAM,GAENC,KAAM,GAENC,KAAM,GAENC,KAAM,GAENC,KAAM,GAENC,KAAM,GAENC,KAAM,GAENC,gBAAiB,GAEjBC,WAAY,GAEZC,WAAY,GAEZC,WAAY,GAEZC,WAAY,GAEZC,WAAY,IAEZC,WAAY,IAEZC,WAAY,IAEZC,WAAY,IAEZC,WAAY,IAEZC,WAAY,IAEZC,YAAa,IAEbC,OAAQ,IAERC,aAAc,IAEdC,YAAa,IAEbC,WAAY,IAEZC,UAAW,IAEXC,MAAO,IAEPC,MAAO,IAEPC,MAAO,IAEPC,MAAO,IAEPC,MAAO,IAEPC,MAAO,IAEPC,MAAO,IAEPC,MAAO,IAEPC,MAAO,IAEPC,OAAQ,IAERC,OAAQ,IAERC,OAAQ,IAERC,OAAQ,IAERC,OAAQ,IAERC,OAAQ,IAERC,OAAQ,IAERC,OAAQ,IAERC,OAAQ,IAERC,OAAQ,IAERC,OAAQ,IAERC,OAAQ,IAERC,OAAQ,IAERC,OAAQ,IAERC,OAAQ,IAERC,YAAa,IAEbC,eAAgB,IAEhBC,cAAe,IAEfC,eAAgB,IAEhBC,gBAAiB,IAEjBC,QAAS,IAETC,UAAW,IAEXC,WAAY,IAEZC,aAAc,IAEdC,cAAe,IAEfC,cAAe,IAEfC,eAAgB,IAEhBC,YAAa,IAEbC,QAAS,IAETC,QAAS,IAETC,gBAAiB,IAEjBC,sBAAuB,IAEvBC,uBAAwB,IAExBC,SAAU,IAEVC,SAAU,IAEVC,UAAW,IAEXC,SAAU,IAEVC,cAAe,IAEfC,gBAAiB,IAEjBC,cAAe,IAEfC,iBAAkB,IAElBC,SAAU,IAEVC,QAAS,IAETC,SAAU,IAEVC,OAAQ,GAERC,QAAS,GAETC,UAAW,GAEXC,QAAS,GAETC,SAAU,GAEVC,SAAU,GAEVC,SAAU,GAEVC,SAAU,GAEVC,WAAY,GAEZC,cAAe,GAEfC,UAAW,GAEXC,cAAe,GAEfC,UAAW,GAEXC,SAAU,GAEVC,WAAY,GAEZC,SAAU,K,khBCvTOC,gB,WACjB,yBAAY5uC,U,8HAAS,uBACjBhQ,KAAKimC,SAAW,CACZ4Y,OAAO,EACPC,MAAO,EACPC,MAAO,MAEXpzC,OAAOu6B,OAAOlmC,KAAKimC,SAAUj2B,SAC7BhQ,KAAKg/C,UAAYC,OAAOC,aAAa,GACrCl/C,KAAKm/C,QAAUn/C,KAAKg/C,UACpBh/C,KAAKo/C,QAAU,GACf,IAAK,IAAI95C,EAAI,EAAGA,EAAItF,KAAKimC,SAAS6Y,MAAOx5C,IACrCtF,KAAKo/C,QAAQh0C,KAAKpL,KAAKg/C,WAE3Bh/C,KAAKq/C,aAAe,GACpBr/C,KAAKq/C,aAAar/C,KAAKg/C,WAAah/C,KAAKimC,SAAS8Y,MAClD/+C,KAAKwiC,MAAQ,G,qHAMbxiC,KAAKwiC,MAAQ,GACbxiC,KAAKq/C,aAAe,K,iCAOpB,IADA,IAAIpiC,OAAS,CAACjd,KAAKs/C,QAAQt/C,KAAKo/C,UACzBniC,OAAOA,OAAO5X,OAAS,IAAMrF,KAAKg/C,WACrC/hC,OAAO7R,KAAKpL,KAAKs/C,QAAQriC,SAE7B,OAAOjd,KAAKu/C,MAAMtiC,OAAO1S,MAAM,GAAI,M,8BAK/B4F,QAEJ,IADA,IAAIq3B,OAASxnC,KAAKw/C,OAAOrvC,QAChB7K,EAAI,EAAGA,EAAIkiC,OAAOniC,OAAQC,IAC/BtF,KAAKq/C,aAAa7X,OAAOliC,IAAMtF,KAAKimC,SAAS8Y,MAEjDvX,OAASxnC,KAAKo/C,QAAQzW,OAAOnB,QAAQmB,OAAO3oC,KAAKm/C,SACjD,IAAK,IAAI75C,GAAItF,KAAKimC,SAAS6Y,MAAOx5C,GAAIkiC,OAAOniC,OAAQC,KAGjD,IAFA,IAAIwmC,QAAUtE,OAAOj9B,MAAMjF,GAAItF,KAAKimC,SAAS6Y,MAAOx5C,IAChDm6C,MAAQjY,OAAOliC,IACViD,EAAI,EAAGA,EAAIujC,QAAQzmC,OAAQkD,IAAK,CACrC,IAAIm3C,WAAa5T,QAAQvhC,MAAMhC,GAC/BvI,KAAK2/C,cAAcD,WAAYD,U,iCAKvC,IAAIp1C,MAAQ,GACRu1C,WAAaj0C,OAAOg1B,KAAK3gC,KAAKq/C,cAAch6C,OAChDu6C,aACAv1C,MAAMe,KAAK,qBAAuBw0C,YAClC,IAAIC,UAAYl0C,OAAOg1B,KAAK3gC,KAAKwiC,OAAOn9B,OACpCy6C,WAAa,EACjB,IAAK,IAAIlS,KAAK5tC,KAAKwiC,MACfsd,YAAcn0C,OAAOg1B,KAAK3gC,KAAKwiC,MAAMoL,IAAIvoC,OAI7C,OAFAgF,MAAMe,KAAK,+BAAiCy0C,WAC5Cx1C,MAAMe,KAAK,6BAA+B00C,YACnCz1C,MAAMkB,KAAK,Q,6BAMf6e,KACH,OAAOA,IAAIpf,MAAMhL,KAAKimC,SAAS4Y,MAAQ,MAAQ,M,4BAM7Cz2B,KACF,OAAOA,IAAI7c,KAAKvL,KAAKimC,SAAS4Y,MAAQ,IAAM,M,oCAMlC/S,QAAS2T,OACnB,IAAIp2C,IAAMrJ,KAAKu/C,MAAMzT,SACfziC,OAAOrJ,KAAKwiC,QACdxiC,KAAKwiC,MAAMn5B,KAAO,IAEtB,IAAIK,KAAO1J,KAAKwiC,MAAMn5B,KAChBo2C,SAAS/1C,OACXA,KAAK+1C,OAAS,GAElB/1C,KAAK+1C,W,8BAMD3T,SACJA,QAAU9rC,KAAK+/C,SAASjU,SACxB,IAAIziC,IAAMrJ,KAAKu/C,MAAMzT,SACjBpiC,KAAO1J,KAAKwiC,MAAMn5B,KAClB22C,UAAY,GAChB,GAAIhgD,KAAKimC,SAAS8Y,MAAO,CACrB,IAAK,IAAIU,SAASz/C,KAAKq/C,aACnBW,UAAUP,OAASz/C,KAAKq/C,aAAaI,OAEzC,IAAK,IAAIA,UAAS/1C,KACds2C,UAAUP,SAAU/1C,KAAK+1C,aAI7BO,UAAYt2C,KAEhB,OAAO66B,8DAAqByb,a,+BAMvBlU,SAOL,IANIA,QAAQzmC,OAASrF,KAAKimC,SAAS6Y,MAC/BhT,QAAUA,QAAQvhC,OAAOvK,KAAKimC,SAAS6Y,OAElChT,QAAQzmC,OAASrF,KAAKimC,SAAS6Y,QACpChT,QAAU9rC,KAAKo/C,QAAQ70C,MAAM,EAAGvK,KAAKimC,SAAS6Y,MAAQhT,QAAQzmC,QAAQsjC,OAAOmD,YAExE9rC,KAAKu/C,MAAMzT,WAAY9rC,KAAKwiC,QAAUsJ,QAAQzmC,OAAS,GAC5DymC,QAAUA,QAAQvhC,MAAM,GAE5B,OAAOuhC,a,8oBCzIMmU,W,WAIjB,uB,8HAAc,kBACVjgD,KAAKkgD,MAAQ,EACblgD,KAAKmgD,QAAU,IAAIC,8C,kHAKX,OAAOpgD,KAAKkgD,Q,8BAMpB,OADAlgD,KAAKmgD,QAAU,IAAIC,8CACZpgD,O,0BAMPy/C,MAAOY,MACPrgD,KAAKmgD,QAAQ/0C,KAAKq0C,MAAOY,Q,4BAOzB,IAAKrgD,KAAKmgD,QAAQ16C,MACd,OAAO,KAFT,sBAIgCzF,KAAKmgD,QAAQ7+B,MAApC++B,KAJT,kBAIIh3C,IAAkBo2C,MAJtB,kBAIen0C,MAKjB,OAJI+0C,KAAO,IACPrgD,KAAKkgD,OAASG,KACdrgD,KAAKmgD,QAAQtyC,OAAOwyC,OAEjBZ,Q,mCAOEA,OACT,IAAM/2C,EAAI1I,KAAKmgD,QAAQhjC,KAAKsiC,OAC5B,GAAI/2C,EAEA,OADgBA,EAARW,M,6BAUTo2C,OACH,OAAOz/C,KAAKmgD,QAAQtkC,OAAO4jC,Y,wzDC7D5B,IAAMW,QAAb,WACI,oB,8HAAc,eACVpgD,KAAKsgD,KAAO,GACZtgD,KAAKugD,UAAY,E,uCAHzB,O,YAAA,S,WAAA,gCAKa3zC,EAAGhE,GACR,OAAOgE,EAAEvD,KAAOT,EAAES,IAAMuD,EAAE2zC,UAAY33C,EAAE23C,UAAY3zC,EAAEvD,IAAMT,EAAES,MANtE,4BAQU6H,GACFlR,KAAKsgD,KAAOtgD,KAAKsgD,KAAKxgD,KAAI,mBAAGuJ,IAAH,KAAGA,IAAKiC,MAAR,KAAQA,MAAOi1C,UAAf,KAAeA,UAAf,MAAgC,CAAEl3C,IAAKA,IAAM6H,EAAG5F,MAAOi1C,gBATzF,4BAYQ,OAAOvgD,KAAKsgD,KAAKj7C,SAZzB,2BAcSiG,MAAOjC,KACRrJ,KAAKugD,WAAa,EAClB,IAAMC,IAAMxgD,KAAKyF,MACjBzF,KAAKsgD,KAAKl1C,KAAK,CAAEE,MAAOi1C,UAAWvgD,KAAKugD,UAAWl3C,MACnDrJ,KAAKygD,SAASD,OAlBtB,4BAqBQ,GAAkB,GAAdxgD,KAAKyF,MACL,MAAM,IAAIiP,MAAM,qBAEpB,IAAMwnB,IAAMl8B,KAAKsgD,KAAK,GAQtB,OAPItgD,KAAKyF,MAAQ,GACbzF,KAAKsgD,KAAK,GAAKtgD,KAAKsgD,KAAKh/B,MACzBthB,KAAK0gD,WAAW,IAGhB1gD,KAAKsgD,KAAKh/B,MAEP4a,MAhCf,2BAkCShrB,GACD,IAAK,IAAI5L,EAAI,EAAGA,EAAItF,KAAKyF,MAAOH,IAC5B,GAAI4L,GAAKlR,KAAKsgD,KAAKh7C,GAAGgG,MAClB,OAAOtL,KAAKsgD,KAAKh7C,GAGzB,OAAO,OAxCf,6BA0CW4L,GAEH,IADA,IAAI2F,MAAQ,KACHvR,EAAI,EAAGA,EAAItF,KAAKyF,MAAOH,IACxB4L,GAAKlR,KAAKsgD,KAAKh7C,GAAGgG,QAClBuL,MAAQvR,GAGhB,GAAc,OAAVuR,MACA,OAAO,EAEX,GAAI7W,KAAKyF,MAAQ,EAAG,CAChB,IAAIk7C,KAAO3gD,KAAKsgD,KAAKh/B,MAKrB,OAJIq/B,KAAKr1C,OAAS4F,IACdlR,KAAKsgD,KAAKzpC,OAAS8pC,KACnB3gD,KAAK0gD,WAAW7pC,SAEb,EAKX,OAFI7W,KAAKsgD,KAAKh/B,OAEP,IA/Df,iCAiEe5c,GACP,OAAOsB,KAAKyhB,OAAO/iB,EAAI,GAAK,KAlEpC,oCAoEkBA,GACV,OAAO,EAAIA,EAAI,IArEvB,qCAuEmBA,GACX,OAAO,EAAIA,EAAI,IAxEvB,gCA0EcA,GACN,OAAOA,GAAK,GAAKA,EAAI1E,KAAKsgD,KAAKj7C,SA3EvC,2BA6ESX,EAAGC,GACJ,IAAMhB,EAAI3D,KAAKsgD,KAAK57C,GACpB1E,KAAKsgD,KAAK57C,GAAK1E,KAAKsgD,KAAK37C,GACzB3E,KAAKsgD,KAAK37C,GAAKhB,IAhFvB,8BAkFYi9C,SACJ,IADa,MACPC,aAAeD,QAAQjvC,OAAO3R,KAAK8gD,UAAUx9C,KAAKtD,OACpD+gD,QAAUF,aAAa,GAFd,qCAGGA,cAHH,IAGb,+CAA8B,KAAnBv7C,EAAmB,YACtBtF,KAAKghD,SAAShhD,KAAKsgD,KAAKh7C,GAAItF,KAAKsgD,KAAKS,YACtCA,QAAUz7C,IALL,kDAQb,OAAOy7C,UA1Ff,+BA4Far8C,GACL,GAAS,GAALA,EAAJ,CAGA,IAAMwQ,OAASlV,KAAKihD,WAAWv8C,GAC3B1E,KAAK8gD,UAAU5rC,SAAWlV,KAAKghD,SAAShhD,KAAKsgD,KAAK57C,GAAI1E,KAAKsgD,KAAKprC,WAChElV,KAAKkhD,KAAKx8C,EAAGwQ,QACblV,KAAKygD,SAASvrC,YAnG1B,iCAsGexQ,GACP,IAAMy8C,UAAYnhD,KAAKohD,cAAc18C,GAC/B28C,WAAarhD,KAAKshD,eAAe58C,GACvC,GAAK1E,KAAK8gD,UAAUK,WAApB,CAGA,IAAMh3C,EAAInK,KAAKuhD,QAAQ,CAAC78C,EAAGy8C,UAAWE,aAClCl3C,GAAKzF,IACL1E,KAAKkhD,KAAKx8C,EAAGyF,GACbnK,KAAK0gD,WAAWv2C,OA/G5B,mCAmHQzI,QAAQyZ,IAAInb,KAAKsgD,W,4GAnHzB,Y,yYCGA,kCAAiBkB,uDAAQC,qDAAOC,yD,s4ECCXF,O,4kBACbhnB,KAAMmnB,QAEN,OADA3hD,KAAK4hD,OAAOn6C,IAAI+yB,KAAM,GACtB,6DAAiBA,KAAMmnB,U,6BAMvB,OAHsB,OAAlB3hD,KAAK6hD,WAA6D,GAAxC7hD,KAAK8hD,QAAQnkC,QAAQ3d,KAAK6hD,WACpD7hD,KAAK4hD,OAAOn6C,IAAIzH,KAAK6hD,SAAU,GAEnC,oE,6IAT4BE,U,mhBCHfA,U,WAIjB,sB,8HAAc,iBACV/hD,KAAK4hD,OAAS,IAAI3B,oDAClBjgD,KAAK8hD,QAAU,GACf9hD,KAAK6hD,SAAW,K,iHAKR,OAAO7hD,KAAK4hD,OAAOI,Y,0BAK3BxnB,KAAMmnB,QAIN,OAHIA,QACA3hD,KAAK8hD,QAAQ12C,KAAKovB,MAEfx6B,O,gCAODw6B,MACN,OAAOx6B,KAAK4hD,OAAOK,aAAaznB,Q,8BAShC,OAHAx6B,KAAK4hD,OAAOh8C,QACZ5F,KAAK8hD,QAAU,GACf9hD,KAAK6hD,SAAW,KACT7hD,O,6BAOJw6B,MACH,IAAIvd,OAASjd,KAAK4hD,OAAO/lC,OAAO2e,MAC5B3jB,MAAQ7W,KAAK8hD,QAAQnkC,QAAQ6c,MAOjC,OANc,GAAV3jB,OACA7W,KAAK8hD,QAAQjkC,OAAOhH,MAAO,GAE3B7W,KAAK6hD,UAAYrnB,OACjBx6B,KAAK6hD,SAAW,MAEb5kC,S,6BAQP,OADAjd,KAAK6hD,SAAW7hD,KAAK4hD,OAAOvyC,MACrBrP,KAAK6hD,c,+/EC3DCJ,M,ukBAObjnB,KAAMmnB,OAAQtB,MAEd,OADArgD,KAAK4hD,OAAOn6C,IAAI+yB,UAAetvB,IAATm1C,KAAqBA,KAAO,EAAI7lB,KAAK0nB,YAC3D,4DAAiB1nB,KAAMmnB,U,6BASvB,OAHI3hD,KAAK6hD,WAAoD,GAAxC7hD,KAAK8hD,QAAQnkC,QAAQ3d,KAAK6hD,WAC3C7hD,KAAK4hD,OAAOn6C,IAAIzH,KAAK6hD,SAAU,EAAI7hD,KAAK6hD,SAASK,YAErD,mE,4IAlB2BH,U,wvECCdL,O,wbACjB,kBAAc,iB,8HAAA,eACV,yBACKS,iBAAmB,EACxB,MAAKC,UAAY,MAAKD,iBAHZ,M,iEAWV3nB,KAAMmnB,OAAQtB,MAEd,OADArgD,KAAK4hD,OAAOn6C,IAAI+yB,KAAM6lB,MAAQrgD,KAAKmiD,kBACnC,6DAAiB3nB,KAAMmnB,U,8BAIvB,OADA3hD,KAAKoiD,UAAYpiD,KAAKmiD,iBACtB,kE,6BAEG3nB,MAIH,OAHIA,MAAQx6B,KAAK6hD,WACb7hD,KAAKoiD,UAAYpiD,KAAKmiD,kBAE1B,gEAAoB3nB,Q,6BAUpB,OAJsB,OAAlBx6B,KAAK6hD,WAA6D,GAAxC7hD,KAAK8hD,QAAQnkC,QAAQ3d,KAAK6hD,YACpD7hD,KAAK4hD,OAAOn6C,IAAIzH,KAAK6hD,SAAU7hD,KAAKoiD,WAAapiD,KAAKmiD,kBACtDniD,KAAKoiD,UAAYpiD,KAAKmiD,kBAE1B,iE,kCAKQ9B,MAIR,OAHIrgD,KAAK6hD,WACL7hD,KAAKoiD,UAAY/B,MAEdrgD,U,6IA3CqB+hD,U,0bCFpC,kCAAiBM,sFAAuBC,oFAAsBC,0F,s8DCEzCF,sB,+oBACT39C,EAAGC,EAAGkH,EAAG22C,UAIb,GAFAA,SAAS99C,EAAGC,EAAG,EAAG,GAEb3E,KAAKyiD,aAAa/9C,EAAGC,GAO1B,IAHA,IACI+9C,EAAGz2C,EAAGo7B,GAAIC,GAAIqb,OADdC,KAAO,GAGFl6C,EAAI,EAAGA,GAAKmD,EAAGnD,IAGpB,IAFA,IAAIw1B,UAAYl+B,KAAK6iD,WAAWn+C,EAAGC,EAAG+D,GAClCo6C,MAAQ,IAAM5kB,UAAU74B,OACnBC,EAAI,EAAGA,EAAI44B,UAAU74B,OAAQC,IASlC,GARA+hC,GAAKnJ,UAAU54B,GAAG,GAClBgiC,GAAKpJ,UAAU54B,GAAG,GAElB2G,GADAy2C,EAAII,OAASx9C,EAAI,KACTw9C,MACRH,QAAU3iD,KAAKyiD,aAAapb,GAAIC,IAC5BtnC,KAAK+iD,eAAe/8C,KAAKyhB,MAAMi7B,GAAI18C,KAAKqkB,KAAKpe,GAAI02C,OAAQC,OACzDJ,SAASnb,GAAIC,GAAI5+B,EAAG,GAEL,GAAfk6C,KAAKv9C,QAA0B,GAAXu9C,KAAK,IAAsB,KAAXA,KAAK,GACzC,S,qCAWDF,EAAGz2C,EAAG02C,OAAQC,MACzB,GAAIF,EAAI,EAAG,CACP,IAAIM,GAAKhjD,KAAK+iD,eAAe,EAAG92C,EAAG02C,OAAQC,MACvC9rC,GAAK9W,KAAK+iD,eAAe,IAAML,EAAG,IAAKC,OAAQC,MACnD,OAAOI,IAAMlsC,GAGjB,IADA,IAAID,MAAQ,EACLA,MAAQ+rC,KAAKv9C,QAAUu9C,KAAK/rC,OAAS6rC,GACxC7rC,QAEJ,GAAIA,OAAS+rC,KAAKv9C,OAId,OAHIs9C,QACAC,KAAKx3C,KAAKs3C,EAAGz2C,IAEV,EAEX,IAAIgd,MAAQ,EACZ,GAAIpS,MAAQ,EAAG,CACX,KAAOA,MAAQ+rC,KAAKv9C,QAAUu9C,KAAK/rC,OAAS5K,GACxC4K,QACAoS,QAEJ,OAAa,GAATA,QAGA05B,SACI15B,MAAQ,EACR25B,KAAK/kC,OAAOhH,MAAQoS,MAAOA,MAAOhd,GAGlC22C,KAAK/kC,OAAOhH,MAAQoS,MAAOA,SAG5B,GAGP,KAAOpS,MAAQ+rC,KAAKv9C,QAAUu9C,KAAK/rC,OAAS5K,GACxC4K,QACAoS,QAGJ,OAAIy5B,GAAKE,KAAK/rC,MAAQoS,QAAmB,GAATA,SAG5B05B,SACI15B,MAAQ,EACR25B,KAAK/kC,OAAOhH,MAAQoS,MAAOA,MAAOy5B,GAGlCE,KAAK/kC,OAAOhH,MAAQoS,MAAOA,MAAOy5B,EAAGz2C,KAGtC,Q,4JAxFgC42B,U,0pBCF9BA,I,WAOjB,aAAYogB,qBAAmC,IAAdjzC,QAAc,uDAAJ,GAAI,0BAC3ChQ,KAAKyiD,aAAeQ,oBACpBjjD,KAAKimC,SAAWt6B,OAAOu6B,OAAO,CAAEgd,SAAU,GAAKlzC,S,4GAQxCq3B,GAAIC,GAAI5+B,GACf,IACIy6C,KAAMC,YAAaC,YADnBpmC,OAAS,GAEb,OAAQjd,KAAKimC,SAASid,UAClB,KAAK,EACDE,YAAc,EACdC,YAAc,CAAC,EAAG,GAClBF,KAAO,CACHtO,sDACAA,sDACAA,sDACAA,uDAEJ,MACJ,KAAK,EACDsO,KAAOtO,mDACPuO,YAAc,EACdC,YAAc,EAAE,EAAG,GACnB,MACJ,KAAK,EACDF,KAAOtO,mDACPuO,YAAc,EACdC,YAAc,EAAE,EAAG,GACnB,MACJ,QACI,MAAM,IAAI3uC,MAAM,0CAOxB,IAHA,IAAIhQ,EAAI2iC,GAAKgc,YAAY,GAAK36C,EAC1B/D,EAAI2iC,GAAK+b,YAAY,GAAK36C,EAErBpD,EAAI,EAAGA,EAAI69C,KAAK99C,OAAQC,IAC7B,IAAK,IAAIiD,EAAI,EAAGA,EAAIG,EAAI06C,YAAa76C,IACjC0U,OAAO7R,KAAK,CAAC1G,EAAGC,IAChBD,GAAKy+C,KAAK79C,GAAG,GACbX,GAAKw+C,KAAK79C,GAAG,GAGrB,OAAO2X,Y,yjECtDMqlC,qB,0oBACT59C,EAAGC,EAAGkH,EAAG22C,UAIb,GAFAA,SAAS99C,EAAGC,EAAG,EAAG,GAEb3E,KAAKyiD,aAAa/9C,EAAGC,GAO1B,IAHA,IACI0iC,GAAIC,GAAIqb,OAAQW,GAAIC,GAAIvgB,WADxBwgB,QAAU,GAGL96C,EAAI,EAAGA,GAAKmD,EAAGnD,IAGpB,IAFA,IAAIw1B,UAAYl+B,KAAK6iD,WAAWn+C,EAAGC,EAAG+D,GAClC+6C,cAAgBvlB,UAAU74B,OACrBC,EAAI,EAAGA,EAAIm+C,cAAen+C,IAW/B,GAVA+hC,GAAKnJ,UAAU54B,GAAG,GAClBgiC,GAAKpJ,UAAU54B,GAAG,GAElBg+C,GAAK,CAACh+C,EAAI,EAAIA,EAAI,EAAI,EAAIm+C,cAAgB,EAAG,EAAIA,eACjDF,GAAK,CAAC,EAAIj+C,EAAI,EAAG,EAAIm+C,eACrBd,QAAU3iD,KAAKyiD,aAAapb,GAAIC,KAChCtE,WAAahjC,KAAK0jD,iBAAiBJ,GAAIC,GAAIZ,OAAQa,WAE/ChB,SAASnb,GAAIC,GAAI5+B,EAAGs6B,YAEF,GAAlBwgB,QAAQn+C,QAAgC,GAAjBm+C,QAAQ,GAAG,IAAWA,QAAQ,GAAG,IAAMA,QAAQ,GAAG,GACzE,S,uCAWCF,GAAIC,GAAIZ,OAAQa,SAC7B,GAAIF,GAAG,GAAKC,GAAG,GAGX,OAFSvjD,KAAK0jD,iBAAiBJ,GAAI,CAACA,GAAG,GAAIA,GAAG,IAAKX,OAAQa,SAClDxjD,KAAK0jD,iBAAiB,CAAC,EAAG,GAAIH,GAAIZ,OAAQa,UAChC,EAIvB,IADA,IAAIG,OAAS,EAAGC,OAAQ,EACjBD,OAASH,QAAQn+C,QAAQ,CAC5B,IAAIkM,IAAMiyC,QAAQG,QACd1R,KAAO1gC,IAAI,GAAK+xC,GAAG,GAAKA,GAAG,GAAK/xC,IAAI,GACxC,GAAI0gC,MAAQ,EAAG,CACC,GAARA,MAAe0R,OAAS,IACxBC,OAAQ,GAEZ,MAEJD,SAIJ,IADA,IAAIE,OAASL,QAAQn+C,OAAQy+C,OAAQ,EAC9BD,UAAU,CACb,IAAItyC,KAAMiyC,QAAQK,QACd5R,MAAOsR,GAAG,GAAKhyC,KAAI,GAAKA,KAAI,GAAKgyC,GAAG,GACxC,GAAItR,OAAQ,EAAG,CACC,GAARA,OAAc4R,OAAS,IACvBC,OAAQ,GAEZ,OAGR,IAaIC,cAbAC,SAAU,EAUd,IATIL,QAAUE,SAAWD,OAASE,QAGzBF,OAASE,OAASH,OAAS,GAAKE,QAAWA,OAAS,GAGpDF,OAASE,QAAWF,OAAS,KALlCK,SAAU,IAQTA,QACD,OAAO,EAIX,IAAInoC,OAASgoC,OAASF,OAAS,EAC/B,GAAI9nC,OAAS,EACT,GAAI8nC,OAAS,EAAG,CACZ,IAAIM,EAAIT,QAAQG,QAChBI,eAAiBR,GAAG,GAAKU,EAAE,GAAKA,EAAE,GAAKV,GAAG,KAAOU,EAAE,GAAKV,GAAG,IACvDZ,QACAa,QAAQ3lC,OAAO8lC,OAAQ9nC,OAAQ0nC,QAGlC,CACD,IAAIU,GAAIT,QAAQK,QAChBE,eAAiBE,GAAE,GAAKX,GAAG,GAAKA,GAAG,GAAKW,GAAE,KAAOX,GAAG,GAAKW,GAAE,IACvDtB,QACAa,QAAQ3lC,OAAO8lC,OAAQ9nC,OAAQynC,QAItC,CACD,KAAIK,OAAS,GAYT,OAHIhB,QACAa,QAAQ3lC,OAAO8lC,OAAQ9nC,OAAQynC,GAAIC,IAEhC,EAXP,IAAIW,GAAKV,QAAQG,QACbQ,GAAKX,QAAQK,QACjBE,eAAiBI,GAAG,GAAKD,GAAG,GAAKA,GAAG,GAAKC,GAAG,KAAOD,GAAG,GAAKC,GAAG,IAC1DxB,QACAa,QAAQ3lC,OAAO8lC,OAAQ9nC,QAWnC,OAAOkoC,gBADUR,GAAG,GAAKD,GAAG,GAAKA,GAAG,GAAKC,GAAG,KAAOD,GAAG,GAAKC,GAAG,U,2JArHpB1gB,U,qgECHlD,IAAMuhB,QAAU,CACZ,EAAE,EAAG,EAAG,EAAG,GACX,CAAC,GAAI,EAAG,EAAG,GACX,CAAC,GAAI,GAAI,EAAG,GACZ,EAAE,EAAG,EAAG,GAAI,GACZ,CAAC,EAAG,EAAG,GAAI,GACX,CAAC,EAAG,GAAI,EAAG,GACX,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IAQO7B,uB,opBAQT79C,EAAGC,EAAGkH,EAAG22C,UAEbA,SAAS99C,EAAGC,EAAG,EAAG,GAClB,IAAK,IAAIW,EAAI,EAAGA,EAAI8+C,QAAQ/+C,OAAQC,IAChCtF,KAAKqkD,cAAc3/C,EAAGC,EAAGy/C,QAAQ9+C,GAAIuG,EAAG22C,Y,iCAWrC99C,EAAGC,EAAGkH,EAAGkuB,IAAKyoB,UAErBA,SAAS99C,EAAGC,EAAG,EAAG,GAClB,IAAI2/C,gBAAkBvqB,IAAM,EAAI,GAAK,EACjCwqB,oBAAsBxqB,IAAM,EAAI,GAAK,EACrCyqB,YAAczqB,IAAM,EAAI,GAAK,EACjC/5B,KAAKqkD,cAAc3/C,EAAGC,EAAGy/C,QAAQG,oBAAqB14C,EAAG22C,UACzDxiD,KAAKqkD,cAAc3/C,EAAGC,EAAGy/C,QAAQE,gBAAiBz4C,EAAG22C,UACrDxiD,KAAKqkD,cAAc3/C,EAAGC,EAAGy/C,QAAQrqB,KAAMluB,EAAG22C,UAC1CxiD,KAAKqkD,cAAc3/C,EAAGC,EAAGy/C,QAAQI,YAAa34C,EAAG22C,Y,gCAW3C99C,EAAGC,EAAGkH,EAAGkuB,IAAKyoB,UAEpBA,SAAS99C,EAAGC,EAAG,EAAG,GAClB,IAAI2/C,gBAAkBvqB,IAAM,EAAI,GAAK,EACrC/5B,KAAKqkD,cAAc3/C,EAAGC,EAAGy/C,QAAQrqB,KAAMluB,EAAG22C,UAC1CxiD,KAAKqkD,cAAc3/C,EAAGC,EAAGy/C,QAAQE,gBAAiBz4C,EAAG22C,Y,oCAU3C99C,EAAGC,EAAG8/C,OAAQ54C,EAAG22C,UAE3BxiD,KAAK0kD,gBAAgBhgD,EAAGC,EAAG,EAAG,EAAK,EAAKkH,EAAI,EAAG44C,OAAO,GAAIA,OAAO,GAAIA,OAAO,GAAIA,OAAO,GAAIjC,Y,sCAgB/E75B,OAAQC,OAAQvgB,IAAKs8C,cAAeC,YAAaC,OAAQC,GAAIC,GAAIC,GAAIC,GAAIzC,UACrF,KAAImC,cAAgBC,aAGpB,IAAK,IAAIt/C,EAAI+C,IAAK/C,GAAKu/C,OAAQv/C,IAAK,CAMhC,IALA,IAAIwb,IAAMxb,EAAI,EACV0b,IAAM1b,EACN4/C,SAAU,EACVC,SAAW,EAERrkC,IAAM,GAAG,CAGZ,IAAIskC,KAAOz8B,QAFX7H,IAAM,GAEmBgkC,GAAK9jC,GAAK+jC,GAC/BM,KAAOz8B,OAAS9H,GAAKkkC,GAAKhkC,GAAKikC,GAE/BK,YAAcxkC,GAAK,KAAQE,GAAK,IAChCukC,UAAYzkC,GAAK,KAAQE,GAAK,IAElC,KAAIukC,SAAWZ,eAAf,CAIA,GAAIW,WAAaV,YACb,MAMJ,GAHK9jC,GAAKA,GAAKE,GAAKA,GAAO6jC,OAASA,QAChCrC,SAAS4C,KAAMC,KAAM//C,EAAG,GAEvB4/C,QAQA,CAED,IAAKllD,KAAKyiD,aAAa2C,KAAMC,MAAO,CAChCF,SAAWI,SACX,SAGJL,SAAU,EACVP,cAAgBQ,cAdXnlD,KAAKyiD,aAAa2C,KAAMC,OAAS//C,EAAIu/C,SACtCK,SAAU,EACVllD,KAAK0kD,gBAAgB/7B,OAAQC,OAAQtjB,EAAI,EAAGq/C,cAAeW,WAAYT,OAAQC,GAAIC,GAAIC,GAAIC,GAAIzC,UAC/F2C,SAAWI,WAcvB,GAAIL,QACA,Y,oIA9HoCriB,+C,0tBCVpD,kCAAiB2iB,qDAAOC,yDAASC,2DAAUC,uDAAQC,6DAAWC,iEAAaC,2DAAUC,uD,s7DCHhEP,M,8jBACVhD,UAGH,IAFA,IAAIwD,EAAIhmD,KAAKsiC,OAAS,EAClBp2B,EAAIlM,KAAKuiC,QAAU,EACdj9B,EAAI,EAAGA,GAAK0gD,EAAG1gD,IACpB,IAAK,IAAIiD,EAAI,EAAGA,GAAK2D,EAAG3D,IAEpBi6C,SAASl9C,EAAGiD,EADCjD,GAAKiD,GAAKjD,EAAI0gD,GAAKz9C,EAAI2D,EACb,EAAI,GAGnC,OAAOlM,U,4IAVoB2S,U,0pBCHdA,I,WAMjB,eAA4D,IAAhD1O,MAAgD,uDAAxCihC,yDAAehhC,OAAyB,uDAAhBihC,0DAAgB,0BACxDnlC,KAAKsiC,OAASr+B,MACdjE,KAAKuiC,QAAUr+B,O,0GAGVoH,OAEL,IADA,IAAIxL,IAAM,GACDwF,EAAI,EAAGA,EAAItF,KAAKsiC,OAAQh9B,IAAK,CAClCxF,IAAIsL,KAAK,IACT,IAAK,IAAI7C,EAAI,EAAGA,EAAIvI,KAAKuiC,QAASh6B,IAC9BzI,IAAIwF,GAAG8F,KAAKE,OAGpB,OAAOxL,S,kpECbM2lD,Q,sbACjB,iBAAYxhD,MAAOC,OAAQ8L,SAAS,iB,8HAAA,gBAChC,uBAAM/L,MAAOC,SACR+hC,SAAW,CACZggB,UAAW,CAAC,EAAG,GACfC,WAAY,CAAC,EAAG,GAChBC,kBAAmB,GACnBC,UAAW,KAEfz6C,OAAOu6B,OAAO,MAAKD,SAAUj2B,SAC7B,MAAKq2C,KAAO,GACZ,MAAKC,KAAO,EACZ,MAAKC,cAAgB,GACrB,MAAKC,kBAAoB,GACzB,MAAKC,WAAa,GAClB,MAAKC,aAAe,GACpB,MAAKC,aAAe,MAAKA,aAAarjD,KAAlB,+BACpB,MAAKsjD,kBAAoB,MAAKA,kBAAkBtjD,KAAvB,+BACzB,MAAKujD,gBAAkB,MAAKA,gBAAgBvjD,KAArB,+BAjBS,M,qEAuB7Bk/C,UAEH,IADA,IAAIsE,GAAK5jD,KAAKC,QACJ,CAEN,GADSD,KAAKC,MACL2jD,GAAK9mD,KAAKimC,SAASmgB,UACxB,OAAO,KAOX,GALApmD,KAAKqmD,KAAOrmD,KAAK+mD,SAAS,GAC1B/mD,KAAKsmD,KAAO,EACZtmD,KAAKgnD,OAAS,GACdhnD,KAAK0mD,aAAe,GACpB1mD,KAAKinD,mBACDjnD,KAAKgnD,OAAO3hD,OAAS,IAGrBrF,KAAKknD,qBACL,MAGR,GAAI1E,SACA,IAAK,IAAIl9C,EAAI,EAAGA,EAAItF,KAAKsiC,OAAQh9B,IAC7B,IAAK,IAAIiD,EAAI,EAAGA,EAAIvI,KAAKuiC,QAASh6B,IAC9Bi6C,SAASl9C,EAAGiD,EAAGvI,KAAKqmD,KAAK/gD,GAAGiD,IAIxC,OAAOvI,O,uCAMP,IAEImnD,KAFAnB,EAAIhmD,KAAKsiC,OAAS,EAClBp2B,EAAIlM,KAAKuiC,QAAU,EAEvB,GAEI,GADA4kB,KAAOnnD,KAAKonD,gBACRpnD,KAAKsmD,MAAQN,EAAI95C,GAAKlM,KAAKimC,SAASkgB,kBACpC,YAECgB,Q,sCAQT,IADA,IAAIl+B,MAAQ,EACLA,MAAQjpB,KAAKumD,eAAe,CAC/Bt9B,QACA,IAAIk+B,KAAOE,4DAAkBrnD,KAAKsiC,OAAQtiC,KAAKuiC,QAASviC,KAAKimC,UAC7D,GAAKkhB,KAAKG,QAAQtnD,KAAK6mD,gBAAiB7mD,KAAK4mD,mBAK7C,OAFAO,KAAK3wC,OAAOxW,KAAK2mD,cACjB3mD,KAAKgnD,OAAO57C,KAAK+7C,MACVA,KAGX,OAAO,O,2CAQP,IADA,IAAII,IAAM,EACHA,IAAMvnD,KAAKwmD,mBAAmB,CACjCe,MACAvnD,KAAKwnD,WAAa,GAElBxnD,KAAKqmD,KAAOrmD,KAAK+mD,SAAS,GAC1B,IAAK,IAAIzhD,EAAI,EAAGA,EAAItF,KAAKgnD,OAAO3hD,OAAQC,IAAK,CACzC,IAAI6hD,KAAOnnD,KAAKgnD,OAAO1hD,GACvB6hD,KAAKM,aACLN,KAAK3wC,OAAOxW,KAAK2mD,cAOrB,IALA3mD,KAAK0mD,aAAeniB,qDAAYvkC,KAAKgnD,OAAOz8C,SAC5CvK,KAAKymD,WAAa,GACdzmD,KAAK0mD,aAAarhD,QAClBrF,KAAKymD,WAAWr7C,KAAKpL,KAAK0mD,aAAaplC,SAEjC,CAEN,IAAIomC,UAAYnjB,qDAAYvkC,KAAKymD,YACjC,IAAKiB,UACD,MAGJ,IAAIC,MAAQ3nD,KAAK4nD,aAAa5nD,KAAK0mD,aAAcgB,WACjD,IAAKC,MACD,MAGJ,IAAIE,MAAQ7nD,KAAK4nD,aAAa5nD,KAAKymD,WAAYkB,OAC/C,IAAKE,MACD,MAGJ,IADS7nD,KAAK8nD,cAAcH,MAAOE,OAE/B,MAEJ,IAAK7nD,KAAK0mD,aAAarhD,OACnB,OAAO,GAInB,OAAO,I,mCAME0iD,MAAOZ,MAIhB,IAHA,IAAIa,KAAOlqB,IACPmqB,OAASd,KAAKe,YACdjrC,OAAS,KACJ3X,EAAI,EAAGA,EAAIyiD,MAAM1iD,OAAQC,IAAK,CACnC,IAAIoD,EAAIq/C,MAAMziD,GACV0S,EAAItP,EAAEw/C,YACNpnC,GAAK9I,EAAE,GAAKiwC,OAAO,GACnBjnC,GAAKhJ,EAAE,GAAKiwC,OAAO,GACnBvwC,EAAIoJ,GAAKA,GAAKE,GAAKA,GACnBtJ,EAAIswC,OACJA,KAAOtwC,EACPuF,OAASvU,GAGjB,OAAOuU,S,oCAEG0qC,MAAOE,OAKjB,IAII9oD,MACAopD,IACAC,UAAWC,UAAW3pB,IAAK5W,IAAKjR,MANhCyxC,QAAUX,MAAMO,YAChBK,QAAUV,MAAMK,YAChBM,MAAQD,QAAQ,GAAKD,QAAQ,GAC7BG,MAAQF,QAAQ,GAAKD,QAAQ,GAmBjC,GAfItiD,KAAK+a,IAAIynC,OAASxiD,KAAK+a,IAAI0nC,QAE3BJ,WAAyB,GADzBD,UAAaK,MAAQ,EAAI,EAAI,IACC,EAC9B/pB,IAAMmpB,MAAMa,UACZ5gC,IAAM+/B,MAAMc,WACZ9xC,MAAQ,IAIRwxC,WAAyB,GADzBD,UAAaI,MAAQ,EAAI,EAAI,IACC,EAC9B9pB,IAAMmpB,MAAMe,SACZ9gC,IAAM+/B,MAAMgB,YACZhyC,MAAQ,KAEZ9X,MAAQiB,KAAK8oD,aAAanB,MAAOS,YAE7B,OAAO,EAEX,GAAIrpD,MAAM8X,QAAU6nB,KAAO3/B,MAAM8X,QAAUiR,IAAK,CAC5CqgC,IAAMppD,MAAMwL,QACZ,IAAIe,MAAQ,EACZ,OAAQ+8C,WACJ,KAAK,EACD/8C,MAAQu8C,MAAMe,SAAW,EACzB,MACJ,KAAK,EACDt9C,MAAQu8C,MAAMc,WAAa,EAC3B,MACJ,KAAK,EACDr9C,MAAQu8C,MAAMgB,YAAc,EAC5B,MACJ,KAAK,EACDv9C,MAAQu8C,MAAMa,UAAY,EAGlCP,KAAKtxC,MAAQ,GAAK,GAAKvL,MACvBtL,KAAK+oD,SAAS,CAAChqD,MAAOopD,WAErB,GAAIppD,MAAM8X,OAAS6nB,IAAM,GAAK3/B,MAAM8X,OAASiR,IAAM,EAAG,CACvD,IAAImqB,KAAOlzC,MAAM8X,OAAS0xC,QAAQ1xC,OAC9BmyC,SAAW,EACf,OAAQX,WACJ,KAAK,EACL,KAAK,EACDW,SAAY/W,KAAO,EAAI,EAAI,EAC3B,MACJ,KAAK,EACL,KAAK,EACD+W,SAAY/W,KAAO,EAAI,EAAI,EAKnC,GAFAoW,WAAaA,UAAYW,UAAY,IACrCb,IAAMnoD,KAAK8oD,aAAajB,MAAOQ,YAE3B,OAAO,EAEX,IAAIY,IAAM,CAAC,EAAG,GACdA,IAAIpyC,OAAS9X,MAAM8X,OACnB,IAAIgtC,QAAUhtC,MAAQ,GAAK,EAC3BoyC,IAAIpF,QAAUsE,IAAItE,QAClB7jD,KAAK+oD,SAAS,CAAChqD,MAAOkqD,IAAKd,UAE1B,CACD,IAAItE,QAAUhtC,MAAQ,GAAK,EAE3B,KADAsxC,IAAMnoD,KAAK8oD,aAAajB,MAAOQ,YAE3B,OAAO,EAEX,IAAIY,KAAMjjD,KAAKorC,OAAO+W,IAAItE,QAAU9kD,MAAM8kD,SAAW,GACjDqF,KAAO,CAAC,EAAG,GACXC,KAAO,CAAC,EAAG,GACfD,KAAKryC,OAAS9X,MAAM8X,OACpBqyC,KAAKrF,QAAUoF,KACfE,KAAKtyC,OAASsxC,IAAItxC,OAClBsyC,KAAKtF,QAAUoF,KACfjpD,KAAK+oD,SAAS,CAAChqD,MAAOmqD,KAAMC,KAAMhB,MActC,OAZAR,MAAMyB,QAAQrqD,MAAM,GAAIA,MAAM,IAC9B8oD,MAAMuB,QAAQjB,IAAI,GAAIA,IAAI,KAEZ,IADdtxC,MAAQ7W,KAAK0mD,aAAa/oC,QAAQgqC,UAE9B3nD,KAAK0mD,aAAa7oC,OAAOhH,MAAO,GAChC7W,KAAKymD,WAAWr7C,KAAKu8C,SAGX,IADd9wC,MAAQ7W,KAAK0mD,aAAa/oC,QAAQkqC,UAE9B7nD,KAAK0mD,aAAa7oC,OAAOhH,MAAO,GAChC7W,KAAKymD,WAAWr7C,KAAKy8C,SAElB,I,mCAEEV,KAAMkC,UACf,IAAItqD,MAAQ,CAAC,EAAG,GACZg7B,IAAM,CAAC,EAAG,GACV10B,OAAS,EACb,OAAQgkD,UACJ,KAAK,EACDtvB,IAAM,CAAC,EAAG,GACVh7B,MAAQ,CAACooD,KAAKuB,UAAWvB,KAAKyB,SAAW,GACzCvjD,OAAS8hD,KAAKwB,WAAaxB,KAAKuB,UAAY,EAC5C,MACJ,KAAK,EACD3uB,IAAM,CAAC,EAAG,GACVh7B,MAAQ,CAACooD,KAAKwB,WAAa,EAAGxB,KAAKyB,UACnCvjD,OAAS8hD,KAAK0B,YAAc1B,KAAKyB,SAAW,EAC5C,MACJ,KAAK,EACD7uB,IAAM,CAAC,EAAG,GACVh7B,MAAQ,CAACooD,KAAKuB,UAAWvB,KAAK0B,YAAc,GAC5CxjD,OAAS8hD,KAAKwB,WAAaxB,KAAKuB,UAAY,EAC5C,MACJ,KAAK,EACD3uB,IAAM,CAAC,EAAG,GACVh7B,MAAQ,CAACooD,KAAKuB,UAAY,EAAGvB,KAAKyB,UAClCvjD,OAAS8hD,KAAK0B,YAAc1B,KAAKyB,SAAW,EAKpD,IAFA,IAAI5V,MAAQ,GACRsW,cAAgB,EACXhkD,EAAI,EAAGA,EAAID,OAAQC,IAAK,CAC7B,IAAIZ,EAAI3F,MAAM,GAAKuG,EAAIy0B,IAAI,GACvBp1B,EAAI5F,MAAM,GAAKuG,EAAIy0B,IAAI,GAC3BiZ,MAAM5nC,KAAK,MACsB,GAAnBpL,KAAKqmD,KAAK3hD,GAAGC,GAEnB2kD,cAAgBhkD,EAAI,IACpB0tC,MAAM1tC,GAAK,CAACZ,EAAGC,KAInB2kD,aAAehkD,EACXA,IACA0tC,MAAM1tC,EAAI,GAAK,OAI3B,IAAK,IAAIA,GAAI0tC,MAAM3tC,OAAS,EAAGC,IAAK,EAAGA,KAC9B0tC,MAAM1tC,KACP0tC,MAAMn1B,OAAOvY,GAAG,GAGxB,OAAQ0tC,MAAM3tC,OAASk/B,qDAAYyO,OAAS,O,+BAKvCuW,QACL,IAAK,IAAIjkD,EAAI,EAAGA,EAAIikD,OAAOlkD,OAAQC,IAAK,CACpC,IAAIvG,MAAQwqD,OAAOjkD,EAAI,GACnB6iD,IAAMoB,OAAOjkD,GACbkkD,SAAW,IAAIC,mDAAS1qD,MAAM,GAAIA,MAAM,GAAIopD,IAAI,GAAIA,IAAI,IAC5DqB,SAAShzC,OAAOxW,KAAK2mD,cACrB3mD,KAAKwnD,WAAWp8C,KAAKo+C,a,mCAGhB9kD,EAAGC,EAAG2G,OACftL,KAAKqmD,KAAK3hD,GAAGC,GAAK2G,MACL,GAATA,OACAtL,KAAKsmD,S,sCAGG5hD,EAAGC,GACf,QAAID,EAAI,GAAKC,EAAI,GAAKD,GAAK1E,KAAKsiC,QAAU39B,GAAK3E,KAAKuiC,UAGzB,GAAnBviC,KAAKqmD,KAAK3hD,GAAGC,K,wCAEPD,EAAGC,GACjB,QAAID,EAAI,GAAKC,EAAI,GAAKD,EAAI,GAAK1E,KAAKsiC,QAAU39B,EAAI,GAAK3E,KAAKuiC,UAGjC,GAAnBviC,KAAKqmD,KAAK3hD,GAAGC,Q,qHAjVQ+kD,mD,0yDCHhBA,Q,8aACjB,iBAAYzlD,MAAOC,QAAQ,iB,8HAAA,gBACvB,uBAAMD,MAAOC,SACR8iD,OAAS,GACd,MAAKQ,WAAa,GAHK,M,yEASd,OAAOxnD,KAAKgnD,S,qCAKR,OAAOhnD,KAAKwnD,gB,8IAfI70C,U,oiFCA/Bg3C,Q,kDAYOtC,KAAb,0EACI,cAAYzmC,GAAIC,GAAIihB,GAAIC,GAAI6nB,MAAOC,OAAO,6CACtC,yBACKC,IAAMlpC,GACX,MAAKmpC,IAAMlpC,GACX,MAAKmpC,IAAMloB,GACX,MAAKmoB,IAAMloB,GACX,MAAKmoB,OAAS,QACAh/C,IAAV0+C,YAAiC1+C,IAAV2+C,OACvB,MAAKT,QAAQQ,MAAOC,OARc,MAD9C,wDA2EYnlD,EAAGC,GAEP,OADA3E,KAAKkqD,OAAOxlD,EAAI,IAAMC,GAAK,EACpB3E,OA7Ef,+BAkFasY,IACL,IAAK,IAAIjP,OAAOrJ,KAAKkqD,OAAQ,CACzB,IAAI7/C,MAAQhB,IAAI2B,MAAM,KACtBsN,GAAG3N,SAASN,MAAM,IAAKM,SAASN,MAAM,KAE1C,OAAOrK,OAvFf,mCA2FQ,OADAA,KAAKkqD,OAAS,GACPlqD,OA3Ff,+BA6FamqD,gBAKL,IAJA,IAAIluB,KAAOj8B,KAAK8pD,IAAM,EAClBM,MAAQpqD,KAAKgqD,IAAM,EACnB9tB,IAAMl8B,KAAK+pD,IAAM,EACjBM,OAASrqD,KAAKiqD,IAAM,EACfvlD,EAAIu3B,KAAMv3B,GAAK0lD,MAAO1lD,IAC3B,IAAK,IAAIC,EAAIu3B,IAAKv3B,GAAK0lD,OAAQ1lD,IACvBD,GAAKu3B,MAAQv3B,GAAK0lD,OAASzlD,GAAKu3B,KAAOv3B,GAAK0lD,QAG5CF,eAAezlD,EAAGC,IAGtB3E,KAAKopD,QAAQ1kD,EAAGC,GAGxB,OAAO3E,OA7Gf,8BAgHQ0B,QAAQyZ,IAAI,OAAQnb,KAAK8pD,IAAK9pD,KAAK+pD,IAAK/pD,KAAKgqD,IAAKhqD,KAAKiqD,OAhH/D,8BAkHYE,eAAgBG,kBAKpB,IAJA,IAAIruB,KAAOj8B,KAAK8pD,IAAM,EAClBM,MAAQpqD,KAAKgqD,IAAM,EACnB9tB,IAAMl8B,KAAK+pD,IAAM,EACjBM,OAASrqD,KAAKiqD,IAAM,EACfvlD,EAAIu3B,KAAMv3B,GAAK0lD,MAAO1lD,IAC3B,IAAK,IAAIC,EAAIu3B,IAAKv3B,GAAK0lD,OAAQ1lD,IAC3B,GAAID,GAAKu3B,MAAQv3B,GAAK0lD,OAASzlD,GAAKu3B,KAAOv3B,GAAK0lD,QAC5C,IAAKF,eAAezlD,EAAGC,GACnB,OAAO,OAIX,IAAK2lD,iBAAiB5lD,EAAGC,GACrB,OAAO,EAKvB,OAAO,IArIf,6BA0IW4lD,aAMH,IALA,IAAItuB,KAAOj8B,KAAK8pD,IAAM,EAClBM,MAAQpqD,KAAKgqD,IAAM,EACnB9tB,IAAMl8B,KAAK+pD,IAAM,EACjBM,OAASrqD,KAAKiqD,IAAM,EAEfvlD,EAAIu3B,KAAMv3B,GAAK0lD,MAAO1lD,IAC3B,IAAK,IAAIC,EAAIu3B,IAAKv3B,GAAK0lD,OAAQ1lD,IAU3B4lD,YAAY7lD,EAAGC,EATXD,EAAI,IAAMC,KAAK3E,KAAKkqD,OACZ,EAEHxlD,GAAKu3B,MAAQv3B,GAAK0lD,OAASzlD,GAAKu3B,KAAOv3B,GAAK0lD,OACzC,EAGA,KAzJ5B,kCAgKQ,MAAO,CAACrkD,KAAKorC,OAAOpxC,KAAK8pD,IAAM9pD,KAAKgqD,KAAO,GAAIhkD,KAAKorC,OAAOpxC,KAAK+pD,IAAM/pD,KAAKiqD,KAAO,MAhK1F,gCAkKgB,OAAOjqD,KAAK8pD,MAlK5B,iCAmKiB,OAAO9pD,KAAKgqD,MAnK7B,+BAoKe,OAAOhqD,KAAK+pD,MApK3B,kCAqKkB,OAAO/pD,KAAKiqD,OArK9B,sCAgB0BvlD,EAAGC,EAAGmc,GAAIE,GAAIhR,SAChC,IAAI0uB,IAAM1uB,QAAQi2C,UAAU,GACxBn+B,IAAM9X,QAAQi2C,UAAU,GACxBhiD,MAAQsgC,2DAAkB7F,IAAK5W,KACnC4W,IAAM1uB,QAAQk2C,WAAW,GACzBp+B,IAAM9X,QAAQk2C,WAAW,GACzB,IAAIhiD,OAASqgC,2DAAkB7F,IAAK5W,KACpC,GAAU,GAANhH,GAAS,CACT,IAAIihB,GAAKp9B,EAAIqB,KAAKyhB,MAAM8c,0DAAmBrgC,QAC3C,OAAO,IAAIlE,KAAK0E,EAAI,EAAGq9B,GAAIr9B,EAAIT,MAAO89B,GAAK79B,OAAS,EAAGQ,EAAGC,GAE9D,IAAW,GAAPmc,GAAU,CACV,IAAIihB,GAAKp9B,EAAIqB,KAAKyhB,MAAM8c,0DAAmBrgC,QAC3C,OAAO,IAAIlE,KAAK0E,EAAIT,MAAO89B,GAAIr9B,EAAI,EAAGq9B,GAAK79B,OAAS,EAAGQ,EAAGC,GAE9D,GAAU,GAANqc,GAAS,CACT,IAAI8gB,GAAKp9B,EAAIsB,KAAKyhB,MAAM8c,0DAAmBtgC,OAC3C,OAAO,IAAIjE,KAAK8hC,GAAIn9B,EAAI,EAAGm9B,GAAK79B,MAAQ,EAAGU,EAAIT,OAAQQ,EAAGC,GAE9D,IAAW,GAAPqc,GAAU,CACV,IAAI8gB,GAAKp9B,EAAIsB,KAAKyhB,MAAM8c,0DAAmBtgC,OAC3C,OAAO,IAAIjE,KAAK8hC,GAAIn9B,EAAIT,OAAQ49B,GAAK79B,MAAQ,EAAGU,EAAI,EAAGD,EAAGC,GAE9D,MAAM,IAAI+P,MAAM,8BAvCxB,yCA4C8B2yB,GAAIC,GAAIt3B,SAC9B,IAAI0uB,IAAM1uB,QAAQi2C,UAAU,GACxBn+B,IAAM9X,QAAQi2C,UAAU,GACxBhiD,MAAQsgC,2DAAkB7F,IAAK5W,KACnC4W,IAAM1uB,QAAQk2C,WAAW,GACzBp+B,IAAM9X,QAAQk2C,WAAW,GACzB,IAAIhiD,OAASqgC,2DAAkB7F,IAAK5W,KAChClH,GAAKymB,GAAKrhC,KAAKyhB,MAAM8c,0DAAmBtgC,OACxC4c,GAAKymB,GAAKthC,KAAKyhB,MAAM8c,0DAAmBrgC,QAG5C,OAAO,IAAIlE,KAAK4gB,GAAIC,GAFXD,GAAK3c,MAAQ,EACb4c,GAAK3c,OAAS,KAtD/B,mCA4DwB0iC,WAAYC,YAAa72B,SACzC,IAAI0uB,IAAM1uB,QAAQi2C,UAAU,GACxBn+B,IAAM9X,QAAQi2C,UAAU,GACxBhiD,MAAQsgC,2DAAkB7F,IAAK5W,KACnC4W,IAAM1uB,QAAQk2C,WAAW,GACzBp+B,IAAM9X,QAAQk2C,WAAW,GACzB,IAAIhiD,OAASqgC,2DAAkB7F,IAAK5W,KAChCmU,KAAO2K,WAAa3iC,MAAQ,EAC5Bi4B,IAAM2K,YAAc3iC,OAAS,EAC7B0c,GAAK,EAAI5a,KAAKyhB,MAAM8c,0DAAmBtI,MACvCpb,GAAK,EAAI7a,KAAKyhB,MAAM8c,0DAAmBrI,KAG3C,OAAO,IAAIl8B,KAAK4gB,GAAIC,GAFXD,GAAK3c,MAAQ,EACb4c,GAAK3c,OAAS,OAxE/B,MAA0BylD,SA+KbF,SAAb,qFACI,kBAAY9gC,OAAQC,OAAQ4hC,KAAMC,MAAM,kDACpC,2BACKC,QAAU/hC,OACf,OAAKgiC,QAAU/hC,OACf,OAAKgiC,MAAQJ,KACb,OAAKK,MAAQJ,KACb,OAAKK,gBAAiB,EANc,OAD5C,4DAgBQppD,QAAQyZ,IAAI,WAAYnb,KAAK0qD,QAAS1qD,KAAK2qD,QAAS3qD,KAAK4qD,MAAO5qD,KAAK6qD,SAhB7E,8BAkBYV,eAAgBG,kBACpB,IAAIrpC,GAAKjhB,KAAK0qD,QACVxpC,GAAKlhB,KAAK2qD,QACV7pC,GAAK9gB,KAAK4qD,MAAQ3pC,GAClBD,GAAKhhB,KAAK6qD,MAAQ3pC,GAClB7b,OAAS,EAAIW,KAAK8hB,IAAI9hB,KAAK+a,IAAID,IAAK9a,KAAK+a,IAAIC,KAC7CF,KACAA,IAAU9a,KAAK+a,IAAID,KAEnBE,KACAA,IAAUhb,KAAK+a,IAAIC,KAKvB,IAHA,IAAI+pC,GAAK/pC,GACLgqC,IAAMlqC,GACNmqC,IAAK,EACA3lD,EAAI,EAAGA,EAAID,OAAQC,IAAK,CAC7B,IAAIZ,EAAIuc,GAAK3b,EAAIwb,GACbnc,EAAIuc,GAAK5b,EAAI0b,GAUjB,GATKspC,iBAAiB5lD,EAAGC,KACrBsmD,IAAK,GAEJd,eAAezlD,EAAIqmD,GAAIpmD,EAAIqmD,MAC5BC,IAAK,GAEJd,eAAezlD,EAAIqmD,GAAIpmD,EAAIqmD,MAC5BC,IAAK,IAEJA,GAAI,CACL5lD,OAASC,EACTtF,KAAK4qD,MAAQlmD,EAAIoc,GACjB9gB,KAAK6qD,MAAQlmD,EAAIqc,GACjB,OAOR,GAAc,GAAV3b,OACA,OAAO,EAGX,GAAc,GAAVA,QAAe8kD,eAAenqD,KAAK4qD,MAAQ9pC,GAAI9gB,KAAK6qD,MAAQ7pC,IAC5D,OAAO,EAcX,IAAIkqC,gBAAkBf,eAAenqD,KAAK4qD,MAAQ9pC,GAAKiqC,GAAI/qD,KAAK6qD,MAAQ7pC,GAAKgqC,IACzEG,iBAAmBhB,eAAenqD,KAAK4qD,MAAQ9pC,GAAKiqC,GAAI/qD,KAAK6qD,MAAQ7pC,GAAKgqC,IAE9E,OADAhrD,KAAK8qD,eAAiBX,eAAenqD,KAAK4qD,MAAQ9pC,GAAI9gB,KAAK6qD,MAAQ7pC,KAC9DkqC,iBAAkBC,kBAAoBnrD,KAAK8qD,iBA9ExD,6BAsFWP,aACH,IAAItpC,GAAKjhB,KAAK0qD,QACVxpC,GAAKlhB,KAAK2qD,QACV7pC,GAAK9gB,KAAK4qD,MAAQ3pC,GAClBD,GAAKhhB,KAAK6qD,MAAQ3pC,GAClB7b,OAAS,EAAIW,KAAK8hB,IAAI9hB,KAAK+a,IAAID,IAAK9a,KAAK+a,IAAIC,KAC7CF,KACAA,IAAU9a,KAAK+a,IAAID,KAEnBE,KACAA,IAAUhb,KAAK+a,IAAIC,KAEvB,IAAK,IAAI1b,EAAI,EAAGA,EAAID,OAAQC,IAAK,CAG7BilD,YAFQtpC,GAAK3b,EAAIwb,GACTI,GAAK5b,EAAI0b,GACC,GAEtB,OAAO,IAvGf,0CAyGwBoqC,sBAChB,GAAKprD,KAAK8qD,eAAV,CAGA,IAAI7pC,GAAKjhB,KAAK0qD,QACVxpC,GAAKlhB,KAAK2qD,QACV7pC,GAAK9gB,KAAK4qD,MAAQ3pC,GAClBD,GAAKhhB,KAAK6qD,MAAQ3pC,GAClBJ,KACAA,IAAU9a,KAAK+a,IAAID,KAEnBE,KACAA,IAAUhb,KAAK+a,IAAIC,KAEvB,IAAI+pC,GAAK/pC,GACLgqC,IAAMlqC,GACVsqC,qBAAqBprD,KAAK4qD,MAAQ9pC,GAAI9gB,KAAK6qD,MAAQ7pC,IACnDoqC,qBAAqBprD,KAAK4qD,MAAQG,GAAI/qD,KAAK6qD,MAAQG,IACnDI,qBAAqBprD,KAAK4qD,MAAQG,GAAI/qD,KAAK6qD,MAAQG,QA3H3D,sCAS0BtmD,EAAGC,EAAGmc,GAAIE,GAAIhR,SAChC,IAAI0uB,IAAM1uB,QAAQq7C,eAAe,GAC7BvjC,IAAM9X,QAAQq7C,eAAe,GAC7BhmD,OAASk/B,2DAAkB7F,IAAK5W,KACpC,OAAO,IAAI9nB,KAAK0E,EAAGC,EAAGD,EAAIoc,GAAKzb,OAAQV,EAAIqc,GAAK3b,YAbxD,UAA8BskD,U,6nEClLTjE,S,gbACjB,kBAAYzhD,MAAOC,QAAsB,UAAd8L,QAAc,uDAAJ,GAAI,uCACrC,uBAAM/L,MAAOC,SACR+hC,SAAW,CACZqlB,KAAM,CAAC,EAAG,EAAG,EAAG,GAChBC,QAAS,CAAC,EAAG,EAAG,EAAG,EAAG,GACtBrI,SAAU,GAEd,MAAK/c,WAAWn2B,SAChB,MAAKw7C,MAAQ3W,gDAAK,MAAK5O,SAASid,UAChC,MAAKmD,KAAO,MAAKU,SAAS,GATW,M,yEAe/B0E,aACN,IAAK,IAAInmD,EAAI,EAAGA,EAAItF,KAAKsiC,OAAQh9B,IAC7B,IAAK,IAAIiD,EAAI,EAAGA,EAAIvI,KAAKuiC,QAASh6B,IAC9BvI,KAAKqmD,KAAK/gD,GAAGiD,GAAMg8B,0DAAmBknB,YAAc,EAAI,EAGhE,OAAOzrD,O,iCAMAgQ,SAAWrE,OAAOu6B,OAAOlmC,KAAKimC,SAAUj2B,W,0BAC/CtL,EAAGC,EAAG2G,OAAStL,KAAKqmD,KAAK3hD,GAAGC,GAAK2G,Q,6BAC9Bk3C,UAIH,IAHA,IAAIkJ,OAAS1rD,KAAK+mD,SAAS,GACvBuE,KAAOtrD,KAAKimC,SAASqlB,KACrBC,QAAUvrD,KAAKimC,SAASslB,QACnBhjD,EAAI,EAAGA,EAAIvI,KAAKuiC,QAASh6B,IAAK,CACnC,IAAIojD,UAAY,EACZC,WAAa,EACa,GAA1B5rD,KAAKimC,SAASid,WACdyI,UAAY,EACZC,WAAarjD,EAAI,GAErB,IAAK,IAAIjD,EAAIsmD,WAAYtmD,EAAItF,KAAKsiC,OAAQh9B,GAAKqmD,UAAW,CACtD,IAAIE,IAAM7rD,KAAKqmD,KAAK/gD,GAAGiD,GACnBujD,OAAS9rD,KAAK+rD,cAAczmD,EAAGiD,GAC/BsjD,MAAmC,GAA5BN,QAAQ5tC,QAAQmuC,QACvBJ,OAAOpmD,GAAGiD,GAAK,EAETsjD,MAAgC,GAAzBP,KAAK3tC,QAAQmuC,UAC1BJ,OAAOpmD,GAAGiD,GAAK,IAI3BvI,KAAKqmD,KAAOqF,OACZlJ,UAAYxiD,KAAKgsD,iBAAiBxJ,Y,uCAErBA,UACb,IAAK,IAAIj6C,EAAI,EAAGA,EAAIvI,KAAKuiC,QAASh6B,IAAK,CACnC,IAAIojD,UAAY,EACZC,WAAa,EACa,GAA1B5rD,KAAKimC,SAASid,WACdyI,UAAY,EACZC,WAAarjD,EAAI,GAErB,IAAK,IAAIjD,EAAIsmD,WAAYtmD,EAAItF,KAAKsiC,OAAQh9B,GAAKqmD,UAC3CnJ,SAASl9C,EAAGiD,EAAGvI,KAAKqmD,KAAK/gD,GAAGiD,O,oCAO1B8+B,GAAIC,IAEd,IADA,IAAIrqB,OAAS,EACJ3X,EAAI,EAAGA,EAAItF,KAAKwrD,MAAMnmD,OAAQC,IAAK,CACxC,IAAIy0B,IAAM/5B,KAAKwrD,MAAMlmD,GACjBZ,EAAI2iC,GAAKtN,IAAI,GACbp1B,EAAI2iC,GAAKvN,IAAI,GACbr1B,EAAI,GAAKA,GAAK1E,KAAKsiC,QAAU39B,EAAI,GAAKA,GAAK3E,KAAKuiC,UAGpDtlB,QAA8B,GAAnBjd,KAAKqmD,KAAK3hD,GAAGC,GAAU,EAAI,GAE1C,OAAOsY,S,8BAQHulC,SAAUl3C,MAAO2gD,oBAChB3gD,QACDA,MAAQ,GACZ,IAAI4gD,aAAe,GACfC,aAAe,GAEfR,UAAY,EACZS,YAAc,CAAC,EAAG,GACQ,GAA1BpsD,KAAKimC,SAASid,WACdyI,UAAY,EACZS,YAAc,CAAC,EAAG,IAEtB,IAAK,IAAIznD,EAAI,EAAGA,EAAI3E,KAAKuiC,QAAS59B,IAC9B,IAAK,IAAID,EAAI0nD,YAAYznD,EAAI,GAAID,EAAI1E,KAAKsiC,OAAQ59B,GAAKinD,UACnD,GAAI3rD,KAAKqsD,WAAW3nD,EAAGC,EAAG2G,OAAQ,CAC9B,IAAIsiC,EAAI,CAAClpC,EAAGC,GACZwnD,aAAansD,KAAKssD,UAAU1e,IAAMA,EAClCse,aAAa9gD,KAAK,CAAC1G,EAAGC,IAIlC,IAAI5F,MAAQmtD,aAAa3nB,2DAAkB,EAAG2nB,aAAa7mD,OAAS,IAChEgE,IAAMrJ,KAAKssD,UAAUvtD,OACrB2oD,UAAY,GAKhB,IAJAA,UAAUr+C,KAAOtK,aACVotD,aAAa9iD,KAEpBrJ,KAAKusD,eAAe7E,UAAWyE,aAAc,CAACptD,QAAQ,EAAOuM,OACtDK,OAAOg1B,KAAKwrB,cAAc9mD,OAAS,GAAG,CAEzC,IAAIuoC,GAAI5tC,KAAKwsD,WAAW9E,UAAWyE,cAC/BzsD,KAAOkuC,GAAE,GACT6e,GAAK7e,GAAE,GAEP8e,MAAQ,GACZA,MAAM1sD,KAAKssD,UAAU5sD,OAASA,KAC9BM,KAAKusD,eAAeG,MAAOP,aAAc,CAACzsD,OAAO,EAAM4L,OAEvD,IAAIqhD,SAAsC,GAA1B3sD,KAAKimC,SAASid,SAAgBljD,KAAK4sD,oBAAsB5sD,KAAK6sD,mBAG9E,IAAK,IAAIC,KAFTH,SAASI,KAAK/sD,KAAMysD,GAAI/sD,KAAMgoD,UAAWyE,aAAc7gD,MAAO2gD,oBAEhDS,MAAO,CACjB,IAAIM,GAAKN,MAAMI,GACf9sD,KAAKqmD,KAAK2G,GAAG,IAAIA,GAAG,IAAM1hD,MAC1Bo8C,UAAUoF,GAAKE,UACRb,aAAaW,IAG5BtK,UAAYxiD,KAAKgsD,iBAAiBxJ,Y,iCAM3BkF,UAAWyE,cAIlB,IAHA,IAAIzsD,KAAO,CAAC,EAAG,GAAI+sD,GAAK,CAAC,EAAG,GACxBQ,cAAgBthD,OAAOg1B,KAAK+mB,WAC5BwF,iBAAmBvhD,OAAOg1B,KAAKwrB,cAC1B7mD,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,GAAI2nD,cAAc5nD,OAAS6nD,iBAAiB7nD,OAAQ,CAChD,IAAIs7B,KAAOssB,cACXR,GAAK/E,UAAU/mB,KAAK4D,2DAAkB,EAAG5D,KAAKt7B,OAAS,KACvD3F,KAAOM,KAAKmtD,YAAYV,GAAIN,kBAE3B,CACD,IAAIxrB,MAAOusB,iBACXxtD,KAAOysD,aAAaxrB,MAAK4D,2DAAkB,EAAG5D,MAAKt7B,OAAS,KAC5DonD,GAAKzsD,KAAKmtD,YAAYztD,KAAMgoD,WAGhC,IADKhoD,KAAK,GAAK+sD,GAAG,KAAO/sD,KAAK,GAAK+sD,GAAG,KAAO/sD,KAAK,GAAK+sD,GAAG,KAAO/sD,KAAK,GAAK+sD,GAAG,IACtE,GACJ,MAIR,MAAO,CAAC/sD,KAAM+sD,M,kCAENW,MAAOhjD,OACf,IAAIijD,SAAW,KACXC,QAAU,KACd,IAAK,IAAIR,KAAK1iD,MAAO,CACjB,IAAIwjC,EAAIxjC,MAAM0iD,GACVp1C,GAAKk2B,EAAE,GAAKwf,MAAM,KAAOxf,EAAE,GAAKwf,MAAM,KAAOxf,EAAE,GAAKwf,MAAM,KAAOxf,EAAE,GAAKwf,MAAM,KACnE,MAAXE,SAAmB51C,EAAI41C,WACvBA,QAAU51C,EACV21C,SAAWzf,GAGnB,OAAOyf,W,qCAEI3F,UAAWyE,aAAcoB,MAAOC,iBAAkBliD,OAC7D,KAAOiiD,MAAMloD,OAAS,GAAG,CACrB,IAAIuoC,EAAI2f,MAAM1vC,OAAO,EAAG,GAAG,GACvB4vC,WAAK,EAELA,MAD0B,GAA1BztD,KAAKimC,SAASid,SACN,CACJ,CAACtV,EAAE,GAAK,EAAGA,EAAE,IACb,CAACA,EAAE,GAAK,EAAGA,EAAE,GAAK,GAClB,CAACA,EAAE,GAAK,EAAGA,EAAE,GAAK,GAClB,CAACA,EAAE,GAAK,EAAGA,EAAE,IACb,CAACA,EAAE,GAAK,EAAGA,EAAE,GAAK,GAClB,CAACA,EAAE,GAAK,EAAGA,EAAE,GAAK,IAId,CACJ,CAACA,EAAE,GAAK,EAAGA,EAAE,IACb,CAACA,EAAE,GAAK,EAAGA,EAAE,IACb,CAACA,EAAE,GAAIA,EAAE,GAAK,GACd,CAACA,EAAE,GAAIA,EAAE,GAAK,IAGtB,IAAK,IAAItoC,EAAI,EAAGA,EAAImoD,MAAMpoD,OAAQC,IAAK,CACnC,IAAI+D,IAAMrJ,KAAKssD,UAAUmB,MAAMnoD,IACT,MAAlBoiD,UAAUr+C,MAAgBrJ,KAAKqsD,WAAWoB,MAAMnoD,GAAG,GAAImoD,MAAMnoD,GAAG,GAAIgG,SACpEo8C,UAAUr+C,KAAOokD,MAAMnoD,GAClBkoD,yBACMrB,aAAa9iD,KAExBkkD,MAAMniD,KAAKqiD,MAAMnoD,S,yCAKdmnD,GAAI/sD,KAAMgoD,UAAWyE,aAAc7gD,MAAO2gD,oBACzD,IAAIr/C,EAAGhE,EACHlJ,KAAK,GAAK+sD,GAAG,IACb7/C,EAAIlN,KACJkJ,EAAI6jD,KAGJ7/C,EAAI6/C,GACJ7jD,EAAIlJ,MAER,IAAK,IAAIolD,GAAKl4C,EAAE,GAAIk4C,IAAMl8C,EAAE,GAAIk8C,KAAM,CAClC9kD,KAAKqmD,KAAKvB,IAAIl4C,EAAE,IAAMtB,MACtB,IAAIsiC,EAAI,CAACkX,GAAIl4C,EAAE,IACX8gD,KAAO1tD,KAAKssD,UAAU1e,GAC1B8Z,UAAUgG,MAAQ9f,SACXue,aAAauB,MAEpBzB,oBAAsBr/C,EAAE,GAAKhE,EAAE,IAC/BqjD,mBAAmBr/C,EAAG,CAAChE,EAAE,GAAIgE,EAAE,KAGnC,IAAIlI,EAAIkE,EAAE,GACNlJ,KAAK,GAAK+sD,GAAG,IACb7/C,EAAIlN,KACJkJ,EAAI6jD,KAGJ7/C,EAAI6/C,GACJ7jD,EAAIlJ,MAER,IAAK,IAAIulD,GAAKr4C,EAAE,GAAIq4C,GAAKr8C,EAAE,GAAIq8C,KAAM,CACjCjlD,KAAKqmD,KAAK3hD,GAAGugD,IAAM35C,MACnB,IAAIsiC,IAAI,CAAClpC,EAAGugD,IACRyI,MAAO1tD,KAAKssD,UAAU1e,KAC1B8Z,UAAUgG,OAAQ9f,WACXue,aAAauB,OAEpBzB,oBAAsBr/C,EAAE,GAAKhE,EAAE,IAC/BqjD,mBAAmB,CAACrjD,EAAE,GAAIgE,EAAE,IAAK,CAAChE,EAAE,GAAIA,EAAE,O,0CAG9B6jD,GAAI/sD,KAAMgoD,UAAWyE,aAAc7gD,MAAO2gD,oBAC1D,IAAIr/C,EAAGhE,EACHlJ,KAAK,GAAK+sD,GAAG,IACb7/C,EAAIlN,KACJkJ,EAAI6jD,KAGJ7/C,EAAI6/C,GACJ7jD,EAAIlJ,MAKR,IAFA,IAAIolD,GAAKl4C,EAAE,GACPq4C,GAAKr4C,EAAE,GACFk4C,IAAMl8C,EAAE,IAAMq8C,IAAMr8C,EAAE,IAAK,CAChC,IAAI+kD,UAAY,EACZ1I,GAAKr8C,EAAE,IACPq8C,KACA0I,UAAY,GAEP1I,GAAKr8C,EAAE,KACZq8C,KACA0I,UAAY,GAEZ7I,GAAKl8C,EAAE,GACPk8C,IAAM6I,UAED7I,GAAKl8C,EAAE,IAGPA,EAAE,GAAK,EAFZk8C,IAAM6I,UAQN7I,IAAM6I,UAEV3tD,KAAKqmD,KAAKvB,IAAIG,IAAM35C,MACpB,IAAIsiC,EAAI,CAACkX,GAAIG,IACTyI,KAAO1tD,KAAKssD,UAAU1e,GAC1B8Z,UAAUgG,MAAQ9f,SACXue,aAAauB,MAEpBzB,oBACAA,mBAAmBvsD,KAAM+sD,M,iCAGtB/nD,EAAGC,EAAG2G,OACb,OAAO5G,GAAK,GAAKA,EAAI1E,KAAKsiC,QAAU39B,GAAK,GAAKA,EAAI3E,KAAKuiC,SAAWviC,KAAKqmD,KAAK3hD,GAAGC,IAAM2G,Q,gCAE/EsiC,GAAK,OAAOA,EAAE,GAAK,IAAMA,EAAE,Q,sHAjTHj7B,+C,2uECVtC,IAAMi7C,SAAW,CACb,KAAQvG,+CACR,SAAYoC,oDAOK9D,O,obACjB,gBAAY1hD,MAAOC,QAAsB,UAAd8L,QAAc,uDAAJ,GAAI,qCACrC,uBAAM/L,MAAOC,SACR+hC,SAAWt6B,OAAOu6B,OAAO,CAC1B+f,UAAW,CAAC,EAAG,GACfC,WAAY,CAAC,EAAG,GAChBmF,eAAgB,CAAC,EAAG,IACpBwC,cAAe,GACfzH,UAAW,KACZp2C,SACH,MAAK89C,UAAY,CACb,KAAQ,EACR,SAAY,GAEhB,MAAKzH,KAAO,GACZ,MAAK0H,iBAAmB,GACxB,MAAKC,OAAS,GACd,MAAK1H,KAAO,EACZ,MAAKK,aAAe,MAAKA,aAAarjD,KAAlB,+BACpB,MAAKsjD,kBAAoB,MAAKA,kBAAkBtjD,KAAvB,+BACzB,MAAKujD,gBAAkB,MAAKA,gBAAgBvjD,KAArB,+BACvB,MAAK2qD,sBAAwB,MAAKA,sBAAsB3qD,KAA3B,+BApBQ,M,oEAsBlCk/C,UACHxiD,KAAKgnD,OAAS,GACdhnD,KAAKwnD,WAAa,GAClBxnD,KAAKqmD,KAAOrmD,KAAK+mD,SAAS,GAC1B/mD,KAAKguD,OAAS,GACdhuD,KAAKsmD,KAAO,EACZ,IAAI4H,MAAQluD,KAAKsiC,OAAS,IAAMtiC,KAAKuiC,QAAU,GAC/CviC,KAAKmuD,aACL,IACIC,cADAtH,GAAK5jD,KAAKC,MAEd,EAAG,CAGC,GAFAirD,cAAgB,EACPlrD,KAAKC,MACL2jD,GAAK9mD,KAAKimC,SAASmgB,UACxB,MAGJ,IAAIiI,KAAOruD,KAAKsuD,YAChB,IAAKD,KACD,MAEJ,IAAIhkD,MAAQgkD,KAAKrjD,MAAM,KACnBtG,EAAIiG,SAASN,MAAM,IACnB1F,EAAIgG,SAASN,MAAM,IACnB0vB,IAAM/5B,KAAKuuD,qBAAqB7pD,EAAGC,GACvC,GAAKo1B,IAAL,CAKA,IAAIy0B,gBAAkB,EACtB,GAEI,GADAA,kBACIxuD,KAAKyuD,YAAY/pD,EAAGC,EAAGo1B,IAAI,GAAIA,IAAI,IAAK,CAExC/5B,KAAK0uD,wBAAwBhqD,EAAGC,GAChC3E,KAAK0uD,wBAAwBhqD,EAAIq1B,IAAI,GAAIp1B,EAAIo1B,IAAI,IACjD,aAECy0B,gBAAkBxuD,KAAK+tD,kBAChC,IAAK,IAAI58C,MAAMnR,KAAKguD,OACZhuD,KAAKguD,OAAO78C,IAAM,GAClBi9C,uBAGHpuD,KAAKsmD,KAAO4H,KAAOluD,KAAKimC,SAAS4nB,eAAiBO,eAE3D,GADApuD,KAAK2uD,YACDnM,SACA,IAAK,IAAIl9C,EAAI,EAAGA,EAAItF,KAAKsiC,OAAQh9B,IAC7B,IAAK,IAAIiD,EAAI,EAAGA,EAAIvI,KAAKuiC,QAASh6B,IAC9Bi6C,SAASl9C,EAAGiD,EAAGvI,KAAKqmD,KAAK/gD,GAAGiD,IAMxC,OAFAvI,KAAKguD,OAAS,GACdhuD,KAAKqmD,KAAO,GACLrmD,O,mCAEE0E,EAAGC,EAAG2G,OACF,GAATA,OAAuB,GAATA,OACdtL,KAAKqmD,KAAK3hD,GAAGC,GAAK,EAClB3E,KAAKsmD,QAGLtmD,KAAKguD,OAAOtpD,EAAI,IAAMC,GAAK,I,sCAGnBD,EAAGC,GACf,QAAID,EAAI,GAAKC,EAAI,GAAKD,GAAK1E,KAAKsiC,QAAU39B,GAAK3E,KAAKuiC,UAGzB,GAAnBviC,KAAKqmD,KAAK3hD,GAAGC,K,wCAEPD,EAAGC,GACjB,QAAID,EAAI,GAAKC,EAAI,GAAKD,EAAI,GAAK1E,KAAKsiC,QAAU39B,EAAI,GAAK3E,KAAKuiC,UAGjC,GAAnBviC,KAAKqmD,KAAK3hD,GAAGC,K,4CAEHD,EAAGC,GAAK3E,KAAKguD,OAAOtpD,EAAI,IAAMC,GAAK,I,mCAGrD,IAAI0iC,GAAKrhC,KAAKyhB,MAAMznB,KAAKsiC,OAAS,GAC9BgF,GAAKthC,KAAKyhB,MAAMznB,KAAKuiC,QAAU,GAC/B4kB,KAAOE,kEAAwBhgB,GAAIC,GAAItnC,KAAKimC,UAChDjmC,KAAKgnD,OAAO57C,KAAK+7C,MACjBA,KAAK3wC,OAAOxW,KAAK2mD,gB,kCAMjB,IAAIiI,MAAQ,GACRC,MAAQ,GACZ,IAAK,IAAI19C,OAAMnR,KAAKguD,OAEJ,GADDhuD,KAAKguD,OAAO78C,KAEnB09C,MAAMzjD,KAAK+F,KAGXy9C,MAAMxjD,KAAK+F,KAGnB,IAAIiX,IAAOymC,MAAMxpD,OAASwpD,MAAQD,MAClC,IAAKxmC,IAAI/iB,OACL,OAAO,KAEX,IAAI8L,GAAKozB,qDAAYnc,IAAIkB,QAEzB,cADOtpB,KAAKguD,OAAO78C,IACZA,K,kCAMCzM,EAAGC,EAAGmc,GAAIE,IAClB,IAAI8tC,YAAcvqB,8DAAqBvkC,KAAK8tD,WAExCiB,QADOnB,SAASkB,aACDE,eAAetqD,EAAGC,EAAGmc,GAAIE,GAAIhhB,KAAKimC,UACrD,QAAK8oB,QAAQzH,QAAQtnD,KAAK6mD,gBAAiB7mD,KAAK4mD,qBAKhDmI,QAAQv4C,OAAOxW,KAAK2mD,cAEhBoI,mBAAmB1H,gDACnBrnD,KAAKgnD,OAAO57C,KAAK2jD,SAEjBA,mBAAmBtF,qDACnBsF,QAAQE,oBAAoBjvD,KAAKiuD,uBACjCjuD,KAAKwnD,WAAWp8C,KAAK2jD,WAElB,K,8CAEa1nB,GAAIC,IAExB,IADA,IAAI4nB,OAASra,mDACJvvC,EAAI,EAAGA,EAAI4pD,OAAO7pD,OAAQC,IAAK,CACpC,IAAIwhB,MAAQooC,OAAO5pD,GACfZ,EAAI2iC,GAAKvgB,MAAM,GACfniB,EAAI2iC,GAAKxgB,MAAM,UACZ9mB,KAAKguD,OAAOtpD,EAAI,IAAMC,GAC7BD,EAAI2iC,GAAK,EAAIvgB,MAAM,GACnBniB,EAAI2iC,GAAK,EAAIxgB,MAAM,UACZ9mB,KAAKguD,OAAOtpD,EAAI,IAAMC,M,2CAMhB0iC,GAAIC,IACrB,GAAID,IAAM,GAAKC,IAAM,GAAKD,IAAMrnC,KAAKsiC,OAAS,GAAKgF,IAAMtnC,KAAKuiC,QAAU,EACpE,OAAO,KAIX,IAFA,IAAItlB,OAAS,KACTiyC,OAASra,mDACJvvC,EAAI,EAAGA,EAAI4pD,OAAO7pD,OAAQC,IAAK,CACpC,IAAIwhB,MAAQooC,OAAO5pD,GACfZ,EAAI2iC,GAAKvgB,MAAM,GACfniB,EAAI2iC,GAAKxgB,MAAM,GACnB,IAAK9mB,KAAKqmD,KAAK3hD,GAAGC,GAAI,CAClB,GAAIsY,OACA,OAAO,KAEXA,OAAS6J,OAIjB,OAAK7J,OAGE,EAAEA,OAAO,IAAKA,OAAO,IAFjB,O,kCAQX,IAAIvT,KAAO1J,KAAKqmD,KAChB,SAAS8D,eAAezlD,EAAGC,GACvB,OAAsB,GAAd+E,KAAKhF,GAAGC,GAGpB,IAAK,IAAIW,EAAI,EAAGA,EAAItF,KAAKgnD,OAAO3hD,OAAQC,IAAK,CACzC,IAAI6hD,KAAOnnD,KAAKgnD,OAAO1hD,GACvB6hD,KAAKM,aACLN,KAAKgI,SAAShF,sB,oHAhNUT,mD,sjECRpC,SAAS0F,UAAU9pD,EAAGoH,EAAGb,GACrBA,EAAEa,EAAEpH,EAAI,IAAMuG,EAAEvG,GAChBoH,EAAEb,EAAEvG,IAAMoH,EAAEpH,EAAI,GAChBuG,EAAEvG,GAAKA,EAAI,EACXoH,EAAEpH,EAAI,GAAKA,EAKf,SAAS+pD,eAAe/pD,EAAGoH,EAAGb,GAC1BA,EAAEa,EAAEpH,IAAMuG,EAAEvG,GACZoH,EAAEb,EAAEvG,IAAMoH,EAAEpH,GACZuG,EAAEvG,GAAKA,EACPoH,EAAEpH,GAAKA,E,IAMUsgD,U,klBACVpD,UAMH,IALA,IAUIj6C,EAVAzI,IAAME,KAAK+mD,SAAS,GACpBf,EAAIhgD,KAAKqkB,MAAMrqB,KAAKsiC,OAAS,GAAK,GAElC51B,EAAI,GACJb,EAAI,GACCvG,EAAI,EAAGA,EAAI0gD,EAAG1gD,IACnBoH,EAAEtB,KAAK9F,GACPuG,EAAET,KAAK9F,GAIX,IAFAoH,EAAEtB,KAAK46C,EAAI,GAENz9C,EAAI,EAAGA,EAAI,EAAIvI,KAAKuiC,QAASh6B,GAAK,EAEnC,IAAK,IAAIjD,GAAI,EAAGA,GAAI0gD,EAAG1gD,KAAK,CAExB,IAAIZ,EAAI,EAAIY,GAAI,EACZX,EAAI4D,EACRzI,IAAI4E,GAAGC,GAAK,EAERW,IAAKoH,EAAEpH,GAAI,IAAMi/B,0DAjBlB,OAkBC6qB,UAAU9pD,GAAGoH,EAAGb,GAChB/L,IAAI4E,EAAI,GAAGC,GAAK,GAGhBW,IAAKoH,EAAEpH,KAAMi/B,0DAtBd,KAwBC8qB,eAAe/pD,GAAGoH,EAAGb,GAIrB/L,IAAI4E,GAAGC,EAAI,GAAK,EAK5B,IAAK,IAAIW,IAAI,EAAGA,IAAI0gD,EAAG1gD,MAAK,CAExB,IAAIZ,GAAI,EAAIY,IAAI,EACZX,GAAI4D,EACRzI,IAAI4E,IAAGC,IAAK,EAERW,KAAKoH,EAAEpH,IAAI,KAAOA,KAAKoH,EAAEpH,MAAMi/B,0DAvC5B,QAyCH6qB,UAAU9pD,IAAGoH,EAAGb,GAChB/L,IAAI4E,GAAI,GAAGC,IAAK,GAEpB0qD,eAAe/pD,IAAGoH,EAAGb,GAEzB,IAAK,IAAIvG,IAAI,EAAGA,IAAItF,KAAKsiC,OAAQh9B,MAC7B,IAAK,IAAIiD,GAAI,EAAGA,GAAIvI,KAAKuiC,QAASh6B,KAC9Bi6C,SAASl9C,IAAGiD,GAAGzI,IAAIwF,KAAGiD,KAG9B,OAAOvI,U,uHAvDwB2S,+C,4jEClBlBkzC,Y,sbACjB,uBAAc,oDACV,wBAASyJ,YACJC,OAAS,GACd,MAAKlJ,KAAO,GAHF,M,yEAKP7D,UACH,IAAIwD,EAAIhmD,KAAKsiC,OACTp2B,EAAIlM,KAAKuiC,QACbviC,KAAKqmD,KAAO,GACZ,IAAK,IAAI/gD,EAAI,EAAGA,EAAI0gD,EAAG1gD,IAAK,CACxBtF,KAAKqmD,KAAKj7C,KAAK,IACf,IAAK,IAAI7C,EAAI,EAAGA,EAAI2D,EAAG3D,IAAK,CACxB,IAAIi9B,OAAe,GAALlgC,GAAe,GAALiD,GAAUjD,EAAI,GAAK0gD,GAAKz9C,EAAI,GAAK2D,EACzDlM,KAAKqmD,KAAK/gD,GAAG8F,KAAKo6B,OAAS,EAAI,IAGvCxlC,KAAKuvD,OAAS,CACV,CAAC,EAAG,EAAGvJ,EAAI,EAAG95C,EAAI,IAEtBlM,KAAKwvD,WACL,IAAK,IAAIlqD,GAAI,EAAGA,GAAI0gD,EAAG1gD,KACnB,IAAK,IAAIiD,GAAI,EAAGA,GAAI2D,EAAG3D,KACnBi6C,SAASl9C,GAAGiD,GAAGvI,KAAKqmD,KAAK/gD,IAAGiD,KAIpC,OADAvI,KAAKqmD,KAAO,GACLrmD,O,iCAGP,KAAOA,KAAKuvD,OAAOlqD,QAAQ,CACvB,IAAI8hD,KAAOnnD,KAAKuvD,OAAO1hD,QACvB7N,KAAKyvD,eAAetI,S,qCAGbA,MAGX,IAFA,IAAIuI,OAAS,GACTC,OAAS,GACJrqD,EAAI6hD,KAAK,GAAK,EAAG7hD,EAAI6hD,KAAK,GAAI7hD,IAAK,CACxC,IAAI42B,IAAMl8B,KAAKqmD,KAAK/gD,GAAG6hD,KAAK,GAAK,GAC7BkD,OAASrqD,KAAKqmD,KAAK/gD,GAAG6hD,KAAK,GAAK,IAChCjrB,MAAOmuB,QAAY/kD,EAAI,GACvBoqD,OAAOtkD,KAAK9F,GAGpB,IAAK,IAAIiD,EAAI4+C,KAAK,GAAK,EAAG5+C,EAAI4+C,KAAK,GAAI5+C,IAAK,CACxC,IAAI0zB,KAAOj8B,KAAKqmD,KAAKc,KAAK,GAAK,GAAG5+C,GAC9B6hD,MAAQpqD,KAAKqmD,KAAKc,KAAK,GAAK,GAAG5+C,IAC/B0zB,OAAQmuB,OAAW7hD,EAAI,GACvBonD,OAAOvkD,KAAK7C,GAGpB,GAAKmnD,OAAOrqD,QAAWsqD,OAAOtqD,OAA9B,CAGA,IAAIX,EAAI6/B,qDAAYmrB,QAChB/qD,EAAI4/B,qDAAYorB,QACpB3vD,KAAKqmD,KAAK3hD,GAAGC,GAAK,EAClB,IAAIirD,MAAQ,GACR5J,EAAI,GACR4J,MAAMxkD,KAAK46C,GACX,IAAK,IAAI1gD,IAAI6hD,KAAK,GAAI7hD,IAAIZ,EAAGY,MACzBtF,KAAKqmD,KAAK/gD,KAAGX,GAAK,EACdW,IAAI,GACJ0gD,EAAE56C,KAAK,CAAC9F,IAAGX,IAEnBqhD,EAAI,GACJ4J,MAAMxkD,KAAK46C,GACX,IAAK,IAAI1gD,IAAIZ,EAAI,EAAGY,KAAK6hD,KAAK,GAAI7hD,MAC9BtF,KAAKqmD,KAAK/gD,KAAGX,GAAK,EACdW,IAAI,GACJ0gD,EAAE56C,KAAK,CAAC9F,IAAGX,IAEnBqhD,EAAI,GACJ4J,MAAMxkD,KAAK46C,GACX,IAAK,IAAIz9C,IAAI4+C,KAAK,GAAI5+C,IAAI5D,EAAG4D,MACzBvI,KAAKqmD,KAAK3hD,GAAG6D,KAAK,EACdA,IAAI,GACJy9C,EAAE56C,KAAK,CAAC1G,EAAG6D,MAEnBy9C,EAAI,GACJ4J,MAAMxkD,KAAK46C,GACX,IAAK,IAAIz9C,IAAI5D,EAAI,EAAG4D,KAAK4+C,KAAK,GAAI5+C,MAC9BvI,KAAKqmD,KAAK3hD,GAAG6D,KAAK,EACdA,IAAI,GACJy9C,EAAE56C,KAAK,CAAC1G,EAAG6D,MAGnB,IADA,IAAIsnD,MAAQtrB,qDAAYqrB,OACftqD,IAAI,EAAGA,IAAIsqD,MAAMvqD,OAAQC,MAAK,CACnC,IAAI0gD,GAAI4J,MAAMtqD,KACd,GAAI0gD,IAAK6J,MAAT,CAGA,IAAIC,KAAOvrB,qDAAYyhB,IACvBhmD,KAAKqmD,KAAKyJ,KAAK,IAAIA,KAAK,IAAM,GAElC9vD,KAAKuvD,OAAOnkD,KAAK,CAAC+7C,KAAK,GAAIA,KAAK,GAAIziD,EAAI,EAAGC,EAAI,IAC/C3E,KAAKuvD,OAAOnkD,KAAK,CAAC1G,EAAI,EAAGyiD,KAAK,GAAIA,KAAK,GAAIxiD,EAAI,IAC/C3E,KAAKuvD,OAAOnkD,KAAK,CAAC+7C,KAAK,GAAIxiD,EAAI,EAAGD,EAAI,EAAGyiD,KAAK,KAC9CnnD,KAAKuvD,OAAOnkD,KAAK,CAAC1G,EAAI,EAAGC,EAAI,EAAGwiD,KAAK,GAAIA,KAAK,W,yHAnGbx0C,+C,yjECApBmzC,S,gbACjB,kBAAY7hD,MAAOC,QAAwB,UAAhB6rD,WAAgB,uDAAH,EAAG,uCACvC,uBAAM9rD,MAAOC,SACR8rD,YAAcD,WACnB,MAAK1J,KAAO,GAH2B,M,sEAKpC7D,UACH,IAAIv+C,MAAQjE,KAAKsiC,OACbp+B,OAASlE,KAAKuiC,QACdziC,IAAME,KAAK+mD,SAAS,GACxB9iD,OAAUA,MAAQ,EAAI,EAAI,EAC1BC,QAAWA,OAAS,EAAI,EAAI,EAC5B,IAAImjC,GAAK,EACLC,GAAK,EACLyjB,GAAK,EACLC,GAAK,EACLiF,KAAO,EACP/K,SAAU,EACV/B,KAAO,CACP,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAER,GAMI,GALA9b,GAAK,EAAI,EAAIrhC,KAAKyhB,MAAM8c,2DAAoBtgC,MAAQ,GAAK,GACzDqjC,GAAK,EAAI,EAAIthC,KAAKyhB,MAAM8c,2DAAoBrgC,OAAS,GAAK,GACrD+rD,OACDnwD,IAAIunC,IAAIC,IAAM,IAEbxnC,IAAIunC,IAAIC,IAAK,CACdtnC,KAAKkwD,WAAW/M,MAChB,EAAG,CAC8D,GAAzDn9C,KAAKyhB,MAAM8c,2DAAoBvkC,KAAKgwD,YAAc,KAClDhwD,KAAKkwD,WAAW/M,MAEpB+B,SAAU,EACV,IAAK,IAAI5/C,EAAI,EAAGA,EAAI,EAAGA,IAGnB,GAFAylD,GAAK1jB,GAAkB,EAAb8b,KAAK79C,GAAG,GAClB0lD,GAAK1jB,GAAkB,EAAb6b,KAAK79C,GAAG,GACdtF,KAAKmwD,QAAQrwD,IAAKirD,GAAIC,GAAI/mD,MAAOC,QAAS,CAC1CpE,IAAIirD,IAAIC,IAAM,EACdlrD,IAAIunC,GAAK8b,KAAK79C,GAAG,IAAIgiC,GAAK6b,KAAK79C,GAAG,IAAM,EACxC+hC,GAAK0jB,GACLzjB,GAAK0jB,GACL9F,SAAU,EACV+K,OACA,cAGF/K,gBAET+K,KAAO,EAAIhsD,MAAQC,OAAS,GACrC,IAAK,IAAIoB,GAAI,EAAGA,GAAItF,KAAKsiC,OAAQh9B,KAC7B,IAAK,IAAIiD,EAAI,EAAGA,EAAIvI,KAAKuiC,QAASh6B,IAC9Bi6C,SAASl9C,GAAGiD,EAAGzI,IAAIwF,IAAGiD,IAI9B,OADAvI,KAAKqmD,KAAO,GACLrmD,O,iCAEAmjD,MACP,IAAK,IAAI79C,EAAI,EAAGA,EAAI,EAAGA,IACnB69C,KAAK79C,GAAG,GAAK,EACb69C,KAAK79C,GAAG,GAAK,EAEjB,OAAQU,KAAKyhB,MAAyB,EAAnB8c,4DACf,KAAK,EACD4e,KAAK,GAAG,IAAM,EACdA,KAAK,GAAG,GAAK,EACbA,KAAK,GAAG,IAAM,EACdA,KAAK,GAAG,GAAK,EACb,MACJ,KAAK,EACDA,KAAK,GAAG,IAAM,EACdA,KAAK,GAAG,GAAK,EACbA,KAAK,GAAG,IAAM,EACdA,KAAK,GAAG,GAAK,EACb,MACJ,KAAK,EACDA,KAAK,GAAG,IAAM,EACdA,KAAK,GAAG,GAAK,EACbA,KAAK,GAAG,IAAM,EACdA,KAAK,GAAG,GAAK,EACb,MACJ,KAAK,EACDA,KAAK,GAAG,IAAM,EACdA,KAAK,GAAG,GAAK,EACbA,KAAK,GAAG,IAAM,EACdA,KAAK,GAAG,GAAK,K,8BAIjBrjD,IAAK4E,EAAGC,EAAGV,MAAOC,QACtB,QAAIQ,EAAI,GAAKC,EAAI,GAAKD,GAAKT,OAASU,GAAKT,SAGlCpE,IAAI4E,GAAGC,Q,sHAjGgBgO,+C,4+DCCjBozC,M,0aACjB,eAAY9hD,MAAOC,OAAQ8L,SAAS,iB,8HAAA,cAChC,uBAAM/L,MAAOC,SACRpE,IAAM,GACX,MAAKioD,MAAQ,GACb,MAAKqI,eAAiB,IACtBpgD,QAAUrE,OAAOu6B,OAAO,CACpBmqB,UAAW,EACXC,WAAY,GACbtgD,UAKUzG,eAAe,eACxByG,QAAO,UAAgB,MAAKugD,mBAAmB,MAAKjuB,OAAQtyB,QAAO,YAElEA,QAAQzG,eAAe,gBACxByG,QAAO,WAAiB,MAAKugD,mBAAmB,MAAKhuB,QAASvyB,QAAO,aAEzE,MAAKi2B,SAAWj2B,QAnBgB,M,mEAqB7BwyC,UAUH,GATAxiD,KAAKF,IAAME,KAAK+mD,SAAS,GACzB/mD,KAAK+nD,MAAQ,GACb/nD,KAAKowD,eAAiB,GACtBpwD,KAAKwwD,aACLxwD,KAAK8nD,gBACL9nD,KAAKywD,2BACLzwD,KAAK0wD,+BACL1wD,KAAK2wD,eACL3wD,KAAK4wD,mBACDpO,SACA,IAAK,IAAIl9C,EAAI,EAAGA,EAAItF,KAAKsiC,OAAQh9B,IAC7B,IAAK,IAAIiD,EAAI,EAAGA,EAAIvI,KAAKuiC,QAASh6B,IAC9Bi6C,SAASl9C,EAAGiD,EAAGvI,KAAKF,IAAIwF,GAAGiD,IAIvC,OAAOvI,O,yCAEQyK,KAAMomD,MACrB,IAAI/oC,IAAM9hB,KAAKyhB,MAAOhd,KAAOomD,KAAQ,IACjCnyB,IAAM14B,KAAKyhB,MAAOhd,KAAOomD,KAAQ,KAOrC,OANInyB,IAAM,IACNA,IAAM,GAEN5W,IAAM,IACNA,IAAM,GAEH,CAAC4W,IAAK5W,O,mCAIb,IAAK,IAAIxiB,EAAI,EAAGA,EAAItF,KAAKimC,SAASoqB,UAAW/qD,IAAK,CAC9CtF,KAAK+nD,MAAM38C,KAAK,IAChB,IAAK,IAAI7C,EAAI,EAAGA,EAAIvI,KAAKimC,SAASqqB,WAAY/nD,IAC1CvI,KAAK+nD,MAAMziD,GAAG8F,KAAK,CAAE,EAAK,EAAG,EAAK,EAAG,MAAS,EAAG,OAAU,EAAG,YAAe,GAAI,MAAS9F,EAAG,MAASiD,O,sCAM9G,IAEIqV,IACAkzC,KACAC,KAEA5J,KACA6J,UACAC,WARAC,IAAM3sB,2DAAkB,EAAGvkC,KAAKimC,SAASoqB,UAAY,GACrDc,IAAM5sB,2DAAkB,EAAGvkC,KAAKimC,SAASqqB,WAAa,GAItDc,OAAQ,EAKZ,EAAG,CAECH,WAAa,CAAC,EAAG,EAAG,EAAG,GACvBA,WAAa1sB,qDAAY0sB,YACzB,GAKI,GAJAG,OAAQ,EACRxzC,IAAMqzC,WAAW3vC,MACjBwvC,KAAOI,IAAMrc,mDAAQj3B,KAAK,GAC1BmzC,KAAOI,IAAMtc,mDAAQj3B,KAAK,KACtBkzC,KAAO,GAAKA,MAAQ9wD,KAAKimC,SAASoqB,WAGlCU,KAAO,GAAKA,MAAQ/wD,KAAKimC,SAASqqB,YAAtC,CAIA,IADAnJ,KAAOnnD,KAAK+nD,MAAMmJ,KAAKC,MACf,YAAgB9rD,OAAS,GAEzB8hD,KAAI,YAAgB,GAAG,IAAM2J,MAAQ3J,KAAI,YAAgB,GAAG,IAAM4J,KAClE,MAI+B,IADvCC,UAAYhxD,KAAK+nD,MAAM+I,MAAMC,OAChB,YAAgB1rD,SACzB2rD,UAAS,YAAgB5lD,KAAK,CAAC8lD,IAAKC,MACpCnxD,KAAKowD,eAAehlD,KAAK,CAAC0lD,KAAMC,OAChCG,IAAMJ,KACNK,IAAMJ,KACNK,OAAQ,UAEPH,WAAW5rD,OAAS,GAAc,GAAT+rD,aAC7BH,WAAW5rD,OAAS,K,iDAK7B,IAGI8hD,KACA6J,UACAK,UALAC,GAAKtxD,KAAKimC,SAASoqB,UACnBz0C,GAAK5b,KAAKimC,SAASqqB,WACvBtwD,KAAKowD,eAAiB7rB,qDAAYvkC,KAAKowD,gBAIvC,IAAK,IAAI9qD,EAAI,EAAGA,EAAItF,KAAKimC,SAASoqB,UAAW/qD,IACzC,IAAK,IAAIiD,EAAI,EAAGA,EAAIvI,KAAKimC,SAASqqB,WAAY/nD,IAE1C,GAAkC,IADlC4+C,KAAOnnD,KAAK+nD,MAAMziD,GAAGiD,IACb,YAAgBlD,OAAa,CACjC,IAAIshB,WAAa,CAAC,EAAG,EAAG,EAAG,GAC3BA,WAAa4d,qDAAY5d,YACzB0qC,WAAY,EACZ,EAAG,CACC,IAAIE,OAAS5qC,WAAWrF,MACpBkwC,KAAOlsD,EAAIuvC,mDAAQ0c,QAAQ,GAC3BE,KAAOlpD,EAAIssC,mDAAQ0c,QAAQ,GAC/B,KAAIC,KAAO,GAAKA,MAAQF,IAAMG,KAAO,GAAKA,MAAQ71C,IAAlD,CAKA,GADAy1C,WAAY,EAC2B,IAFvCL,UAAYhxD,KAAK+nD,MAAMyJ,MAAMC,OAEhB,YAAgBpsD,OACzB,MAEJ,IAAK,IAAIynD,EAAI,EAAGA,EAAIkE,UAAS,YAAgB3rD,OAAQynD,IACjD,GAAIkE,UAAS,YAAgBlE,GAAG,IAAMxnD,GAAK0rD,UAAS,YAAgBlE,GAAG,IAAMvkD,EAAG,CAC5E8oD,WAAY,EACZ,MAGR,GAAIA,UACA,aAEC1qC,WAAWthB,QAChBgsD,UACAlK,KAAI,YAAgB/7C,KAAK,CAAC4lD,UAAS,MAAWA,UAAS,QAGvDtvD,QAAQyZ,IAAI,iC,6FAuB5B,IAbA,IAMIu2C,MACAC,MAGA1wC,GACAC,GACA8vC,UAZAhL,EAAIhmD,KAAKsiC,OACTp2B,EAAIlM,KAAKuiC,QACT+uB,GAAKtxD,KAAKimC,SAASoqB,UACnBz0C,GAAK5b,KAAKimC,SAASqqB,WACnBsB,IAAM5rD,KAAKyhB,MAAMznB,KAAKsiC,OAASgvB,IAC/BO,IAAM7rD,KAAKyhB,MAAMznB,KAAKuiC,QAAU3mB,IAGhCqqC,UAAYjmD,KAAKimC,SAAL,UACZigB,WAAalmD,KAAKimC,SAAL,WAIR3gC,EAAI,EAAGA,EAAIgsD,GAAIhsD,IACpB,IAAK,IAAIiD,EAAI,EAAGA,EAAIqT,GAAIrT,IAAK,CAWzB,GARU,IAFV0Y,GAAK2wC,IAAMtsD,KAGP2b,GAAK,GAEC,IAJVC,GAAK2wC,IAAMtpD,KAKP2Y,GAAK,GAETwwC,MAAQntB,2DAAkB0hB,UAAU,GAAIA,UAAU,IAClD0L,MAAQptB,2DAAkB2hB,WAAW,GAAIA,WAAW,IAChD39C,EAAI,EAEJ,IADAyoD,UAAYhxD,KAAK+nD,MAAMziD,GAAGiD,EAAI,GACvB2Y,IAAM8vC,UAAS,EAAQA,UAAS,QAAc,GACjD9vC,KAGR,GAAI5b,EAAI,EAEJ,IADA0rD,UAAYhxD,KAAK+nD,MAAMziD,EAAI,GAAGiD,GACvB0Y,IAAM+vC,UAAS,EAAQA,UAAS,OAAa,GAChD/vC,KAKR,IAFA,IAAI6wC,SAAW9rD,KAAKorC,MAAM7M,2DAAkB,EAAGqtB,IAAMF,OAAS,GAC1DK,SAAW/rD,KAAKorC,MAAM7M,2DAAkB,EAAGstB,IAAMF,OAAS,GACvD1wC,GAAK6wC,SAAWJ,OAAS1L,GACxB8L,SACAA,WAGAJ,QAGR,KAAOxwC,GAAK6wC,SAAWJ,OAASzlD,GACxB6lD,SACAA,WAGAJ,QAGR1wC,IAAU6wC,SACV5wC,IAAU6wC,SACV/xD,KAAK+nD,MAAMziD,GAAGiD,GAAd,EAAwB0Y,GACxBjhB,KAAK+nD,MAAMziD,GAAGiD,GAAd,EAAwB2Y,GACxBlhB,KAAK+nD,MAAMziD,GAAGiD,GAAd,MAA4BmpD,MAC5B1xD,KAAK+nD,MAAMziD,GAAGiD,GAAd,OAA6BopD,MAC7B,IAAK,IAAIK,GAAK/wC,GAAI+wC,GAAK/wC,GAAKywC,MAAOM,KAC/B,IAAK,IAAIC,GAAK/wC,GAAI+wC,GAAK/wC,GAAKywC,MAAOM,KAC/BjyD,KAAKF,IAAIkyD,IAAIC,IAAM,K,uCAMtBC,MAAOC,YACpB,IAAIC,GACAC,GACAptC,KAyBJ,OAxBkB,GAAdktC,YAAiC,GAAdA,YACnBC,GAAK7tB,2DAAkB2tB,MAAK,EAAQ,EAAGA,MAAK,EAAQA,MAAK,MAAY,GAGjEjtC,KAFc,GAAdktC,WAEY,GADZE,GAAKH,MAAK,EAAQ,IAIlBG,GAAKH,MAAK,EAAQA,MAAK,OAAa,GACxB,EAEhBlyD,KAAKF,IAAIsyD,IAAIntC,MAAQ,IAGrBotC,GAAK9tB,2DAAkB2tB,MAAK,EAAQ,EAAGA,MAAK,EAAQA,MAAK,OAAa,GAGlEjtC,KAFc,GAAdktC,YACAC,GAAKF,MAAK,EAAQA,MAAK,MAAY,GACvB,EAIA,GADZE,GAAKF,MAAK,EAAQ,GAGtBlyD,KAAKF,IAAImlB,MAAMotC,IAAM,GAElB,CAACD,GAAIC,M,oCAEFC,cAAeC,aACzB,IAIIC,SACAC,KACAC,KACAp4B,KAPAq4B,QAAUJ,YAAY,GAAKD,cAAc,GACzCM,QAAUL,YAAY,GAAKD,cAAc,GACzCn2B,KAAOm2B,cAAc,GACrBx2B,KAAOw2B,cAAc,GAKrBO,MAAQ,GACRC,KAAO9sD,KAAK+a,IAAI4xC,SAChBI,KAAO/sD,KAAK+a,IAAI6xC,SAChBtqC,QAAUic,0DACVyuB,UAAY1qC,QACZ2qC,WAAa,EAAI3qC,QAwBrB,IAvBAmqC,KAAOE,QAAU,EAAI,EAAI,EACzBD,KAAOE,QAAU,EAAI,EAAI,EACrBE,KAAOC,MAEPP,SAAWxsD,KAAKqkB,KAAK0oC,KAAOC,WAC5BH,MAAMznD,KAAK,CAACsnD,KAAMF,WAElBK,MAAMznD,KAAK,CAACqnD,KAAMK,OAElBN,SAAWxsD,KAAKyhB,MAAMsrC,KAAOE,YAC7BJ,MAAMznD,KAAK,CAACsnD,KAAMF,aAIlBA,SAAWxsD,KAAKqkB,KAAKyoC,KAAOE,WAC5BH,MAAMznD,KAAK,CAACqnD,KAAMD,WAElBK,MAAMznD,KAAK,CAACsnD,KAAMK,OAElBP,SAAWxsD,KAAKyhB,MAAMqrC,KAAOG,YAC7BJ,MAAMznD,KAAK,CAACqnD,KAAMD,YAEtBxyD,KAAKF,IAAIq8B,MAAML,MAAQ,EAChB+2B,MAAMxtD,OAAS,GAElB,IADAi1B,KAAOu4B,MAAMvxC,MACNgZ,KAAK,GAAK,GACb6B,MAAQ0Y,mDAAQva,KAAK,IAAI,GACzBwB,MAAQ+Y,mDAAQva,KAAK,IAAI,GACzBt6B,KAAKF,IAAIq8B,MAAML,MAAQ,EACvBxB,KAAK,GAAKA,KAAK,GAAK,I,yCAa5B,IAPA,IAEI6sB,KACA+L,WACAlC,UACA3C,KACA8E,UANA7B,GAAKtxD,KAAKimC,SAASoqB,UACnBz0C,GAAK5b,KAAKimC,SAASqqB,WAMdhrD,EAAI,EAAGA,EAAIgsD,GAAIhsD,IACpB,IAAK,IAAIiD,EAAI,EAAGA,EAAIqT,GAAIrT,IAAK,CACzB4+C,KAAOnnD,KAAK+nD,MAAMziD,GAAGiD,GACrB,IAAK,IAAIukD,EAAI,EAAGA,EAAI3F,KAAI,YAAgB9hD,OAAQynD,IAC5CoG,WAAa/L,KAAI,YAAgB2F,IACjCkE,UAAYhxD,KAAK+nD,MAAMmL,WAAW,IAAIA,WAAW,KAGpC,MAAY/L,KAAI,OACzBkH,KAAO,EACP8E,UAAY,GAEPnC,UAAS,MAAY7J,KAAI,OAC9BkH,KAAO,EACP8E,UAAY,GAEPnC,UAAS,MAAY7J,KAAI,OAC9BkH,KAAO,EACP8E,UAAY,IAGZ9E,KAAO,EACP8E,UAAY,GAEhBnzD,KAAKozD,cAAcpzD,KAAKqzD,iBAAiBlM,KAAMkH,MAAOruD,KAAKqzD,iBAAiBrC,UAAWmC,kB,mHAlVxExgD,+C,mMCNnC,kCAAiB2gD,Q,yBAAAA,U,qnECEjB,IAAMC,GAAK,IAAOvtD,KAAKo+B,KAAK,GAAK,GAC3BovB,IAAM,EAAIxtD,KAAKo+B,KAAK,IAAM,EASXkvB,Q,kbAIjB,mBAA6B,UAAjBG,UAAiB,uDAAL,IAAK,+BACzB,yBACKC,WAAa,CACd,CAAC,GAAI,GACL,CAAC,GAAI,GACL,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,EAAE,EAAG,GACL,EAAE,EAAG,GACL,EAAE,GAAI,IAGV,IADA,IAAIC,aAAe,GACVruD,EAAI,EAAGA,EAAImuD,UAAWnuD,IAC3BquD,aAAavoD,KAAK9F,GAEtBquD,aAAepvB,qDAAYovB,cAC3B,MAAKC,OAAS,GACd,MAAKC,SAAW,GAChB,IAAK,IAAIvuD,GAAI,EAAGA,GAAI,EAAImuD,UAAWnuD,KAC/B,MAAKsuD,OAAOxoD,KAAKuoD,aAAaruD,GAAImuD,YAClC,MAAKI,SAASzoD,KAAK,MAAKwoD,OAAOtuD,IAAK,MAAKouD,WAAWruD,QArB/B,a,kEAwBzByuD,IAAKC,KACL,IAG4BC,GAYxBC,GAAIC,GAfJC,MAAQn0D,KAAK4zD,OACbQ,QAAUp0D,KAAK6zD,SACf5qC,MAAQkrC,MAAM9uD,OAAS,EACvBgvD,GAAK,EAAGC,GAAK,EAAGC,GAAK,EAErBloD,GAAKynD,IAAMC,KAAOR,GAClBjuD,EAAIU,KAAKyhB,MAAMqsC,IAAMznD,GACrB9D,EAAIvC,KAAKyhB,MAAMssC,IAAM1nD,GACrB1I,GAAK2B,EAAIiD,GAAKirD,GAGd9yC,GAAKozC,KAFAxuD,EAAI3B,GAGTgd,GAAKozC,KAFAxrD,EAAI5E,GAMT+c,GAAKC,IACLszC,GAAK,EACLC,GAAK,IAGLD,GAAK,EACLC,GAAK,GAKT,IAAItzC,GAAKF,GAAKuzC,GAAKT,GACf3yC,GAAKF,GAAKuzC,GAAKV,GACf1xB,GAAKphB,GAAK,EAAI,EAAI8yC,GAClBzxB,GAAKphB,GAAK,EAAI,EAAI6yC,GAElBxB,IAAK5oB,6CAAI9jC,EAAG2jB,OACZgpC,IAAK7oB,6CAAI7gC,EAAG0gB,OAEZurC,GAAK,GAAM9zC,GAAKA,GAAKC,GAAKA,GAC9B,GAAI6zC,IAAM,EAAG,CACTA,IAAMA,GACNR,GAAKI,QAAQpC,GAAKmC,MAAMlC,KACxB,IAAIwC,KAAOz0D,KAAK0zD,WAAWM,IAC3BK,GAAKG,GAAKA,IAAMC,KAAK,GAAK/zC,GAAK+zC,KAAK,GAAK9zC,IAE7C,IAAImmC,GAAK,GAAMlmC,GAAKA,GAAKC,GAAKA,GAC9B,GAAIimC,IAAM,EAAG,CACTA,IAAMA,GACNkN,GAAKI,QAAQpC,GAAKiC,GAAKE,MAAMlC,GAAKiC,KAClC,IAAIO,MAAOz0D,KAAK0zD,WAAWM,IAC3BM,GAAKxN,GAAKA,IAAM2N,MAAK,GAAK7zC,GAAK6zC,MAAK,GAAK5zC,IAE7C,IAAI6zC,GAAK,GAAM5yB,GAAKA,GAAKC,GAAKA,GAC9B,GAAI2yB,IAAM,EAAG,CACTA,IAAMA,GACNV,GAAKI,QAAQpC,GAAK,EAAImC,MAAMlC,GAAK,IACjC,IAAIwC,OAAOz0D,KAAK0zD,WAAWM,IAC3BO,GAAKG,GAAKA,IAAMD,OAAK,GAAK3yB,GAAK2yB,OAAK,GAAK1yB,IAI7C,OAAO,IAAMsyB,GAAKC,GAAKC,S,qHAvFMI,iD,kLCVhBA,M,yeCDrB,kCAAiBC,2DAAUC,uD,2yDCIND,S,kbACjB,kBAAYE,IAAKC,IAAKC,iBAAkBhlD,SAAS,iB,8HAAA,iBAC7C,uBAAM8kD,IAAKC,IAAKC,iBAAkBhlD,UAC7BilD,UAAY,GACjB,MAAKC,MAAQ,GACb,MAAKC,KAAKL,IAAKC,IAAK,MAJyB,M,uEAUzCK,MAAOC,MAAO7S,UAClB,IAAIn5C,IAAM+rD,MAAQ,IAAMC,MAIxB,GAHMhsD,OAAOrJ,KAAKi1D,WACdj1D,KAAKs1D,SAASF,MAAOC,OAEnBhsD,OAAOrJ,KAAKi1D,UAIlB,IADA,IAAIz6B,KAAOx6B,KAAKi1D,UAAU5rD,KACnBmxB,MACHgoB,SAAShoB,KAAK91B,EAAG81B,KAAK71B,GACtB61B,KAAOA,KAAK7lB,O,+BAMXygD,MAAOC,OACZ,KAAOr1D,KAAKk1D,MAAM7vD,QAAQ,CACtB,IAAIm1B,KAAOx6B,KAAKk1D,MAAMrnD,QACtB,GAAI2sB,KAAK91B,GAAK0wD,OAAS56B,KAAK71B,GAAK0wD,MAC7B,OAGJ,IADA,IAAIn3B,UAAYl+B,KAAK+rD,cAAcvxB,KAAK91B,EAAG81B,KAAK71B,GACvCW,EAAI,EAAGA,EAAI44B,UAAU74B,OAAQC,IAAK,CACvC,IAAI4iB,SAAWgW,UAAU54B,GACrBZ,EAAIwjB,SAAS,GACbvjB,EAAIujB,SAAS,GACRxjB,EAAI,IAAMC,KACT3E,KAAKi1D,WAGfj1D,KAAKm1D,KAAKzwD,EAAGC,EAAG61B,U,2BAIvB91B,EAAGC,EAAGgQ,MACP,IAAIo2B,IAAM,CACNrmC,EACAC,EACAgQ,MAEJ3U,KAAKi1D,UAAUvwD,EAAI,IAAMC,GAAKomC,IAC9B/qC,KAAKk1D,MAAM9pD,KAAK2/B,U,+IAtDcwqB,U,2pBCGjBA,K,WACjB,cAAYT,IAAKC,IAAKC,kBAAgC,IAAdhlD,QAAc,uDAAJ,GAAI,2BAClDhQ,KAAKw1D,KAAOV,IACZ90D,KAAKy1D,KAAOV,IACZ/0D,KAAK01D,kBAAoBV,iBACzBh1D,KAAKimC,SAAWt6B,OAAOu6B,OAAO,CAC1Bgd,SAAU,GACXlzC,SACHhQ,KAAKwrD,MAAQ3W,gDAAK70C,KAAKimC,SAASid,UACF,GAA1BljD,KAAKimC,SAASid,WACdljD,KAAKwrD,MAAQ,CACTxrD,KAAKwrD,MAAM,GACXxrD,KAAKwrD,MAAM,GACXxrD,KAAKwrD,MAAM,GACXxrD,KAAKwrD,MAAM,GACXxrD,KAAKwrD,MAAM,GACXxrD,KAAKwrD,MAAM,GACXxrD,KAAKwrD,MAAM,GACXxrD,KAAKwrD,MAAM,K,gHAITnkB,GAAIC,IAEd,IADA,IAAIrqB,OAAS,GACJ3X,EAAI,EAAGA,EAAItF,KAAKwrD,MAAMnmD,OAAQC,IAAK,CACxC,IAAIy0B,IAAM/5B,KAAKwrD,MAAMlmD,GACjBZ,EAAI2iC,GAAKtN,IAAI,GACbp1B,EAAI2iC,GAAKvN,IAAI,GACZ/5B,KAAK01D,kBAAkBhxD,EAAGC,IAG/BsY,OAAO7R,KAAK,CAAC1G,EAAGC,IAEpB,OAAOsY,Y,2iECpCM43C,M,4aACjB,eAAYC,IAAKC,IAAKC,kBAAgC,UAAdhlD,QAAc,uDAAJ,GAAI,oCAClD,uBAAM8kD,IAAKC,IAAKC,iBAAkBhlD,UAC7BklD,MAAQ,GACb,MAAKS,MAAQ,GAHqC,M,oEAS9CP,MAAOC,MAAO7S,UAMlB,IALAxiD,KAAKk1D,MAAQ,GACbl1D,KAAK21D,MAAQ,GACb31D,KAAK41D,OAASR,MACdp1D,KAAK61D,OAASR,MACdr1D,KAAKm1D,KAAKn1D,KAAKw1D,KAAMx1D,KAAKy1D,KAAM,MACzBz1D,KAAKk1D,MAAM7vD,QAAQ,CACtB,IAAIm1B,MAAOx6B,KAAKk1D,MAAMrnD,QAClBsD,GAAKqpB,MAAK91B,EAAI,IAAM81B,MAAK71B,EAC7B,KAAIwM,MAAMnR,KAAK21D,OAAf,CAIA,GADA31D,KAAK21D,MAAMxkD,IAAMqpB,MACbA,MAAK91B,GAAK0wD,OAAS56B,MAAK71B,GAAK0wD,MAC7B,MAGJ,IADA,IAAIn3B,UAAYl+B,KAAK+rD,cAAcvxB,MAAK91B,EAAG81B,MAAK71B,GACvCW,EAAI,EAAGA,EAAI44B,UAAU74B,OAAQC,IAAK,CACvC,IAAI4iB,SAAWgW,UAAU54B,GACrBZ,EAAIwjB,SAAS,GACbvjB,EAAIujB,SAAS,GACRxjB,EAAI,IAAMC,KACT3E,KAAK21D,OAGf31D,KAAKm1D,KAAKzwD,EAAGC,EAAG61B,SAGxB,IAAIA,KAAOx6B,KAAK21D,MAAMP,MAAQ,IAAMC,OACpC,GAAK76B,KAGL,KAAOA,MACHgoB,SAAShoB,KAAK91B,EAAG81B,KAAK71B,GACtB61B,KAAOA,KAAK7lB,O,2BAGfjQ,EAAGC,EAAGgQ,MAWP,IAVA,IAAIzI,EAAIlM,KAAK81D,UAAUpxD,EAAGC,GACtBomC,IAAM,CACNrmC,EACAC,EACAgQ,KACAhM,EAAIgM,KAAOA,KAAKhM,EAAI,EAAI,EACxBuD,GAGA6pD,EAAIhrB,IAAIpiC,EAAIoiC,IAAI7+B,EACX5G,EAAI,EAAGA,EAAItF,KAAKk1D,MAAM7vD,OAAQC,IAAK,CACxC,IAAIk1B,KAAOx6B,KAAKk1D,MAAM5vD,GAClB0wD,MAAQx7B,KAAK7xB,EAAI6xB,KAAKtuB,EAC1B,GAAI6pD,EAAIC,OAAUD,GAAKC,OAAS9pD,EAAIsuB,KAAKtuB,EAErC,YADAlM,KAAKk1D,MAAMr3C,OAAOvY,EAAG,EAAGylC,KAIhC/qC,KAAKk1D,MAAM9pD,KAAK2/B,O,gCAEVrmC,EAAGC,GACT,OAAQ3E,KAAKimC,SAASid,UAClB,KAAK,EACD,OAAQl9C,KAAK+a,IAAIrc,EAAI1E,KAAK41D,QAAU5vD,KAAK+a,IAAIpc,EAAI3E,KAAK61D,QAE1D,KAAK,EACD,IAAI/0C,GAAK9a,KAAK+a,IAAIrc,EAAI1E,KAAK41D,QACvB50C,GAAKhb,KAAK+a,IAAIpc,EAAI3E,KAAK61D,QAC3B,OAAO70C,GAAKhb,KAAK8hB,IAAI,GAAIhH,GAAKE,IAAM,GAExC,KAAK,EACD,OAAOhb,KAAK8hB,IAAI9hB,KAAK+a,IAAIrc,EAAI1E,KAAK41D,QAAS5vD,KAAK+a,IAAIpc,EAAI3E,KAAK61D,e,4IA/E1CN,U,ucCFd91B,O,WACjB,gBAAYw2B,Y,8HAAW,cACnBj2D,KAAKk2D,WAAaD,UAClBj2D,KAAKm2D,MAAQ,E,4GAKP,OAAOn2D,KAAKo2D,W,6BAMlB,OADAp2D,KAAKm2D,QACEn2D,O,+BAMP,IAAKA,KAAKm2D,MACN,MAAM,IAAIzhD,MAAM,iCAGpB,IADA1U,KAAKm2D,SACGn2D,KAAKm2D,OAAO,CAChB,IAAIxwC,MAAQ3lB,KAAKk2D,WAAWthD,OAC5B,IAAK+Q,MACD,OAAO3lB,KAAKq2D,OAEhB,IAAIp5C,OAAS0I,MAAM2wC,MACfr5C,QAAUA,OAAOve,OACjBsB,KAAKq2D,OACLp5C,OAAOve,KAAKsB,KAAKo2D,OAAO9yD,KAAKtD,QAGrC,OAAOA,U,kxBC/BMu2D,S,WACjB,kBAAYC,sBAAoC,IAAdxmD,QAAc,uDAAJ,GAAI,+BAC5ChQ,KAAKy2D,sBAAwBD,qBAC7Bx2D,KAAKimC,SAAW,GAChBj2B,QAAUrE,OAAOu6B,OAAO,CACpBwwB,OAAQ,EACRC,kBAAmB,IACnBl1C,MAAO,IACRzR,SACHhQ,KAAK42D,QAAU,GACf52D,KAAK62D,mBAAqB,GAC1B72D,KAAK82D,UAAY,GACjB92D,KAAKmmC,WAAWn2B,S,iHAKTA,SAKP,OAJArE,OAAOu6B,OAAOlmC,KAAKimC,SAAUj2B,SACzBA,SAAWA,QAAQyR,OACnBzhB,KAAK+2D,QAEF/2D,O,6BAKJ4iC,KAGH,OAFA5iC,KAAKg3D,KAAOp0B,IACZ5iC,KAAK82D,UAAY,GACV92D,O,+BAKF0E,EAAGC,EAAG4C,OACX,IAAI8B,IAAM3E,EAAI,IAAMC,EAOpB,OANI4C,MACAvH,KAAK42D,QAAQvtD,KAA0B,iBAAV9B,MAAqB67B,kDAAiB77B,OAASA,aAGrEvH,KAAK42D,QAAQvtD,KAEjBrJ,O,oCAKKA,KAAK42D,QAAU,K,8BAO3B,OAFA52D,KAAK62D,mBAAqB,GAC1B72D,KAAK82D,UAAY,GACV92D,O,8BAKHi3D,kBACJ,IAAIC,UAAY,GACZC,cAAgB,GAChBC,SAAW,GACf,IAAK,IAAI/tD,OAAOrJ,KAAK42D,QAAS,CAC1B,IAAIS,MAAQr3D,KAAK42D,QAAQvtD,KACzB8tD,cAAc9tD,KAAO,CAAC,EAAG,EAAG,GAC5B+5B,4CAAW+zB,cAAc9tD,KAAMguD,OAEnC,IAAK,IAAI/xD,EAAI,EAAGA,EAAItF,KAAKimC,SAASywB,OAAQpxD,IACtCtF,KAAKs3D,WAAWH,cAAeC,SAAUF,WACrC5xD,EAAI,GAAKtF,KAAKimC,SAASywB,SAG3BS,cAAgBn3D,KAAKu3D,iBAAiBH,SAAUF,YAEpD,IAAK,IAAIM,UAAUJ,SAAU,CACzB,IAAI/sD,MAAQmtD,OAAOxsD,MAAM,KAGzBisD,iBAFQtsD,SAASN,MAAM,IACfM,SAASN,MAAM,IACA+sD,SAASI,SAEpC,OAAOx3D,O,iCAQAm3D,cAAeC,SAAUF,WAChC,IAAK,IAAI7tD,OAAO8tD,cAAe,CAC3B,IAAI9sD,MAAQhB,IAAI2B,MAAM,KAClBtG,EAAIiG,SAASN,MAAM,IACnB1F,EAAIgG,SAASN,MAAM,IACvBrK,KAAKy3D,mBAAmB/yD,EAAGC,EAAGwyD,cAAc9tD,KAAM+tD,UAClDF,UAAU7tD,KAAO,EAErB,OAAOrJ,O,uCAKMo3D,SAAUF,WACvB,IAAIj6C,OAAS,GACb,IAAK,IAAI5T,OAAO+tD,SACZ,KAAI/tD,OAAO6tD,WAAX,CAGA,IAAI3vD,MAAQ6vD,SAAS/tD,KACjBquD,kBAAY,EAChB,GAAIruD,OAAOrJ,KAAK62D,mBACZa,aAAe13D,KAAK62D,mBAAmBxtD,SAEtC,CACD,IAAIgB,MAAQhB,IAAI2B,MAAM,KAClBtG,EAAIiG,SAASN,MAAM,IACnB1F,EAAIgG,SAASN,MAAM,IACvBqtD,aAAe13D,KAAKy2D,sBAAsB/xD,EAAGC,GAC7C3E,KAAK62D,mBAAmBxtD,KAAOquD,aAEnC,GAAoB,GAAhBA,aAAJ,CAMA,IAFA,IAAIC,SAAW,CAAC,EAAG,EAAG,GAClBC,UAAY,EACPtyD,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,IAAIg/B,KAAOt+B,KAAKorC,MAAM7pC,MAAMjC,GAAKoyD,cACjCC,SAASryD,GAAKg/B,KACdszB,WAAatzB,KAEbszB,UAAY53D,KAAKimC,SAAS0wB,oBAC1B15C,OAAO5T,KAAOsuD,WAGtB,OAAO16C,S,yCAKQvY,EAAGC,EAAG4C,MAAO6vD,UAC5B,IACIx0B,IADAv5B,IAAM3E,EAAI,IAAMC,EAQpB,IAAK,IAAIkzD,UALLj1B,IADAv5B,OAAOrJ,KAAK82D,UACN92D,KAAK82D,UAAUztD,KAGfrJ,KAAK83D,WAAWpzD,EAAGC,GAEL,CACpB,IAAIozD,WAAan1B,IAAIi1B,QACjB56C,YAAM,EACN46C,UAAUT,SACVn6C,OAASm6C,SAASS,SAGlB56C,OAAS,CAAC,EAAG,EAAG,GAChBm6C,SAASS,QAAU56C,QAEvB,IAAK,IAAI3X,EAAI,EAAGA,EAAI,EAAGA,IACnB2X,OAAO3X,IAAMU,KAAKorC,MAAM7pC,MAAMjC,GAAKyyD,YAG3C,OAAO/3D,O,iCAKA0E,EAAGC,GACV,IAAIqzD,KAAOtzD,EAAI,IAAMC,EACjBkF,MAAQ,GACZ7J,KAAK82D,UAAUkB,MAAQnuD,MACvB,IAAI4X,MAAQzhB,KAAKimC,SAASxkB,MAW1B,OADAzhB,KAAKg3D,KAAKj0B,QAAQr+B,EAAGC,EAAG8c,MATxB,SAAY/c,EAAGC,EAAG+D,EAAGuvD,KACjB,IACIF,WAAaE,KAAO,EAAIvvD,EAAI+Y,OACd,GAAds2C,aAGJluD,MALWnF,EAAI,IAAMC,GAKPozD,aAGgBz0D,KAAKtD,OAChC6J,W,6mEC7LM1H,Y,4bAGjB,qBAAYxD,MAAM,iB,8HAAA,mBACd,uBAAMA,MADQ,4DAFT,O,4UAIL,sCAAcA,KAAKG,IAAIoQ,YAAY,CAC/BrP,IAAK,CAAC0nB,8DAHI,M,yEAOX/jB,K,iOACH,CAAAxD,KAAA,QAAYqP,MAAMxL,SAAQ,SAACyL,QACvB,IAAMsE,OAAStE,OAAO4oD,aAAatkD,OAE/BA,QACAtE,OAAO8L,UAAU,YAAa,CAC1BxH,SAIRtE,OAAO4oD,aAAa/lD,kB,yHApBS1C,+C,kkECCpBpN,Y,4bAGjB,qBAAY1D,MAAM,iB,8HAAA,mBACd,uBAAMA,MADQ,4DAFT,O,4UAIL,sCAAcA,KAAKG,IAAIoQ,YAAY,CAC/BrP,IAAK,CAAC4iB,mDACN7K,KAAM,CAACuB,8DAJG,M,yEAQX3V,IAAI,iB,iOACP,CAAAxD,KAAA,QAAYqP,MAAMxL,SAAQ,SAACyL,QACvBA,OAAO8L,UAAU,SAEb9L,OAAO5H,IAAIya,uDACX,OAAKxjB,KAAK2C,QAAQ+3B,UAAUnb,oEAE5B5O,OAAO7H,IAAI0R,mE,yHAlBc1J,+C,sjHCApB5M,e,kcAIjB,wBAAYlE,MAAM,iB,8HAAA,sBACd,uBAAMA,MADQ,oEAHD,OAGC,mEAFF,OAIZ,kEAAqBA,KAAKG,IAAIoQ,YAAY,CACtCrP,IAAK,CAACgpB,iEAEV,mEAAsBlqB,KAAKG,IAAIoQ,YAAY,CACvCrP,IAAK,CAACsoB,0DANI,M,oFAUHzjB,EAAGC,GAAoB,IAAjBoN,WAAiB,uDAAJ,GACxBtE,EAAIzN,KAAKrB,KAAKG,IAAIiqB,eAExBtb,EAAEhG,IAAI0gB,sDAAN,+BACOpW,YADP,IAEIrN,EACAC,O,oCAIMD,EAAGC,GAAsB,IAAnBqkB,aAAmB,uDAAJ,GACzBvb,EAAIzN,KAAKrB,KAAKG,IAAIiqB,eAExBtb,EAAEhG,IAAIohB,6DAAiB,CACnBnkB,EACAC,EACAqkB,aAAc,cAAF,CACR3N,UAAW,CACP3W,EAAG,EACHC,EAAG,GAEP2W,OAAQ,CAAC,IAAK,IAAK,IAAK,KACxBC,KAAM,CAAC,OAAQ,QACfC,MAAO,IACPC,SAAU,KACPuN,kB,6BAKRxlB,IAAI,gBACP,sBAAAxD,KAAA,eAAmBqP,MAAMxL,SAAQ,SAACyL,QAC9B,IAAM6oD,QAAU7oD,OAAO8oD,gBAIvB,GAFAD,QAAQ5vC,KAAO/kB,GAEX20D,QAAQE,UACR/oD,OAAO6C,eAKP,IAHA,IAAMkyB,MAAS8zB,QAAQhvC,KAAO,IAAQgvC,QAAQjvC,SACxCovC,YAActyD,KAAKC,MAAMkyD,QAAQ7vC,QAAU+b,OAExC/+B,EAAI6yD,QAAQlvC,MAAO3jB,EAAIgzD,YAAahzD,IACzC6yD,QAAQnyC,oBAKpB,sBAAAhmB,KAAA,gBAAoBqP,MAAMxL,SAAQ,SAACyL,QAC/B,IAAMwZ,SAAWxZ,OAAOwZ,SAIxB,GAFAA,SAASP,KAAO/kB,GAEZslB,SAASuvC,UACT/oD,OAAO6C,eAOX,GAHA2W,SAASpkB,GAAKokB,SAASzN,UAAU3W,EAAIokB,SAAStN,MAC9CsN,SAASnkB,GAAKmkB,SAASzN,UAAU1W,EAAImkB,SAAStN,MAEzC,OAAK7c,KAAK4B,OAAOopB,SAASb,SAASpkB,EAAGokB,SAASnkB,GAApD,CAIA,IAAMilB,OAAS,OAAKjrB,KAAK4B,OAAOspB,cAC5Bf,SAASpkB,EACTokB,SAASnkB,GAGb,OAAKhG,KAAK8B,SAAS0E,KACfa,KAAKorC,MAAMxnB,OAAOllB,GAClBsB,KAAKorC,MAAMxnB,OAAOjlB,GAClBmkB,SAASxgB,MACTwgB,SAASjkB,IACTikB,SAAShkB,IACTgkB,SAAS/jB,a,4HA1FmB0K,+C,wgECDvBxO,e,snBACPs3D,SAAUC,UAChB,OAAOD,WAAaC,W,yCAGLC,QAASC,SACxB,IAAMH,SAAWE,QAAQppD,IAAIkX,sDACvBiyC,SAAWE,QAAQrpD,IAAIkX,sDAE7B,SAAIgyC,WAAYC,WACLx4D,KAAK24D,UAAUJ,SAASx0D,KAAMy0D,SAASz0D,W,mJAVdmC,U,wsFCDvB1F,c,kcAOjB,uBAAY7B,MAAM,iB,8HAAA,4DACd,uBAAMA,OADQ,QANV,IAMU,uDALT,IAKS,6DAHR,IAGQ,6DAFR,IAINE,OAAOS,iBAAiB,SAAU,MAAKs5D,eAAet1D,KAApB,gCAClC,MAAKwjC,cAHS,M,kFA2Bd9mC,KAAKiE,MAAQ+B,KAAKyhB,MAAM5oB,OAAOg6D,WAAa,IAAM,EAClD74D,KAAKkE,OAAS8B,KAAKyhB,MAAM5oB,OAAOi6D,YAAc,IAAM,I,uCAIpD94D,KAAK8mC,cACL9mC,KAAKrB,KAAK8B,SAASs4D,cAAc/4D,KAAKiE,MAAOjE,KAAKkE,U,+BAG7CQ,EAAGC,GACR,sBAAA3E,KAAA,QAAe0E,GACf,sBAAA1E,KAAA,QAAe2E,K,oCAGLD,EAAGC,GACb,MAAO,CACHD,EAAGA,EAAI1E,KAAKg5D,cACZr0D,EAAGA,EAAI3E,KAAKi5D,iB,oCAINv0D,EAAGC,GACb,MAAO,CACHD,EAAGA,EAAI1E,KAAKg5D,cACZr0D,EAAGA,EAAI3E,KAAKi5D,iB,+BAIXC,OAAQC,QACb,IAAMvvC,OAAS5pB,KAAK6pB,cAAcqvC,OAAQC,QAE1C,OACIvvC,OAAOllB,EAAI1E,KAAKiE,OAChB2lB,OAAOjlB,EAAI3E,KAAKkE,QAChB0lB,OAAOllB,GAAK,GACZklB,OAAOjlB,GAAK,I,oCAvDhB,OAAOqB,KAAK04B,IACR14B,KAAK8hB,IAAI,EAAG,sBAAA9nB,KAAA,SAAeA,KAAKiE,MAAQ,GACxC+B,KAAK8hB,KACA9nB,KAAKiE,MAAQjE,KAAKrB,KAAKmB,IAAImE,QAAU,EACtCjE,KAAKrB,KAAKmB,IAAImE,MAAQjE,KAAKiE,U,oCAMnC,OAAO+B,KAAK04B,IACR14B,KAAK8hB,IAAI,EAAG,sBAAA9nB,KAAA,SAAeA,KAAKkE,OAAS,GACzC8B,KAAK8hB,KACA9nB,KAAKkE,OAASlE,KAAKrB,KAAKmB,IAAIoE,SAAW,EACxClE,KAAKrB,KAAKmB,IAAIoE,OAASlE,KAAKkE,c,2HA5BDgC,gD,o8DCAtBnD,oB,0oBACVS,IACH,IAAMm+B,OAAS3hC,KAAKrB,KAAKkC,MAAM8gC,OAC3By3B,UAAY,GAEZz3B,SACAy3B,UAAY,IAAH,OAAOz3B,OAAOj9B,EAAd,aAAoBi9B,OAAOh9B,EAA3B,MAGb,IAAM7B,IAAMkD,KAAKC,MAAM,IAAOzC,IACxBe,QAAU,GAAH,OAAM60D,UAAN,YAAmBt2D,KAE1Bu2D,UAAYr5D,KAAKrB,KAAK8B,SAASiF,iBAAiBnB,SAChDG,EAAI1E,KAAKrB,KAAK4B,OAAO0D,MAAQo1D,UAEnCr5D,KAAKrB,KAAK8B,SAASkF,SACfjB,EACA1E,KAAKrB,KAAK4B,OAAO2D,OAAS,EAC1BK,QACA,gB,yJAnBqCkL,U,09FCGpC3O,aAAb,oB,2UAAA,8DAiBI,sBAAYnC,MAAM,iB,8HAAA,oBACd,uBAAMA,MADQ,iNAGd,0DAAa,IAAI26D,sDAHH,MAjBtB,iEAMQ,6BAAOt5D,KAAP,aANR,6BAUQ,OAAO,sBAAAA,KAAA,OAAWu5D,UAAX,sBAAqBv5D,KAArB,cAVf,4BAcQ,6BAAOA,KAAP,YAdR,gEAwBQ,MAAO,CACH++B,SAAU,sBAAA/+B,KAAA,OAAWw5D,oBAAoBroD,GACzCsoD,kBAAmB,MA1B/B,wCAgCQ,IAAM/vD,KAAOjK,MAAMC,KAAKM,KAAKrB,KAAKG,IAAIuY,SAASxX,KAAK8R,QAChD,SAAClE,GAAD,OAAQA,EAAE/F,IAAIya,0DAEZmd,WAAat/B,KAAKrB,KAAKG,IAAIka,UAAUtP,MAQ3C,OANAhI,QAAQyZ,IAAI,sBAAuBmkB,YAEnCt/B,KAAKrB,KAAKgC,MAAM+4D,qBAAqB15D,KAAK2hC,OAAOxwB,GAAImuB,YAI9C,CACHP,SAAU/+B,KAAK2hC,OAAOxwB,GACtBsoD,kBAAmB,MA7C/B,4BAiDU/vD,MACF,IAAMi4B,OAAS,sBAAA3hC,KAAA,OAAWu5D,UAAU7vD,KAAKq1B,UAEzC/+B,KAAKrB,KAAK2C,QAAQ+3B,UAAUhb,oEAAoB,CAC5CwgB,WAAY8C,OACZ3C,MAAOt1B,KAAKqQ,aAtDxB,iCA4DQ,sBAAA/Z,KAAA,UAAiB,QA5DzB,qCA+DmB2hC,OAAQ3C,OACnB,sBAAAh/B,KAAA,UAAiB2hC,OAAOxwB,IAExB,IAAMzH,KAAO1J,KAAKrB,KAAKgC,MAAMg5D,qBAAqBh4B,OAAOxwB,IAErDzH,MACAhI,QAAQyZ,IAAI,oBAAqBzR,MACjC1J,KAAKrB,KAAKG,IAAIoa,YAAYxP,QAE1BhI,QAAQyZ,IAAI,wBACZwmB,OAAOi4B,SAAS55D,KAAKrB,SAzEjC,kCA6EgBgjC,OAAQ3C,OAChBh/B,KAAKrB,KAAK2C,QAAQ+3B,UAAUhb,oEAAoB,CAC5CugB,cAAe5+B,KAAK2hC,OACpB9C,WAAY8C,OACZ3C,YAjFZ,cAAkC94B,gD,8hCCFbozD,U,WAsBjB,sB,8HAAc,sDArBH,K,4UAsBP,CAAAt5D,KAAA,SAAgB,IAEhB,IAAK,IAAI0E,EAAI,EAAGA,EAAIgF,+CAAYhF,IAC5B,IAAK,IAAIC,EAAI,EAAGA,EAAI+E,gDAAa/E,IAAK,CAClC,IAAMg9B,OAASk4B,sDAAiB75D,KAAM0J,iDAAa/E,GAAGD,GAAIA,EAAGC,GAE7D,sBAAA3E,KAAA,UAAc2hC,OAAOxwB,IAAMwwB,Q,yDAlBnCj9B,EAAGC,GACH,OAAOA,EAAI3E,KAAKiE,MAAQS,I,4BAGtBkZ,KACF,MAAO,CACHlZ,EAAGsB,KAAKC,MAAM2X,IAAM5d,KAAKiE,OACzBU,EAAGqB,KAAKC,MAAM2X,IAAM5d,KAAKiE,U,4BAd7B,OAAOyF,iD,6BAIP,OAAOA,oD,4DA0BGhF,EAAGC,GACb,OAAOD,EAAI,GAAKC,EAAI,GAAKD,GAAK1E,KAAKiE,OAASU,GAAK3E,KAAKkE,S,0CAItD,OAAOlE,KAAKu5D,UAAU,K,uCAGT70D,EAAGC,GAChB,OAAO3E,KAAKu5D,UAAUv5D,KAAK4d,IAAIlZ,EAAGC,M,gCAG5BiZ,KAAK,gBACM5d,KAAK2iC,MAAM/kB,KAApBlZ,EADG,YACHA,EAAGC,EADA,YACAA,EAEX,OAAI3E,KAAK6hC,cAAcn9B,EAAGC,GACf,IAAIk1D,4CAAO75D,KAAM0E,EAAGC,GAGxB,sBAAA3E,KAAA,UAAc4d,S,68ECrDhBi8C,OAAb,WAmCI,gBAAYh5D,MAAO6D,EAAGC,I,8HAAG,6CAlCpB,IAkCoB,+BAjCpB,IAiCoB,wCAhCN,IAgCM,uCA/BP,IA+BO,iCA9Bb,IA+BR3E,KAAKa,MAAQA,MACb,sBAAAb,KAAA,GAAU0E,GACV,sBAAA1E,KAAA,GAAU2E,GAtClB,oDAQQ,6BAAO3E,KAAP,MARR,wBAYQ,6BAAOA,KAAP,MAZR,yBAgBQ,OAAOA,KAAKa,MAAM+c,IAAI5d,KAAK0E,EAAG1E,KAAK2E,KAhB3C,kCAoBQ,OAAO3E,KAAKa,MAAMi5D,iBAAX,sBAA4B95D,KAA5B,IAAqC,sBAAAA,KAAA,IAAU,KApB9D,kCAwBQ,OAAOA,KAAKa,MAAMi5D,iBAAX,sBAA4B95D,KAA5B,IAAqC,sBAAAA,KAAA,IAAU,KAxB9D,iCA4BQ,OAAOA,KAAKa,MAAMi5D,iBAAiB,sBAAA95D,KAAA,IAAU,EAAtC,sBAAyCA,KAAzC,OA5Bf,iCAgCQ,OAAOA,KAAKa,MAAMi5D,iBAAiB,sBAAA95D,KAAA,IAAU,EAAtC,sBAAyCA,KAAzC,SAhCf,sDA0CQ,IAAM+5D,MAAQ,GA0Bd,OAvBAA,MAAM3uD,KAAN,MAAA2uD,MAAK,mBAAS/5D,KAAKg6D,iBAAiBl6D,KAAI,SAACkY,GAAD,MAAQ,CAC5CtT,EAAG,GACHC,EAAG,QAIPo1D,MAAM3uD,KAAN,MAAA2uD,MAAK,mBAAS/5D,KAAKi6D,gBAAgBn6D,KAAI,SAACkY,GAAD,MAAQ,CAC3CtT,EAAG,EACHC,EAAG,SAIPo1D,MAAM3uD,KAAN,MAAA2uD,MAAK,mBAAS/5D,KAAKmiC,WAAW83B,gBAAgBn6D,KAAI,SAACkY,GAAD,MAAQ,CACtDtT,EAAG/F,uDAAiB,EACpBgG,EAAG,SAIPo1D,MAAM3uD,KAAN,MAAA2uD,MAAK,mBAAS/5D,KAAKkiC,YAAY83B,iBAAiBl6D,KAAI,SAACkY,GAAD,MAAQ,CACxDtT,EAAG,GACHC,EAAGhG,wDAAkB,QAGlBo7D,QApEf,+BAuEap7D,MACL,IAAMo7D,MAAQ/5D,KAAKk6D,WACbC,WAAYC,0EAAap6D,KAAKm6D,UAAUvnD,MAExCqqB,SAAW,CACbh5B,MAAOtF,KAAKmB,IAAImE,MAChBC,OAAQvF,KAAKmB,IAAIoE,OACjB61D,OAGE90D,MAAQk1D,UAAUP,SAAS38B,UAEjCk9B,UAAUE,SAASp9B,SAAUh4B,OAE7BjF,KAAKiF,MAAQA,SArFrB,iCAwFqBpE,MAAO6I,KAAMhF,EAAGC,GAC7B,IAAMg9B,OAAS,IAAIk4B,OAAOh5D,MAAO6D,EAAGC,GAMpC,OAJAg9B,OAAOq4B,iBAAmBtwD,KAAKswD,iBAC/Br4B,OAAOs4B,gBAAkBvwD,KAAKuwD,gBAC9Bt4B,OAAOw4B,UAAYzwD,KAAKywD,UAEjBx4B,WA/Ff,W,qpBCEA,IAAMvf,SAAO,4BACR,SAAWk4C,+DADH,yBAER,oBAAsBC,mFAFd,yBAGR,gBAAkBC,2EAHV,yBAIR,cAAgBC,uEAJR,UAOAL,aAAe,SAACr2D,MACzB,OAAOqe,QAAQre,Q,mvECPZ,IAAMy2D,sBAAb,4B,2UAAA,6C,mCAAA,mK,YAAA,sB,YAAA,gCACoBv9B,UACZ,IAAMh4B,MAAQy1D,2EAAuB,CACjCz2D,MAAOg5B,SAASh5B,MAChBC,OAAQ+4B,SAAS/4B,SAGrBe,MAAM8iD,MAAMlkD,SAAQ,SAACsjD,MAAD,OAAUA,KAAKwT,MAAQC,oEAE3C,IAAMC,YAAc51D,MAAM8iD,MAAMp2C,QAAO,SAACjJ,GAAD,OAAOA,EAAEzE,OAAS,GAAKyE,EAAExE,QAAU,KACpEijD,MAAO2T,uDAAWD,aAEpB1T,OACAA,KAAKwT,MAAQI,gEACb5T,KAAK6T,cAAe,GAGxB,IAAMC,eAAiBJ,YAAYlpD,QAAO,SAACjJ,GAAD,OAAOA,IAAMy+C,QACjDU,OAAQiT,uDAAWG,gBAezB,OAbIpT,QACAA,MAAM8S,MAAQI,gEACdlT,MAAMmT,cAAe,GAGP/1D,MAAMi2D,qBAEdr3D,SAAQ,SAACgoC,MACfA,KAAK8uB,MAAQC,qEAGjBO,2DAASl2D,MAAOg4B,SAAS88B,OAElB90D,U,WAjCf,O,4GAAA,uB,yBAA2Cm2D,U,8MCNpC,IAAMN,WAAa,SAAC1yC,KACvB,OAAOA,IAAIpiB,KAAKyhB,MAAMzhB,KAAK+e,SAAWqD,IAAI/iB,UAGjCg2D,UAAY,SAAC38B,IAAK5W,KAC3B,OAAO9hB,KAAKyhB,MAAMzhB,KAAK+e,UAAY+C,IAAM4W,IAAM,GAAKA,O,ueCqB3C48B,QAAU,SAACr2D,MAAOs2D,MAC3B,IAAM1nD,OAtBa,SAAC5O,MAAO2O,QAC3B,IAAI4nD,QAAU,KACVC,gBAAkB,KAgBtB,OAdAx2D,MAAMyE,KAAK7F,SAAQ,SAACgoC,MAChB,GAAKA,KAAK6vB,OAAOC,wDAAjB,CAIA,IAAMC,UAAWx+B,2EAAkByO,KAAMj4B,QAEzC,OAAIgoD,SAAWH,iBAA+B,OAAZD,SAC9BA,QAAU3vB,UACV4vB,gBAAkBG,gBAFtB,MAOGJ,QAIQK,CAAe52D,MAAOs2D,MAErC,GAAI1nD,OAAOnP,IAAM62D,KAAK72D,GAAKmP,OAAOlP,IAAM42D,KAAK52D,EAA7C,CAKAM,MAAM62D,YAAYjoD,OAAOnP,EAAGmP,OAAOlP,EAAGo3D,uDACtC92D,MAAM62D,YAAYP,KAAK72D,EAAG62D,KAAK52D,EAAGo3D,uDAElC,IAAM9+C,QAAS+f,0DAAa,CACxB5Z,KAAM,CACF1e,EAAGmP,OAAOnP,EACVC,EAAGkP,OAAOlP,GAEd5F,MAAO,CACH2F,EAAG62D,KAAK72D,EACRC,EAAG42D,KAAK52D,GAEZm4B,KAAM,SAAClwB,EAAGhE,GACN,OAAI3D,MAAM+2D,SAASpzD,EAAElE,EAAGkE,EAAEjE,GACfm5B,IAGP74B,MAAMg3D,gBAAgBrzD,EAAElE,EAAGkE,EAAEjE,EAAGo3D,wDACzB5+B,yEAAiBvwB,EAAGhE,GAGxBk1B,OAQf,GAJA7gB,OAAO2gB,KAAK/5B,SAAQ,SAAC64B,SACjBz3B,MAAM62D,YAAYp/B,QAAQh4B,EAAGg4B,QAAQ/3B,EAAGg3D,2DAGxC1+C,OAAO0gB,QAAS,CAChB,IAAM1Y,KAAOhI,OAAO2gB,KAAK3gB,OAAO2gB,KAAKv4B,OAAS,GACxC8hD,KAAOliD,MAAMi3D,eAAej3C,KAAKvgB,EAAGugB,KAAKtgB,GAE3CwiD,MACAA,KAAKgV,QAAQl3C,KAAKvgB,EAAGugB,KAAKtgB,SAtC9BM,MAAM62D,YAAYP,KAAK72D,EAAG62D,KAAK52D,EAAGg3D,yDA2C7BR,SAAW,SAACl2D,MAAO80D,OAC5BA,MAAMl2D,SAAQ,SAAC03D,MAAD,OAAUD,QAAQr2D,MAAOs2D,W,40BCxEpC,IAAMI,gBAAkB,EAClBI,eAAiB,EACjBK,wBAA0B,EAE1BC,SAAb,WAMI,kBAAY33D,EAAGC,I,8HAAG,0CALb,GAKa,0BAJb,GAIa,4BAHXy3D,yBAGW,6BAFVE,kEAGJt8D,KAAK0E,EAAIA,EACT1E,KAAK2E,EAAIA,E,uCARjB,O,YAAA,U,WAAA,8BAWWiO,MACH,OAAO5S,KAAK4S,OAASA,U,4GAZ7B,YAgBa2pD,eAAiB,SAAC73D,EAAGC,GAAJ,OAAU,IAAI03D,SAAS33D,EAAGC,K,6qBClBjD,IAAMi2D,kBAAoB,EACpB0B,kBAAoB,EACpBvB,iBAAmB,EAE1B34C,SAAO,4BACRw4C,kBAAoB4B,mDADZ,yBAERF,kBAAoBG,mDAFZ,yBAGR1B,iBAAmB2B,kDAHX,UAMAC,kBAAoB,SAAChC,OAC9B,OAAOv4C,QAAQu4C,S,+jECXE8B,Y,goBACG5wB,MACsB,IAAlC7rC,KAAKqhC,YAAYwK,MAAMxmC,QACnBwmC,KAAK6vB,OAAOK,wDACCp9D,8DAAsB,QAE9Bob,SAASC,OAAO6xB,KAAKnnC,EAAGmnC,KAAKlnC,K,mCAK1BwiD,MAAM,eACtBA,KAAK4S,MAAMl2D,SAAQ,SAAC03D,MAChB,IAAMt2C,KAAOtmB,8DAAsB,QAEG,IAAlC,MAAK0iC,YAAYk6B,MAAMl2D,QACvB4f,KAAKlL,SAASC,OAAOuhD,KAAK72D,EAAG62D,KAAK52D,MAI1CwiD,KAAKliD,MAAMpB,SAAQ,SAACgoC,MAAD,OAAU,MAAK+wB,aAAa/wB,a,oKApBdgxB,U,wlBCDpBA,mB,+TACGhxB,S,mCAGAsb,MAAM,eACtBA,KAAKliD,MAAMpB,SAAQ,SAACgoC,MAChB,MAAK+wB,aAAa/wB,W,+BAIV5mC,OAAO,gBACnBA,MAAMyE,KAAK7F,SAAQ,SAACgoC,MAChB,OAAK+wB,aAAa/wB,W,kCAIPA,MACf,OAAOltC,+DAAuBktC,KAAKnnC,EAAGmnC,KAAKlnC,K,gCAG9BknC,MACbxK,YAAYwK,MAAMhoC,SAAQ,SAAC4J,GACvBA,EAAE0E,e,yCAIgB2qD,SACtB,IAD6C,IAAdC,SAAc,uDAAL,IAC/Bz3D,EAAI,EAAGA,EAAIy3D,SAAUz3D,IAAK,CAC/B,IAAMumC,MAAOivB,uDAAWgC,SAExB,GAAI98D,KAAKqhC,YAAYwK,OAAS,EAC1B,OAAOA,KAIfnqC,QAAQiY,KAAR,+BAAqCojD,SAArC,mBAAgED,W,+BAGpD3V,KAAM7uC,IAClB,IAAMuzB,KAAO7rC,KAAKg9D,mBAAmB7V,KAAK8V,eAEtCpxB,MACAvzB,GAAGuzB,U,i6ECtCM2wB,Y,goBACG3wB,MAChB,GAAIA,KAAK6vB,OAAOK,uDAAiB,CAC7B,IAAMnpD,KAAO5M,KAAK+e,SAAW,GAAM,WAAa,gBACnCpmB,8DAAsBiU,MAE9BmH,SAASC,OAAO6xB,KAAKnnC,EAAGmnC,KAAKlnC,M,mCAItBwiD,MAAM,eACtBA,KAAKliD,MAAMpB,SAAQ,SAACgoC,MAChB,MAAK+wB,aAAa/wB,MAEd7lC,KAAK+e,SAAW,IACZ8mB,KAAK6vB,OAAOC,yDACEh9D,8DAAsB,SAE9Bob,SAASC,OAAO6xB,KAAKnnC,EAAGmnC,KAAKlnC,MAK/C,IAAK,IAAIW,EAAI,EAAGA,GAAI+1D,sDAAU,EAAG,GAAI/1D,IACjCtF,KAAKk9D,SAAS/V,MAAM,SAACtb,MACjB,IAAMsxB,OAASx+D,8DAAsB,UAErCw+D,OAAOpjD,SAASC,OAAO6xB,KAAKnnC,EAAGmnC,KAAKlnC,GACpCw4D,OAAO74C,MAAMC,SAASP,sEAI9B,IAAK,IAAI1e,GAAI,EAAGA,IAAI+1D,sDAAU,EAAG,GAAI/1D,KACjCtF,KAAKk9D,SAAS/V,MAAM,SAACtb,MACjB,IAAMuxB,KAAOz+D,8DAAsB,QAEnCy+D,KAAKvjD,gBAAgBC,SAAWgB,6DAChCsiD,KAAKrjD,SAASC,OAAO6xB,KAAKnnC,EAAGmnC,KAAKlnC,MAI1C,IAAK,IAAIW,IAAI,EAAGA,KAAI+1D,sDAAU,EAAG,GAAI/1D,MACjCtF,KAAKk9D,SAAS/V,MAAM,SAACtb,MACjB,IAAMuxB,KAAOz+D,8DAAsB,QAEnCy+D,KAAKvjD,gBAAgBC,SAAWiB,6DAChCqiD,KAAKrjD,SAASC,OAAO6xB,KAAKnnC,EAAGmnC,KAAKlnC,MAI1C,IAAK,IAAIW,IAAI,EAAGA,KAAI+1D,sDAAU,EAAG,GAAI/1D,MACjCtF,KAAKk9D,SAAS/V,MAAM,SAACtb,MACjB,IAAMuxB,KAAOz+D,8DAAsB,QAEnCy+D,KAAKvjD,gBAAgBC,SAAWkB,6DAChCoiD,KAAKrjD,SAASC,OAAO6xB,KAAKnnC,EAAGmnC,KAAKlnC,U,oKAvDTk4D,U,2wECApBH,W,2nBACG7wB,MACsB,IAAlC7rC,KAAKqhC,YAAYwK,MAAMxmC,QACnBwmC,KAAK6vB,OAAOK,wDACCp9D,8DAAsB,YAE9Bob,SAASC,OAAO6xB,KAAKnnC,EAAGmnC,KAAKlnC,K,mCAK1BwiD,MAAM,eACtBA,KAAK4S,MAAMl2D,SAAQ,SAAC03D,MAChB,IAAMt2C,KAAOtmB,8DAAsB,QAEG,IAAlC,MAAK0iC,YAAYk6B,MAAMl2D,QACvB4f,KAAKlL,SAASC,OAAOuhD,KAAK72D,EAAG62D,KAAK52D,MAI1CwiD,KAAKliD,MAAMpB,SAAQ,SAACgoC,MAAD,OAAU,MAAK+wB,aAAa/wB,SAE/C7rC,KAAKk9D,SAAS/V,MAAM,SAACtb,MACjB,IAAMwxB,MAAQ1+D,8DAAsB,SAC9B2+D,MAAQ3+D,8DAAsB,SAC9By+D,KAAOz+D,8DAAsB,QAEnCy+D,KAAKvjD,gBAAgBC,SAAWkB,6DAChCqiD,MAAMtjD,SAASC,OAAO6xB,KAAKnnC,EAAGmnC,KAAKlnC,GACnC04D,MAAM1gD,UAAUE,QAAQugD,MACxBC,MAAM1gD,UAAUE,QAAQygD,UAG5B,IAAK,IAAIh4D,EAAI,EAAGA,GAAI+1D,sDAAU,EAAG,GAAI/1D,IACjCtF,KAAKk9D,SAAS/V,MAAM,SAACtb,MACjB,IAAM0xB,SAAW5+D,8DAAsB,iBAEvC4+D,SAASxjD,SAASC,OAAO6xB,KAAKnnC,EAAGmnC,KAAKlnC,GACtC44D,SAASj5C,MAAMC,SAASP,0E,mKAtCA64C,U,8sECDjC,IAAMnC,cAAb,uB,2UAAA,gC,mCAAA,2I,YAAA,c,YAAA,gCACoBz9B,UACZ,IAAMh5B,MAAQg5B,SAASh5B,MACjBC,OAAS+4B,SAAS/4B,OAClB61D,MAAQ98B,SAAS88B,OAAS,GAC1B90D,MAAQ,IAAIu4D,oDAAcv5D,MAAOC,QAEjCi2D,UAAY,IAAIsD,gDAAqBx5D,MAAOC,OAAQ,CACtDkiD,UAAW,IACXH,UAAWhpB,SAASgpB,WAAa,CAAC,EAAG,GACrCC,WAAYjpB,SAASipB,YAAc,CAAC,EAAG,GACvCC,kBAAmBlpB,SAASygC,eAAiB,KA2BjD,OAxBAvD,UAAU3jD,QAAO,SAAC9R,EAAGC,EAAGuM,GACV,IAANA,GACAjM,MAAM62D,YAAYp3D,EAAGC,EAAGg3D,wDAGlB,IAANzqD,GACAjM,MAAM62D,YAAYp3D,EAAGC,EAAGo3D,0DAIhC5B,UAAUwD,WAAW95D,SAAQ,SAAC6E,GAC1B,IAAMy+C,KAAOliD,MAAM24D,WACfl1D,EAAEggD,UACFhgD,EAAEkgD,SACDlgD,EAAEigD,WAAajgD,EAAEggD,UAAa,EAC9BhgD,EAAEmgD,YAAcngD,EAAEkgD,SAAY,GAEnClgD,EAAEm1D,UAAS,SAACn5D,EAAGC,GACXwiD,KAAKgV,QAAQz3D,EAAGC,UAIxBw2D,2DAASl2D,MAAO80D,OAET90D,U,WAtCf,O,4GAAA,e,yBAAmC64D,U,yoDCFdN,c,WAyBjB,uBAAYv5D,MAAOC,QAAuC,IAA/B65D,YAA+B,uDAAjBpC,uDAAiB,6EAxB3CA,yDAwB2C,kCAvBlD,KAuBkD,mCAtBjD,KAuBL,sBAAA37D,KAAA,MAAa,IAAIg+D,iDAAK/5D,MAAOC,OAAQq4D,wDACrC,sBAAAv8D,KAAA,aAAoB+9D,aACpB/9D,KAAK4F,Q,+DAtBL,OAAO,sBAAA5F,KAAA,OAAWiE,Q,6BAIlB,OAAO,sBAAAjE,KAAA,OAAWkE,S,2BAIlB,OAAOlE,KAAKiE,MAAQjE,KAAKkE,S,2BAIzB,OAAO,sBAAAlE,KAAA,OAAW0J,O,4BAIlB,OAAOiC,OAAO1B,OAAP,sBAAcjK,KAAd,a,0DASH0E,EAAGC,GACP,OAAO,sBAAA3E,KAAA,OAAWqP,IAAI3K,EAAGC,K,kCAGjBD,EAAGC,EAAGiO,MACd,sBAAA5S,KAAA,OAAWqP,IAAI3K,EAAGC,GAAGiO,KAAOA,O,mCAGnBlO,EAAGC,EAAGg2D,OACf,sBAAA36D,KAAA,OAAWqP,IAAI3K,EAAGC,GAAGg2D,MAAQA,Q,kCAGrBj2D,EAAGC,GACX,OAAO3E,KAAKi+D,QAAQv5D,EAAGC,GAAGiO,O,8BAGtBu0C,MACJ,sBAAAnnD,KAAA,QAAYmnD,KAAKh2C,IAAMg2C,O,iCAGhBziD,EAAGC,EAAGV,MAAOC,QACpB,IAAMijD,KAAO,IAAI+W,+CAASx5D,EAAGC,EAAGV,MAAOC,OAAQlE,MAI/C,OAFAA,KAAKm+D,QAAQhX,MAENA,O,8BAIPnnD,KAAKwpC,KAAK,EAAG,EAAGxpC,KAAKiE,MAAOjE,KAAKkE,OAAjC,sBAAyClE,KAAzC,iB,2BAGC0E,EAAGC,EAAGV,MAAOC,OAAQ0O,MACtB,IAAK,IAAItN,EAAIZ,EAAGY,EAAIZ,EAAIT,MAAOqB,IAC3B,IAAK,IAAIiD,EAAI5D,EAAG4D,EAAI5D,EAAIT,OAAQqE,IAC5BvI,KAAK87D,YAAYx2D,EAAGiD,EAAGqK,Q,sCAKnBlO,EAAGC,EAAGiO,MAClB,OAAO5S,KAAKi+D,QAAQv5D,EAAGC,GAAG+2D,OAAO9oD,Q,mCAGxBrE,QAASC,QAASvJ,OAAO,eAClCA,MAAM8iD,MAAMlkD,SAAQ,SAACsjD,MACjBA,KAAKiX,QAAQjX,KAAKziD,EAAI6J,QAAS44C,KAAKxiD,EAAI6J,QAAS,UAErDvJ,MAAMyE,KAAK7F,SAAQ,SAACgoC,MAChB,MAAKiwB,YAAYjwB,KAAKnnC,EAAI6J,QAASs9B,KAAKlnC,EAAI6J,QAASq9B,KAAKj5B,MAC1D,MAAKyrD,aAAaxyB,KAAKnnC,EAAI6J,QAASs9B,KAAKlnC,EAAI6J,QAASq9B,KAAK8uB,Y,+BAI1Dj2D,EAAGC,GACR,OAAa,IAAND,GAAiB,IAANC,GAAWD,IAAM1E,KAAKiE,MAAQ,GAAKU,IAAM3E,KAAKkE,OAAS,I,+BAGpEy2D,OAAO,gBACZ36D,KAAK0J,KAAK7F,SAAQ,SAACgoC,MAAD,OAAU,OAAKwyB,aAAaxyB,KAAKnnC,EAAGmnC,KAAKlnC,EAAGg2D,UAC9D36D,KAAK+nD,MAAMlkD,SAAQ,SAACsjD,MAAD,OAAUA,KAAKwT,MAAQA,W,qCAG/Bj2D,EAAGC,GACd,IAAMknC,KAAO7rC,KAAKi+D,QAAQv5D,EAAGC,GAE7B,OAAO3E,KAAK+nD,MAAM5qC,MAAK,SAACgqC,MACpB,OAAOA,KAAKliD,MAAMq5D,SAASzyB,W,2CAId,gBACjB,OAAO7rC,KAAK0J,KAAKiI,QAAO,SAACk6B,MACrB,OAAQ,OAAKqwB,eAAerwB,KAAKnnC,EAAGmnC,KAAKlnC,Q,mCAIpCD,EAAGC,GACZ,OAAO,sBAAA3E,KAAA,OAAW48B,aAAal4B,EAAGC,O,41CCjHrBq5D,K,WAsBjB,cAAY/5D,MAAOC,OAAQq6D,wB,8HAAuB,+CArBzC,IAqByC,oCApBxC,IAoBwC,kCAnB1C,KAmB0C,mDAlBzB,kBAAM,QAmB3B,sBAAAv+D,KAAA,OAAciE,OACd,sBAAAjE,KAAA,QAAekE,QACf,sBAAAlE,KAAA,uBAA8Bu+D,uBAE9Bv+D,KAAK4F,Q,sDApBL,6BAAO5F,KAAP,U,6BAIA,6BAAOA,KAAP,W,2BAIA,OAAO,sBAAAA,KAAA,8BAAcA,KAAd,W,2BAIP,6BAAOA,KAAP,W,6CAWA0E,EAAGC,GACH,OAAOA,EAAI3E,KAAKiE,MAAQS,I,4BAGtBkZ,KACF,MAAO,CACHlZ,EAAGsB,KAAKC,MAAM2X,IAAM5d,KAAKiE,OACzBU,EAAGqB,KAAKC,MAAM2X,IAAM5d,KAAKiE,U,8BAK7B,IAAK,IAAIqB,EAAI,EAAGA,EAAItF,KAAKyK,KAAMnF,IAAK,iBACftF,KAAK2iC,MAAMr9B,GAApBZ,EADwB,YACxBA,EAAGC,EADqB,YACrBA,EAEX,sBAAA3E,KAAA,OAAWsF,GAAX,sBAAgBtF,KAAhB,6BAAgBA,KAA4B0E,EAAGC,M,0BAInDD,EAAGC,EAAG2G,OACN,GAAItL,KAAK6hC,cAAcn9B,EAAGC,GACtBjD,QAAQiY,KAAR,mDACgDjV,EADhD,aACsDC,EADtD,sBACqE2G,YAFzE,CAOA,IAAMsS,IAAM5d,KAAK4d,IAAIlZ,EAAGC,GAExB,sBAAA3E,KAAA,OAAW4d,KAAOtS,S,0BAGlB5G,EAAGC,GACH,OAAI3E,KAAK6hC,cAAcn9B,EAAGC,GACtB,sBAAO3E,KAAP,6BAAOA,MAGJ,sBAAAA,KAAA,OAAWA,KAAK4d,IAAIlZ,EAAGC,M,oCAGpBD,EAAGC,GACb,OAAOD,EAAI,GAAKC,EAAI,GAAKD,GAAK1E,KAAKiE,OAASU,GAAK3E,KAAKkE,S,mCAG7CQ,EAAGC,GACZ,MAAO,CACH3E,KAAKqP,IAAI3K,EAAI,EAAGC,EAAI,GACpB3E,KAAKqP,IAAI3K,EAAGC,EAAI,GAChB3E,KAAKqP,IAAI3K,EAAI,EAAGC,EAAI,GACpB3E,KAAKqP,IAAI3K,EAAI,EAAGC,GAChB3E,KAAKqP,IAAI3K,EAAI,EAAGC,GAChB3E,KAAKqP,IAAI3K,EAAI,EAAGC,EAAI,GACpB3E,KAAKqP,IAAI3K,EAAGC,EAAI,GAChB3E,KAAKqP,IAAI3K,EAAI,EAAGC,EAAI,Q,myCC/EXu5D,S,WAwFjB,kBAAYx5D,EAAGC,EAAGV,MAAOC,OAAQkJ,Y,8HAAW,0CAvFvC,GAuFuC,yBAtFxC,GAsFwC,yBArFxC,GAqFwC,6BApFpC,GAoFoC,8BAnFnC,GAmFmC,6BAlFpCwtD,kEAkFoC,qCAjF7B,GAiF6B,uCAhF/B,OAgF+B,wCA/E9B,KAgFV56D,KAAKmR,IAAKsH,gDACVzY,KAAK0E,EAAIA,EACT1E,KAAK2E,EAAIA,EACT3E,KAAKiE,MAAQA,MACbjE,KAAKkE,OAASA,O,4UACd,CAAAlE,KAAA,WAAkBoN,W,kEAlFlB,6BAAOpN,KAAP,e,4BAGQ,eACR,OAAOA,KAAKw+D,cAAc1+D,KAAI,SAACy7D,MAAD,MAAW,CACrC72D,EAAG62D,KAAK72D,EAAI,MAAKA,EACjBC,EAAG42D,KAAK52D,EAAI,MAAKA,Q,2BAKrB,OAAO3E,KAAKg7D,aAAeh7D,KAAK0E,EAAI,EAAI1E,KAAK0E,I,4BAI7C,OAAO1E,KAAKg7D,aAAeh7D,KAAK0E,EAAI1E,KAAKiE,MAAQ,EAAIjE,KAAK0E,EAAI1E,KAAKiE,Q,0BAInE,OAAOjE,KAAKg7D,aAAeh7D,KAAK2E,EAAI,EAAI3E,KAAK2E,I,6BAI7C,OAAO3E,KAAKg7D,aAAeh7D,KAAK2E,EAAI3E,KAAKkE,OAAS,EAAIlE,KAAK2E,EAAI3E,KAAKkE,S,kCASpE,IALA,IAAMnF,MAAQiB,KAAKg7D,cAAgB,EAAI,EACjCyD,SAAWz+D,KAAKg7D,aAAeh7D,KAAKiE,MAAQ,EAAIjE,KAAKiE,MACrDy6D,UAAY1+D,KAAKg7D,aAAeh7D,KAAKkE,OAAS,EAAIlE,KAAKkE,OACvDy6D,QAAU,GAEPr5D,EAAIvG,MAAOuG,EAAIm5D,SAAUn5D,IAC9B,IAAK,IAAIiD,EAAIxJ,MAAOwJ,EAAIm2D,UAAWn2D,IAC3BjD,IAAMvG,OAASuG,IAAMm5D,SAAW,GAAIl2D,IAAMxJ,OAASwJ,IAAMm2D,UAAY,GACrEC,QAAQvzD,KAAK,sBAAApL,KAAA,YAAgBi+D,QACzB34D,EAAItF,KAAK0E,EACT6D,EAAIvI,KAAK2E,IAMzB,OAAOg6D,U,oCAMP,IAFA,IAAMC,SAAW,GAERt5D,EAAI,EAAGA,EAAItF,KAAKiE,MAAOqB,IAC5B,IAAK,IAAIiD,EAAI,EAAGA,EAAIvI,KAAKkE,OAAQqE,IAC7Bq2D,SAASxzD,KAAK,sBAAApL,KAAA,YAAgBi+D,QAC1B34D,EAAItF,KAAK0E,EACT6D,EAAIvI,KAAK2E,IAKrB,OAAOi6D,W,4BASP,IALA,IAAM7/D,MAAQiB,KAAKg7D,cAAgB,EAAI,EACjCyD,SAAWz+D,KAAKg7D,aAAeh7D,KAAKiE,MAAQ,EAAIjE,KAAKiE,MACrDy6D,UAAY1+D,KAAKg7D,aAAeh7D,KAAKkE,OAAS,EAAIlE,KAAKkE,OACvDe,MAAQ,GAELK,EAAIvG,MAAOuG,EAAIm5D,SAAUn5D,IAC9B,IAAK,IAAIiD,EAAIxJ,MAAOwJ,EAAIm2D,UAAWn2D,IAC/BtD,MAAMmG,KAAK,sBAAApL,KAAA,YAAgBi+D,QAAQ34D,EAAItF,KAAK0E,EAAG6D,EAAIvI,KAAK2E,IAIhE,OAAOM,U,6DAYKP,EAAGC,GACf,sBAAA3E,KAAA,YAAgB87D,YAAY97D,KAAK0E,EAAIA,EAAG1E,KAAK2E,EAAIA,EAAGg3D,wDACpD,sBAAA37D,KAAA,aAAiBoL,KAAK,CAAE1G,EAAGC,M,8BAGvBD,EAAGC,GACP3E,KAAK6+D,gBAAgBn6D,EAAI1E,KAAK0E,EAAGC,EAAI3E,KAAK2E,K,8BAGtCD,EAAGC,EAAGyI,WACV,IAAM+5C,KAAO,IAAI+W,SAASx5D,EAAGC,EAAG3E,KAAKiE,MAAOjE,KAAKkE,OAAQkJ,WAWzD,OATA+5C,KAAKwT,MAAQ36D,KAAK26D,MAClBxT,KAAK6T,aAAeh7D,KAAKg7D,aAEzBh7D,KAAKw+D,cAAc36D,SAAQ,SAAC03D,MACxBpU,KAAK0X,gBAAgBtD,KAAK72D,EAAG62D,KAAK52D,MAGtCyI,UAAU+wD,QAAQhX,MAEXA,O,oCAGGziD,EAAGC,GACb,OAAOD,GAAK1E,KAAKoqD,OAAS1lD,GAAK1E,KAAKi8B,MAAQt3B,GAAK3E,KAAKqqD,QAAU1lD,GAAK3E,KAAKk8B,M,iCAGnED,KAAMC,IAAKkuB,MAAOC,QACzB,IAAMyU,GAAK7iC,KAAOj8B,KAAKoqD,MACjB2U,GAAK3U,MAAQpqD,KAAKi8B,KAClB+iC,GAAK9iC,IAAMl8B,KAAKqqD,OAChB4U,GAAK5U,OAASrqD,KAAKk8B,IAEzB,OAAO4iC,IAAMC,IAAMC,IAAMC,O,0bCrGjC,IAAIl6C,OAAS,SAAAm6C,OAAK,OAAIC,OAAOC,gBAAgB,IAAIC,WAAWH,SAExDI,aAAe,SAACC,SAAU90D,KAAM+0D,WAMlC,IAAIC,MAAQ,GAAMz5D,KAAKmV,IAAIokD,SAASl6D,OAAS,GAAKW,KAAK05D,KAAQ,EAgB3DC,QAAW,IAAMF,KAAOh1D,KAAQ80D,SAASl6D,QAE7C,OAAO,WAEL,IADA,IAAI8L,GAAK,KAKP,IAHA,IAAI+tD,MAAQM,UAAUG,MAElBp3D,EAAIo3D,KACDp3D,KAIL,IAFA4I,IAAMouD,SAASL,MAAM32D,GAAKk3D,OAAS,IAE5Bp6D,UAAYoF,KAAM,OAAO0G,KAMpCyuD,eAAiB,SAACL,SAAU90D,MAAX,OAAoB60D,aAAaC,SAAU90D,KAAMsa,SAElEtM,OAAS,WAKX,IAL0B,IAAdhO,KAAc,uDAAP,GACf0G,GAAK,GACL+tD,MAAQC,OAAOC,gBAAgB,IAAIC,WAAW50D,OAG3CA,QAAQ,CAMb,IAAIo1D,MAAqB,GAAdX,MAAMz0D,MAGf0G,IAFE0uD,MAAO,GAEHA,MAAKttB,SAAS,IACXstB,MAAO,IAETA,MAAO,IAAIttB,SAAS,IAAIhI,cACtBs1B,MAAO,GACV,IAEA,IAGV,OAAO1uD,K,oMCpGT,IAAI+E,YACF,oE,2cCHmB4nD,W,4jCCGA1C,gB,kTACDn+B,UACZ,OAAO,IAAIugC,oDAAcvgC,SAASh5B,MAAOg5B,SAAS/4B,U,+BAGtC+4B,SAAUh4B,OACtBA,MAAM8iD,MAAMlkD,SAAQ,SAACsjD,OACHwV,oEAAkBxV,KAAKwT,OAE/BmF,aAAa3Y,SAGvBliD,MAAMi2D,qBAAqBr3D,SAAQ,SAACgoC,OAClB8wB,oEAAkB9wB,KAAK8uB,OAE/BiC,aAAa/wB,a,uzECbxB,IAAMyuB,gBAAb,4B,2UAAA,uC,mCAAA,iJ,YAAA,gB,YAAA,gCACoBr9B,UACZ,IAAMh4B,MAAQy1D,2EAAuB,CACjCz2D,MAAOg5B,SAASh5B,MAChBC,OAAQ+4B,SAAS/4B,OACjB61D,MAAO98B,SAAS88B,QAOpB,OAJA90D,MAAM86D,SAASnF,mEAEfO,2DAASl2D,MAAOg4B,SAAS88B,OAElB90D,U,WAZf,O,4GAAA,iB,yBAAqCm2D,U,+0ECE9B,IAAMb,0BAAb,4B,2UAAA,iD,mCAAA,+K,YAAA,0B,YAAA,gCACoBt9B,UACZ,IAAMh4B,MAAQ,IAAIu4D,oDAAcvgC,SAASh5B,MAAOg5B,SAAS/4B,QAEnD87D,WAAah6D,KAAKqkB,KAAK41C,KAAe,EAEtC/jC,IAAMw+B,2EAAuB,CAC/Bz2D,MAAOg5B,SAASh5B,MAJJ,EAKZC,OALY,EAMZ61D,MAAO,CACH,CAAEr1D,EAAGs7D,WAAYr7D,EAAGs7D,GACpB,CAAEv7D,EAAGu4B,SAASh5B,MARN,EAQwB,EAAGU,EAAGq7D,WAAa,GACnD,CAAEt7D,EAAGu7D,GAAct7D,EAAGs7D,MAIxBhkC,KAAOy+B,2EAAuB,CAChCz2D,MAdY,EAeZC,OAAQ+4B,SAAS/4B,OAfL,EAgBZ61D,MAAO,CACH,CAAEr1D,EAAGs7D,WAAYr7D,EAAG,GACpB,CAAED,EAAGu7D,EAAat7D,EAAGs4B,SAAS/4B,OAlBtB,EAkByC87D,WAAa,MAIhE3V,OAASqQ,2EAAuB,CAClCz2D,MAAOg5B,SAASh5B,MAvBJ,EAwBZC,OAxBY,EAyBZ61D,MAAO,CACH,CAAEr1D,EAAG,EAAGC,EAAGq7D,WAAa,GACxB,CAAEt7D,EAAGu4B,SAASh5B,MA3BN,EA2BwB+7D,WAAa,EAAGr7D,EAAG,MAIrDylD,MAAQsQ,2EAAuB,CACjCz2D,MAhCY,EAiCZC,OAAQ+4B,SAAS/4B,OAjCL,EAkCZ61D,MAAO,CACH,CAAEr1D,EAAG,EAAGC,EAAGq7D,WAAa,GACxB,CAAEt7D,EAAGs7D,WAAa,EAAGr7D,EAAGs4B,SAAS/4B,OApCzB,EAoC4C,MAItDg8D,OAASC,mFAA2B,CACtCl8D,MAAQg5B,SAASh5B,MAASg8D,GAAgB,EAC1C/7D,OAAS+4B,SAAS/4B,OAAU+7D,GAAgB,EAC5ClG,MAAO,CAAC,CAAEr1D,EAAG,GAAIC,EAAG,MAiBxB,OAdAu3B,IAAI6jC,SAASnF,kEACb3+B,KAAK8jC,SAASnF,kEACdvQ,OAAO0V,SAASnF,kEAChBxQ,MAAM2V,SAASnF,kEACfsF,OAAOH,SAASzD,kEAEhBr3D,MAAMm7D,aAAa,EAAG,EAAGlkC,KACzBj3B,MAAMm7D,aAAa,EArDH,EAqDenkC,MAC/Bh3B,MAAMm7D,aAtDU,EAsDYnjC,SAAS/4B,OAtDrB,EAsDuCmmD,QACvDplD,MAAMm7D,aAAanjC,SAASh5B,MAvDZ,EAuD6B,EAAGmmD,OAChDnlD,MAAMm7D,aAAaH,EAAaA,EAAaC,SAE7C/E,2DAASl2D,MAAOg4B,SAAS88B,OAElB90D,U,WA/Df,O,4GAAA,2B,yBAA+Cm2D,U,0yGCC/C,IAGIiF,MAAQ,EACNC,aAAe,kBAAMD,SAErBE,kBAAoB,SAACC,KAAMC,KAC7B,IAAMC,OAASJ,eACTK,QAAUL,eAqBhB,MAAO,CApBM,CACTnvD,GAAIuvD,OACJE,QAAQ,EACRC,SAAUL,KAAKrvD,GACf2vD,UAAWH,QACXpyD,QAASiyD,KAAKjyD,QACdC,QAASgyD,KAAKhyD,QACdvK,MAAOw8D,IACPv8D,OAAQs8D,KAAKt8D,QAEH,CACViN,GAAIwvD,QACJC,QAAQ,EACRC,SAAUL,KAAKrvD,GACf2vD,UAAWJ,OACXnyD,QAASiyD,KAAKjyD,QAAUkyD,IACxBjyD,QAASgyD,KAAKhyD,QACdvK,MAAOu8D,KAAKv8D,MAAQw8D,IACpBv8D,OAAQs8D,KAAKt8D,UAKf68D,oBAAsB,SAACP,KAAMC,KAC/B,IAAMO,MAAQV,eACRW,SAAWX,eAsBjB,MAAO,CArBK,CACRnvD,GAAI6vD,MACJJ,QAAQ,EACRC,SAAUL,KAAKrvD,GACf2vD,UAAWG,SACX1yD,QAASiyD,KAAKjyD,QACdC,QAASgyD,KAAKhyD,QACdvK,MAAOu8D,KAAKv8D,MACZC,OAAQu8D,KAEG,CACXtvD,GAAI8vD,SACJL,QAAQ,EACRC,SAAUL,KAAKrvD,GACf2vD,UAAWE,MACXzyD,QAASiyD,KAAKjyD,QACdC,QAASgyD,KAAKhyD,QAAUiyD,IACxBx8D,MAAOu8D,KAAKv8D,MACZC,OAAQs8D,KAAKt8D,OAASu8D,OAMjBN,kBAAb,uB,2UAAA,oC,mCAAA,uJ,YAAA,kB,YAAA,gCACoBljC,UAiBZ,IAhBA,IAAMh5B,MAAQg5B,SAASh5B,MACjBC,OAAS+4B,SAAS/4B,OAClB61D,MAAQ98B,SAAS88B,OAAS,GAE1BmH,aAAejkC,SAASikC,cAAgB,EACxCC,cAAgBlkC,SAASkkC,eAAiB,EAE1CC,aAAenkC,SAASmkC,cAAgB,GACxCC,cAAgBpkC,SAASokC,eAAiB,GAE1CC,kBAAoBrkC,SAASqkC,mBAAqB,GAElDC,UAAYtkC,SAASskC,WAAa,GAElCt8D,MAAQ,IAAIu4D,oDAAcv5D,MAAOC,QAE9BoB,EAAI,EAAGA,EAAIrB,MAAOqB,IACvB,IAAK,IAAIiD,EAAI,EAAGA,EAAIrE,OAAQqE,IACd,IAANjD,GAAWA,IAAMrB,MAAQ,GAAW,IAANsE,GAAWA,IAAMrE,OAAS,EACxDe,MAAM62D,YAAYx2D,EAAGiD,EAAGwzD,uDAExB92D,MAAM62D,YAAYx2D,EAAGiD,EAAGozD,wDAoBpC,IAfA,IAAM6F,MAAQ,CACV,CACIZ,QAAQ,EACRC,SAAU,KACVC,UAAW,KACX3vD,GAAImvD,eACJ/xD,QAAS,EACTC,QAAS,EACTtK,OAAQA,OAAS,EACjBD,MAAOA,MAAQ,IAIjBw9D,MAAQ,GAEPD,MAAMn8D,OAAS,GAAG,CACrB,IAAMm7D,KAAOgB,MAAMlgD,MAGnB,GAFAmgD,MAAMr2D,KAAKo1D,QAEPA,KAAKv8D,MAAQm9D,cAAgBZ,KAAKt8D,OAASm9D,eACvBr7D,KAAK+e,SAAWu8C,mBADxC,CAQA,IAAM36C,WAAa,GAUnB,GARI65C,KAAKv8D,MAAQi9D,aAAe,EAAIA,cAChCv6C,WAAWvb,KArHV,GAwHDo1D,KAAKt8D,OAASi9D,cAAgB,EAAIA,eAClCx6C,WAAWvb,KAxHR,KA2HHub,WAAWthB,QAAU,GAAzB,CAMA,GAlIK,KAgIay1D,uDAAWn0C,YAED,CACxB,IAAM85C,KAAMpF,sDACR6F,aAAe,EACfV,KAAKv8D,MAAQi9D,aAAe,GAGhCM,MAAMp2D,KAAN,MAAAo2D,MAAK,mBAASjB,kBAAkBC,KAAMC,WACnC,CACH,IAAMA,MAAMpF,sDACR8F,cAAgB,EAChBX,KAAKt8D,OAASi9D,cAAgB,GAGlCK,MAAMp2D,KAAN,MAAAo2D,MAAK,mBAAST,oBAAoBP,KAAMC,QAG5CD,KAAKI,QAAS,IAGlBa,MAAM59D,SAAQ,SAAC28D,MACX,GAAsB,OAAlBA,KAAKK,UAILL,KAAKI,OAAT,CACiB37D,MAAM24D,WACf4C,KAAKjyD,QAAU,EACfiyD,KAAKhyD,QAAU,EACfgyD,KAAKv8D,MAAQ,EACbu8D,KAAKt8D,OAAS,GAGb82D,cAAe,EAEpB,IAAK,IAAI11D,GAAI,EAAGA,GAAIk7D,KAAKv8D,MAAOqB,KAC5BL,MAAM62D,YACF0E,KAAKjyD,QAAUjJ,GACfk7D,KAAKhyD,QACLutD,uDAIR,IAAK,IAAIxzD,GAAI,EAAGA,GAAIi4D,KAAKt8D,OAAQqE,KAC7BtD,MAAM62D,YACF0E,KAAKjyD,QACLiyD,KAAKhyD,QAAUjG,GACfwzD,2DAOhB0F,MAAM59D,SAAQ,SAAC28D,MACX,GAAsB,OAAlBA,KAAKK,SAAT,CAIA,IAAMa,QAAUD,MAAMtkD,MAAK,SAACitB,GAAD,OAAOA,EAAEj5B,KAAOqvD,KAAKM,aAE5Ca,eAAiB,GACjBC,QAAS,EAEb,GAAIF,QAAQnzD,QAAUiyD,KAAKjyD,QAAS,CAChCqzD,QAAS,EACT,IAAK,IAAIt8D,IAAI,EAAGA,IAAIk7D,KAAKt8D,OAAQoB,MAAK,CAClC,IAAMZ,EAAI87D,KAAKjyD,QACT5J,EAAI67D,KAAKhyD,QAAUlJ,IACnBumC,KAAO5mC,MAAMg5D,QAAQv5D,EAAGC,GAG1BM,MAAMg3D,gBAAgBv3D,EAAI,EAAGC,EAAGg3D,yDAChC12D,MAAMg3D,gBAAgBv3D,EAAI,EAAGC,EAAGg3D,yDAEhCgG,eAAev2D,KAAKygC,YAGzB,GAAI61B,QAAQlzD,QAAUgyD,KAAKhyD,QAAS,CACvCozD,QAAS,EACT,IAAK,IAAIt8D,IAAI,EAAGA,IAAIk7D,KAAKv8D,MAAOqB,MAAK,CACjC,IAAMZ,GAAI87D,KAAKjyD,QAAUjJ,IACnBX,GAAI67D,KAAKhyD,QACTq9B,MAAO5mC,MAAMg5D,QAAQv5D,GAAGC,IAG1BM,MAAMg3D,gBAAgBv3D,GAAGC,GAAI,EAAGg3D,yDAChC12D,MAAMg3D,gBAAgBv3D,GAAGC,GAAI,EAAGg3D,yDAEhCgG,eAAev2D,KAAKygC,QAKhC,IAAM5mB,MAAO61C,uDAAW6G,gBAWxB,GATIC,SAAW38C,MACXvjB,QAAQiY,KACJ,qBACA6mD,KACAA,KAAKv8D,MACLu8D,KAAKt8D,QAIT+gB,KAAM,CACN,IAAMkiC,KAAOliD,MAAMi3D,eAAej3C,KAAKvgB,EAAGugB,KAAKtgB,GAE3CwiD,MACAA,KAAKgV,QAAQl3C,KAAKvgB,EAAGugB,KAAKtgB,GAG9BM,MAAM62D,YAAY72C,KAAKvgB,EAAGugB,KAAKtgB,EAAGg3D,6DAI1C,IAAM7+B,KAAO,SAAClwB,EAAGhE,GACb,OAAI3D,MAAMg3D,gBAAgBrzD,EAAElE,EAAGkE,EAAEjE,EAAGg3D,yDACzBx+B,yEAAiBvwB,EAAGhE,GAGxBk1B,KAGL+jC,WAAa,SAACj1D,EAAGhE,GACnB,GAAIgE,EAAE8uD,OAAOC,yDAAoB/yD,EAAE8yD,OAAOC,wDAAkB,CACxD,IAAM58D,MAAQ,CACV2F,EAAGkE,EAAElE,EACLC,EAAGiE,EAAEjE,GAEHye,KAAO,CACT1e,EAAGkI,EAAElI,EACLC,EAAGiI,EAAEjI,GAEHi5B,MAAOZ,0DAAa,CACtBj+B,MACAqkB,KACA0Z,OAGJ,GAAIc,KAAKD,SAAWC,KAAKd,MAAQykC,UAC7B,OAAO,EAIf,OAAO,GAuCX,OApCAt8D,MAAMyE,KACDiI,QAAO,SAACk6B,MAAD,OAAUA,KAAK6vB,OAAOK,0DAC7Bl4D,SAAQ,SAACgoC,MACN,IAAMi2B,MAAQ78D,MAAMg5D,QAAQpyB,KAAKnnC,EAAGmnC,KAAKlnC,EAAI,GACvCo9D,MAAQ98D,MAAMg5D,QAAQpyB,KAAKnnC,EAAGmnC,KAAKlnC,EAAI,GAE7C,GAAIk9D,WAAWC,MAAOC,OAAtB,CACI98D,MAAM62D,YAAYjwB,KAAKnnC,EAAGmnC,KAAKlnC,EAAGg3D,wDAElC,IAAMxU,KAAOliD,MAAMi3D,eAAerwB,KAAKnnC,EAAGmnC,KAAKlnC,GAE3CwiD,MACAA,KAAKgV,QAAQtwB,KAAKnnC,EAAGmnC,KAAKlnC,OANlC,CAYA,IAAMq9D,KAAO/8D,MAAMg5D,QAAQpyB,KAAKnnC,EAAI,EAAGmnC,KAAKlnC,GACtCs9D,KAAOh9D,MAAMg5D,QAAQpyB,KAAKnnC,EAAI,EAAGmnC,KAAKlnC,GAE5C,GAAIk9D,WAAWG,KAAMC,MAArB,CACIh9D,MAAM62D,YAAYjwB,KAAKnnC,EAAGmnC,KAAKlnC,EAAGg3D,wDAElC,IAAMxU,MAAOliD,MAAMi3D,eAAerwB,KAAKnnC,EAAGmnC,KAAKlnC,GAE3CwiD,OACAA,MAAKgV,QAAQtwB,KAAKnnC,EAAGmnC,KAAKlnC,SAO1Cw2D,2DAASl2D,MAAO80D,OAET90D,U,WA9Pf,O,4GAAA,mBAAuC64D,mD,4oFCxDvC,IAKarD,oBAAb,4B,2UAAA,2C,mCAAA,6J,YAAA,oB,YAAA,gCACoBx9B,UACZ,IAAMh4B,MAAQi9D,+EAAyB,CACnCj+D,MAAOg5B,SAASh5B,MAChBC,OAAQ+4B,SAAS/4B,OACjB61D,MAAO98B,SAAS88B,QA8BpB,OA3BA90D,MAAM86D,SAAShF,iEAiBf91D,MAAM8iD,MAAMlkD,SAfI,SAACsjD,MACb,IAAMgb,MAAQhb,KAAKib,YAAYzwD,QAAO,SAAChO,GAAD,QAhB1B,SAACA,EAAGwjD,MAAJ,OAAaxjD,EAAEe,IAAMyiD,KAAKlrB,MAAQt4B,EAAEgB,IAAMwiD,KAAKjrB,IAiBvDmmC,CAAgB1+D,EAAGwjD,OAhBR,SAACxjD,EAAGwjD,MAAJ,OAAaxjD,EAAEe,IAAMyiD,KAAKlrB,MAAQt4B,EAAEgB,IAAMwiD,KAAKkD,OAAS,EAiBhEiY,CAAmB3+D,EAAGwjD,OAhBb,SAACxjD,EAAGwjD,MAAJ,OAAaxjD,EAAEe,IAAMyiD,KAAKiD,MAAQ,GAAKzmD,EAAEgB,IAAMwiD,KAAKkD,OAAS,EAiBtEkY,CAAoB5+D,EAAGwjD,OAhBjB,SAACxjD,EAAGwjD,MAAJ,OAAaxjD,EAAEe,IAAMyiD,KAAKiD,MAAQ,GAAKzmD,EAAEgB,IAAMwiD,KAAKjrB,IAiB1DsmC,CAAiB7+D,EAAGwjD,UAGrBliC,MAAO61C,uDAAWqH,OAEpBl9C,MACAkiC,KAAKgV,QAAQl3C,KAAKvgB,EAAGugB,KAAKtgB,MAMlCM,MAAMi2D,qBAAqBr3D,SAAQ,SAACgoC,MAChCA,KAAK8uB,MAAQC,qEAGjB6H,0DAAUx9D,QAEVk2D,2DAASl2D,MAAOg4B,SAAS88B,OAElB90D,QAnCf,+BAsCoBg4B,SAAUh4B,OACtBA,MAAM8iD,MAAMlkD,SAAQ,SAACsjD,OACHwV,oEAAkBxV,KAAKwT,OAE/BmF,aAAa3Y,SAGvB,IAAMub,MAAQz9D,MAAM8iD,MAAMjoD,KAAI,SAACqnD,MAAD,OAAUA,KAAK4S,SAAO9xC,OAC9C06C,SAAW,IAAIx8D,IAqBfy8D,aAAe,SAAC7jE,MAAOopD,KACzB,IApBkBlrC,OAoBZ2gB,MAAOZ,0DAAa,CACtBj+B,MAAO,CACH2F,EAAG3F,MAAM2F,EACTC,EAAG5F,MAAM4F,GAEbye,KAAM,CACF1e,EAAGyjD,IAAIzjD,EACPC,EAAGwjD,IAAIxjD,GAEXm4B,KAAM,SAAClwB,EAAGhE,GACN,GAAI3D,MAAMg3D,gBAAgBrzD,EAAElE,EAAGkE,EAAEjE,EAAGo3D,uDAChC,OAAOj+B,IAGX,IACM8xB,MADY3qD,MAAM23B,aAAah0B,EAAElE,EAAGkE,EAAEjE,GACpBgN,QAAO,SAACy4B,GAAD,OAAOA,EAAEsxB,OAAOK,0DAE/C,OAAInM,MAAMvqD,OAAS,EACO,EAAfuqD,MAAMvqD,OAGbs9D,SAASj7D,IAAT,UAAgBkB,EAAElE,EAAlB,YAAuBkE,EAAEjE,IAClB,GAGqB,GAAzBw4B,yEAAiBvwB,EAAGhE,OA7CjBqU,OAiDL2gB,MAhDDD,SAIZ1gB,OAAO2gB,KAAK/5B,SAAQ,SAAC64B,SACA/9B,+DAAuB+9B,QAAQh4B,EAAGg4B,QAAQ/3B,GAE9CU,OAAS,IAIN1G,8DAAsB,eAE9Bob,SAASC,OAAO0iB,QAAQh4B,EAAGg4B,QAAQ/3B,GAC3Cg+D,SAASl7D,IAAT,UAAgBi1B,QAAQh4B,EAAxB,YAA6Bg4B,QAAQ/3B,SAqC7C+9D,MAAM7+D,SAAQ,SAACg/D,OACX5lC,SAAS88B,MAAMl2D,SAAQ,SAAC03D,MACpBqH,aAAaC,MAAOtH,SAExBmH,MAAM7+D,SAAQ,SAACi/D,OACPD,QAAUC,OAIdF,aAAaC,MAAOC,aAI5B79D,MAAMi2D,qBAAqBr3D,SAAQ,SAACgoC,OAClB8wB,oEAAkB9wB,KAAK8uB,OAE/BiC,aAAa/wB,a,WApH/B,O,4GAAA,qBAAyCuvB,wD,ynGCTlC,IAAM8G,gBAAb,uB,2UAAA,kC,mCAAA,iJ,YAAA,gB,YAAA,gCACoBjlC,UACZ,IAAM8lC,QAAU9lC,SAAS8lC,SAAW,EAC9BC,YAAc/lC,SAAS+lC,aAAe,IACtC/+D,MAAQg5B,SAASh5B,MACjBC,OAAS+4B,SAAS/4B,OAClB+7D,QAAUhjC,SAASgjC,SAAW,EAC9BgD,YAAchmC,SAASgmC,aAAe,EACtCC,SAAWjmC,SAASimC,UAAY,EAChCC,SAAWlmC,SAASkmC,UAAY,EAChCC,SAAWnmC,SAASmmC,UAAY,EAChCh8B,SAAWnK,SAASmK,UAAY,GAChCi8B,UAAYpmC,SAASomC,WAAa,EAClCC,UAAYrmC,SAASqmC,WAAa,GAClCvJ,MAAQ98B,SAAS88B,OAAS,GAC1B90D,MAAQ,IAAIu4D,oDAAcv5D,MAAOC,QAEvC,GAAI6+D,QAAUC,YAGV,OAFAthE,QAAQiY,KAAR,gDAAsDqpD,YAAtD,cAEO/9D,MAyBX,IAtBA,IAAMs+D,UAAY,WACd,IAAMt/D,OAAQo3D,sDAAU+H,SAAUh8B,UAC5BljC,QAASm3D,sDAAUgI,UAAWC,WAEpC,MAAO,CACH5+D,GAAG22D,sDAAU4E,QAAShjC,SAASh5B,MAAQg8D,QAAUh8D,OACjDU,GAAG02D,sDAAU4E,QAAShjC,SAAS/4B,OAAS+7D,QAAU/7D,QAClDD,MACAC,OACA,UAAY,OAAOlE,KAAK2E,EAAIs+D,aAC5B,aAAe,OAAOjjE,KAAK2E,EAAI3E,KAAKkE,OAAS++D,aAC7C,WAAa,OAAOjjE,KAAK0E,EAAIu+D,aAC7B,YAAc,OAAOjjE,KAAK0E,EAAI1E,KAAKiE,MAAQg/D,eAI7CO,SAAW,SAACC,KACd,OAAOx+D,MAAM8iD,MAAMhwC,MAAK,SAACovC,MACrB,OAAOA,KAAKuc,WAAWD,IAAIxnC,KAAMwnC,IAAIvnC,IAAKunC,IAAIrZ,MAAOqZ,IAAIpZ,YAIxD/kD,EAAI,EAAGA,EAAI,IAAKA,IAAK,CAC1B,IAAMm+D,IAAMF,YAEZ,IAAIC,SAASC,KAAb,CAIA,IAAK,IAAIn+D,GAAI,EAAGA,GAAIm+D,IAAIx/D,MAAOqB,KAC3B,IAAK,IAAIiD,EAAI,EAAGA,EAAIk7D,IAAIv/D,OAAQqE,IAAK,CACjC,IAAM6kD,MAAQ,CACV1oD,EAAG++D,IAAI/+D,EAAIY,GACXX,EAAG8+D,IAAI9+D,EAAI4D,GAGL,IAANjD,IAAWA,KAAMm+D,IAAIx/D,MAAQ,GAAW,IAANsE,GAAWA,IAAMk7D,IAAIv/D,OAAS,EAChEe,MAAM62D,YAAY1O,MAAM1oD,EAAG0oD,MAAMzoD,EAAGo3D,uDAEpC92D,MAAM62D,YAAY1O,MAAM1oD,EAAG0oD,MAAMzoD,EAAGg3D,wDAOhD,GAFA12D,MAAM24D,WAAW6F,IAAI/+D,EAAG++D,IAAI9+D,EAAG8+D,IAAIx/D,MAAOw/D,IAAIv/D,QAE1Ce,MAAM8iD,MAAM1iD,QAAU89D,SACtB,OAIR,OAAIl+D,MAAM8iD,MAAM1iD,OAAS69D,UACrBxhE,QAAQiY,KAAK,+BACN3Z,KAAK45D,SAAL,+BACA38B,UADA,IAEH8lC,QAASA,QAAU,QAI3B5H,2DAASl2D,MAAO80D,OAET90D,W,WApFf,O,4GAAA,iB,yBAAqC64D,U,wPCLxB2E,UAAY,SAACx9D,OACtB,IAAK,IAAIK,EAAI,EAAGA,EAAIL,MAAMhB,MAAOqB,IAC7BL,MAAM62D,YAAYx2D,EAAG,EAAGy2D,uDACxB92D,MAAM62D,YAAYx2D,EAAGL,MAAMf,OAAS,EAAG63D,uDAG3C,IAAK,IAAIxzD,EAAI,EAAGA,EAAItD,MAAMf,OAAS,EAAGqE,IAClCtD,MAAM62D,YAAY,EAAGvzD,EAAGwzD,uDACxB92D,MAAM62D,YAAY72D,MAAMhB,MAAQ,EAAGsE,EAAGwzD,yD,42FCPzBp6D,e,6uBACL,K,6DACF,K,gEACG,I,iFAEPiR,KAAMlJ,MACR,sBAAA1J,KAAA,SAAaoL,KAAK,CAAEwH,KAAMlJ,S,0BAG1BtE,MACA,sBAAApF,KAAA,WAAeoL,KAAK,CAAEhG,S,6BAGnB5B,IAAI,gBACP,sBAAAxD,KAAA,SAAa6D,SAAQ,eAAoB,IAAjB+O,KAAiB,KAAjBA,KAAMlJ,KAAW,KAAXA,MACtB6Y,kEAAa3P,KAAMlJ,OACnB,6BAAI,WAAW0B,KAAK,CAChBhG,MAAMod,gEAAW5P,KAAMlJ,W,4UAInC,CAAA1J,KAAA,QAAe,IAEf,IAAM2jE,KAAO,sBAAA3jE,KAAA,WAAeuK,MACxBvE,KAAK8hB,IAAI,sBAAA9nB,KAAA,WAAeqF,OAAf,sBAAwBrF,KAAxB,YAAyC,IAEhDkE,OAAS8B,KAAK04B,IAAIilC,KAAKt+D,OAAd,sBAAsBrF,KAAtB,aAEf2jE,KAAK9/D,SAAQ,SAACwe,QAAS/c,GACnB,OAAK3G,KAAK8B,SAASkF,SACf,EACA,OAAKhH,KAAK4B,OAAO2D,OAAS,GAAKA,OAASoB,GACxC+c,QAAQjd,c,4HAhCoBc,gD,s/DCAvBjD,c,gcAGjB,uBAAYtE,MAAM,iB,8HAAA,qBACd,uBAAMA,MADQ,qE,4UAGd,sCAAcA,KAAKG,IAAIoQ,YAAY,CAC/BrP,IAAK,CAACsZ,8DAJI,M,2EAQX3V,K,iOACH,CAAAxD,KAAA,QAAYqP,MAAMxL,SAAQ,SAACyL,QACnBA,OAAOs0D,aAAaxqD,KAAO,EAC3B9J,OAAO6C,UAEP7C,OAAOs0D,aAAaxqD,e,2HAhBO3J,gDCFvCo0D,yBAA2B,GAG/B,SAASC,oBAAoBC,UAE5B,GAAGF,yBAAyBE,UAC3B,OAAOF,yBAAyBE,UAAU72D,QAG3C,IAAID,OAAS42D,yBAAyBE,UAAY,CAGjD72D,QAAS,IAOV,OAHA82D,oBAAoBD,UAAU92D,OAAQA,OAAOC,QAAS42D,qBAG/C72D,OAAOC,Q7MpBX1O,SAAWmN,OAAOs4D,eAAkBl5B,KAAQp/B,OAAOs4D,eAAel5B,KAAQA,KAAQA,IAAIm5B,UAQ1FJ,oBAAoBngE,EAAI,SAAS2H,MAAO64D,MAEvC,GADU,EAAPA,OAAU74D,MAAQtL,KAAKsL,QAChB,EAAP64D,KAAU,OAAO74D,MACpB,GAAoB,iBAAVA,OAAsBA,MAAO,CACtC,GAAW,EAAP64D,MAAa74D,MAAM84D,WAAY,OAAO94D,MAC1C,GAAW,GAAP64D,MAAoC,mBAAf74D,MAAM5M,KAAqB,OAAO4M,MAE5D,IAAI+4D,GAAK14D,OAAO6K,OAAO,MACvBstD,oBAAoBp7D,EAAE27D,IACtB,IAAI1uD,IAAM,GACVpX,eAAiBA,gBAAkB,CAAC,KAAMC,SAAS,IAAKA,SAAS,IAAKA,SAASA,WAC/E,IAAI,IAAIy/B,QAAiB,EAAPkmC,MAAY74D,MAAyB,iBAAX2yB,WAAyB1/B,eAAeof,QAAQsgB,SAAUA,QAAUz/B,SAASy/B,SACxHtyB,OAAO24D,oBAAoBrmC,SAASp6B,SAAQwF,KAAOsM,IAAItM,KAAO,IAAMiC,MAAMjC,OAI3E,OAFAsM,IAAa,QAAI,IAAMrK,MACvBw4D,oBAAoBpsD,EAAE2sD,GAAI1uD,KACnB0uD,I8MvBRP,oBAAoBpsD,EAAI,CAACxK,QAAS6F,cACjC,IAAI,IAAI1J,OAAO0J,WACX+wD,oBAAoBS,EAAExxD,WAAY1J,OAASy6D,oBAAoBS,EAAEr3D,QAAS7D,MAC5EsC,OAAO64D,eAAet3D,QAAS7D,IAAK,CAAE2H,YAAY,EAAM3B,IAAK0D,WAAW1J,QCJ3Ey6D,oBAAoBS,EAAI,CAACx5B,IAAK74B,OAASvG,OAAO84D,UAAUl7D,eAAewjD,KAAKhiB,IAAK74B,MCCjF4xD,oBAAoBp7D,EAAKwE,UACH,oBAAXqG,QAA0BA,OAAOmxD,aAC1C/4D,OAAO64D,eAAet3D,QAASqG,OAAOmxD,YAAa,CAAEp5D,MAAO,WAE7DK,OAAO64D,eAAet3D,QAAS,aAAc,CAAE5B,OAAO,KCHvDw4D,oBAAoB,I","file":"main.4963dec4930ca5c4aa13.js","sourcesContent":["var getProto = Object.getPrototypeOf ? (obj) => Object.getPrototypeOf(obj) : (obj) => obj.__proto__;\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(key => def[key] = () => value[key]);\n\t}\n\tdef['default'] = () => value;\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","import { loadImages } from './utils/ImageLoader';\n\nloadImages().then(() => {\n    const { game } = require('./core/Game');\n\n    window.game = game;\n    window.ecs = game.ecs;\n\n    game.start();\n});\n","const loadImage = (img) =>\n    new Promise((resolve, reject) => {\n        if (img.complete) {\n            resolve();\n        }\n\n        img.addEventListener('load', () => {\n            resolve();\n        });\n\n        img.addEventListener('error', (error) => {\n            reject(error);\n        });\n    });\n\nexport const loadImages = () => {\n    const imgs = Array.from(document.querySelectorAll('img'));\n\n    return Promise.all(imgs.map(loadImage));\n};\n","import Renderer from './rendering/RenderManager';\r\nimport InputController from './input/InputController';\r\nimport HungerSystem from '../systems/HungerSystem';\r\nimport ActionSystem from '../systems/ActionSystem';\r\nimport RenderSystem from '../systems/RenderSystem';\r\nimport MovementSystem from '../systems/MovementSystem';\r\nimport UISystem from '../systems/UISystem';\r\nimport MouseManager from './input/MouseManager';\r\nimport CommandManager from './input/CommandManager';\r\nimport ScreenManager from './screens/ScreenManager';\r\nimport PlayerManager from './PlayerManager';\r\nimport ECS from '../ecs';\r\nimport GameStateManager from './GameStateManager';\r\nimport ClockManager from './ClockManager';\r\nimport CursorSystem from '../systems/CursorSystem';\r\nimport MapManager from './MapManager';\r\nimport FOVSystem from '../systems/FOVSystem';\r\nimport MeleeSystem from '../systems/MeleeSystem';\r\nimport DeathSystem from '../systems/DeathSystem';\r\nimport ParticleSystem from '../systems/ParticleSystem';\r\nimport FactionManager from './FactionManager';\r\nimport CameraManager from './CameraManager';\r\nimport FPSMonitoringSystem from '../systems/FPSMonitoringSystem';\r\nimport { WorldManager } from './WorldManager';\r\nimport ConsoleManager from './ConsoleManager';\r\nimport DestroySystem from '../systems/DestroySystem';\r\n\r\nexport default class Game {\r\n    #lastUpdate;\r\n\r\n    get ecs() {\r\n        return this.engine.engine;\r\n    }\r\n\r\n    constructor() {\r\n        this.engine = new ECS(this);\r\n        this.mouse = new MouseManager(this);\r\n        this.clock = new ClockManager(this);\r\n        this.camera = new CameraManager(this);\r\n        this.renderer = new Renderer(this);\r\n        this.state = new GameStateManager(this);\r\n        this.world = new WorldManager(this);\r\n        this.map = new MapManager(this);\r\n        this.factions = new FactionManager(this);\r\n        this.player = new PlayerManager(this);\r\n        this.commands = new CommandManager(this);\r\n        this.screens = new ScreenManager(this);\r\n        this.input = new InputController(this);\r\n        this.console = new ConsoleManager(this);\r\n\r\n        this.hungerSystem = new HungerSystem(this);\r\n        this.actionSystem = new ActionSystem(this);\r\n        this.movementSystem = new MovementSystem(this);\r\n        this.meleeSystem = new MeleeSystem(this);\r\n        this.deathSystem = new DeathSystem(this);\r\n        this.FOVSystem = new FOVSystem(this);\r\n        this.renderSystem = new RenderSystem(this);\r\n        this.UISystem = new UISystem(this);\r\n        this.cursor = new CursorSystem(this);\r\n        this.particles = new ParticleSystem(this);\r\n        this.fps = new FPSMonitoringSystem(this);\r\n        this.destroySystem = new DestroySystem(this);\r\n    }\r\n\r\n    start() {\r\n        this.#lastUpdate = Date.now();\r\n        this.boundLoop = this.loop.bind(this);\r\n        requestAnimationFrame(this.loop.bind(this));\r\n    }\r\n\r\n    updateAdventureSystems(dt) {\r\n        this.clock.update(dt);\r\n        this.actionSystem.update(dt);\r\n        this.hungerSystem.update(dt);\r\n        this.movementSystem.update(dt);\r\n        this.meleeSystem.update(dt);\r\n        this.deathSystem.update(dt);\r\n        this.FOVSystem.update(dt);\r\n        this.renderSystem.update(dt);\r\n        this.particles.update(dt);\r\n        this.UISystem.update(dt);\r\n        this.map.update(dt);\r\n        this.destroySystem.update(dt);\r\n        this.console.render(dt);\r\n    }\r\n\r\n    loop(t) {\r\n        const now = Date.now();\r\n        const dt = now - this.#lastUpdate;\r\n\r\n        this.screens.update(dt);\r\n        this.fps.update(dt);\r\n\r\n        this.#lastUpdate = now;\r\n\r\n        requestAnimationFrame(this.boundLoop);\r\n    }\r\n}\r\n\r\nexport const game = new Game();\r\n","import Manager from '../Manager';\r\nimport Display from './Display';\r\nimport spritesheets from './spritesheets';\r\n\r\nexport default class Renderer extends Manager {\r\n    #tileWidth = 16;\r\n    #tileHeight = 16;\r\n    #spritesheets = {};\r\n    #display = null;\r\n\r\n    get tileWidth() {\r\n        return this.#tileWidth;\r\n    }\r\n\r\n    get tileHeight() {\r\n        return this.#tileHeight;\r\n    }\r\n\r\n    get display() {\r\n        return this.#display;\r\n    }\r\n\r\n    get canvas() {\r\n        return this.display.canvas;\r\n    }\r\n\r\n    constructor(game) {\r\n        super(game);\r\n\r\n        spritesheets().forEach((spritesheet) => {\r\n            this.#spritesheets[spritesheet.name] = spritesheet;\r\n        });\r\n\r\n        this.#display = new Display({\r\n            width: this.game.camera.width,\r\n            height: this.game.camera.height,\r\n            tileWidth: this.tileWidth,\r\n            tileHeight: this.tileHeight,\r\n        });\r\n\r\n        document.body.appendChild(this.display.canvas);\r\n    }\r\n\r\n    resizeDisplay(width, height) {\r\n        this.display.setSize(width, height);\r\n    }\r\n\r\n    draw(x, y, char, fg1 = '#d0d6d8', fg2 = '#333', bg) {\r\n        const sprite = this.#spritesheets.tiles.getSprite(char);\r\n\r\n        this.display.draw(x, y, sprite, fg1, fg2, bg);\r\n    }\r\n\r\n    computeTextWidth(text) {\r\n        return text.length * 0.5;\r\n    }\r\n\r\n    drawText(x, y, text, fg1 = '#d0d6d8', fg2 = '#333', bg) {\r\n        for (let i = 0; i < text.length; i++) {\r\n            const sprite = this.#spritesheets.font.getSprite(text.charAt(i));\r\n\r\n            this.display.draw(x + 0.5 * i, y, sprite, fg1, fg2, bg);\r\n        }\r\n    }\r\n\r\n    drawTextCenter(y, text, fg1 = '#d0d6d8', fg2 = '#333', bg) {\r\n        const len = this.computeTextWidth(text);\r\n\r\n        this.drawText(\r\n            (this.game.camera.width - len) / 2,\r\n            y,\r\n            text,\r\n            fg1,\r\n            fg2,\r\n            bg\r\n        );\r\n    }\r\n\r\n    clear() {\r\n        this.display.clear();\r\n    }\r\n\r\n    clearArea(x, y, width, height) {\r\n        this.display.clearArea(x, y, width, height);\r\n    }\r\n\r\n    pxToTile(xPx, yPx) {\r\n        const x = Math.trunc(xPx / this.tileWidth);\r\n        const y = Math.trunc(yPx / this.tileHeight);\r\n\r\n        return { x, y };\r\n    }\r\n}\r\n","export default class Manager {\n    #game;\n\n    get game() {\n        return this.#game;\n    }\n\n    constructor(game) {\n        this.#game = game;\n    }\n\n    onNewGame() {}\n    getSaveGameData() {}\n}\n","export default class Display {\r\n    ctx;\r\n    canvas;\r\n    width;\r\n    height;\r\n    tileWidth;\r\n    tileHeight;\r\n    _dirtyCells = new Set();\r\n    clearColor = '#141a23';\r\n\r\n    constructor({ width, height, tileWidth, tileHeight }) {\r\n        this.tileWidth = tileWidth;\r\n        this.tileHeight = tileHeight;\r\n\r\n        this.canvas = document.createElement('canvas');\r\n        this.ctx = this.canvas.getContext('2d', { alpha: false });\r\n\r\n        this.ctx.font = `${this.tileHeight}px monospace`;\r\n        this.ctx.textBaseline = 'top';\r\n\r\n        this.setSize(width, height);\r\n    }\r\n\r\n    setSize(width, height) {\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        const widthPx = this.tileWidth * this.width;\r\n        const heightPx = this.tileHeight * this.height;\r\n\r\n        this.canvas.style.cssText = `width: ${widthPx}px; height: ${heightPx}px`;\r\n        this.canvas.width = widthPx;\r\n        this.canvas.height = heightPx;\r\n    }\r\n\r\n    draw(x, y, sprite, fg1, fg2, bg) {\r\n        const pixelX = x * this.tileWidth;\r\n        const pixelY = y * this.tileHeight;\r\n\r\n        const img = sprite.colorize(fg1, fg2);\r\n\r\n        this.ctx.fillStyle = bg || this.clearColor;\r\n\r\n        if (this.isDirty(x, y) || bg) {\r\n            this.ctx.fillRect(pixelX, pixelY, sprite.width, sprite.height);\r\n        }\r\n\r\n        this.ctx.drawImage(img, pixelX, pixelY);\r\n        this._markDirty(x, y);\r\n    }\r\n\r\n    clear() {\r\n        this.ctx.fillStyle = this.clearColor;\r\n        this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n        this._dirtyCells.clear();\r\n    }\r\n\r\n    clearArea(x, y, width, height) {\r\n        this.ctx.fillStyle = this.clearColor;\r\n        this.ctx.fillRect(\r\n            x * this.tileWidth,\r\n            y * this.tileHeight,\r\n            this.tileWidth * width,\r\n            this.tileHeight * height\r\n        );\r\n    }\r\n\r\n    fillTile(x, y, color) {\r\n        this.ctx.fillStyle = color;\r\n        this.ctx.fillRect(x, y, this.tileWidth, this.tileHeight);\r\n    }\r\n\r\n    clearTile(x, y) {\r\n        this.ctx.clearRect(\r\n            x * this.tileWidth,\r\n            y * this.tileHeight,\r\n            this.tileWidth,\r\n            this.tileHeight\r\n        );\r\n    }\r\n\r\n    _markDirty(x, y) {\r\n        this._dirtyCells.add(`${x},${y}`);\r\n    }\r\n\r\n    isDirty(x, y) {\r\n        this._dirtyCells.has(`${x},${y}`);\r\n    }\r\n}\r\n","import SpriteSheet from './SpriteSheet';\n\nexport default () => {\n    const tileImage = document.getElementById('spritesheet-tiles');\n    const fontImage = document.getElementById('spritesheet-font');\n\n    return [\n        new SpriteSheet('tiles', tileImage),\n        new SpriteSheet('font', fontImage),\n    ];\n};\n","import cp437 from './cp437';\nimport Sprite from './Sprite';\n\nexport default class SpriteSheet {\n    #name = null;\n    #defaultGlyph = '?';\n    #sprites = {};\n\n    get name() {\n        return this.#name;\n    }\n\n    get width() {\n        return this.image.width;\n    }\n\n    get height() {\n        return this.image.height;\n    }\n\n    get spriteCountX() {\n        return 16;\n    }\n\n    get spriteCountY() {\n        return 16;\n    }\n\n    constructor(name, image) {\n        this.#name = name;\n        this.image = image;\n\n        this.spriteWidth = this.image.width / this.spriteCountX;\n        this.spriteHeight = this.image.height / this.spriteCountY;\n\n        cp437.forEach((row, i) => {\n            row.forEach((glyph, j) => {\n                this.#sprites[glyph] = new Sprite(glyph, this, j, i);\n            });\n        });\n    }\n\n    getSprite(glyph) {\n        if (this.#sprites[glyph]) {\n            return this.#sprites[glyph];\n        }\n\n        return this.#sprites[this.#defaultGlyph];\n    }\n}\n","// prettier-ignore\nexport default [\n    ['NUL', '☺', '☻', '♥', '♦', '♣', '♠', '•', '◘', '○', '◙', '♂', '♀', '♪', '♫', '☼'],\n    ['►', '◄', '↕', '‼', '¶', '§', '▬', '↨', '↑', '↓', '→', '←', '∟', '↔', '▲', '▼'],\n    [' ', '!', '\"', '#', '$', '%', '&', '\\'', '(', ')', '*', '+', ',', '-', '.', '/'],\n    ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', ':', ';', '<', '=', '>', '?'],\n    ['@', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O'],\n    ['P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '[', '\\\\', ']', '^', '_'],\n    ['`', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o'],\n    ['p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '{', '|', '}', '~', '⌂'],\n    ['Ç', 'ü', 'é', 'â', 'ä', 'à', 'å', 'ç', 'ê', 'ë', 'è', 'ï', 'î', 'ì', 'Ä', 'Å'],\n    ['É', 'æ', 'Æ', 'ô', 'ö', 'ò', 'û', 'ù', 'ÿ', 'Ö', 'Ü', '¢', '£', '¥', '₧', 'ƒ'],\n    ['á', 'í', 'ó', 'ú', 'ñ', 'Ñ', 'ª', 'º', '¿', '⌐', '¬', '½', '¼', '¡', '«', '»'],\n    ['░', '▒', '▓', '│', '┤', '╡', '╢', '╖', '╕', '╣', '║', '╗', '╝', '╜', '╛', '┐'],\n    ['└', '┴', '┬', '├', '─', '┼', '╞', '╟', '╚', '╔', '╩', '╦', '╠', '═', '╬', '╧'],\n    ['╨', '╤', '╥', '╙', '╘', '╒', '╓', '╫', '╪', '┘', '┌', '█', '▄', '▌', '▐', '▀'],\n    ['α', 'ß', 'Γ', 'π', 'Σ', 'σ', 'µ', 'τ', 'Φ', 'Θ', 'Ω', 'δ', '∞', 'φ', 'ε', '∩'],\n    ['≡', '±', '≥', '≤', '⌠', '⌡', '÷', '≈', '°', '∙', '·', '√', 'ⁿ', '²', '■', 'NBSP'],\n];\n","import { parseColor } from '../../utils/ColorParser';\n\nconst isWhite = (r, g, b) => r === 255 && g === 255 && b === 255;\nconst isBlack = (r, g, b) => r === 0 && g === 0 && b === 0;\n\nexport default class Sprite {\n    #ctx = null;\n    #glyph = null;\n    #sheet = null;\n    #x = null;\n    #y = null;\n    _cache = {};\n\n    get glyph() {\n        return this.#glyph;\n    }\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get sheet() {\n        return this.#sheet;\n    }\n\n    get image() {\n        return this.sheet.image;\n    }\n\n    get sourceX() {\n        return this.sheet.spriteWidth * this.x;\n    }\n\n    get sourceY() {\n        return this.sheet.spriteHeight * this.y;\n    }\n\n    get width() {\n        return this.sheet.spriteWidth;\n    }\n\n    get height() {\n        return this.sheet.spriteHeight;\n    }\n\n    constructor(glyph, sheet, x, y) {\n        this.#glyph = glyph;\n        this.#sheet = sheet;\n        this.#x = x;\n        this.#y = y;\n\n        const canvas = document.createElement('canvas');\n\n        canvas.width = this.width;\n        canvas.height = this.height;\n\n        this.#ctx = canvas.getContext('2d');\n\n        this.#ctx.drawImage(\n            this.sheet.image,\n            this.sourceX,\n            this.sourceY,\n            this.width,\n            this.height,\n            0,\n            0,\n            this.width,\n            this.height\n        );\n    }\n\n    colorize(primaryCss, secondaryCss) {\n        const primary = parseColor(primaryCss);\n        const secondary = parseColor(secondaryCss);\n\n        const key = `${primary.key}-${secondary.key}`;\n\n        if (this._cache.hasOwnProperty(key)) {\n            return this._cache[key];\n        }\n\n        const pixels = this.#ctx.getImageData(0, 0, this.width, this.height);\n\n        for (let i = 0; i < pixels.data.length; i += 4) {\n            const r = pixels.data[i];\n            const g = pixels.data[i + 1];\n            const b = pixels.data[i + 2];\n\n            if (isBlack(r, g, b)) {\n                pixels.data[i] = primary[0];\n                pixels.data[i + 1] = primary[1];\n                pixels.data[i + 2] = primary[2];\n                pixels.data[i + 4] = primary[3];\n            } else {\n                pixels.data[i] = secondary[0];\n                pixels.data[i + 1] = secondary[1];\n                pixels.data[i + 2] = secondary[2];\n                pixels.data[i + 4] = secondary[3];\n            }\n        }\n\n        const cvs = document.createElement('canvas');\n\n        cvs.width = this.width;\n        cvs.height = this.height;\n\n        cvs.getContext('2d').putImageData(pixels, 0, 0);\n\n        this._cache[key] = cvs;\n\n        return cvs;\n    }\n}\n","import colorParse from 'color-parse';\n\nconst cache = {};\n\nexport const parseColor = (colorStr) => {\n    if (!cache.hasOwnProperty(colorStr)) {\n        const parsed = colorParse(colorStr).values;\n        const data = [\n            parsed[0],\n            parsed[1],\n            parsed[2],\n            parsed.alpha,\n        ];\n\n        data.key = `${data[0]},${data[1]},${data[2]},${data[3]}`;\n\n        cache[colorStr] = data;\n    }\n\n    return cache[colorStr];\n};\n","/**\r\n * @module color-parse\r\n */\r\nimport names from 'color-name'\r\n\r\nexport default parse\r\n\r\n/**\r\n * Base hues\r\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\r\n */\r\n//FIXME: use external hue detector\r\nvar baseHues = {\r\n\tred: 0,\r\n\torange: 60,\r\n\tyellow: 120,\r\n\tgreen: 180,\r\n\tblue: 240,\r\n\tpurple: 300\r\n}\r\n\r\n/**\r\n * Parse color from the string passed\r\n *\r\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\r\n */\r\nfunction parse (cstr) {\r\n\tvar m, parts = [], alpha = 1, space\r\n\r\n\tif (typeof cstr === 'string') {\r\n\t\t//keyword\r\n\t\tif (names[cstr]) {\r\n\t\t\tparts = names[cstr].slice()\r\n\t\t\tspace = 'rgb'\r\n\t\t}\r\n\r\n\t\t//reserved words\r\n\t\telse if (cstr === 'transparent') {\r\n\t\t\talpha = 0\r\n\t\t\tspace = 'rgb'\r\n\t\t\tparts = [0,0,0]\r\n\t\t}\r\n\r\n\t\t//hex\r\n\t\telse if (/^#[A-Fa-f0-9]+$/.test(cstr)) {\r\n\t\t\tvar base = cstr.slice(1)\r\n\t\t\tvar size = base.length\r\n\t\t\tvar isShort = size <= 4\r\n\t\t\talpha = 1\r\n\r\n\t\t\tif (isShort) {\r\n\t\t\t\tparts = [\r\n\t\t\t\t\tparseInt(base[0] + base[0], 16),\r\n\t\t\t\t\tparseInt(base[1] + base[1], 16),\r\n\t\t\t\t\tparseInt(base[2] + base[2], 16)\r\n\t\t\t\t]\r\n\t\t\t\tif (size === 4) {\r\n\t\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tparts = [\r\n\t\t\t\t\tparseInt(base[0] + base[1], 16),\r\n\t\t\t\t\tparseInt(base[2] + base[3], 16),\r\n\t\t\t\t\tparseInt(base[4] + base[5], 16)\r\n\t\t\t\t]\r\n\t\t\t\tif (size === 8) {\r\n\t\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!parts[0]) parts[0] = 0\r\n\t\t\tif (!parts[1]) parts[1] = 0\r\n\t\t\tif (!parts[2]) parts[2] = 0\r\n\r\n\t\t\tspace = 'rgb'\r\n\t\t}\r\n\r\n\t\t//color space\r\n\t\telse if (m = /^((?:rgb|hs[lvb]|hwb|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms)a?)\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\r\n\t\t\tvar name = m[1]\r\n\t\t\tvar isRGB = name === 'rgb'\r\n\t\t\tvar base = name.replace(/a$/, '')\r\n\t\t\tspace = base\r\n\t\t\tvar size = base === 'cmyk' ? 4 : base === 'gray' ? 1 : 3\r\n\t\t\tparts = m[2].trim()\r\n\t\t\t\t.split(/\\s*[,\\/]\\s*|\\s+/)\r\n\t\t\t\t.map(function (x, i) {\r\n\t\t\t\t\t//<percentage>\r\n\t\t\t\t\tif (/%$/.test(x)) {\r\n\t\t\t\t\t\t//alpha\r\n\t\t\t\t\t\tif (i === size)\treturn parseFloat(x) / 100\r\n\t\t\t\t\t\t//rgb\r\n\t\t\t\t\t\tif (base === 'rgb') return parseFloat(x) * 255 / 100\r\n\t\t\t\t\t\treturn parseFloat(x)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//hue\r\n\t\t\t\t\telse if (base[i] === 'h') {\r\n\t\t\t\t\t\t//<deg>\r\n\t\t\t\t\t\tif (/deg$/.test(x)) {\r\n\t\t\t\t\t\t\treturn parseFloat(x)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//<base-hue>\r\n\t\t\t\t\t\telse if (baseHues[x] !== undefined) {\r\n\t\t\t\t\t\t\treturn baseHues[x]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn parseFloat(x)\r\n\t\t\t\t})\r\n\r\n\t\t\tif (name === base) parts.push(1)\r\n\t\t\talpha = (isRGB) ? 1 : (parts[size] === undefined) ? 1 : parts[size]\r\n\t\t\tparts = parts.slice(0, size)\r\n\t\t}\r\n\r\n\t\t//named channels case\r\n\t\telse if (cstr.length > 10 && /[0-9](?:\\s|\\/)/.test(cstr)) {\r\n\t\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\r\n\t\t\t\treturn parseFloat(value)\r\n\t\t\t})\r\n\r\n\t\t\tspace = cstr.match(/([a-z])/ig).join('').toLowerCase()\r\n\t\t}\r\n\t}\r\n\r\n\t//numeric case\r\n\telse if (!isNaN(cstr)) {\r\n\t\tspace = 'rgb'\r\n\t\tparts = [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff]\r\n\t}\r\n\r\n\t//array-like\r\n\telse if (Array.isArray(cstr) || cstr.length) {\r\n\t\tparts = [cstr[0], cstr[1], cstr[2]]\r\n\t\tspace = 'rgb'\r\n\t\talpha = cstr.length === 4 ? cstr[3] : 1\r\n\t}\r\n\r\n\t//object case - detects css cases of rgb and hsl\r\n\telse if (cstr instanceof Object) {\r\n\t\tif (cstr.r != null || cstr.red != null || cstr.R != null) {\r\n\t\t\tspace = 'rgb'\r\n\t\t\tparts = [\r\n\t\t\t\tcstr.r || cstr.red || cstr.R || 0,\r\n\t\t\t\tcstr.g || cstr.green || cstr.G || 0,\r\n\t\t\t\tcstr.b || cstr.blue || cstr.B || 0\r\n\t\t\t]\r\n\t\t}\r\n\t\telse {\r\n\t\t\tspace = 'hsl'\r\n\t\t\tparts = [\r\n\t\t\t\tcstr.h || cstr.hue || cstr.H || 0,\r\n\t\t\t\tcstr.s || cstr.saturation || cstr.S || 0,\r\n\t\t\t\tcstr.l || cstr.lightness || cstr.L || cstr.b || cstr.brightness\r\n\t\t\t]\r\n\t\t}\r\n\r\n\t\talpha = cstr.a || cstr.alpha || cstr.opacity || 1\r\n\r\n\t\tif (cstr.opacity != null) alpha /= 100\r\n\t}\r\n\r\n\treturn {\r\n\t\tspace: space,\r\n\t\tvalues: parts,\r\n\t\talpha: alpha\r\n\t}\r\n}\r\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","import InputKeyboardEvent from './events/InputKeyboardEvent';\nimport InputMouseEvent from './events/InputMouseEvent';\nimport Manager from '../Manager';\n\nexport default class InputController extends Manager {\n    constructor(game) {\n        super(game);\n        document.addEventListener('keydown', this.onKeydown.bind(this));\n\n        const container = this.game.renderer.canvas;\n\n        container.addEventListener('click', this.onMouseClick.bind(this));\n        container.addEventListener('mousemove', this.onMouseMove.bind(this));\n        container.addEventListener('mouseenter', this.onMouseEnter.bind(this));\n        container.addEventListener('mouseleave', this.onMouseLeave.bind(this));\n    }\n\n    onKeydown(e) {\n        const evt = new InputKeyboardEvent({\n            key: e.keyCode,\n            shift: e.shiftKey,\n            ctrl: e.ctrlKey,\n            alt: e.altKey,\n            meta: e.metaKey,\n        });\n\n        e.preventDefault();\n\n        this.game.commands.onInputEvent(evt);\n    }\n\n    onMouseClick(e) {\n        const xPx = e.offsetX;\n        const yPx = e.offsetY;\n        const { x, y } = this.game.renderer.pxToTile(xPx, yPx);\n\n        const evt = new InputMouseEvent({\n            key: e.button,\n            x,\n            y,\n            shift: e.shiftKey,\n            ctrl: e.ctrlKey,\n            alt: e.altKey,\n            meta: e.metaKey,\n            xPx,\n            yPx,\n        });\n\n        this.game.commands.onInputEvent(evt);\n    }\n\n    onMouseMove(e) {\n        const xPx = e.offsetX;\n        const yPx = e.offsetY;\n        const { x, y } = this.game.renderer.pxToTile(xPx, yPx);\n\n        this.game.mouse.updatePosition(x, y);\n    }\n\n    onMouseEnter(e) {\n        this.game.mouse.updateMouseEnter();\n    }\n\n    onMouseLeave(e) {\n        this.game.mouse.updateMouseLeave();\n    }\n}\n","import InputEvent from './InputEvent';\n\nexport default class InputKeyboardEvent extends InputEvent {}\n","export default class InputEvent {\n    key = false;\n    shift = false;\n    ctrl = false;\n    alt = false;\n    meta = false;\n\n    constructor(data) {\n        this.key = data.key;\n        this.shift = data.shift;\n        this.ctrl = data.ctrl;\n        this.alt = data.alt;\n        this.meta = data.meta;\n    }\n}\n","import InputEvent from './InputEvent';\n\nexport default class InputMouseEvent extends InputEvent {\n    x = false;\n    y = false;\n    tileX = false;\n    tileY = false;\n\n    constructor(data) {\n        super(data);\n        this.x = data.x;\n        this.y = data.y;\n        this.tileX = data.tileX;\n        this.tileY = data.tileY;\n    }\n}\n","import { Eater } from '../ecs/components';\nimport System from './System';\n\nexport default class HungerSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [Eater],\n        });\n    }\n\n    update(dt) {\n        if (this.game.actionSystem.tickDelta > 0) {\n            this.#query.get().forEach((entity) => {\n                entity.eater.hunger -= this.game.actionSystem.tickDelta;\n            });\n        }\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Actor extends Component {\n    static properties = {\n        energy: 0,\n    };\n\n    get hasEnergy() {\n        return this.energy >= 0;\n    }\n\n    onEnergyConsumed(evt) {\n        this.reduceEnergy(evt.data);\n    }\n\n    onTick(evt) {\n        this.addEnergy(1);\n    }\n\n    addEnergy(value) {\n        this.energy += value;\n\n        if (this.energy >= 0) {\n            this.energy = 0;\n        }\n    }\n\n    reduceEnergy(value) {\n        this.addEnergy(value * -1);\n    }\n}\n","'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[\\p{Lu}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[\\p{Ll}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLocaleLowerCase() === character && character.toLocaleUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toLocaleUpperCase() === character && character.toLocaleLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\t...{pascalCase: false},\n\t\t...options\n\t};\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toLocaleUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toLocaleUpperCase() : input.toLocaleLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLocaleLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLocaleLowerCase()\n\t\t.replace(/[_.\\- ]+([\\p{Alpha}\\p{N}_]|$)/gu, (_, p1) => p1.toLocaleUpperCase())\n\t\t.replace(/\\d+([\\p{Alpha}\\p{N}_]|$)/gu, m => m.toLocaleUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import camelcaseSlow from 'camelcase';\n\nconst camelCache = new Map();\n\nexport const camelString = (value) => {\n    if (!camelCache.has(value)) {\n        camelCache.set(value, camelcaseSlow(value));\n    }\n\n    return camelCache.get(value);\n};\n\nconst pascalCache = new Map();\n\nexport const pascalString = (value) => {\n    if (!pascalCache.has(value)) {\n        pascalCache.set(value, camelcaseSlow(value, { pascalCase: true }));\n    }\n\n    return pascalCache.get(value);\n};\n","export default class Property {\n    component;\n\n    constructor(component) {\n        this.component = component;\n    }\n\n    get ecs() {\n        return this.component.ecs;\n    }\n\n    get descriptor() {\n        return {\n            enumerable: true,\n            get: () => this.get(),\n            set: (v) => this.set(v),\n        };\n    }\n\n    get() {\n        return undefined;\n    }\n\n    set(value) {}\n\n    serialize() {\n        return undefined;\n    }\n\n    onDestroyed() {}\n\n    cleanupReference(entity) {}\n}\n","import Property from './Property';\n\nexport default class SimpleProperty extends Property {\n    value = null;\n\n    set(value) {\n        this.value = value;\n    }\n\n    get() {\n        return this.value;\n    }\n\n    serialize() {\n        return this.value;\n    }\n}\n","import Property from './Property';\n\nexport default class EntityProperty extends Property {\n    id;\n\n    set(value) {\n        if (this.id && (!value || value.id !== this.id || value !== this.id)) {\n            this.ecs.entities.removeRef(this.id, this);\n        }\n\n        if (value && value.id) {\n            this.ecs.entities.addRef(value.id, this);\n            this.id = value.id;\n            return;\n        }\n\n        if (typeof value === 'string') {\n            this.ecs.entities.addRef(value, this);\n            this.id = value;\n            return;\n        }\n\n        this.id = undefined;\n    }\n\n    get() {\n        return this.id && this.component.ecs.getEntity(this.id);\n    }\n\n    serialize() {\n        return this.id;\n    }\n\n    onDestroyed() {\n        if (this.id) {\n            this.ecs.entities.removeRef(this.id, this);\n        }\n    }\n\n    cleanupReference(entity) {\n        if (this.id === entity.id) {\n            this.id = undefined;\n        } else {\n            console.warn(\n                `Property in unclean state. A reference to an entity \"${entity.id}\" was never cleaned up.`,\n                entity\n            );\n        }\n    }\n}\n","import Property from './Property';\n\nexport default class EntityArrayProperty extends Property {\n    proxy = [];\n\n    constructor(component) {\n        super(component);\n        this.proxy = new Proxy([], {\n            get: (target, prop, receiver) => {\n                return Reflect.get(target, prop, receiver);\n            },\n            set: (target, prop, value, receiver) => {\n                if (isNaN(prop)) {\n                    return Reflect.set(target, prop, value, receiver);\n                }\n\n                const old = Reflect.get(target, prop, receiver);\n\n                if (typeof value === 'string') {\n                    value = this.ecs.entities.get(value);\n                }\n\n                if (old && old != value) {\n                    this.ecs.entities.removeRef(value, this);\n                }\n\n                if (value && value.id) {\n                    this.ecs.entities.addRef(value.id, this);\n\n                    return Reflect.set(target, prop, value, receiver);\n                }\n\n                return Reflect.set(target, prop, value, receiver);\n            },\n            deleteProperty: (target, prop) => {\n                if (isNaN(prop)) {\n                    return Reflect.deleteProperty(target, prop);\n                }\n\n                const value = Reflect.get(target, prop);\n                this.ecs.entities.removeRef(value, this);\n\n                return Reflect.deleteProperty(target, prop);\n            },\n        });\n    }\n\n    set(values = []) {\n        const len = Math.max(values.length, this.proxy.length);\n\n        for (let i = 0; i < len; i++) {\n            if (i in values) {\n                this.proxy[i] = values[i];\n            } else {\n                delete this.proxy[i];\n            }\n        }\n\n        this.proxy.length = values.length;\n    }\n\n    get() {\n        return this.proxy;\n    }\n\n    serialize() {\n        return this.proxy.map((ref) => ref.id);\n    }\n\n    onDestroyed() {\n        this.set([]);\n    }\n\n    cleanupReference(entity) {\n        this.set(this.proxy.filter((ref) => ref.id !== entity.id));\n    }\n}\n","import Property from './Property';\nimport SimpleProperty from './SimpleProperty';\nimport EntityProperty from './EntityProperty';\nimport EntityArrayProperty from './EntityArrayProperty';\n\nexport default class PropertyStrategy {\n    static create(component, value) {\n        switch (value) {\n            case '<Entity>':\n                return new EntityProperty(component);\n            case '<EntityArray>':\n                return new EntityArrayProperty(component);\n            default:\n                return new SimpleProperty(component);\n        }\n    }\n}\n","import { camelString } from './util/string-util';\nimport PropertyFactory from './Properties/PropertyFactory';\n\nexport default class Component {\n    entity = null;\n    ecs = null;\n    _props = {};\n    _isDestroyed = false;\n\n    static allowMultiple = false;\n    static keyProperty = null;\n    static properties = {};\n\n    static get type() {\n        return this.name;\n    }\n\n    get type() {\n        return this.constructor.name;\n    }\n\n    get isAttached() {\n        return Boolean(this.entity);\n    }\n\n    get isDestroyed() {\n        return this._isDestroyed;\n    }\n\n    get allowMultiple() {\n        return this.constructor.allowMultiple;\n    }\n\n    get keyProperty() {\n        return this.constructor.keyProperty;\n    }\n\n    get properties() {\n        const ob = {};\n\n        for (const [key, value] of Object.entries(this._props)) {\n            ob[key] = value.get();\n        }\n\n        return ob;\n    }\n\n    get key() {\n        return this[this.keyProperty];\n    }\n\n    constructor(ecs, properties = {}) {\n        this.ecs = ecs;\n        this._defineProxies(properties);\n    }\n\n    serialize() {\n        return Object.entries(this._props).reduce(\n            (o, [key, value]) => ({\n                ...o,\n                [key]: value.serialize(),\n            }),\n            {}\n        );\n    }\n\n    _onAttached(entity) {\n        this.entity = entity;\n        this.ecs.queries.onComponentAdded(entity, this);\n        this.onAttached();\n    }\n\n    _onDetached() {\n        if (this.isAttached) {\n            this.onDetached();\n            const entity = this.entity;\n\n            this.entity = null;\n            this.ecs.queries.onComponentRemoved(entity, this);\n        }\n    }\n\n    _onDestroyed() {\n        this._isDestroyed = true;\n        this.onDestroyed();\n\n        for (const prop of Object.values(this._props)) {\n            prop.onDestroyed();\n        }\n    }\n\n    onAttached() {}\n\n    onDetached() {}\n\n    onDestroyed() {}\n\n    remove(destroy = true) {\n        if (this.isAttached) {\n            this.entity.remove(this);\n        }\n        if (destroy) {\n            this._onDestroyed();\n        }\n    }\n\n    destroy() {\n        this.remove(true);\n    }\n\n    clone() {\n        return this.ecs.createComponent(this.type, this.serialize());\n    }\n\n    _onEvent(evt) {\n        this.onEvent(evt);\n\n        const handlerName = camelString(`on ${evt.name}`);\n\n        if (typeof this[handlerName] === 'function') {\n            this[handlerName](evt);\n        }\n    }\n\n    onEvent(evt) {}\n\n    _defaultPropertyValue(propertyName) {\n        const value = this.constructor.properties[propertyName];\n\n        if (value === '<EntityArray>') {\n            return [];\n        }\n\n        if (value === '<Entity>') {\n            return undefined;\n        }\n\n        return value;\n    }\n\n    _defineProxies(initialProperties) {\n        for (const key in this.constructor.properties) {\n            const initialValue = initialProperties.hasOwnProperty(key)\n                ? initialProperties[key]\n                : this._defaultPropertyValue(key);\n            const property = PropertyFactory.create(\n                this,\n                this.constructor.properties[key]\n            );\n\n            this._props[key] = property;\n            Object.defineProperty(this, key, property.descriptor);\n            property.set(initialValue);\n        }\n    }\n}\n","import Component from '../Component';\nimport { camelString } from '../util/string-util';\n\nexport default class ComponentRegistry {\n    _definitions = new Map();\n    _ecs = null;\n\n    constructor(ecs) {\n        this._ecs = ecs;\n    }\n\n    register(component) {\n        this._definitions.set(component.name, component);\n        camelString(component.name); // prime camelcase cache\n    }\n\n    getAccessor(type) {\n        return camelString(type);\n    }\n\n    get(typeOrClassOrComponent) {\n        const type = this._getType(typeOrClassOrComponent);\n\n        if (!type) {\n            console.warn(\n                `Cannot get component definition for type or class ${typeOrClassOrComponent} since it is neither a Component class or type (string)`\n            );\n            return null;\n        }\n\n        return this._definitions.get(type);\n    }\n\n    create(typeOrClass, properties = {}) {\n        const definition = this.get(typeOrClass);\n\n        if (definition) {\n            return new definition(this._ecs, properties);\n        }\n\n        console.warn(\n            `Could not create component definition for ${typeOrClass} since it is not registered`\n        );\n    }\n\n    _getType(typeOrClassOrComponent) {\n        if (typeof typeOrClassOrComponent === 'string') {\n            return typeOrClassOrComponent;\n        }\n\n        if (typeOrClassOrComponent instanceof Component) {\n            return typeOrClassOrComponent.type;\n        }\n\n        if (typeOrClassOrComponent.prototype instanceof Component) {\n            return typeOrClassOrComponent.name;\n        }\n\n        return null;\n    }\n}\n","'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn target.propertyIsEnumerable(symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n","import merge from 'deepmerge';\n\nexport default class PrefabComponent {\n    get type() {\n        return this.componentDef.type;\n    }\n\n    constructor(componentDef, properties = {}, overwrite = true) {\n        this.componentDef = componentDef;\n        this.properties = properties;\n        this.overwrite = overwrite;\n    }\n\n    applyToEntity(entity, initialProps = {}) {\n        if (!this.componentDef.allowMultiple && entity.has(this.componentDef)) {\n            if (this.overwrite) {\n                entity.remove(this.componentDef);\n            } else {\n                console.log(\n                    `Ignoring prefab component \"${this.type}\" since the entity \"${entity.id}\" already has one.`\n                );\n                return;\n            }\n        }\n\n        const props = merge(this.properties, initialProps);\n\n        entity.add(this.componentDef, props);\n    }\n}\n","export default class Prefab {\n    name = '';\n    inherit = [];\n    components = [];\n\n    constructor(ecs, name) {\n        this.ecs = ecs;\n        this.name = name;\n    }\n\n    addComponent(prefabComponent) {\n        this.components.push(prefabComponent);\n    }\n\n    applyToEntity(entity, initialProps = {}) {\n        this.inherit.forEach((parent) => {\n            parent.applyToEntity(entity, initialProps);\n        });\n\n        const arrComps = {};\n\n        this.components.forEach((component, i) => {\n            const definition = component.componentDef;\n            const accessor = this.ecs.components.getAccessor(definition.type);\n\n            let initialCompProps = {};\n\n            if (definition.allowMultiple) {\n                if (definition.keyProperty) {\n                    const key = component.properties[definition.keyProperty];\n\n                    if (initialProps[accessor] && initialProps[accessor][key]) {\n                        initialCompProps = initialProps[accessor][key];\n                    }\n                } else {\n                    if (!arrComps[accessor]) {\n                        arrComps[accessor] = 0;\n                    }\n\n                    if (\n                        initialProps[accessor] &&\n                        initialProps[accessor][arrComps[accessor]]\n                    ) {\n                        initialCompProps =\n                            initialProps[accessor][arrComps[accessor]];\n                    }\n\n                    arrComps[accessor]++;\n                }\n            } else {\n                initialCompProps = initialProps[accessor];\n            }\n\n            component.applyToEntity(entity, initialCompProps);\n        });\n\n        return entity;\n    }\n}\n","import Component from '../Component';\nimport PrefabComponent from '../PrefabComponent';\nimport Prefab from '../Prefab';\n\nexport default class PrefabRegistry {\n    _prefabs = {};\n    _ecs = null;\n\n    constructor(ecs) {\n        this._ecs = ecs;\n    }\n\n    deserialize(data) {\n        const registered = this.get(data.name);\n\n        if (registered) {\n            return registered;\n        }\n\n        const prefab = new Prefab(this._ecs, data.name);\n\n        let inherit;\n\n        if (Array.isArray(data.inherit)) {\n            inherit = data.inherit;\n        } else if (typeof data.inherit === 'string') {\n            inherit = [data.inherit];\n        } else {\n            inherit = [];\n        }\n\n        prefab.inherit = inherit.map((parent) => {\n            const ref = this.get(parent);\n\n            if (!ref) {\n                console.warn(\n                    `Prefab \"${data.name}\" cannot inherit from Prefab \"${parent}\" because is not registered yet! Prefabs must be registered in the right order.`\n                );\n                return parent;\n            }\n\n            return ref;\n        });\n\n        const comps = data.components || [];\n\n        for (const componentData of comps) {\n            if (\n                typeof componentData === 'string' ||\n                componentData.prototype instanceof Component\n            ) {\n                const def = this._ecs.components.get(componentData);\n                if (def) {\n                    prefab.addComponent(new PrefabComponent(def));\n                }\n            } else if (typeof componentData === 'object') {\n                const type = componentData.type;\n                const def = this._ecs.components.get(type);\n                if (def) {\n                    prefab.addComponent(\n                        new PrefabComponent(\n                            def,\n                            componentData.properties,\n                            componentData.overwrite\n                        )\n                    );\n                }\n            } else {\n                console.warn(\n                    `Unrecognized component reference \"${componentData}\" in prefab \"${data.name}\". Ensure the component is registered before the prefab.`\n                );\n            }\n        }\n\n        this.register(prefab);\n\n        return prefab;\n    }\n\n    register(prefab) {\n        this._prefabs[prefab.name] = prefab;\n    }\n\n    get(nameOrClassOrPrefab) {\n        const name = PrefabRegistry._getName(nameOrClassOrPrefab);\n\n        return this._prefabs[name];\n    }\n\n    create(nameOrClass, initialProps = {}) {\n        const prefab = this.get(nameOrClass);\n\n        if (!prefab) {\n            console.warn(\n                `Could not instantiate prefab for ${nameOrClass} since it is not registered`\n            );\n\n            return;\n        }\n\n        const entity = this._ecs.createEntity();\n        prefab.applyToEntity(entity, initialProps);\n\n        return entity;\n    }\n\n    static _getName(nameOrClassOrPrefab) {\n        if (typeof nameOrClassOrPrefab === 'string') {\n            return nameOrClassOrPrefab;\n        }\n\n        if (nameOrClassOrPrefab instanceof Prefab) {\n            return nameOrClassOrPrefab.name;\n        }\n\n        if (nameOrClassOrPrefab.prototype instanceof Prefab) {\n            return nameOrClassOrPrefab.name;\n        }\n\n        return null;\n    }\n}\n","// This alphabet uses `A-Za-z0-9_-` symbols. The genetic algorithm helped\n// optimize the gzip compression for this alphabet.\nlet urlAlphabet =\n  'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW'\n\nlet customAlphabet = (alphabet, size) => {\n  return () => {\n    let id = ''\n    // A compact alternative for `for (var i = 0; i < step; i++)`.\n    let i = size\n    while (i--) {\n      // `| 0` is more compact and faster than `Math.floor()`.\n      id += alphabet[Math.random() * alphabet.length | 0]\n    }\n    return id\n  }\n}\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  let i = size\n  while (i--) {\n    // `| 0` is more compact and faster than `Math.floor()`.\n    id += urlAlphabet[Math.random() * 64 | 0]\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet }\n","export default class EntityEvent {\n    data = {};\n    _prevented = false;\n    _handled = false;\n\n    get prevented() {\n        return this._prevented;\n    }\n\n    get handled() {\n        return this._handled;\n    }\n\n    constructor(name, data = {}) {\n        this.name = name;\n        this.data = data;\n    }\n\n    is(name) {\n        return this.name === name;\n    }\n\n    handle() {\n        this._handled = true;\n        this._prevented = true;\n    }\n\n    prevent() {\n        this._prevented = true;\n    }\n}\n","import Component from './Component';\nimport EntityEvent from './EntityEvent';\n\nexport default class Entity {\n    id = null;\n    components = {};\n    ecs = null;\n    _isDestroyed = false;\n\n    get isDestroyed() {\n        return this._isDestroyed;\n    }\n\n    constructor(ecs, id = null) {\n        this.ecs = ecs;\n        this.id = id || ecs.generateId();\n    }\n\n    has(typeOrClass, key = null) {\n        const type = this.ecs.components._getType(typeOrClass);\n        const accessor = this.ecs.components.getAccessor(type);\n        const hasType = this.hasOwnProperty(accessor);\n\n        if (hasType && key) {\n            return this[accessor].hasOwnProperty(key);\n        }\n\n        return hasType;\n    }\n\n    get(typeOrClass, key = null) {\n        const type = this.ecs.components._getType(typeOrClass);\n        const accessor = this.ecs.components.getAccessor(type);\n        const components = this[accessor];\n\n        if (components && key) {\n            return components[key];\n        }\n\n        return components;\n    }\n\n    destroy() {\n        this._isDestroyed = true;\n\n        for (const component of Object.values(this.components)) {\n            if (component instanceof Component) {\n                component.destroy();\n            } else {\n                for (const nestedComponent of Object.values(component)) {\n                    nestedComponent.destroy();\n                }\n            }\n        }\n\n        this.ecs.entities.onEntityDestroyed(this);\n    }\n\n    add(typeOrClass, properties = {}) {\n        if (typeOrClass instanceof Component) {\n            if (typeOrClass.isAttached) {\n                console.warn(\n                    `\"${typeOrClass.type}\" component cannot be added, since it is already attached to an entity.`\n                );\n                return false;\n            }\n\n            return this.attach(typeOrClass);\n        }\n\n        const component = this.ecs.components.create(typeOrClass, properties);\n\n        if (!component) {\n            console.warn(\n                `\"${typeOrClass}\" component cannot be added, since it is not registered.`\n            );\n            return false;\n        }\n\n        return this.attach(component);\n    }\n\n    attach(component) {\n        const accessor = this.ecs.components.getAccessor(component.type);\n\n        if (!component.allowMultiple) {\n            if (this.has(component.type)) {\n                console.warn(\n                    `\"${component.type}\" component has allowMultiple set to ${component.allowMultiple}. Trying to add a \"${component.type}\" component to an entity which already has one.`\n                );\n                return false;\n            }\n\n            this.components[accessor] = component;\n\n            Object.defineProperty(this, accessor, {\n                enumerable: true,\n                configurable: true,\n                get() {\n                    return this.components[accessor];\n                },\n            });\n\n            component._onAttached(this);\n            this.ecs.queries.onComponentAdded(this);\n\n            return true;\n        }\n\n        if (!component.keyProperty) {\n            if (!this.components[accessor]) {\n                this.components[accessor] = [];\n                Object.defineProperty(this, accessor, {\n                    configurable: true,\n                    enumerable: true,\n                    get() {\n                        return this.components[accessor];\n                    },\n                });\n            }\n\n            this.components[accessor].push(component);\n\n            component._onAttached(this);\n            this.ecs.queries.onComponentAdded(this);\n\n            return true;\n        }\n\n        if (!component.key) {\n            console.warn(\n                `\"${component.type}\" component has a falsy key of \"${component.key}\". The keyProperty is set to \"${component.keyProperty}\".`\n            );\n            return false;\n        }\n\n        if (!this.components[accessor]) {\n            this.components[accessor] = {};\n            Object.defineProperty(this, accessor, {\n                configurable: true,\n                enumerable: true,\n                get() {\n                    return this.components[accessor];\n                },\n            });\n        }\n\n        this.components[accessor][component.key] = component;\n\n        component._onAttached(this);\n        this.ecs.queries.onComponentAdded(this, component);\n\n        return true;\n    }\n\n    owns(component) {\n        return component.entity === this;\n    }\n\n    remove(typeOrClassOrComponent, key = null) {\n        const isComponent = typeOrClassOrComponent instanceof Component;\n        key = isComponent ? typeOrClassOrComponent.key : key;\n\n        const definition = this.ecs.components.get(typeOrClassOrComponent);\n\n        const accessor = this.ecs.components.getAccessor(definition.type);\n\n        if (definition.allowMultiple) {\n            if (!definition.keyProperty) {\n                if (isComponent) {\n                    const all = this.components[accessor];\n\n                    if (!all) {\n                        console.warn(\n                            `Trying to remove a \"${definition.type}\" component from an entity, but it wasn't found.`\n                        );\n                        return;\n                    }\n\n                    const index = all.indexOf(typeOrClassOrComponent);\n\n                    if (index > -1) {\n                        all.splice(index, 1);\n                        typeOrClassOrComponent._onDetached();\n\n                        if (all.length === 0) {\n                            delete this[accessor];\n                            delete this.components[accessor];\n                        }\n\n                        this.ecs.queries.onComponentRemoved(this);\n\n                        return true;\n                    }\n                } else {\n                    for (const instance of this.components[accessor]) {\n                        instance._onDetached();\n                    }\n\n                    delete this[accessor];\n                    delete this.components[accessor];\n                    this.ecs.queries.onComponentRemoved(this);\n\n                    return true;\n                }\n            }\n\n            if (!key) {\n                console.warn(\n                    `Trying to remove a \"${definition.type}\" component which allows multiple without specifying an key.`\n                );\n                return;\n            }\n\n            const all = this.components[accessor];\n            const component = all[key];\n\n            if (component) {\n                delete all[key];\n                component._onDetached();\n                if (Object.keys(all).length <= 0) {\n                    delete this[accessor];\n                    delete this.components[accessor];\n                }\n                this.ecs.queries.onComponentRemoved(this);\n\n                return component;\n            } else {\n                console.warn(\n                    `Trying to remove a \"${definition.type}\" component from an entity at \"${key}\", but it wasn't found.`\n                );\n                return;\n            }\n        }\n\n        if (accessor in this) {\n            const component = this.components[accessor];\n\n            delete this[accessor];\n            delete this.components[accessor];\n            component._onDetached();\n            this.ecs.queries.onComponentRemoved(this);\n\n            return component;\n        }\n\n        console.warn(\n            `Trying to remove a \"${definition.type}\" component from an entity, but it wasn't found.`\n        );\n    }\n\n    serialize() {\n        return Object.entries(this.components).reduce(\n            (o, [key, value]) => {\n                if (value instanceof Component) {\n                    return {\n                        ...o,\n                        [key]: value.serialize(),\n                    };\n                }\n\n                if (Array.isArray(value)) {\n                    return {\n                        ...o,\n                        [key]: value.map((v) => v.serialize()),\n                    };\n                }\n\n                return {\n                    ...o,\n                    [key]: Object.entries(value).reduce(\n                        (o2, [k2, v2]) => ({\n                            ...o2,\n                            [k2]: v2.serialize(),\n                        }),\n                        {}\n                    ),\n                };\n            },\n            {\n                id: this.id,\n            }\n        );\n    }\n\n    fireEvent(name, data) {\n        const evt = new EntityEvent(name, data);\n\n        for (const component of Object.values(this.components)) {\n            if (component instanceof Component) {\n                component._onEvent(evt);\n\n                if (evt.prevented) {\n                    return evt;\n                }\n            } else {\n                for (const nestedComponent of Object.values(component)) {\n                    nestedComponent._onEvent(evt);\n\n                    if (evt.prevented) {\n                        return evt;\n                    }\n                }\n            }\n        }\n\n        return evt;\n    }\n}\n","import { pascalString } from '../util/string-util';\nimport Entity from '../Entity';\n\nexport default class EntityRegistry {\n    _entities = new Map();\n    _ecs = null;\n    _refs = new Map();\n\n    constructor(ecs) {\n        this._ecs = ecs;\n    }\n\n    get all() {\n        return this._entities.values();\n    }\n\n    register(entity) {\n        this._entities.set(entity.id, entity);\n\n        return entity;\n    }\n\n    get(id) {\n        return this._entities.get(id);\n    }\n\n    createOrGetById(id) {\n        const entity = this.get(id);\n\n        if (entity) {\n            return entity;\n        }\n\n        return this.create(id);\n    }\n\n    create(id = undefined) {\n        const entity = new Entity(this._ecs, id);\n\n        this.register(entity);\n\n        this._ecs.queries.onEntityCreated(entity);\n\n        return entity;\n    }\n\n    destroy(entity) {\n        entity.destroy();\n    }\n\n    onEntityDestroyed(entity) {\n        this.cleanupRefs(entity);\n        this._entities.delete(entity.id);\n        this._ecs.queries.onEntityDestroyed(entity);\n    }\n\n    cleanupRefs(entity) {\n        const refs = this._refs.get(entity.id);\n\n        if (!refs) {\n            return;\n        }\n\n        for (const ref of refs) {\n            ref.cleanupReference(entity);\n        }\n\n        delete this._refs[entity.id];\n    }\n\n    addRef(entityId, property) {\n        if (!this._refs.has(entityId)) {\n            this._refs.set(entityId, new Set([property]));\n            return;\n        }\n\n        this._refs.get(entityId).add(property);\n    }\n\n    removeRef(entityId, property) {\n        if (this._refs.has(entityId)) {\n            this._refs.get(entityId).delete(property);\n        }\n    }\n\n    serialize(entities) {\n        const json = [];\n        const list = entities ? entities : this._entities;\n\n        list.forEach((entity) => {\n            json.push(entity.serialize());\n        });\n\n        return json;\n    }\n\n    deserialize(data) {\n        for (const entityData of data.entities) {\n            this.createOrGetById(entityData.id);\n        }\n\n        for (const entityData of data.entities) {\n            this.deserializeEntity(entityData);\n        }\n    }\n\n    deserializeEntity(data) {\n        const { id, ...componentData } = data;\n        const entity = this.createOrGetById(id);\n\n        Object.entries(componentData).forEach(([key, value]) => {\n            const type = pascalString(key);\n            const definition = this._ecs.components.get(type);\n\n            if (definition.allowMultiple) {\n                Object.values(value).forEach((d) => {\n                    entity.add(definition, d);\n                });\n            } else {\n                entity.add(definition, value);\n            }\n        });\n    }\n}\n","import merge from 'deepmerge';\n\nexport default class Query {\n    _ecs;\n    _filter;\n    _onEntityAddedCallbacks = [];\n    _onEntityRemovedCallbacks = [];\n    _cache = new Set();\n\n    constructor(ecs, filter = {}) {\n        this._ecs = ecs;\n        this._filter = merge({ any: [], all: [], none: [] }, filter);\n        this.bustCache();\n    }\n\n    isMatch(entity) {\n        const hasAny = this._filter.any.length\n            ? this._filter.any.some((c) => entity.has(c))\n            : true;\n        const hasAll = this._filter.all.every((c) => entity.has(c));\n        const hasNone = !this._filter.none.some((c) => entity.has(c));\n\n        return hasAny && hasAll && hasNone;\n    }\n\n    onEntityAdded(fn) {\n        this._onEntityAddedCallbacks.push(fn);\n    }\n\n    onEntityRemoved(fn) {\n        this._onEntityRemovedCallbacks.push(fn);\n    }\n\n    has(entity) {\n        return this._cache.has(entity);\n    }\n\n    candidate(entity) {\n        const isTracking = this.has(entity);\n\n        if (this.isMatch(entity)) {\n            if (!isTracking) {\n                this._cache.add(entity);\n                this._onEntityAddedCallbacks.forEach((cb) => cb(entity));\n            }\n\n            return true;\n        }\n\n        if (isTracking) {\n            this._cache.delete(entity);\n            this._onEntityRemovedCallbacks.forEach((cb) => cb(entity));\n        }\n\n        return false;\n    }\n\n    _onEntityCreated(entity) {\n        this.candidate(entity);\n    }\n\n    _onComponentAdded(entity) {\n        this.candidate(entity);\n    }\n\n    _onComponentRemoved(entity) {\n        this.candidate(entity);\n    }\n\n    _onEntityDestroyed(entity) {\n        if (this.has(entity)) {\n            this._cache.delete(entity);\n            this._onEntityRemovedCallbacks.forEach((cb) => cb(entity));\n        }\n    }\n\n    bustCache() {\n        this._cache.clear();\n\n        for (const entity of this._ecs.entities.all) {\n            this.candidate(entity);\n        }\n\n        return this._cache;\n    }\n\n    get() {\n        return this._cache;\n    }\n}\n","import Query from '../Query';\n\nexport default class QueryRegistry {\n    _ecs;\n    _queries = [];\n\n    constructor(ecs) {\n        this._ecs = ecs;\n    }\n\n    create(filters) {\n        const query = new Query(this._ecs, filters);\n\n        this._queries.push(query);\n\n        return query;\n    }\n\n    onComponentAdded(entity) {\n        this._queries.forEach((query) => query._onComponentAdded(entity));\n    }\n\n    onComponentRemoved(entity) {\n        this._queries.forEach((query) => query._onComponentRemoved(entity));\n    }\n\n    onEntityCreated(entity) {\n        this._queries.forEach((query) => query._onEntityCreated(entity));\n    }\n\n    onEntityDestroyed(entity) {\n        this._queries.forEach((query) => query._onEntityDestroyed(entity));\n    }\n}\n","import ComponentRegistry from './registries/ComponentRegistry';\nimport PrefabRegistry from './registries/PrefabRegistry';\nimport { nanoid } from 'nanoid/non-secure';\nimport EntityRegistry from './registries/EntityRegistry';\nimport QueryRegistry from './registries/QueryRegistry';\n\nexport default class Engine {\n    constructor() {\n        this.idGenerator = () => nanoid();\n        this.components = new ComponentRegistry(this);\n        this.prefabs = new PrefabRegistry(this);\n        this.entities = new EntityRegistry(this);\n        this.queries = new QueryRegistry(this);\n    }\n\n    generateId() {\n        return this.idGenerator();\n    }\n\n    createEntity(id) {\n        return this.entities.create(id);\n    }\n\n    createPrefab(nameOrClass, initialProps = {}) {\n        return this.prefabs.create(nameOrClass, initialProps);\n    }\n\n    destroyEntity(entity) {\n        return this.entities.destroy(entity);\n    }\n\n    registerPrefab(data) {\n        this.prefabs.deserialize(data);\n    }\n\n    registerComponent(component) {\n        this.components.register(component);\n    }\n\n    getEntity(id) {\n        return this.entities.get(id);\n    }\n\n    createComponent(type, properties) {\n        return this.components.create(type, properties);\n    }\n\n    createQuery(filters) {\n        return this.queries.create(filters);\n    }\n\n    serialize(entities) {\n        return {\n            entities: this.entities.serialize(entities),\n        };\n    }\n\n    deserialize(data) {\n        if (data.id) {\n            return this.entities.deserializeEntity(data);\n        }\n\n        return this.entities.deserialize(data);\n    }\n}\n","import { Component } from 'geotic';\n\nexport class IsDestroying extends Component {\n    static properties = {\n        pass: 0,\n    };\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { drinkLiquid, liquids, LIQUID_BLOOD } from '../../enums/LiquidTypes';\nimport { IsDestroying } from './IsDestroying';\n\nexport class LiquidContainer extends Component {\n    static properties = {\n        contents: LIQUID_BLOOD,\n        volume: 10,\n        maxVolume: 10,\n        overridePrimary: false,\n        overrideSecondary: false,\n        isPourable: false,\n        destroyOnEmpty: false,\n    };\n\n    get liquid() {\n        return !this.isEmpty && liquids[this.contents];\n    }\n\n    get isEmpty() {\n        return isNaN(this.contents) || this.volume <= 0;\n    }\n\n    get display() {\n        if (this.isEmpty) {\n            return `[empty] ${this.volume}/${this.maxVolume}`;\n        }\n\n        return `[${liquids[this.contents].name}] ${this.volume}/${\n            this.maxVolume\n        }`;\n    }\n\n    get primaryColorOverride() {\n        if (this.overridePrimary && this.liquid) {\n            return this.liquid.primary;\n        }\n\n        return null;\n    }\n\n    get secondaryColorOverride() {\n        if (this.overrideSecondary && this.liquid) {\n            return this.liquid.secondary;\n        }\n\n        return null;\n    }\n\n    _checkDestroyOnEmpty() {\n        if (this.destroyOnEmpty && this.isEmpty) {\n            this.entity.add(IsDestroying);\n        }\n    }\n\n    pour(x, y, quantity) {\n        if (!this.isPourable) {\n            console.warn('The container connot be poured.');\n            return false;\n        }\n\n        if (this.volume <= 0) {\n            console.warn('The contianer is empty and cannot be poured.');\n            return false;\n        }\n\n        if (isNaN(quantity) || quantity >= this.volume) {\n            quantity = this.volume;\n        }\n\n        this.volume -= quantity;\n\n        const pool = this.ecs.createPrefab('Pool', {\n            liquidContainer: {\n                contents: this.contents,\n                volume: quantity,\n            },\n        });\n        pool.position.setPos(x, y);\n        this._checkDestroyOnEmpty();\n\n        return true;\n    }\n\n    onTryPour(evt) {\n        if (this.isEmpty) {\n            console.warn('The container is empty.');\n            return;\n        }\n\n        const pos = evt.data.interactor.position.getPos();\n\n        this.pour(pos.x, pos.y, evt.data.volume);\n\n        evt.handle();\n    }\n\n    onTryDrink(evt) {\n        if (this.isEmpty) {\n            console.warn('The container is empty.');\n            return;\n        }\n\n        drinkLiquid(evt.data.interactor, this.contents, this.volume);\n        this.volume = 0;\n        this._checkDestroyOnEmpty();\n        evt.handle();\n    }\n\n    onGetInteractions(evt) {\n        if (this.isEmpty) {\n            return;\n        }\n\n        evt.data.interactions.push({\n            name: 'Drink',\n            evt: 'try-drink',\n        });\n\n        if (this.isPourable) {\n            evt.data.interactions.push({\n                name: 'Pour',\n                evt: 'try-pour',\n            });\n        }\n    }\n}\n","import { game } from '../core/Game';\n\nexport const LIQUID_WATER = 0;\nexport const LIQUID_BLOOD = 1;\nexport const LIQUID_HONEY = 3;\n\nexport const liquids = {\n    [LIQUID_WATER]: {\n        name: 'water',\n        colorDesc: 'watery',\n        primary: '#66a3dc',\n        secondary: '#8bb9d5',\n        onDrink: (entity) => {\n            console.log('Mmm. earth juice. yummy');\n        },\n    },\n    [LIQUID_BLOOD]: {\n        name: 'blood',\n        colorDesc: 'bloody',\n        primary: '#ce2a36',\n        secondary: '#e0c1c2',\n        onDrink: (entity, volume) => {\n            console.log('blood. this would make a good syrup');\n            entity.fireEvent('heal', {\n                value: volume * 1,\n            });\n        },\n    },\n    [LIQUID_HONEY]: {\n        name: 'honey',\n        colorDesc: 'gooey golden',\n        primary: '#d6aa3a',\n        secondary: '#f4d260',\n        onDrink: (entity, volume) => {\n            const pos = entity.position.getPos();\n\n            game.particles.createEmitter(pos.x, pos.y - 1, {\n                direction: {\n                    x: 0,\n                    y: -1,\n                },\n                glyphs: ['.', '○'],\n                fg1s: ['#d6aa3a'],\n                speed: 0.02,\n                lifetime: 500,\n            });\n\n            entity.fireEvent('heal', {\n                value: volume * 2,\n            });\n        },\n    },\n};\n\nexport const drinkLiquid = (entity, type, volume) => {\n    liquids[type].onDrink(entity, volume);\n};\n","import { Component } from 'geotic';\nimport { Blocker } from './Blocker';\nimport { Shadowcaster } from './Shadowcaster';\n\nexport class Door extends Component {\n    static properties = {\n        isOpen: false,\n        chOpen: \"'\",\n        chClosed: '+',\n    };\n\n    get ch() {\n        return this.isOpen ? this.chOpen : this.chClosed;\n    }\n\n    get display() {\n        return this.isOpen ? '[open]' : '[closed]';\n    }\n\n    openDoor() {\n        if (this.isOpen) {\n            return;\n        }\n\n        this.isOpen = true;\n\n        const glyph = this.entity.glyph;\n\n        if (glyph) {\n            glyph.ch = this.ch;\n        }\n\n        this.entity.remove(Blocker);\n        this.entity.remove(Shadowcaster);\n    }\n\n    closeDoor() {\n        if (!this.isOpen) {\n            return;\n        }\n        // todo: check if entity blocking door\n\n        this.isOpen = false;\n\n        const glyph = this.entity.glyph;\n\n        if (glyph) {\n            glyph.ch = this.ch;\n        }\n\n        this.entity.add(Blocker);\n        this.entity.add(Shadowcaster);\n    }\n\n    onGetInteractions(evt) {\n        if (this.isOpen) {\n            evt.data.interactions.push({\n                name: 'Close door',\n                evt: 'try-close-door',\n            });\n        } else {\n            evt.data.interactions.push({\n                name: 'Open door',\n                evt: 'try-open-door',\n            });\n        }\n    }\n\n    onTryCloseDoor(evt) {\n        this.closeDoor();\n        evt.handle();\n    }\n\n    onTryOpenDoor(evt) {\n        this.openDoor();\n        evt.handle();\n    }\n\n    onProjectileHit(evt) {\n        if (!this.isOpen) {\n            evt.data.stopProjectile = true;\n            evt.data.deflectProjectile = false;\n        }\n\n        this.openDoor();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Blocker extends Component {\n    onProjectileHit(evt) {\n        // https://github.com/ddmills/geotic/issues/22\n        if (!this.isAttached) {\n            return;\n        }\n\n        evt.data.stopProjectile = true;\n        evt.data.deflectProjectile = true;\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Shadowcaster extends Component {}\n","import { Component } from 'geotic';\nimport { Inventory } from './Inventory';\nimport { IsInventoried } from './IsInventoried';\n\nexport class Loot extends Component {\n    onGetInteractions(evt) {\n        const interactor = evt.data.interactor;\n        const isInventoried = this.entity.has(IsInventoried);\n\n        if (!interactor.has(Inventory)) {\n            return;\n        }\n\n        if (isInventoried) {\n            if (interactor.inventory.hasLoot(this.entity)) {\n                evt.data.interactions.push({\n                    name: 'Drop',\n                    evt: 'try-drop',\n                });\n            } else {\n                evt.data.interactions.push({\n                    name: 'Take',\n                    evt: 'try-take',\n                });\n            }\n        } else {\n            evt.data.interactions.push({\n                name: 'Pickup',\n                evt: 'try-pick-up',\n            });\n        }\n    }\n\n    onTryPickUp(evt) {\n        evt.data.interactor.inventory.addLoot(this.entity);\n        evt.handle();\n    }\n\n    onTryTake(evt) {\n        const owner = this.entity.isInventoried.owner;\n\n        owner.inventory.removeLoot(this.entity);\n        evt.data.interactor.inventory.addLoot(this.entity);\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { SCREEN_INVENTORY } from '../../core/screens/ScreenType';\nimport { IsInventoried } from './IsInventoried';\nimport { Stackable } from './Stackable';\n\nexport class Inventory extends Component {\n    static properties = {\n        content: '<EntityArray>',\n    };\n\n    onDestroyed() {\n        this.content.forEach((entity) => entity.destroy());\n    }\n\n    onQueryOwnership(evt) {\n        this.content.forEach((entity) => {\n            evt.data.result.add(entity);\n            entity.fireEvent('query-ownership', { result: evt.data.result });\n        });\n    }\n\n    getStackable(stackableIdentifier) {\n        return this.content.find((entity) => {\n            return (\n                entity.has(Stackable) &&\n                entity.stackable.identifier === stackableIdentifier\n            );\n        });\n    }\n\n    addLoot(loot) {\n        if (loot.has(Stackable)) {\n            const existing = this.getStackable(loot.stackable.identifier);\n\n            if (existing) {\n                existing.stackable.addOther(loot);\n\n                return;\n            }\n        }\n\n        loot.add(IsInventoried, {\n            owner: this.entity,\n        });\n\n        this.content.push(loot);\n    }\n\n    hasLoot(loot) {\n        const idx = this.content.indexOf(loot);\n\n        return idx >= 0;\n    }\n\n    removeLoot(loot, quantity) {\n        const isStackable = loot.has(Stackable);\n\n        if (isStackable && !isNaN(quantity)) {\n            loot.stackable.split(quantity);\n\n            return this.removeLoot(loot);\n        }\n\n        const idx = this.content.indexOf(loot);\n\n        if (idx >= 0) {\n            this.content.splice(idx, 1);\n            loot.remove(IsInventoried);\n        }\n\n        return loot;\n    }\n\n    dropLoot(loot, quantity) {\n        const ob = this.removeLoot(loot, quantity);\n        const pos = this.entity.position.getPos();\n\n        ob.position.setPos(pos.x, pos.y);\n\n        return ob;\n    }\n\n    onTryOpen(evt) {\n        game.screens.pushScreen(SCREEN_INVENTORY, {\n            accessible: this.entity,\n            accessor: evt.data.interactor,\n        });\n        evt.handle();\n    }\n\n    onGetInteractions(evt) {\n        evt.data.interactions.push({\n            name: 'Open',\n            evt: 'try-open',\n        });\n    }\n}\n","export const SCREEN_MAIN_MENU = 0;\nexport const SCREEN_ADVENTURE = 1;\nexport const SCREEN_DEATH = 2;\nexport const SCREEN_INVENTORY = 3;\nexport const SCREEN_INTERACT_MODAL = 4;\nexport const SCREEN_CURSOR = 5;\nexport const SCREEN_LOAD_SECTOR = 6;\n","import { Component } from 'geotic';\nimport { Stackable } from './Stackable';\n\nexport class IsInventoried extends Component {\n    static properties = {\n        owner: '<Entity>',\n    };\n\n    onQueryOwnership(evt) {\n        evt.data.result.add(this.entity);\n    }\n\n    onTryDrop(evt) {\n        this.owner.inventory.dropLoot(this.entity);\n\n        evt.handle();\n    }\n\n    onThrown(evt) {\n        const isStackable = this.entity.has(Stackable);\n        const quantity = isStackable ? 1 : null;\n\n        this.owner.inventory.removeLoot(this.entity, quantity);\n    }\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { STACKABLE_DEFAULT } from '../../enums/Stackables';\nimport { IsDestroying } from './IsDestroying';\nimport { IsInventoried } from './IsInventoried';\n\nexport class Stackable extends Component {\n    static properties = {\n        identifier: STACKABLE_DEFAULT,\n        quantity: 1,\n    };\n\n    get display() {\n        return `x ${this.quantity}`;\n    }\n\n    increment(amount) {\n        this.quantity += amount;\n    }\n\n    addOther(other) {\n        this.increment(other.stackable.quantity);\n        other.stackable.quantity = 0;\n        other.add(IsDestroying);\n    }\n\n    split(quantity) {\n        if (quantity >= this.quantity) {\n            quantity = this.quantity;\n            return this.entity;\n        }\n\n        const clone = game.engine.cloneEntity(this.entity);\n        clone.stackable.quantity -= quantity;\n\n        this.quantity = quantity;\n\n        if (clone.has(IsInventoried)) {\n            // make sure inventory contents are still \"correct\"\n            clone.isInventoried.owner.inventory.content.push(clone);\n        }\n\n        return clone;\n    }\n}\n","export const STACKABLE_DEFAULT = 'STACKABLE_DEFAULT';\nexport const STACKABLE_STONE = 'STACKABLE_STONE';\nexport const STACKABLE_GLASS_SHARD = 'STACKABLE_GLASS_SHARD';\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { SCREEN_ADVENTURE, SCREEN_CURSOR } from '../../core/screens/ScreenType';\nimport {\n    CURSOR_SEGMENT_INVALID,\n    CURSOR_SEGMENT_INTEREST,\n    CURSOR_SEGMENT_UNKNOWN,\n    CURSOR_SEGMENT_NONE,\n} from '../../enums/CursorSegments';\nimport { bresenhamLine } from '../../utils/BresenhamLine';\nimport { Blocker } from './Blocker';\nimport { Body } from './Body';\nimport { Inventory } from './Inventory';\nimport { IsVisible } from './IsVisible';\n\nexport class Throwable extends Component {\n    onGetInteractions(evt) {\n        if (!evt.data.interactor.has(Inventory)) {\n            return;\n        }\n\n        if (!evt.data.interactor.inventory.hasLoot(this.entity)) {\n            return;\n        }\n\n        evt.data.interactions.push({\n            name: 'Throw',\n            evt: 'try-throw',\n        });\n    }\n\n    throw(trajectory, initiator) {\n        this.entity.fireEvent('thrown', {\n            initiator,\n            trajectory,\n        });\n\n        for (let i = 0; i < trajectory.length; i++) {\n            if (i == 0) {\n                continue;\n            }\n\n            const position = trajectory[i];\n            const entities = position.entities;\n\n            let stopped = false;\n            let deflected = false;\n\n            const hit = entities.find((entity) => {\n                const evt = entity.fireEvent('projectile-hit', {\n                    initiator,\n                    trajectory,\n                    projectile: this.entity,\n                });\n\n                stopped = evt.data.stopProjectile;\n                deflected = evt.data.deflectProjectile;\n\n                return stopped || deflected;\n            });\n\n            if (hit) {\n                if (deflected) {\n                    const prev = trajectory[i - 1];\n\n                    this.entity.position.setPos(prev.x, prev.y);\n                    this.entity.fireEvent('collide-ground', {\n                        initiator,\n                        x: prev.x,\n                        y: prev.y,\n                    });\n                } else {\n                    this.entity.position.setPos(position.x, position.y);\n                    this.entity.fireEvent('collide', {\n                        initiator,\n                        hit,\n                        x: position.x,\n                        y: position.y,\n                    });\n                }\n\n                break;\n            } else if (i === trajectory.length - 1) {\n                this.entity.position.setPos(position.x, position.y);\n                this.entity.fireEvent('collide-ground', {\n                    initiator,\n                    x: position.x,\n                    y: position.y,\n                });\n            }\n        }\n    }\n\n    onTryThrow(evt) {\n        game.screens.pushScreen(SCREEN_CURSOR, {\n            start: evt.data.interactor.position.getPos(),\n            drawLine: true,\n            drawTags: false,\n            onResult: (cursor) => {\n                game.screens.setScreen(SCREEN_ADVENTURE);\n\n                this.entity.position.setPos(cursor.start.x, cursor.start.y);\n\n                const line = bresenhamLine(\n                    cursor.start.x,\n                    cursor.start.y,\n                    cursor.position.x,\n                    cursor.position.y\n                );\n                const trajectory = line.map((pos) => ({\n                    x: pos.x,\n                    y: pos.y,\n                    entities: game.map.getEntitiesAt(pos.x, pos.y),\n                }));\n\n                this.throw(trajectory, evt.data.interactor);\n            },\n            onCancel: () => {\n                game.screens.popScreen();\n            },\n            getSegmentTypes: (line) => {\n                let lineValid = true;\n                const result = line.map(({ x, y }, idx) => {\n                    if (idx === 0) {\n                        return CURSOR_SEGMENT_NONE;\n                    }\n\n                    // todo: fire \"query\" event on each item in path\n                    const entities = game.map.getEntitiesAt(x, y);\n                    const blocker = entities.find(\n                        (entity) => entity.has(IsVisible) && entity.has(Blocker)\n                    );\n                    const body = entities.find(\n                        (entity) => entity.has(IsVisible) && entity.has(Body)\n                    );\n\n                    if (blocker) {\n                        lineValid = false;\n                    }\n\n                    if (lineValid && body) {\n                        lineValid = false;\n                        return CURSOR_SEGMENT_INTEREST;\n                    }\n\n                    return !lineValid\n                        ? CURSOR_SEGMENT_INVALID\n                        : CURSOR_SEGMENT_UNKNOWN;\n                });\n\n                const interestIdx = result.indexOf(CURSOR_SEGMENT_INTEREST);\n                const blockerIdx = result.indexOf(CURSOR_SEGMENT_INVALID);\n\n                if (interestIdx < 0 && blockerIdx >= 1) {\n                    result[blockerIdx - 1] = CURSOR_SEGMENT_INTEREST;\n                }\n\n                return result;\n            },\n        });\n    }\n}\n","export const CURSOR_SEGMENT_UNKNOWN = 0;\nexport const CURSOR_SEGMENT_INVALID = 1;\nexport const CURSOR_SEGMENT_NONE = 2;\nexport const CURSOR_SEGMENT_INTEREST = 3;\n\nconst colorMap = {\n    [CURSOR_SEGMENT_UNKNOWN]: '#444',\n    [CURSOR_SEGMENT_INVALID]: '#ce5454',\n    [CURSOR_SEGMENT_INTEREST]: '#66a3dc',\n};\n\nconst glyphMap = {\n    [CURSOR_SEGMENT_UNKNOWN]: '·',\n    [CURSOR_SEGMENT_INVALID]: '·',\n    [CURSOR_SEGMENT_INTEREST]: '•',\n};\n\nexport const getCursorSegmentTypeColor = (type) => colorMap[type];\nexport const getCursorSegmentTypeGlyph = (type) => glyphMap[type];\n","export const bresenhamLine = (x0, y0, x1, y1) => {\n    const dx = Math.abs(x1 - x0);\n    const dy = Math.abs(y1 - y0);\n    const sx = x0 < x1 ? 1 : -1;\n    const sy = y0 < y1 ? 1 : -1;\n    const result = [];\n\n    let err = dx - dy;\n\n    while (true) {\n        result.push({\n            x: x0,\n            y: y0,\n        });\n\n        if (x0 === x1 && y0 === y1) {\n            break;\n        }\n\n        const e2 = 2 * err;\n\n        if (e2 > -dy) {\n            err -= dy;\n            x0 += sx;\n        }\n        if (e2 < dx) {\n            err += dx;\n            y0 += sy;\n        }\n    }\n\n    return result;\n};\n\nexport const bresenhamLineExclusive = (x0, y0, x1, y1) => {\n    const line = bresenhamLine(x0, y0, x1, y1);\n\n    line.shift();\n    line.pop();\n\n    return line;\n};\n","import { Component } from 'geotic';\n\nexport class Body extends Component {\n    onDeath(evt) {\n        if (!this.entity.has('Position')) {\n            return;\n        }\n\n        const corpse = this.ecs.createPrefab('Corpse');\n        const pos = this.entity.position.getPos();\n\n        if (this.entity.has('Moniker')) {\n            corpse.moniker.name = `${this.entity.moniker.name} corpse`;\n        }\n\n        corpse.position.setPos(pos.x, pos.y);\n    }\n\n    onProjectileHit(evt) {\n        evt.data.stopProjectile = true;\n    }\n}\n","import { Component } from 'geotic';\n\nexport class IsVisible extends Component {\n    static properties = {\n        amount: 0,\n        range: 0,\n    };\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { CONSOLE_EVENT_SHATTER } from '../../enums/ConsoleEvents';\nimport { Dead } from './Dead';\nimport { IsDestroying } from './IsDestroying';\nimport { LiquidContainer } from './LiquidContainer';\n\nexport class FragileGlass extends Component {\n    shatter(x, y) {\n        const shards = this.ecs.createPrefab('GlassShard', {\n            stackable: {\n                quantity: 3,\n            },\n        });\n\n        shards.position.setPos(x, y);\n\n        if (this.entity.has(LiquidContainer)) {\n            if (this.entity.liquidContainer.pour(x, y)) {\n                game.console.event(CONSOLE_EVENT_SHATTER, {\n                    target: this.entity,\n                    liquid: this.entity.liquidContainer.contents,\n                });\n            }\n        } else {\n            game.console.event(CONSOLE_EVENT_SHATTER, {\n                target: this.entity,\n            });\n        }\n\n        this.entity.add(IsDestroying);\n    }\n\n    onCollideGround(evt) {\n        this.shatter(evt.data.x, evt.data.y);\n    }\n\n    onCollide(evt) {\n        this.shatter(evt.data.x, evt.data.y);\n    }\n}\n","import { IsPlayer, Moniker, IsVisible } from '../ecs/components';\nimport { liquids } from './LiquidTypes';\n\nexport const CONSOLE_EVENT_DAMAGE = 0;\nexport const CONSOLE_EVENT_DEAD = 1;\nexport const CONSOLE_EVENT_SHATTER = 2;\n\nconst getMonikerSubject = (entity) => {\n    if (entity.has(Moniker)) {\n        return `The ${entity.moniker.simpleDisplay.toLowerCase()}`;\n    }\n\n    return `The thing`;\n};\n\nconst getMonikerIndirectObject = (entity) => {\n    if (entity.has(IsPlayer)) {\n        return 'you';\n    }\n\n    if (entity.has(Moniker)) {\n        return `the ${entity.moniker.simpleDisplay.toLowerCase()}`;\n    }\n};\n\nconst mapping = {\n    [CONSOLE_EVENT_DAMAGE]: {\n        message(data) {\n            return `${getMonikerSubject(data.target)} takes ${\n                data.damage.value\n            } ${data.damage.type} damage from ${getMonikerIndirectObject(\n                data.source\n            )}`;\n        },\n        shouldAppear(data) {\n            return data.target.has(IsPlayer) || data.target.has(IsVisible);\n        },\n    },\n    [CONSOLE_EVENT_DEAD]: {\n        message(data) {\n            return `${getMonikerSubject(data.target)} takes ${\n                data.damage.value\n            } ${data.damage.type} damage from ${getMonikerIndirectObject(\n                data.source\n            )} and dies`;\n        },\n        shouldAppear(data) {\n            return data.target.has(IsPlayer) || data.target.has(IsVisible);\n        },\n    },\n    [CONSOLE_EVENT_SHATTER]: {\n        message(data) {\n            if (isNaN(data.liquid)) {\n                return `${getMonikerSubject(data.target)} shatters!`;\n            } else {\n                return `${getMonikerSubject(\n                    data.target\n                )} shatters and spills its ${\n                    liquids[data.liquid].colorDesc\n                } contents!`;\n            }\n        },\n        shouldAppear(data) {\n            return data.target.has(IsVisible);\n        },\n    },\n};\n\nexport const getMessage = (evt, data) => {\n    return mapping[evt].message(data);\n};\n\nexport const shouldAppear = (evt, data) => {\n    return mapping[evt].shouldAppear(data);\n};\n","import { Component } from 'geotic';\n\nexport class Dead extends Component {}\n","import { Component } from 'geotic';\nimport { INVALID, FAILURE } from '../../ai/GoalActionResult';\n\nexport class Brain extends Component {\n    static properties = {\n        goals: '<EntityArray>',\n    };\n\n    onDestroyed() {\n        this.goals.forEach((entity) => {\n            entity.destroy();\n        });\n    }\n\n    onTakeAction(evt) {\n        while (this.peekGoal() && this.peekGoal().isFinished()) {\n            this.popGoal().entity.destroy();\n        }\n\n        const currentGoal = this.peekGoal();\n        const result = currentGoal.takeAction();\n\n        if (result === FAILURE) {\n            this.removeGoal(currentGoal);\n        } else if (result === INVALID) {\n            this.removeGoal(currentGoal);\n            this.entity.fireEvent('take-action');\n        }\n\n        evt.handle();\n    }\n\n    removeGoal(goal) {\n        const goalsToDestroy = [];\n\n        this.goals = this.goals.filter((g) => {\n            const isSelf = Boolean(g.id === goal.entity.id);\n            const isSiblingGoal = Boolean(\n                g.goal.originalIntent &&\n                    g.goal.originalIntent.id === goal.originalIntent.id\n            );\n\n            if (isSelf || isSiblingGoal) {\n                goalsToDestroy.push(g.goal);\n                return false;\n            }\n\n            return true;\n        });\n\n        goalsToDestroy.forEach((g) => g.entity.destroy());\n    }\n\n    pushGoal(goal) {\n        if (!(goal instanceof Component)) {\n            throw new Error('Pushing non-component goal!', goal);\n        }\n\n        goal.parent = this.entity;\n\n        return this.goals.push(goal.entity);\n    }\n\n    popGoal() {\n        return this.goals.pop().goal;\n    }\n\n    peekGoal() {\n        return this.goals[this.goals.length - 1].goal;\n    }\n}\n","export const SUCCESS = 'SUCCESS';\nexport const FAILURE = 'FAILURE';\nexport const INVALID = 'INVALID';\n","import { Component } from 'geotic';\nimport * as GoalEvaluator from '../../ai/GoalEvaluator';\n\nexport class Goal extends Component {\n    static properties = {\n        name: 'Bored',\n        originalIntent: '<Entity>',\n        parent: '<Entity>',\n        target: '<Entity>',\n        complete: false,\n        data: {},\n    };\n\n    isFinished() {\n        return GoalEvaluator.isFinished(this.parent, this);\n    }\n\n    takeAction() {\n        return GoalEvaluator.takeAction(this.parent, this);\n    }\n}\n","import * as GoalTypes from './GoalTypes';\n\nconst goalTypeMap = {};\n\nObject.values(GoalTypes).forEach((goalType) => {\n    goalTypeMap[goalType.name] = goalType;\n});\n\nconst getGoalType = (name) => {\n    const type = goalTypeMap[name];\n\n    if (!type) {\n        console.warn(`GoalType (${name}) not found!`);\n    }\n\n    return type;\n};\n\nexport const isFinished = (entity, goal) => {\n    const type = getGoalType(goal.name);\n\n    return type.isFinished(entity, goal);\n};\n\nexport const takeAction = (entity, goal) => {\n    const type = getGoalType(goal.name);\n\n    return type.takeAction(entity, goal);\n};\n","import { GoalType } from './GoalType';\nimport { SUCCESS } from '../GoalActionResult';\nimport { KillSomethingGoalType } from './KillSomethingGoalType';\n\nexport class BoredGoalType extends GoalType {\n    static name = 'Bored';\n\n    static isFinished = (entity, goal) => {\n        return false;\n    };\n\n    static takeAction = (entity, goal) => {\n        // do i detect any hostiles?\n        const detectHostiles = entity.fireEvent('try-detect-hostiles');\n\n        if (detectHostiles.handled) {\n            const killGoal = KillSomethingGoalType.createAsSubGoal(goal, {\n                target: detectHostiles.data.target.id,\n            });\n\n            entity.brain.pushGoal(killGoal);\n\n            entity.fireEvent('take-action');\n\n            return SUCCESS;\n        }\n\n        // is there anything i want to do since i'm bored?\n        const boredomGoal = entity.fireEvent('boredom');\n\n        if (boredomGoal.data.goal) {\n            entity.brain.pushGoal(boredomGoal.data.goal);\n            entity.fireEvent('take-action');\n\n            return SUCCESS;\n        }\n\n        // nothing to do, just idle\n        entity.fireEvent('energy-consumed', 1000);\n\n        return SUCCESS;\n    };\n}\n","import { FAILURE } from '../GoalActionResult';\nimport { game } from '../../core/Game';\n\nexport class GoalType {\n    static name = 'Unknown';\n\n    static isFinished(entity, goal) {\n        return false;\n    }\n\n    static takeAction(entity, goal) {\n        return FAILURE;\n    }\n\n    static createAsSubGoal(originalIntent, properties = {}) {\n        return this.create({\n            ...properties,\n            originalIntent: originalIntent.entity.id,\n        });\n    }\n\n    static create(properties = {}) {\n        return game.ecs.createPrefab('Goal', {\n            goal: {\n                name: this.name,\n                ...properties,\n            },\n        }).goal;\n    }\n}\n","import { GoalType } from './GoalType';\nimport { FAILURE, SUCCESS } from '../GoalActionResult';\nimport { Dead } from '../../ecs/components';\n\nexport class KillSomethingGoalType extends GoalType {\n    static name = 'KillSomething';\n\n    static isFinished = (entity, goal) => {\n        return !goal.target || goal.target.has(Dead) || goal.target.isDestroyed;\n    };\n\n    static takeAction = (entity, goal) => {\n        let evt = entity.fireEvent('try-melee', {\n            target: goal.target,\n        });\n\n        if (evt.handled) {\n            return SUCCESS;\n        }\n\n        // try defense\n        // try ranged\n        // try items\n        // try movement\n        // fail to intent\n\n        return FAILURE;\n    };\n}\n","import { GoalType } from './GoalType';\nimport { SUCCESS, FAILURE } from '../GoalActionResult';\n\nexport class EatFoodGoalType extends GoalType {\n    static name = 'EatFood';\n\n    static isFinished = (entity, goal) => {\n        return goal.complete;\n    };\n\n    static takeAction = (entity, goal) => {\n        const evt = entity.fireEvent('try-eat-food', {\n            food: 10000,\n        });\n\n        if (evt.handled) {\n            goal.complete = true;\n\n            return SUCCESS;\n        }\n\n        return FAILURE;\n    };\n}\n","import { GoalType } from './GoalType';\nimport { EatFoodGoalType } from './EatFoodGoalType';\nimport { SUCCESS } from '../GoalActionResult';\n\nexport class SatisfyHungerGoalType extends GoalType {\n    static name = 'SatisfyHunger';\n\n    static isFinished = (entity, goal) => {\n        return !entity.eater.isHungry;\n    };\n\n    static takeAction = (entity, goal) => {\n        entity.brain.pushGoal(EatFoodGoalType.createAsSubGoal(goal));\n        entity.brain.pushGoal(EatFoodGoalType.createAsSubGoal(goal));\n\n        entity.fireEvent('take-action');\n\n        return SUCCESS;\n    };\n}\n","import { GoalType } from './GoalType';\nimport { SUCCESS, FAILURE } from '../GoalActionResult';\n\nexport class MoveGoalType extends GoalType {\n    static name = 'Move';\n\n    static isFinished = (entity, goal) => {\n        return goal.complete;\n    };\n\n    static takeAction = (entity, goal) => {\n        const evt = entity.fireEvent('try-move', {\n            x: goal.data.x,\n            y: goal.data.y,\n        });\n\n        if (evt.handled) {\n            goal.complete = true;\n\n            return SUCCESS;\n        }\n\n        return FAILURE;\n    };\n}\n","import { Component } from 'geotic';\nimport { SatisfyHungerGoalType } from '../../ai/GoalTypes';\n\nexport class Eater extends Component {\n    static properties = {\n        hunger: 6000,\n    };\n\n    get isHungry() {\n        return this.hunger <= 3000;\n    }\n\n    onBoredom(evt) {\n        if (this.isHungry) {\n            evt.data.goal = SatisfyHungerGoalType.create();\n            evt.handle();\n        }\n    }\n\n    onTryEatFood(evt) {\n        if (Math.random() < 0.75) {\n            this.entity.fireEvent('log', 'eats some food');\n            this.hunger += evt.data.food;\n            this.entity.fireEvent('energy-consumed', 150);\n\n            evt.handle();\n        } else {\n            this.entity.fireEvent('log', 'fails to eat the food');\n        }\n    }\n}\n","import { Component } from 'geotic';\nimport { Door } from './Door';\nimport { LiquidContainer } from './LiquidContainer';\nimport { Stackable } from './Stackable';\n\nexport class Moniker extends Component {\n    static properties = {\n        name: 'Unknown',\n    };\n\n    get simpleDisplay() {\n        return this.name;\n    }\n\n    get display() {\n        const hasLiquid = this.entity.has(LiquidContainer);\n\n        if (hasLiquid) {\n            const disp = this.entity.liquidContainer.display;\n\n            return `${this.name} ${disp}`;\n        }\n\n        const hasStackable = this.entity.has(Stackable);\n\n        if (hasStackable) {\n            const disp = this.entity.stackable.display;\n\n            return `${this.name} ${disp}`;\n        }\n\n        const hasDoor = this.entity.has(Door);\n\n        if (hasDoor) {\n            const disp = this.entity.door.display;\n\n            return `${this.name} ${disp}`;\n        }\n\n        return this.name;\n    }\n}\n","import { Component } from 'geotic';\nimport { Moniker } from './Moniker';\n\nexport class Logger extends Component {\n    get moniker() {\n        return this.entity.has(Moniker)\n            ? this.entity.moniker.display\n            : 'Unknown';\n    }\n\n    onLog(evt) {\n        console.log(`[${this.moniker}]`, evt.data);\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Position extends Component {\n    getPos() {\n        return window.game.map.getPosition(this.entity.id);\n    }\n\n    setPos(x, y) {\n        return window.game.map.setPosition(x, y, this.entity.id);\n    }\n\n    equals(x, y) {\n        const pos = this.getPos();\n\n        return pos.x === x && pos.y === y;\n    }\n}\n","import { Component } from 'geotic';\nimport { LiquidContainer } from './LiquidContainer';\n\nexport class Glyph extends Component {\n    static properties = {\n        fg1: '#ddd',\n        fg2: '#666',\n        bg: null,\n        ch: '?',\n    };\n\n    get primary() {\n        if (this.entity.has(LiquidContainer)) {\n            const col = this.entity.liquidContainer.primaryColorOverride;\n\n            if (col) {\n                return col;\n            }\n        }\n\n        return this.fg1;\n    }\n\n    get secondary() {\n        if (this.entity.has(LiquidContainer)) {\n            const col = this.entity.liquidContainer.secondaryColorOverride;\n\n            if (col) {\n                return col;\n            }\n        }\n\n        return this.fg2;\n    }\n\n    get background() {\n        return this.bg;\n    }\n\n    get char() {\n        return this.ch;\n    }\n}\n","import { Component } from 'geotic';\nimport { Actor } from './Actor';\n\nexport class Arms extends Component {\n    onTryMelee(evt) {\n        if (this.entity.has(Actor) && !this.entity.actor.hasEnergy) {\n            console.warn('onTryMelee - No energy??');\n            return;\n        }\n\n        const damage = {\n            type: 'blunt',\n            value: 5,\n        };\n\n        const map = window.game.map;\n\n        const targetPos = evt.data.target.position.getPos();\n        const selfPos = this.entity.position.getPos();\n        const isAdjacent = map.isAdjacent(\n            selfPos.x,\n            selfPos.y,\n            targetPos.x,\n            targetPos.y\n        );\n\n        if (!isAdjacent) {\n            return;\n        }\n\n        window.game.particles.createParticle(targetPos.x, targetPos.y, {\n            lifetime: 140,\n            fg1s: ['#8d4c4f', '#730d14'],\n            glyphs: ['-'],\n        });\n\n        evt.data.target.fireEvent('damage', {\n            source: this.entity,\n            damage,\n        });\n\n        this.entity.fireEvent('energy-consumed', 800);\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { Blocker } from './Blocker';\nimport { Faction } from './Faction';\n\nexport class Legs extends Component {\n    onTryMove(evt) {\n        const position = this.entity.position.getPos();\n        const targetX = position.x + evt.data.x;\n        const targetY = position.y + evt.data.y;\n\n        const targetTileEntities = window.game.map.getEntitiesAt(\n            targetX,\n            targetY\n        );\n\n        if (targetTileEntities.some((entity) => entity.has(Blocker))) {\n            return;\n        }\n\n        const nonHostile = targetTileEntities.find((entity) => {\n            return (\n                entity.has(Faction) &&\n                !window.game.factions.areEntitiesHostile(entity, this.entity)\n            );\n        });\n\n        // swap locations\n        if (nonHostile) {\n            nonHostile.position.setPos(position.x, position.y);\n        }\n\n        this.entity.fireEvent('energy-consumed', 750);\n        this.entity.position.setPos(targetX, targetY);\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Faction extends Component {\n    static properties = {\n        name: 'Neutral',\n    };\n}\n","import { Component } from 'geotic';\nimport { DIR_Z } from '../../enums/Directions';\n\nexport class MoveCommand extends Component {\n    static properties = {\n        direction: DIR_Z,\n    };\n}\n","const directions = [\n    {\n        key: 0,\n        shortName: 'NW',\n        fullName: 'Northwest',\n        delta: {\n            x: -1,\n            y: -1,\n        },\n    },\n    {\n        key: 1,\n        shortName: 'N',\n        fullName: 'North',\n        delta: {\n            x: 0,\n            y: -1,\n        },\n    },\n    {\n        key: 2,\n        shortName: 'NE',\n        fullName: 'Northeast',\n        delta: {\n            x: 1,\n            y: -1,\n        },\n    },\n    {\n        key: 3,\n        shortName: 'W',\n        fullName: 'West',\n        delta: {\n            x: -1,\n            y: 0,\n        },\n    },\n    {\n        key: 4,\n        shortName: 'Z',\n        fullName: 'Here',\n        delta: {\n            x: 0,\n            y: 0,\n        },\n    },\n    {\n        key: 5,\n        shortName: 'E',\n        fullName: 'East',\n        delta: {\n            x: 1,\n            y: 0,\n        },\n    },\n    {\n        key: 6,\n        shortName: 'SW',\n        fullName: 'Southwest',\n        delta: {\n            x: -1,\n            y: 1,\n        },\n    },\n    {\n        key: 7,\n        shortName: 'S',\n        fullName: 'South',\n        delta: {\n            x: 0,\n            y: 1,\n        },\n    },\n    {\n        key: 8,\n        shortName: 'SE',\n        fullName: 'Southeast',\n        delta: {\n            x: 1,\n            y: 1,\n        },\n    },\n];\n\nexport const DIR_NW = 0;\nexport const DIR_N = 1;\nexport const DIR_NE = 2;\nexport const DIR_W = 3;\nexport const DIR_Z = 4;\nexport const DIR_E = 5;\nexport const DIR_SW = 6;\nexport const DIR_S = 7;\nexport const DIR_SE = 8;\n\nexport const shortName = (direction) => directions[direction].shortName;\n\nexport const fullName = (direction) => directions[direction].fullName;\n\nexport const delta = (direction) => directions[direction].delta;\n","import { Component } from 'geotic';\nimport { DIR_Z } from '../../enums/Directions';\n\nexport class MeleeCommand extends Component {\n    static properties = {\n        target: '<Entity>',\n    };\n}\n","import { Component } from 'geotic';\n\nexport class IsPlayer extends Component {}\n","import { Component } from 'geotic';\nimport { MoveGoalType } from '../../ai/GoalTypes';\nimport * as Directions from '../../enums/Directions';\n\nexport class Wandering extends Component {\n    onBoredom(evt) {\n        if (Math.random() > 0.5) {\n            return;\n        }\n\n        const direction = Math.floor(Math.random() * 9);\n        const delta = Directions.delta(direction);\n\n        evt.data.goal = MoveGoalType.create({\n            data: delta,\n        });\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Explorable extends Component {}\n","import { Component } from 'geotic';\n\nexport class Explored extends Component {}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport {\n    CONSOLE_EVENT_DAMAGE,\n    CONSOLE_EVENT_DEAD,\n} from '../../enums/ConsoleEvents';\nimport { Dead } from './Dead';\n\nexport class Health extends Component {\n    static properties = {\n        value: 10,\n        max: 10,\n    };\n\n    onDamage(evt) {\n        this.value -= evt.data.damage.value;\n\n        if (this.value <= 0) {\n            game.console.event(CONSOLE_EVENT_DEAD, {\n                target: this.entity,\n                source: evt.data.source,\n                damage: evt.data.damage,\n            });\n\n            this.value = 0;\n            this.entity.add(Dead);\n        }\n\n        game.console.event(CONSOLE_EVENT_DAMAGE, {\n            target: this.entity,\n            source: evt.data.source,\n            damage: evt.data.damage,\n        });\n\n        evt.handle();\n    }\n\n    onHeal(evt) {\n        this.value += evt.data.value;\n\n        if (this.value > this.max) {\n            this.value = this.max;\n        }\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\nimport { Faction } from './Faction';\n\nexport class Eyes extends Component {\n    onTryDetectHostiles(evt) {\n        const position = window.game.map.getPosition(this.entity.id);\n\n        if (!position) {\n            return;\n        }\n\n        const target = window.game.map\n            .getNeighborEntities(position.x, position.y)\n            .flat()\n            .filter((e) => e.has(Faction))\n            .find((neighbor) => {\n                return window.game.factions.areEntitiesHostile(\n                    this.entity,\n                    neighbor\n                );\n            });\n\n        if (target) {\n            evt.data.target = target;\n            evt.handle();\n        }\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Particle extends Component {\n    static properties = {\n        lifetime: 200,\n        fg1s: ['#8d4c4f', '#730d14'],\n        fg2s: [],\n        bgs: [],\n        glyphs: ['·'],\n        speed: 0.05,\n        age: 0,\n        x: 0,\n        y: 0,\n        startX: 0,\n        startY: 0,\n        direction: {\n            x: 0,\n            y: 0,\n        },\n    };\n\n    get isExpired() {\n        return this.age >= this.lifetime;\n    }\n\n    get percent() {\n        return this.age / this.lifetime;\n    }\n\n    frame(arr = []) {\n        const len = arr.length;\n        const chunks = 1 / len;\n\n        return Math.trunc(this.percent / chunks);\n    }\n\n    get glyph() {\n        const frame = this.frame(this.glyphs);\n\n        return this.glyphs[frame];\n    }\n\n    get fg1() {\n        const frame = this.frame(this.fg1s);\n\n        return this.fg1s[frame];\n    }\n\n    get fg2() {\n        const frame = this.frame(this.fg2s);\n\n        return this.fg2s[frame];\n    }\n\n    get bg() {\n        const frame = this.frame(this.bgs);\n\n        return this.bgs[frame];\n    }\n}\n","import { Component } from 'geotic';\nimport { Particle } from './Particle';\n\nexport class ParticleEmitter extends Component {\n    static properties = {\n        particleData: {},\n        duration: 800,\n        rate: 3,\n        age: 0,\n        x: 0,\n        y: 0,\n        count: 0,\n    };\n\n    get isExpired() {\n        return this.age >= this.duration;\n    }\n\n    get percent() {\n        return this.age / this.duration;\n    }\n\n    createParticle() {\n        const particle = this.ecs.createEntity();\n\n        particle.add(Particle, {\n            ...this.particleData,\n            x: this.x,\n            y: this.y,\n        });\n\n        this.count += 1;\n\n        return particle;\n    }\n\n    frame(arr = []) {\n        const len = arr.length;\n        const chunks = 1 / len;\n\n        return Math.trunc(this.percent / chunks);\n    }\n}\n","export default class System {\n    #game = null;\n\n    get game() {\n        return this.#game;\n    }\n\n    constructor(game) {\n        this.#game = game;\n    }\n\n    update(dt) {}\n}\n","import { Actor, IsDestroying } from '../ecs/components';\nimport System from './System';\n\nexport default class ActionSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n\n        this.#query = game.ecs.createQuery({\n            all: [Actor],\n            not: [IsDestroying],\n        });\n    }\n\n    update(dt) {\n        const entities = this.#query.get();\n        const sorted = Array.from(entities);\n        sorted.sort((a, b) => (a.actor.energy < b.actor.energy ? 1 : -1));\n\n        let entity = sorted[0];\n\n        if (entity && !entity.actor.hasEnergy) {\n            this.game.clock.incrementTick(-1 * entity.actor.energy);\n\n            entities.forEach((entity) => {\n                entity.actor.addEnergy(this.game.clock.tickDelta);\n            });\n        }\n\n        while (entity && entity.actor.hasEnergy && !entity.isPlayer) {\n            entity.fireEvent('take-action');\n            entity = sorted.shift();\n        }\n    }\n}\n","import {\r\n    IsInventoried,\r\n    Explored,\r\n    Glyph,\r\n    Position,\r\n    IsVisible,\r\n    IsDestroying,\r\n} from '../ecs/components';\r\nimport System from './System';\r\n\r\nexport default class RenderSystem extends System {\r\n    #query = null;\r\n    #explored = null;\r\n\r\n    constructor(game) {\r\n        super(game);\r\n        this.#query = game.ecs.createQuery({\r\n            all: [Glyph, Position, IsVisible],\r\n            none: [IsInventoried, IsDestroying],\r\n        });\r\n        this.#explored = game.ecs.createQuery({\r\n            all: [Glyph, Position, Explored],\r\n            none: [IsInventoried, IsVisible, IsDestroying],\r\n        });\r\n    }\r\n\r\n    render(dt) {\r\n        this.game.renderer.clear();\r\n\r\n        const explored = Array.from(this.#explored.get());\r\n\r\n        for (let i = 0; i < explored.length; i++) {\r\n            const renderable = explored[i];\r\n            const pos = renderable.position.getPos();\r\n\r\n            if (!this.game.camera.isInView(pos.x, pos.y)) {\r\n                continue;\r\n            }\r\n\r\n            const screen = this.game.camera.worldToScreen(pos.x, pos.y);\r\n\r\n            this.game.renderer.draw(\r\n                screen.x,\r\n                screen.y,\r\n                renderable.glyph.char,\r\n                '#283131',\r\n                '#283131'\r\n            );\r\n        };\r\n\r\n        const renderables = Array.from(this.#query.get());\r\n\r\n        for (let i = 0; i < renderables.length; i++) {\r\n            const renderable = renderables[i];\r\n            const pos = renderable.position.getPos();\r\n\r\n            if (!this.game.camera.isInView(pos.x, pos.y)) {\r\n                continue;\r\n            }\r\n\r\n            const screen = this.game.camera.worldToScreen(pos.x, pos.y);\r\n\r\n            this.game.renderer.draw(\r\n                screen.x,\r\n                screen.y,\r\n                renderable.glyph.char,\r\n                renderable.glyph.primary,\r\n                renderable.glyph.secondary,\r\n                renderable.glyph.background\r\n            );\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        this.render();\r\n    }\r\n}\r\n","import { IsDestroying, MoveCommand, Position } from '../ecs/components';\nimport * as Directions from '../enums/Directions';\nimport System from './System';\n\nexport default class MovementSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [MoveCommand, Position],\n            not: [IsDestroying],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            const delta = Directions.delta(entity.moveCommand.direction);\n\n            entity.fireEvent('try-move', delta);\n\n            entity.moveCommand.destroy();\n        });\n    }\n}\n","import { Moniker, Actor } from '../ecs/components';\nimport System from './System';\n\nexport default class UISystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = this.game.ecs.createQuery({\n            all: [Moniker, Actor],\n        });\n    }\n\n    update(dt) {\n        const turn = this.game.clock.turn;\n        const subTurn = `${this.game.clock.subTurn}`.padEnd(3, '0');\n\n        const str = `${turn}.${subTurn}`;\n        const len = Math.ceil(this.game.renderer.computeTextWidth(str));\n\n        this.game.renderer.drawText(this.game.camera.width - 1 - len, 1, str);\n\n        const hp = this.game.player.entity.health;\n\n        this.game.renderer.drawText(1, 1, `${hp.value}/${hp.max}`, '#ce5454');\n    }\n}\n","import Manager from '../Manager';\n\nexport default class MouseManager extends Manager {\n    #x = 0;\n    #y = 0;\n    #hasMouse = false;\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get hasMouse() {\n        return this.#hasMouse;\n    }\n\n    updatePosition(x, y) {\n        this.#x = Math.max(0, x);\n        this.#y = Math.max(0, y);\n    }\n\n    updateMouseEnter() {\n        this.#hasMouse = true;\n    }\n\n    updateMouseLeave() {\n        this.#hasMouse = false;\n    }\n}\n","import { INPUT_DOMAIN_DEFAULT } from './InputDomainType';\nimport commands from './commands';\nimport Manager from '../Manager';\n\nexport default class CommandManager extends Manager {\n    #commands = {};\n    #domainStack = [INPUT_DOMAIN_DEFAULT];\n    #isEnabled = true;\n\n    constructor(game) {\n        super(game);\n        commands.forEach((cmd) => this.registerCommand(cmd));\n    }\n\n    disable() {\n        this.#isEnabled = false;\n    }\n\n    enable() {\n        this.#isEnabled = true;\n    }\n\n    onInputEvent(evt) {\n        const cmd = this.getCommandForInputEvent(evt);\n\n        if (cmd) {\n            this.game.screens.onInputCommand(cmd);\n        }\n    }\n\n    pushDomain(domain) {\n        this.#domainStack.push(domain);\n    }\n\n    popDomain(domain) {\n        const index = this.#domainStack.lastIndexOf(domain);\n\n        if (index > -1) {\n            this.#domainStack.splice(index, 1);\n        }\n    }\n\n    getDomainCommands(domain) {\n        return this.#commands[domain] || [];\n    }\n\n    getCommandForInputEvent(evt) {\n        for (let i = this.#domainStack.length - 1; i >= 0; i--) {\n            const domain = this.#domainStack[i];\n            const cmds = this.getDomainCommands(domain);\n            const cmd = cmds.find((cmd) => cmd.matches(evt));\n\n            if (cmd) {\n                return cmd;\n            }\n        }\n    }\n\n    registerCommand(command) {\n        if (!this.#commands[command.domain]) {\n            this.#commands[command.domain] = [];\n        }\n\n        this.#commands[command.domain].push(command);\n    }\n}\n","export const INPUT_DOMAIN_DEFAULT = 0;\nexport const INPUT_DOMAIN_MAIN_MENU = 1;\nexport const INPUT_DOMAIN_ADVENTURE = 2;\nexport const INPUT_DOMAIN_LOOK = 3;\nexport const INPUT_DOMAIN_LIST = 4;\n","import {\n    INPUT_DOMAIN_MAIN_MENU,\n    INPUT_DOMAIN_DEFAULT,\n    INPUT_DOMAIN_ADVENTURE,\n} from './InputDomainType';\nimport InputCommand from './InputCommand';\nimport {\n    INPUT_CMD_WAIT,\n    INPUT_CMD_MOVE_NW,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_NE,\n    INPUT_CMD_MOVE_W,\n    INPUT_CMD_MOVE_E,\n    INPUT_CMD_MOVE_SW,\n    INPUT_CMD_MOVE_S,\n    INPUT_CMD_MOVE_SE,\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_SAVE,\n    INPUT_CMD_LOAD,\n    INPUT_CMD_LOOK,\n    INPUT_CMD_INTERACT,\n    INPUT_CMD_PICK_UP,\n    INPUT_CMD_INVENTORY,\n    INPUT_CMD_SELECT_NW,\n    INPUT_CMD_SELECT_N,\n    INPUT_CMD_SELECT_NE,\n    INPUT_CMD_SELECT_W,\n    INPUT_CMD_SELECT_E,\n    INPUT_CMD_SELECT_SW,\n    INPUT_CMD_SELECT_S,\n    INPUT_CMD_SELECT_SE,\n    INPUT_CMD_NEW_GAME,\n} from './InputCommandType';\nimport {\n    KEY_S,\n    KEY_Q,\n    KEY_W,\n    KEY_E,\n    KEY_A,\n    KEY_D,\n    KEY_Z,\n    KEY_X,\n    KEY_C,\n    KEY_ENTER,\n    KEY_ESCAPE,\n    KEY_UP,\n    KEY_LEFT,\n    KEY_RIGHT,\n    KEY_DOWN,\n    KEY_SPACE,\n    KEY_L,\n    KEY_I,\n    KEY_G,\n    KEY_J,\n    KEY_N,\n} from './KeyCodes';\n\nconst cmd = (domain, type, name, isKeyboard, key, shift, ctrl, alt, meta) =>\n    new InputCommand({\n        domain,\n        type,\n        name,\n        isKeyboard,\n        key,\n        shift,\n        ctrl,\n        alt,\n        meta,\n    });\n\n// prettier-ignore\nexport default [\n    // DOMAIN                   CMD                             NAME                      KB    KEY           SHIFT  CTRL   ALT    META\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CONFIRM,              'confirm',                true, KEY_ENTER,    false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CONFIRM,              'confirm2',               true, KEY_SPACE,    false, true,  false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CANCEL,               'cancel',                 true, KEY_ESCAPE,   false, false, false, false),\n    cmd(INPUT_DOMAIN_MAIN_MENU, INPUT_CMD_SAVE,                 'save',                   true, KEY_S,        false, true,  false, false),\n    cmd(INPUT_DOMAIN_MAIN_MENU, INPUT_CMD_LOAD,                 'load',                   true, KEY_L,        false, true,  false, false),\n    cmd(INPUT_DOMAIN_MAIN_MENU, INPUT_CMD_NEW_GAME,             'new game',               true, KEY_N,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_WAIT,                 'wait',                   true, KEY_S,        false, false, false, false),\n\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_NW,              'move nw',                true, KEY_Q,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_N,               'move n',                 true, KEY_W,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_N,               'move n2',                true, KEY_UP,       false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_NE,              'move ne',                true, KEY_E,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_W,               'move w',                 true, KEY_A,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_W,               'move w2',                true, KEY_LEFT,     false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_E,               'move e',                 true, KEY_D,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_E,               'move e2',                true, KEY_RIGHT,    false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_SW,              'move sw',                true, KEY_Z,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_S,               'move s',                 true, KEY_X,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_S,               'move s2',                true, KEY_DOWN,     false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_SE,              'move se',                true, KEY_C,        false, false, false, false),\n\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_NW,            'select nw',              true, KEY_Q,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_N,             'select n',               true, KEY_W,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_N,             'select n2',              true, KEY_UP,       true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_NE,            'select ne',              true, KEY_E,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_W,             'select w',               true, KEY_A,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_W,             'select w2',              true, KEY_LEFT,     true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_E,             'select e',               true, KEY_D,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_E,             'select e2',              true, KEY_RIGHT,    true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_SW,            'select sw',              true, KEY_Z,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_S,             'select s',               true, KEY_X,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_S,             'select s2',              true, KEY_DOWN,     true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_SE,            'select se',              true, KEY_C,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_INTERACT,             'select',                 true, KEY_S,        true,  false, false, false),\n\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_LOOK,                 'look',                   true, KEY_L,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_PICK_UP,              'pick up',                true, KEY_G,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_INTERACT,             'interact',               true, KEY_J,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_INVENTORY,            'inventory',              true, KEY_I,        false, false, false, false),\n];\n","import InputKeyboardEvent from './events/InputEvent';\n\nexport default class InputCommand {\n    constructor(data) {\n        this.domain = data.domain;\n        this.type = data.type;\n        this.name = data.name;\n        this.isKeyboard = data.isKeyboard;\n        this.key = data.key;\n        this.shift = data.shift;\n        this.ctrl = data.ctrl;\n        this.alt = data.alt;\n        this.meta = data.meta;\n    }\n\n    matches(inputEvent) {\n        const isKeyboard = inputEvent instanceof InputKeyboardEvent;\n\n        return (\n            this.isKeyboard == isKeyboard &&\n            this.key == inputEvent.key &&\n            this.shift == inputEvent.shift &&\n            this.ctrl == inputEvent.ctrl &&\n            this.alt == inputEvent.alt &&\n            this.meta == inputEvent.meta\n        );\n    }\n}\n","export const INPUT_CMD_MOVE_NW = 0;\nexport const INPUT_CMD_MOVE_N = 1;\nexport const INPUT_CMD_MOVE_NE = 2;\nexport const INPUT_CMD_MOVE_W = 3;\nexport const INPUT_CMD_MOVE_E = 4;\nexport const INPUT_CMD_MOVE_SW = 5;\nexport const INPUT_CMD_MOVE_S = 6;\nexport const INPUT_CMD_MOVE_SE = 7;\n\nexport const INPUT_CMD_WAIT = 8;\nexport const INPUT_CMD_CONFIRM = 9;\nexport const INPUT_CMD_CANCEL = 10;\nexport const INPUT_CMD_SAVE = 11;\nexport const INPUT_CMD_LOAD = 12;\nexport const INPUT_CMD_LOOK = 13;\n\nexport const INPUT_CMD_PICK_UP = 16;\nexport const INPUT_CMD_INTERACT = 17;\nexport const INPUT_CMD_INVENTORY = 19;\n\nexport const INPUT_CMD_SELECT_NW = 20;\nexport const INPUT_CMD_SELECT_N = 21;\nexport const INPUT_CMD_SELECT_NE = 22;\nexport const INPUT_CMD_SELECT_W = 23;\nexport const INPUT_CMD_SELECT_E = 24;\nexport const INPUT_CMD_SELECT_SW = 25;\nexport const INPUT_CMD_SELECT_S = 26;\nexport const INPUT_CMD_SELECT_SE = 27;\nexport const INPUT_CMD_NEW_GAME = 28;\n","export const KEY_CANCEL = 3;\nexport const KEY_HELP = 6;\nexport const KEY_BACK_SPACE = 8;\nexport const KEY_TAB = 9;\nexport const KEY_CLEAR = 12;\nexport const KEY_ENTER = 13;\nexport const KEY_ENTER_SPECIAL = 14;\nexport const KEY_SHIFT = 16;\nexport const KEY_CONTROL = 17;\nexport const KEY_ALT = 18;\nexport const KEY_PAUSE = 19;\nexport const KEY_CAPS_LOCK = 20;\nexport const KEY_KANA = 21;\nexport const KEY_EISU = 22;\nexport const KEY_JUNJA = 23;\nexport const KEY_FINAL = 24;\nexport const KEY_HANJA = 25;\nexport const KEY_ESCAPE = 27;\nexport const KEY_CONVERT = 28;\nexport const KEY_NONCONVERT = 29;\nexport const KEY_ACCEPT = 30;\nexport const KEY_MODECHANGE = 31;\nexport const KEY_SPACE = 32;\nexport const KEY_PAGE_UP = 33;\nexport const KEY_PAGE_DOWN = 34;\nexport const KEY_END = 35;\nexport const KEY_HOME = 36;\nexport const KEY_LEFT = 37;\nexport const KEY_UP = 38;\nexport const KEY_RIGHT = 39;\nexport const KEY_DOWN = 40;\nexport const KEY_SELECT = 41;\nexport const KEY_PRINT = 42;\nexport const KEY_EXECUTE = 43;\nexport const KEY_PRINTSCREEN = 44;\nexport const KEY_INSERT = 45;\nexport const KEY_DELETE = 46;\nexport const KEY_NUM_0 = 48;\nexport const KEY_NUM_1 = 49;\nexport const KEY_NUM_2 = 50;\nexport const KEY_NUM_3 = 51;\nexport const KEY_NUM_4 = 52;\nexport const KEY_NUM_5 = 53;\nexport const KEY_NUM_6 = 54;\nexport const KEY_NUM_7 = 55;\nexport const KEY_NUM_8 = 56;\nexport const KEY_NUM_9 = 57;\nexport const KEY_COLON = 58;\nexport const KEY_SEMICOLON = 59;\nexport const KEY_LESS_THAN = 60;\nexport const KEY_EQUALS = 61;\nexport const KEY_GREATER_THAN = 62;\nexport const KEY_QUESTION_MARK = 63;\nexport const KEY_AT = 64;\nexport const KEY_A = 65;\nexport const KEY_B = 66;\nexport const KEY_C = 67;\nexport const KEY_D = 68;\nexport const KEY_E = 69;\nexport const KEY_F = 70;\nexport const KEY_G = 71;\nexport const KEY_H = 72;\nexport const KEY_I = 73;\nexport const KEY_J = 74;\nexport const KEY_K = 75;\nexport const KEY_L = 76;\nexport const KEY_M = 77;\nexport const KEY_N = 78;\nexport const KEY_O = 79;\nexport const KEY_P = 80;\nexport const KEY_Q = 81;\nexport const KEY_R = 82;\nexport const KEY_S = 83;\nexport const KEY_T = 84;\nexport const KEY_U = 85;\nexport const KEY_V = 86;\nexport const KEY_W = 87;\nexport const KEY_X = 88;\nexport const KEY_Y = 89;\nexport const KEY_Z = 90;\nexport const KEY_META = 91; // windows key (windows) or command key (mac)\nexport const KEY_CONTEXT_MENU = 93;\nexport const KEY_SLEEP = 95;\nexport const KEY_NUMPAD_0 = 96;\nexport const KEY_NUMPAD_1 = 97;\nexport const KEY_NUMPAD_2 = 98;\nexport const KEY_NUMPAD_3 = 99;\nexport const KEY_NUMPAD_4 = 100;\nexport const KEY_NUMPAD_5 = 101;\nexport const KEY_NUMPAD_6 = 102;\nexport const KEY_NUMPAD_7 = 103;\nexport const KEY_NUMPAD_8 = 104;\nexport const KEY_NUMPAD_9 = 105;\nexport const KEY_MULTIPLY = 106;\nexport const KEY_ADD = 107;\nexport const KEY_SEPARATOR = 108;\nexport const KEY_SUBTRACT = 109;\nexport const KEY_DECIMAL = 110;\nexport const KEY_DIVIDE = 111;\nexport const KEY_F1 = 112;\nexport const KEY_F2 = 113;\nexport const KEY_F3 = 114;\nexport const KEY_F4 = 115;\nexport const KEY_F5 = 116;\nexport const KEY_F6 = 117;\nexport const KEY_F7 = 118;\nexport const KEY_F8 = 119;\nexport const KEY_F9 = 120;\nexport const KEY_F10 = 121;\nexport const KEY_F11 = 122;\nexport const KEY_F12 = 123;\nexport const KEY_F13 = 124;\nexport const KEY_F14 = 125;\nexport const KEY_F15 = 126;\nexport const KEY_F16 = 127;\nexport const KEY_F17 = 128;\nexport const KEY_F18 = 129;\nexport const KEY_F19 = 130;\nexport const KEY_F20 = 131;\nexport const KEY_F21 = 132;\nexport const KEY_F22 = 133;\nexport const KEY_F23 = 134;\nexport const KEY_F24 = 135;\nexport const KEY_NUM_LOCK = 144;\nexport const KEY_SCROLL_LOCK = 145;\nexport const KEY_WIN_OEM_FJ_JISHO = 146;\nexport const KEY_WIN_OEM_FJ_MASSHOU = 147;\nexport const KEY_WIN_OEM_FJ_TOUROKU = 148;\nexport const KEY_WIN_OEM_FJ_LOYA = 149;\nexport const KEY_WIN_OEM_FJ_ROYA = 150;\nexport const KEY_CIRCUMFLEX = 160;\nexport const KEY_EXCLAMATION = 161;\nexport const KEY_DOUBLE_QUOTE = 162;\nexport const KEY_HASH = 163;\nexport const KEY_DOLLAR = 164;\nexport const KEY_PERCENT = 165;\nexport const KEY_AMPERSAND = 166;\nexport const KEY_UNDERSCORE = 167;\nexport const KEY_OPEN_PAREN = 168;\nexport const KEY_CLOSE_PAREN = 169;\nexport const KEY_ASTERISK = 170;\nexport const KEY_PLUS = 171;\nexport const KEY_PIPE = 172;\nexport const KEY_HYPHEN_MINUS = 173;\nexport const KEY_OPEN_CURLY_BRACKET = 174;\nexport const KEY_CLOSE_CURLY_BRACKET = 175;\nexport const KEY_TILDE = 176;\nexport const KEY_VOLUME_MUTE = 181;\nexport const KEY_VOLUME_DOWN = 182;\nexport const KEY_VOLUME_UP = 183;\nexport const KEY_SEMICOLON_2 = 186;\nexport const KEY_EQUALS_2 = 187;\nexport const KEY_COMMA = 188;\nexport const KEY_MINUS = 189;\nexport const KEY_PERIOD = 190;\nexport const KEY_SLASH = 191;\nexport const KEY_BACK_QUOTE = 192;\nexport const KEY_OPEN_BRACKET = 219;\nexport const KEY_BACK_SLASH = 220;\nexport const KEY_CLOSE_BRACKET = 221;\nexport const KEY_QUOTE = 222;\nexport const KEY_META_2 = 224;\nexport const KEY_ALTGR = 225;\nexport const KEY_WIN_ICO_HELP = 227;\nexport const KEY_WIN_ICO_00 = 228;\nexport const KEY_WIN_ICO_CLEAR = 230;\nexport const KEY_WIN_OEM_RESET = 233;\nexport const KEY_WIN_OEM_JUMP = 234;\nexport const KEY_WIN_OEM_PA1 = 235;\nexport const KEY_WIN_OEM_PA2 = 236;\nexport const KEY_WIN_OEM_PA3 = 237;\nexport const KEY_WIN_OEM_WSCTRL = 238;\nexport const KEY_WIN_OEM_CUSEL = 239;\nexport const KEY_WIN_OEM_ATTN = 240;\nexport const KEY_WIN_OEM_FINISH = 241;\nexport const KEY_WIN_OEM_COPY = 242;\nexport const KEY_WIN_OEM_AUTO = 243;\nexport const KEY_WIN_OEM_ENLW = 244;\nexport const KEY_WIN_OEM_BACKTAB = 245;\nexport const KEY_ATTN = 246;\nexport const KEY_CRSEL = 247;\nexport const KEY_EXSEL = 248;\nexport const KEY_EREOF = 249;\nexport const KEY_PLAY = 250;\nexport const KEY_ZOOM = 251;\nexport const KEY_PA1 = 253;\nexport const KEY_WIN_OEM_CLEAR = 254;\n","import {\n    SCREEN_MAIN_MENU,\n    SCREEN_ADVENTURE,\n    SCREEN_DEATH,\n    SCREEN_INVENTORY,\n    SCREEN_INTERACT_MODAL,\n    SCREEN_CURSOR,\n    SCREEN_LOAD_SECTOR,\n} from './ScreenType';\nimport AdventureScreen from './screens/AdventureScreen';\nimport MainMenuScreen from './screens/MainMenuScreen';\nimport DeathScreen from './screens/DeathScreen';\nimport Manager from '../Manager';\nimport InventoryScreen from './screens/InventoryScreen';\nimport InteractModalScreen from './screens/InteractModalScreen';\nimport CursorScreen from './screens/CursorScreen';\nimport LoadSectorScreen from './screens/LoadSectorScreen';\n\nexport default class ScreenManager extends Manager {\n    #screens = {};\n    #screenStack = [];\n\n    constructor(game) {\n        super(game);\n        this.#screens = {\n            [SCREEN_MAIN_MENU]: new MainMenuScreen(game),\n            [SCREEN_ADVENTURE]: new AdventureScreen(game),\n            [SCREEN_DEATH]: new DeathScreen(game),\n            [SCREEN_INVENTORY]: new InventoryScreen(game),\n            [SCREEN_INTERACT_MODAL]: new InteractModalScreen(game),\n            [SCREEN_CURSOR]: new CursorScreen(game),\n            [SCREEN_LOAD_SECTOR]: new LoadSectorScreen(game),\n        };\n        this.setScreen(SCREEN_MAIN_MENU);\n    }\n\n    get screenType() {\n        return this.#screenStack[this.#screenStack.length - 1].type;\n    }\n\n    get screenCtx() {\n        return this.#screenStack[this.#screenStack.length - 1].ctx;\n    }\n\n    get screen() {\n        return this.#screens[this.screenType];\n    }\n\n    setScreen(screenType, ctx = {}) {\n        while (this.#screenStack.length > 0) {\n            this.screen.onLeave(ctx);\n            this.#screenStack.pop();\n        }\n\n        this.#screenStack.push({\n            type: screenType,\n            ctx,\n        });\n        this.screen.onEnter(this.screenCtx);\n    }\n\n    pushScreen(screenType, ctx = {}) {\n        this.screen.onLeave(ctx);\n        this.#screenStack.push({\n            type: screenType,\n            ctx,\n        });\n        this.screen.onEnter(this.screenCtx);\n    }\n\n    popScreen(ctx = {}) {\n        this.screen.onLeave(ctx);\n        this.#screenStack.pop();\n        this.screen.onEnter(this.screenCtx);\n    }\n\n    onInputCommand(cmd) {\n        this.screen.onInputCommand(cmd);\n    }\n\n    update(dt) {\n        this.screen.onUpdate(dt);\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_NE,\n    INPUT_CMD_MOVE_W,\n    INPUT_CMD_WAIT,\n    INPUT_CMD_MOVE_E,\n    INPUT_CMD_MOVE_SW,\n    INPUT_CMD_MOVE_S,\n    INPUT_CMD_MOVE_SE,\n    INPUT_CMD_MOVE_NW,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_SAVE,\n    INPUT_CMD_LOAD,\n    INPUT_CMD_LOOK,\n    INPUT_CMD_INTERACT,\n    INPUT_CMD_PICK_UP,\n    INPUT_CMD_INVENTORY,\n    INPUT_CMD_SELECT_NW,\n    INPUT_CMD_SELECT_N,\n    INPUT_CMD_SELECT_NE,\n    INPUT_CMD_SELECT_W,\n    INPUT_CMD_SELECT_E,\n    INPUT_CMD_SELECT_SW,\n    INPUT_CMD_SELECT_S,\n    INPUT_CMD_SELECT_SE,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_ADVENTURE } from '../../input/InputDomainType';\nimport {\n    DIR_N,\n    DIR_W,\n    DIR_E,\n    DIR_S,\n    DIR_NW,\n    DIR_SW,\n    DIR_SE,\n    DIR_NE,\n    delta as directionDelta,\n} from '../../../enums/Directions';\nimport {\n    SCREEN_CURSOR,\n    SCREEN_INTERACT_MODAL,\n    SCREEN_INVENTORY,\n    SCREEN_MAIN_MENU,\n} from '../ScreenType';\nimport { Door, Loot } from '../../../ecs/components';\n\nexport default class AdventureScreen extends Screen {\n    onEnter() {\n        this.game.renderer.clear();\n        this.game.commands.pushDomain(INPUT_DOMAIN_ADVENTURE);\n        this.game.FOVSystem.computeFOV();\n\n        const position = this.game.player.position;\n\n        this.game.camera.setFocus(position.x, position.y);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_ADVENTURE);\n    }\n\n    onDirectionInput(dir) {\n        const delta = directionDelta(dir);\n        const playerPosition = this.game.player.position;\n        const targetPosition = {\n            x: playerPosition.x + delta.x,\n            y: playerPosition.y + delta.y,\n        };\n        const entities = this.game.map.getEntitiesAt(\n            targetPosition.x,\n            targetPosition.y\n        );\n\n        const hostileEntities = entities.filter((e) =>\n            this.game.factions.areEntitiesHostile(e, this.game.player.entity)\n        );\n\n        if (hostileEntities.length > 0) {\n            this.game.player.melee(hostileEntities[0]);\n        } else {\n            const doorEntity = entities.find((e) => e.has(Door));\n\n            if (doorEntity && !doorEntity.door.isOpen) {\n                doorEntity.fireEvent('try-open-door', {\n                    interactor: this.game.player.entity,\n                });\n            } else {\n                this.game.player.move(dir);\n            }\n        }\n    }\n\n    onPickUpCommand() {\n        const position = this.game.player.position;\n        const entities = this.game.map.getEntitiesAt(position.x, position.y);\n\n        const lootable = entities.find((entity) => entity.has(Loot));\n\n        if (lootable) {\n            lootable.fireEvent('try-pick-up', {\n                interactor: this.game.player.entity,\n            });\n        } else {\n            console.log('there is nothing here to pick up.');\n        }\n    }\n\n    onInteract(x, y) {\n        const entities = this.game.map\n            .getEntitiesAt(x, y)\n            .filter((e) => !e.isPlayer);\n\n        const item = entities.find((entity) => {\n            const evt = entity.fireEvent('get-interactions', {\n                interactor: this.game.player.entity,\n                interactions: [],\n            });\n            return evt.data.interactions.length > 0;\n        });\n\n        if (item) {\n            this.game.screens.pushScreen(SCREEN_INTERACT_MODAL, {\n                interactor: this.game.player.entity,\n                interactable: item,\n            });\n        }\n    }\n\n    onInteractDirection(dir) {\n        const delta = directionDelta(dir);\n        const playerPosition = this.game.player.position;\n        const targetPosition = {\n            x: playerPosition.x + delta.x,\n            y: playerPosition.y + delta.y,\n        };\n\n        this.onInteract(targetPosition.x, targetPosition.y);\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_SAVE) {\n            this.game.state.saveGame();\n        }\n        if (cmd.type === INPUT_CMD_LOAD) {\n            this.game.state.loadGame();\n        }\n        if (cmd.type === INPUT_CMD_LOOK) {\n            game.screens.pushScreen(SCREEN_CURSOR, {\n                drawTags: true,\n                onResult: () => game.screens.popScreen(),\n                onCancel: () => game.screens.popScreen(),\n            });\n        }\n        if (cmd.type === INPUT_CMD_PICK_UP) {\n            this.onPickUpCommand();\n        }\n        if (cmd.type === INPUT_CMD_INTERACT) {\n            const pos = this.game.player.position;\n\n            this.onInteract(pos.x, pos.y);\n        }\n        if (cmd.type === INPUT_CMD_INVENTORY) {\n            this.game.screens.pushScreen(SCREEN_INVENTORY, {\n                accessible: this.game.player.entity,\n                accessor: this.game.player.entity,\n            });\n        }\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.game.screens.setScreen(SCREEN_MAIN_MENU);\n        }\n        if (cmd.type === INPUT_CMD_WAIT) {\n            this.game.player.wait();\n        }\n        if (cmd.type === INPUT_CMD_MOVE_NW) {\n            this.onDirectionInput(DIR_NW);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.onDirectionInput(DIR_N);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_NE) {\n            this.onDirectionInput(DIR_NE);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_W) {\n            this.onDirectionInput(DIR_W);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_E) {\n            this.onDirectionInput(DIR_E);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_SW) {\n            this.onDirectionInput(DIR_SW);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.onDirectionInput(DIR_S);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_SE) {\n            this.onDirectionInput(DIR_SE);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_NW) {\n            this.onInteractDirection(DIR_NW);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_N) {\n            this.onInteractDirection(DIR_N);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_NE) {\n            this.onInteractDirection(DIR_NE);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_W) {\n            this.onInteractDirection(DIR_W);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_E) {\n            this.onInteractDirection(DIR_E);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_SW) {\n            this.onInteractDirection(DIR_SW);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_S) {\n            this.onInteractDirection(DIR_S);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_SE) {\n            this.onInteractDirection(DIR_SE);\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.updateAdventureSystems(dt);\n    }\n}\n","export default class Screen {\n    #game;\n\n    get game() {\n        return this.#game;\n    }\n\n    constructor(game) {\n        this.#game = game;\n    }\n\n    onEnter() {}\n\n    onLeave() {}\n\n    onInputCommand(cmd) {}\n\n    onUpdate(dt) {}\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_SAVE,\n    INPUT_CMD_LOAD,\n    INPUT_CMD_NEW_GAME,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport { SCREEN_ADVENTURE } from '../ScreenType';\n\nexport default class MainMenuScreen extends Screen {\n    onEnter() {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    onConfirm() {\n        if (this.game.state.isStarted) {\n            this.game.screens.setScreen(SCREEN_ADVENTURE);\n        } else {\n            this.game.state.newGame();\n        }\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.onConfirm();\n        }\n\n        if (cmd.type === INPUT_CMD_SAVE) {\n            this.game.state.saveGame();\n        }\n\n        if (cmd.type === INPUT_CMD_LOAD) {\n            this.game.state.loadGame();\n        }\n\n        if (cmd.type === INPUT_CMD_NEW_GAME) {\n            this.game.state.newGame();\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.renderer.clear();\n        this.game.renderer.drawText(1, 1, `Knossonia`, 'cyan');\n\n        this.game.renderer.drawText(1, 4, `move       [q, w, e, a, d, z, x, c]`);\n        this.game.renderer.drawText(1, 5, `look       [l]`);\n        this.game.renderer.drawText(1, 6, `interact   [shift+direction]`);\n        this.game.renderer.drawText(1, 7, `interact   [j]`);\n        this.game.renderer.drawText(1, 8, `pick up    [g]`);\n        this.game.renderer.drawText(1, 9, `save       [ctrl+s]`);\n        this.game.renderer.drawText(1, 10, `load       [ctrl+l]`);\n        this.game.renderer.drawText(1, 11, `confirm    [enter]`);\n        this.game.renderer.drawText(1, 12, `cancel     [esc]`);\n\n        this.game.renderer.drawTextCenter(14, `set out into the forest...`);\n        this.game.renderer.drawTextCenter(16, `press [enter]`);\n    }\n}\n","import Screen from './Screen';\nimport { INPUT_CMD_CONFIRM } from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport { SCREEN_MAIN_MENU } from '../ScreenType';\n\nexport default class DeathScreen extends Screen {\n    onEnter() {\n        this.game.state.gameOver();\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.game.screens.setScreen(SCREEN_MAIN_MENU);\n        }\n    }\n\n    onUpdate(dt) {\n        const text = 'you have succumbed to the forest';\n\n        this.game.renderer.drawTextCenter(10, text, '#ce5454');\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_S,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport { SCREEN_INTERACT_MODAL } from '../ScreenType';\n\nexport default class InventoryScreen extends Screen {\n    #selectedIdx = 0;\n    #accessible;\n    #accessor;\n\n    onEnter(ctx) {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n        this.#selectedIdx = 0;\n        this.#accessible = ctx.accessible;\n        this.#accessor = ctx.accessor;\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    pointerUp() {\n        Math.max(0, --this.#selectedIdx);\n    }\n\n    pointerDown() {\n        this.#selectedIdx++;\n    }\n\n    selectItem() {\n        const items = this.#accessible.inventory.content;\n        const idx = this.#selectedIdx % items.length;\n        const interactable = items[idx];\n\n        if (interactable) {\n            this.game.screens.pushScreen(SCREEN_INTERACT_MODAL, {\n                interactable,\n                interactor: this.#accessor,\n            });\n        }\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.game.screens.popScreen();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.pointerUp();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.pointerDown();\n        }\n\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.selectItem();\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.renderer.clear();\n        this.game.renderer.drawTextCenter(\n            3,\n            `~ ${this.#accessible.moniker.display} Inventory ~`,\n            'yellow'\n        );\n\n        const items = this.#accessible.inventory.content;\n        const idx = this.#selectedIdx % items.length;\n\n        if (items.length === 0) {\n            this.game.renderer.drawTextCenter(6, 'There is nothing here.');\n        }\n\n        items.forEach((item, i) => {\n            const isSelected = i === idx;\n            const ypos = i + 5;\n\n            if (isSelected) {\n                this.game.renderer.drawText(1, ypos, '>', 'yellow');\n            } else {\n                this.game.renderer.drawText(1, ypos, '-');\n            }\n\n            this.game.renderer.draw(\n                2,\n                ypos,\n                item.glyph.char,\n                item.glyph.primary,\n                item.glyph.secondary,\n                item.glyph.background\n            );\n\n            this.game.renderer.drawText(4, ypos, item.moniker.display);\n        });\n\n        this.game.renderer.drawText(1, 1, '← back [esc]');\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_S,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\n\nexport default class InteractModalScreen extends Screen {\n    #width = 16;\n    #height = 16;\n    #selectedIdx = 0;\n    #interactions = [];\n    #interactable;\n    #interactor;\n\n    get left() {\n        return (this.game.camera.width - this.#width) / 2;\n    }\n\n    get top() {\n        return (this.game.camera.height - this.#height) / 2;\n    }\n\n    onEnter(ctx) {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n        this.#selectedIdx = 0;\n        this.#interactable = ctx.interactable;\n        this.#interactor = ctx.interactor;\n\n        this.resetInteractions();\n    }\n\n    resetInteractions() {\n        const evt = this.#interactable.fireEvent('get-interactions', {\n            interactor: this.#interactor,\n            interactions: [],\n        });\n\n        this.#interactions = evt.data.interactions;\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    pointerUp() {\n        Math.max(0, --this.#selectedIdx);\n    }\n\n    pointerDown() {\n        this.#selectedIdx++;\n    }\n\n    selectItem() {\n        const idx = this.#selectedIdx % this.#interactions.length;\n        const interaction = this.#interactions[idx];\n\n        if (interaction) {\n            this.#interactable.fireEvent(interaction.evt, {\n                interactor: this.#interactor,\n            });\n\n            if (this.#interactable.isDestroyed) {\n                this.game.screens.popScreen();\n\n                return;\n            }\n\n            this.resetInteractions();\n        }\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.game.screens.popScreen();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.pointerUp();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.pointerDown();\n        }\n\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.selectItem();\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.renderSystem.update(dt);\n        this.game.renderer.clearArea(\n            this.left,\n            this.top,\n            this.#width,\n            this.#height\n        );\n\n        this.game.renderer.draw(\n            this.left + 2,\n            this.top + 2,\n            this.#interactable.glyph.char,\n            this.#interactable.glyph.primary,\n            this.#interactable.glyph.secondary,\n            this.#interactable.glyph.background\n        );\n\n        this.game.renderer.drawTextCenter(\n            this.top + 2,\n            `${this.#interactable.moniker.display}`\n        );\n\n        for (let i = this.left; i < this.left + this.#width; i++) {\n            this.game.renderer.draw(i, this.top, '─');\n            this.game.renderer.draw(i, this.top + this.#height, '─');\n        }\n\n        for (let i = this.top; i < this.top + this.#height; i++) {\n            this.game.renderer.draw(this.left, i, '│');\n            this.game.renderer.draw(this.left + this.#width, i, '│');\n        }\n\n        this.game.renderer.draw(this.left, this.top, '┌');\n        this.game.renderer.draw(this.left + this.#width, this.top, '┐');\n        this.game.renderer.draw(this.left, this.top + this.#height, '└');\n        this.game.renderer.draw(\n            this.left + this.#width,\n            this.top + this.#height,\n            '┘'\n        );\n\n        const idx = this.#selectedIdx % this.#interactions.length;\n\n        if (this.#interactions.length === 0) {\n            this.game.renderer.drawTextCenter(6, 'There is nothing here.');\n        }\n\n        const xpos = this.left + 2;\n\n        this.#interactions.forEach((interaction, i) => {\n            const isSelected = i === idx;\n            const ypos = i + this.top + 5;\n\n            if (isSelected) {\n                this.game.renderer.drawText(xpos, ypos, '>', 'yellow');\n            } else {\n                this.game.renderer.drawText(xpos, ypos, '-');\n            }\n\n            this.game.renderer.drawText(xpos + 1, ypos, interaction.name);\n        });\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_NE,\n    INPUT_CMD_MOVE_W,\n    INPUT_CMD_WAIT,\n    INPUT_CMD_MOVE_E,\n    INPUT_CMD_MOVE_SW,\n    INPUT_CMD_MOVE_S,\n    INPUT_CMD_MOVE_SE,\n    INPUT_CMD_MOVE_NW,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_CONFIRM,\n} from '../../input/InputCommandType';\nimport {\n    DIR_N,\n    DIR_W,\n    DIR_Z,\n    DIR_E,\n    DIR_S,\n    DIR_NW,\n    DIR_SW,\n    DIR_SE,\n    DIR_NE,\n} from '../../../enums/Directions';\nimport {\n    bresenhamLine\n} from '../../../utils/BresenhamLine';\nimport {\n    CURSOR_SEGMENT_INTEREST,\n    CURSOR_SEGMENT_NONE,\n    getCursorSegmentTypeColor,\n    getCursorSegmentTypeGlyph,\n} from '../../../enums/CursorSegments';\nimport { game } from '../../Game';\nimport { computeAStar } from '../../../utils/AStar';\nimport { Blocker } from '../../../ecs/components';\nimport { diagonalDistance } from '../../../utils/diagonalDistance';\n\nconst NOOP = () => {};\n\nexport default class CursorScreen extends Screen {\n    #start = {};\n    #onResult = NOOP;\n    #onCancel = NOOP;\n    #getSegmentTypes = NOOP;\n    #drawLine = false;\n    #drawTags = false;\n\n    onEnter(ctx) {\n        this.game.renderer.clear();\n        this.game.FOVSystem.computeFOV();\n        this.game.cursor.enable();\n        this.#start = ctx.start || this.game.player.position;\n        this.#onResult = ctx.onResult || NOOP;\n        this.#onCancel = ctx.onCancel || NOOP;\n        this.#getSegmentTypes = ctx.getSegmentTypes || NOOP;\n        this.#drawLine = Boolean(ctx.drawLine);\n        this.#drawTags = Boolean(ctx.drawTags);\n    }\n\n    onLeave() {\n        this.game.cursor.disable();\n    }\n\n    onDirectionInput(dir) {\n        this.game.cursor.move(dir);\n    }\n\n    onConfirm() {\n        this.#onResult({\n            start: this.#start,\n            position: {\n                x: this.game.cursor.x,\n                y: this.game.cursor.y,\n            },\n        });\n    }\n\n    onCancel() {\n        this.#onCancel();\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.onConfirm();\n        }\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.onCancel();\n        }\n        if (cmd.type === INPUT_CMD_MOVE_NW) {\n            this.onDirectionInput(DIR_NW);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.onDirectionInput(DIR_N);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_NE) {\n            this.onDirectionInput(DIR_NE);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_W) {\n            this.onDirectionInput(DIR_W);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_E) {\n            this.onDirectionInput(DIR_E);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_SW) {\n            this.onDirectionInput(DIR_SW);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.onDirectionInput(DIR_S);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_SE) {\n            this.onDirectionInput(DIR_SE);\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.updateAdventureSystems(dt);\n\n        const line = bresenhamLine(\n            this.#start.x,\n            this.#start.y,\n            this.game.cursor.x,\n            this.game.cursor.y\n        );\n\n        let cursorColor = getCursorSegmentTypeColor(CURSOR_SEGMENT_INTEREST);\n\n        if (this.#drawLine) {\n            const types = this.#getSegmentTypes(line);\n\n            line.forEach((segment, idx) => {\n                const type = types[idx];\n\n                if (type === CURSOR_SEGMENT_NONE || isNaN(type)) {\n                    return;\n                }\n\n                const color = getCursorSegmentTypeColor(type);\n                const glyph = getCursorSegmentTypeGlyph(type);\n\n                const screen = this.game.camera.worldToScreen(\n                    segment.x,\n                    segment.y\n                );\n                this.game.renderer.draw(screen.x, screen.y, glyph, color);\n\n                if (idx === line.length - 1) {\n                    cursorColor = color;\n                }\n            });\n        }\n\n        if (this.#drawTags) {\n            this.game.cursor.drawTags();\n        }\n\n        this.game.cursor.drawCursor(cursorColor);\n    }\n}\n","import { diagonalDistance } from './diagonalDistance';\nimport { manhattanDistance } from './ManhattanDistance';\nimport PriorityQueue from './PriorityQueue';\n\nconst getNeighbors = (x, y) => [\n    {\n        x: x,\n        y: y - 1,\n    },\n    {\n        x: x - 1,\n        y: y,\n    },\n    {\n        x: x + 1,\n        y: y,\n    },\n    {\n        x: x,\n        y: y + 1,\n    },\n    {\n        x: x - 1,\n        y: y - 1,\n    },\n    {\n        x: x + 1,\n        y: y - 1,\n    },\n    {\n        x: x - 1,\n        y: y + 1,\n    },\n    {\n        x: x + 1,\n        y: y + 1,\n    },\n];\n\nconst key = (pos) => `${pos.x},${pos.y}`;\n\nconst defaultSettings = {\n    start: {},\n    goal: {},\n    cost: () => {},\n    allowDiagonals: true\n};\n\nexport const computeAStar = (settings = defaultSettings) => {\n    const heuristic = settings.allowDiagonals ? diagonalDistance : manhattanDistance;\n    const start = settings.start;\n    const goal = settings.goal;\n    const cost = settings.cost;\n\n    const open = new PriorityQueue();\n    const cameFrom = {};\n    const costSoFar = {};\n    const startKey = key(start);\n    const goalKey = key(goal);\n\n    const result = {\n        success: false,\n        path: [],\n        costs: [],\n        cost: Infinity,\n        start,\n        goal\n    };\n\n    if (cost(start, goal) === Infinity) {\n        return result;\n    }\n\n    open.put({\n        key: startKey,\n        pos: start\n    }, 0);\n\n    costSoFar[startKey] = 0;\n\n    while (!open.isEmpty()) {\n        const {\n            key: currentKey,\n            pos: current\n        } = open.pop();\n\n        if (currentKey === goalKey) {\n            result.success = true;\n            break;\n        }\n\n        const neighbors = getNeighbors(current.x, current.y);\n\n        for (let next of neighbors) {\n            const nextKey = key(next);\n            const graphCost = nextKey === goalKey ? 0 : cost(current, next);\n\n            if (graphCost === Infinity) {\n                continue;\n            }\n\n            const newCost = costSoFar[currentKey] + graphCost;\n\n            if (!(nextKey in costSoFar) || newCost < costSoFar[nextKey]) {\n                costSoFar[nextKey] = newCost;\n\n                const priority = newCost + heuristic(next, goal);\n\n                open.put({\n                    key: nextKey,\n                    pos: next\n                }, priority);\n\n                cameFrom[nextKey] = current;\n            }\n        }\n    }\n\n    if (!result.success) {\n        return result;\n    }\n\n    result.path = [goal];\n    result.cost = costSoFar[goalKey];\n    result.costs = [costSoFar[goalKey]];\n\n    let previous = cameFrom[key(goal)];\n\n    while (previous) {\n        const previousKey = key(previous);\n\n        result.path.unshift(previous);\n        result.costs.unshift(costSoFar[previousKey]);\n\n        previous = cameFrom[previousKey];\n    }\n\n    return result;\n}\n","export const diagonalDistance = (a, b) => {\n    const dx = Math.abs(a.x - b.x);\n    const dy = Math.abs(a.y - b.y);\n\n    return 1 * (dx + dy) + (1.41 - 2 * 1) * Math.min(dx, dy)\n};\n","export const manhattanDistance = (a, b) => {\n    return Math.abs(a.x - b.x) + Math.abs(a.y - b.y);\n};\n","const createItem = (value, priority) => ({ value, priority });\n\nexport default class PriorityQueue {\n    #items = [];\n\n    isEmpty() {\n        return this.#items.length <= 0;\n    }\n\n    pop() {\n        if (!this.isEmpty()) {\n            return this.#items.shift().value;\n        }\n    }\n\n    peek() {\n        if (!this.isEmpty()) {\n            return this.#items[0].value;\n        }\n    }\n\n    put(value, priority) {\n        const item = createItem(value, priority);\n\n        for (let i = 0; i < this.#items.length; i++) {\n            if (this.#items[i].priority > item.priority) {\n                this.#items.splice(i, 0, item);\n                return;\n            }\n        }\n\n        this.#items.push(item);\n    }\n}\n","import { SCREEN_ADVENTURE } from '../ScreenType';\nimport Screen from './Screen';\n\nexport default class LoadSectorScreen extends Screen {\n    #prevousSector;\n    #nextSector;\n\n    onEnter(ctx) {\n        this.game.commands.disable();\n\n        this.#prevousSector = ctx.prevousSector;\n        this.#nextSector = ctx.nextSector;\n\n        this.renderLoadingText();\n\n        if (ctx.prevousSector) {\n            const data = this.game.state.saveGame();\n\n            data.world.sectorId = ctx.nextSector.id;\n            data.map.playerPosition = ctx.entry;\n\n            this.game.state.loadGameData(data);\n\n            return;\n        }\n\n        this.game.world.onSectorLoaded(ctx.nextSector, ctx.entry);\n        this.game.map.onSectorLoaded(ctx.nextSector, ctx.entry);\n\n        this.game.screens.setScreen(SCREEN_ADVENTURE);\n    }\n\n    onLeave() {\n        this.game.commands.enable();\n    }\n\n    renderLoadingText() {\n        this.game.renderer.clear();\n        if (this.#prevousSector) {\n            const prevText = `You are leaving sector ${this.#prevousSector.id}`;\n            this.game.renderer.drawTextCenter(11, prevText, '#ce5454');\n        } else {\n            const nextText = `You are entering sector ${this.#nextSector.id}`;\n            this.game.renderer.drawTextCenter(11, nextText, '#ce5454');\n        }\n    }\n\n    onUpdate(dt) {\n        this.renderLoadingText();\n    }\n}\n","import Manager from './Manager';\nimport { MeleeCommand, MoveCommand } from '../ecs/components';\n\nexport default class PlayerManager extends Manager {\n    #entityId = null;\n\n    get entity() {\n        return this.game.ecs.getEntity(this.#entityId);\n    }\n\n    get id() {\n        return this.#entityId;\n    }\n\n    get isTurn() {\n        return this.entity.actor.hasEnergy;\n    }\n\n    get position() {\n        return this.entity.position.getPos();\n    }\n\n    getSetupData() {\n        // TODO\n        // player.fireEvent('query-owned-entities', { ids });\n        // player.fireEvent('dereference-unowned-entities');\n        // serialize all \"owned\"\n        const entity = this.game.ecs.createPrefab('Player');\n        const entityId = entity.id;\n        const serialized = entity.serialize();\n\n        entity.destroy();\n\n        return {\n            entityId,\n            entity: serialized, // TODO inventory\n        };\n    }\n\n    setup(data) {\n        this.#entityId = data.entityId;\n        this.game.ecs.deserialize(data.entity);\n    }\n\n    getSaveGameData() {\n        const entityId = this.entity.id;\n\n        // gather all entities for player\n        const evt = this.entity.fireEvent('query-ownership', {\n            result: new Set([this.entity]),\n        });\n        const serialized = this.game.ecs.serialize(Array.from(evt.data.result));\n\n        console.log(serialized);\n\n        return {\n            entityId,\n            entity: serialized, // TODO inventory\n        };\n    }\n\n    teardown() {\n        if (this.entity) {\n            this.entity.destroy();\n        }\n        this.#entityId = null; // TODO does this need to destroy()?\n    }\n\n    move(direction) {\n        if (!this.isTurn) {\n            return;\n        }\n\n        if (this.entity.has(MoveCommand)) {\n            this.entity.remove(MoveCommand);\n        }\n\n        this.entity.add(MoveCommand, {\n            direction,\n        });\n    }\n\n    melee(target) {\n        if (!this.isTurn) {\n            return;\n        }\n\n        if (this.entity.has(MeleeCommand)) {\n            this.entity.remove(MeleeCommand);\n        }\n\n        this.entity.add(MeleeCommand, {\n            target,\n        });\n    }\n\n    wait(turns = 1) {\n        if (!this.isTurn) {\n            return;\n        }\n\n        this.entity.fireEvent('energy-consumed', turns * 1000);\n    }\n}\n","import { Engine } from 'geotic';\n\nimport * as components from './components';\nimport * as prefabs from './prefabs';\nimport Manager from '../core/Manager';\n\nexport default class ECS extends Manager {\n    #engine;\n\n    get engine() {\n        return this.#engine;\n    }\n\n    constructor(game) {\n        super(game);\n        this.#engine = new Engine();\n\n        Object.values(components).forEach((component) => {\n            this.#engine.registerComponent(component);\n        });\n\n        Object.values(prefabs).forEach((prefab) => {\n            this.#engine.registerPrefab(prefab);\n        });\n    }\n\n    teardown() {\n        this.destroyEntities();\n    }\n\n    destroyEntities() {\n        for (let entity of this.#engine.entities.all) {\n            entity.destroy();\n        }\n    }\n\n    cloneEntity(entity) {\n        const data = entity.serialize();\n\n        data.id = this.engine.generateId();\n\n        this.engine.deserialize(data);\n\n        return this.engine.getEntity(data.id);\n    }\n}\n","import Manager from './Manager';\n\nexport default class GameStateManager extends Manager {\n    #isStarted = false;\n    #filename = 'test';\n\n    get filename() {\n        return this.#filename;\n    }\n\n    get isStarted() {\n        return this.#isStarted;\n    }\n\n    gameOver() {\n        this.#isStarted = false;\n    }\n\n    initiateTeardown() {\n        console.log('STATE - teardown');\n        this.#isStarted = false;\n\n        this.game.player.teardown();\n        this.game.map.teardown();\n        this.game.engine.teardown();\n        this.game.world.teardown();\n    }\n\n    initiateSetup(data) {\n        console.log('STATE - setup');\n        this.#isStarted = true;\n\n        this.game.clock.setup(data.clock);\n        this.game.player.setup(data.player);\n        this.game.world.setup(data.world);\n        this.game.map.setup(data.map);\n    }\n\n    newGame() {\n        this.#filename = prompt('Enter save name', 'test');\n        this.deleteFile(this.filename);\n        this.initiateTeardown();\n\n        const data = {\n            filename: this.filename,\n            clock: this.game.clock.getSetupData(),\n            player: this.game.player.getSetupData(),\n            world: this.game.world.getSetupData(),\n            map: this.game.map.getSetupData(),\n        };\n\n        this.initiateSetup(data);\n    }\n\n    saveGame() {\n        if (!this.isStarted) {\n            console.warn(\"cannot save game since it's not started\");\n            return;\n        }\n\n        const data = {\n            filename: this.filename,\n            clock: this.game.clock.getSaveGameData(),\n            map: this.game.map.getSaveGameData(),\n            player: this.game.player.getSaveGameData(),\n            world: this.game.world.getSaveGameData(),\n        };\n\n        console.log('save data', data);\n\n        localStorage.setItem(this.filename, JSON.stringify(data));\n\n        return data;\n    }\n\n    deleteFile(filename) {\n        const files = Object.keys(localStorage);\n\n        files.forEach((file) => {\n            if (file.startsWith(`${filename}-`)) {\n                localStorage.removeItem(file);\n            }\n        });\n    }\n\n    saveSectorPositionData(sectorId, positionData) {\n        localStorage.setItem(\n            `${this.filename}-${sectorId}-positions`,\n            JSON.stringify(positionData)\n        );\n    }\n\n    saveSectorEntityData(sectorId, entityData) {\n        localStorage.setItem(\n            `${this.filename}-${sectorId}-entities`,\n            JSON.stringify(entityData)\n        );\n    }\n\n    loadSectorEntityData(sectorId) {\n        const json = localStorage.getItem(\n            `${this.filename}-${sectorId}-entities`\n        );\n\n        return json && JSON.parse(json);\n    }\n\n    loadSectorPositionData(sectorId) {\n        const json = localStorage.getItem(\n            `${this.filename}-${sectorId}-positions`\n        );\n\n        return json && JSON.parse(json);\n    }\n\n    loadSavefileData(filename) {\n        const json = localStorage.getItem(filename);\n\n        return json && JSON.parse(json);\n    }\n\n    loadGame() {\n        const filename = prompt('Enter save filename to load', 'test');\n\n        const data = this.loadSavefileData(filename);\n\n        if (!data) {\n            console.warn(`save file ${filename} not found`);\n        }\n\n        this.#filename = filename;\n\n        console.log('Loading game', data);\n\n        this.initiateTeardown();\n        this.initiateSetup(data);\n    }\n\n    loadGameData(data) {\n        this.initiateTeardown();\n        this.initiateSetup(data);\n    }\n}\n","import Manager from './Manager';\n\nexport default class ClockManager extends Manager {\n    #tick = 0;\n    #tickDelta = 0;\n\n    get tick() {\n        return this.#tick;\n    }\n\n    get tickDelta() {\n        return this.#tickDelta;\n    }\n\n    get turn() {\n        return Math.floor(this.#tick / 1000);\n    }\n\n    get subTurn() {\n        return this.#tick - this.turn * 1000;\n    }\n\n    getSetupData() {\n        return {\n            tick: 0,\n            tickDelta: 0,\n        };\n    }\n\n    getSaveGameData() {\n        return {\n            tick: this.tick,\n            tickDelta: this.tickDelta,\n        };\n    }\n\n    setup(data) {\n        this.#tick = data.tick;\n        this.#tickDelta = data.tickDelta;\n    }\n\n    incrementTick(delta) {\n        this.#tickDelta = delta;\n        this.#tick += delta;\n    }\n\n    update(dt) {\n        this.#tickDelta = 0;\n    }\n}\n","import { Moniker, IsVisible } from '../ecs/components';\nimport * as Directions from '../enums/Directions';\nimport System from './System';\n\nexport default class CursorSystem extends System {\n    #isEnabled = false;\n    #x = 1;\n    #y = 1;\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get isEnabled() {\n        return this.#isEnabled;\n    }\n\n    enable() {\n        const player = this.game.player.position;\n\n        this.#x = player.x;\n        this.#y = player.y;\n\n        this.#isEnabled = true;\n    }\n\n    disable() {\n        this.#isEnabled = false;\n    }\n\n    toggle() {\n        if (this.isEnabled) {\n            this.disable();\n        } else {\n            this.enable();\n        }\n    }\n\n    move(direction) {\n        const delta = Directions.delta(direction);\n        this.#x += delta.x;\n        this.#y += delta.y;\n    }\n\n    getEntities() {\n        return this.game.map\n            .getEntitiesAt(this.x, this.y)\n            .filter((e) => e.has(IsVisible));\n    }\n\n    drawCursor(color = 'yellow') {\n        const screen = this.game.camera.worldToScreen(this.x, this.y);\n\n        this.game.renderer.draw(screen.x, screen.y, 'X', color);\n    }\n\n    drawTags() {\n        const entities = this.getEntities().filter((e) => e.has(Moniker));\n        const screen = this.game.camera.worldToScreen(this.x, this.y);\n\n        if (screen.x < this.game.camera.width / 2) {\n            entities.forEach((entity, i) => {\n                const c = i === 0 ? '◄' : ' ';\n                this.game.renderer.drawText(\n                    screen.x + 1,\n                    screen.y + i,\n                    `${c}█`,\n                    '#ddd'\n                );\n                this.game.renderer.drawText(\n                    screen.x + 2,\n                    screen.y + i,\n                    entity.moniker.display + ' ',\n                    '#111133',\n                    'white',\n                    '#ddd'\n                );\n            });\n        } else {\n            entities.forEach((entity, i) => {\n                const c = i === 0 ? '►' : ' ';\n                this.game.renderer.drawText(\n                    screen.x - 1,\n                    screen.y + i,\n                    `█${c}`,\n                    '#ddd'\n                );\n                const len = this.game.renderer.computeTextWidth(\n                    entity.moniker.display\n                );\n                this.game.renderer.drawText(\n                    screen.x - len - 1.5,\n                    screen.y + i,\n                    ' ' + entity.moniker.display,\n                    '#111133',\n                    'white',\n                    '#ddd'\n                );\n            });\n        }\n    }\n}\n","import Manager from './Manager';\nimport FastMap from '../utils/FastMap';\nimport { IsInventoried, Position } from '../ecs/components';\n\nexport default class MapManager extends Manager {\n    #playerOutOfBounds = null;\n    #lookup;\n    #width = 32;\n    #height = 32;\n\n    get width() {\n        return this.#width;\n    }\n\n    get height() {\n        return this.#height;\n    }\n\n    constructor(game) {\n        super(game);\n\n        this.query = this.game.ecs.createQuery({\n            all: [Position],\n        });\n\n        this.#lookup = new FastMap(this.width, this.height);\n\n        this.query.onEntityAdded((e) => {\n            this.#lookup.set(0, 0, e.id);\n        });\n\n        this.query.onEntityRemoved((e) => {\n            this.#lookup.remove(e.id);\n        });\n    }\n\n    getSetupData() {\n        return {};\n    }\n\n    teardown() {\n        this.#playerOutOfBounds = false;\n        this.#lookup.clear();\n    }\n\n    setup(data) {\n        if (data.playerPosition) {\n            this.game.player.entity.position.setPos(\n                data.playerPosition.x,\n                data.playerPosition.y\n            );\n        } else {\n            const position = this.getRandomEmptyPosition();\n            this.game.player.entity.position.setPos(position.x, position.y);\n        }\n\n        this.game.FOVSystem.computeFOV();\n    }\n\n    getSaveGameData() {\n        const data = this.#lookup.serialize();\n\n        this.game.state.saveSectorPositionData(this.game.world.sectorId, data);\n\n        return {\n            playerPosition: this.game.player.position,\n        };\n    }\n\n    onSectorLoaded(sector) {\n        this.#playerOutOfBounds = false;\n\n        const data = this.game.state.loadSectorPositionData(sector.id);\n\n        if (data) {\n            this.#lookup.deserialize(data);\n        }\n    }\n\n    getPosition(entityId) {\n        return this.#lookup.getPosition(entityId);\n    }\n\n    setPosition(x, y, entityId) {\n        if (this.#lookup.isOutOfBounds(x, y)) {\n            if (this.game.player.id === entityId) {\n                this.#playerOutOfBounds = { x, y };\n            }\n\n            return;\n        }\n\n        this.#lookup.set(x, y, entityId);\n\n        if (entityId === this.game.player.id) {\n            this.game.camera.setFocus(x, y);\n        }\n    }\n\n    getEntitiesAt(x, y) {\n        return this.#lookup\n            .get(x, y)\n            .map((id) => this.game.ecs.getEntity(id))\n            .filter((e) => !e.has(IsInventoried));\n    }\n\n    isAdjacent(x1, y1, x2, y2) {\n        return Math.abs(x1 - x2) <= 1 && Math.abs(y1 - y2) <= 1;\n    }\n\n    getNeighborEntities(x, y) {\n        return [\n            this.getEntitiesAt(x - 1, y - 1), // TOP LEFT\n            this.getEntitiesAt(x, y - 1), // TOP\n            this.getEntitiesAt(x + 1, y - 1), // TOP RIGHT\n            this.getEntitiesAt(x - 1, y), // LEFT\n            this.getEntitiesAt(x + 1, y), // RIGHT\n            this.getEntitiesAt(x - 1, y + 1), // BOTTOM LEFT\n            this.getEntitiesAt(x, y + 1), // BOTTOM\n            this.getEntitiesAt(x + 1, y + 1), // BOTTOM RIGHT\n        ];\n    }\n\n    getRandomEmptyPosition() {\n        let x, y;\n        do {\n            x = Math.trunc(Math.random() * this.width);\n            y = Math.trunc(Math.random() * this.height);\n        } while (this.getEntitiesAt(x, y).length > 0);\n\n        return { x, y };\n    }\n\n    onPlayerOutOfBounds(x, y) {\n        if (y < 0) {\n            this.game.world.enterSector(this.game.world.sector.northSector, {\n                x,\n                y: this.height - 1,\n            });\n        }\n        if (y >= this.height) {\n            this.game.world.enterSector(this.game.world.sector.southSector, {\n                x,\n                y: 0,\n            });\n        }\n        if (x >= this.width) {\n            this.game.world.enterSector(this.game.world.sector.eastSector, {\n                x: 0,\n                y,\n            });\n        }\n        if (x < 0) {\n            this.game.world.enterSector(this.game.world.sector.westSector, {\n                x: this.width - 1,\n                y,\n            });\n        }\n    }\n\n    update(dt) {\n        if (this.#playerOutOfBounds) {\n            this.onPlayerOutOfBounds(\n                this.#playerOutOfBounds.x,\n                this.#playerOutOfBounds.y\n            );\n        }\n    }\n}\n","export default class FastMap {\n    _width = 0;\n    _height = 0;\n    _data = [];\n    _idHash = new Map();\n\n    get width() {\n        return this._width;\n    }\n\n    get height() {\n        return this._height;\n    }\n\n    get size() {\n        return this._width * this._height;\n    }\n\n    constructor(width, height) {\n        this._width = width;\n        this._height = height;\n\n        for (let i = 0; i < this.size; i++) {\n            this._data[i] = new Set();\n        }\n    }\n\n    idx(x, y) {\n        return y * this.width + x;\n    }\n\n    coord(idx) {\n        return {\n            x: Math.trunc(idx % this.width),\n            y: Math.trunc(idx / this.width),\n        };\n    }\n\n    clear() {\n        this._idHash.clear();\n\n        for (let i = 0; i < this.size; i++) {\n            this._data[i].clear();\n        }\n    }\n\n    serialize() {\n        const entries = this._data.map((d) => Array.from(d));\n\n        return {\n            width: this.width,\n            height: this.height,\n            entries,\n        };\n    }\n\n    deserialize(data) {\n        this._width = data.width;\n        this._height = data.height;\n        this._idHash = new Map();\n\n        for (let i = 0; i < data.entries.length; i++) {\n            const coord = this.coord(i);\n            this._data[i] = new Set(data.entries[i]);\n\n            data.entries[i].forEach((id) => {\n                this._idHash.set(id, coord);\n            });\n        }\n    }\n\n    set(x, y, id) {\n        if (this.isOutOfBounds(x, y)) {\n            console.warn(\n                `Trying to set an entity ${id} position out-of-bounds ${x}, ${y}`\n            );\n            return;\n        }\n\n        const idx = this.idx(x, y);\n\n        this.remove(id);\n\n        this._idHash.set(id, { x, y });\n        this._data[idx].add(id);\n    }\n\n    get(x, y) {\n        if (this.isOutOfBounds(x, y)) {\n            return [];\n        }\n\n        return Array.from(this._data[this.idx(x, y)]);\n    }\n\n    has(id) {\n        return this._idHash.has(id);\n    }\n\n    getPosition(id) {\n        const pos = this._idHash.get(id);\n\n        if (!pos) {\n            console.warn('Cannot get position', id);\n        }\n\n        return pos;\n    }\n\n    remove(id) {\n        if (!this.has(id)) {\n            return;\n        }\n\n        const pos = this.getPosition(id);\n        const idx = this.idx(pos.x, pos.y);\n\n        this._idHash.delete(id);\n        this._data[idx].delete(id);\n    }\n\n    isOutOfBounds(x, y) {\n        return x < 0 || y < 0 || x >= this.width || y >= this.height;\n    }\n}\n","import { FOV } from 'rot-js';\r\nimport {\r\n    Explorable,\r\n    Explored,\r\n    IsDestroying,\r\n    Shadowcaster,\r\n    IsVisible,\r\n} from '../ecs/components';\r\nimport System from './System';\r\n\r\nexport default class FOVSystem extends System {\r\n    constructor(game) {\r\n        super(game);\r\n\r\n        this.fov = new FOV.PreciseShadowcasting((x, y) =>\r\n            this.isSquareVisible(x, y)\r\n        );\r\n\r\n        this.query = this.game.ecs.createQuery({\r\n            all: [IsVisible],\r\n            not: [IsDestroying],\r\n        });\r\n    }\r\n\r\n    isSquareVisible(x, y) {\r\n        return !this.game.map\r\n            .getEntitiesAt(x, y)\r\n            .some((e) => e.has(Shadowcaster));\r\n    }\r\n\r\n    setVisible(x, y, amount, range) {\r\n        this.game.map.getEntitiesAt(x, y).forEach((e) => {\r\n            e.add(IsVisible, {\r\n                range,\r\n                amount,\r\n            });\r\n            if (e.has(Explorable) && !e.has(Explored)) {\r\n                e.add(Explored);\r\n            }\r\n        });\r\n    }\r\n\r\n    computeFOV() {\r\n        this.query.get().forEach((e) => e.remove(IsVisible));\r\n\r\n        const pos = this.game.player.position;\r\n\r\n        this.fov.compute(pos.x, pos.y, 5, (x, y, r, visibility) => {\r\n            this.setVisible(x, y, visibility, r);\r\n        });\r\n    }\r\n\r\n    update(dt) {\r\n        if (this.game.clock.tickDelta) {\r\n            this.computeFOV();\r\n        }\r\n    }\r\n}\r\n","export { default as RNG } from \"./rng.js\";\nexport { default as Display } from \"./display/display.js\";\nexport { default as StringGenerator } from \"./stringgenerator.js\";\nexport { default as EventQueue } from \"./eventqueue.js\";\nexport { default as Scheduler } from \"./scheduler/index.js\";\nexport { default as FOV } from \"./fov/index.js\";\nexport { default as Map } from \"./map/index.js\";\nexport { default as Noise } from \"./noise/index.js\";\nexport { default as Path } from \"./path/index.js\";\nexport { default as Engine } from \"./engine.js\";\nexport { default as Lighting } from \"./lighting.js\";\nexport { DEFAULT_WIDTH, DEFAULT_HEIGHT, DIRS, KEYS } from \"./constants.js\";\nimport * as util from \"./util.js\";\nexport const Util = util;\nimport * as color from \"./color.js\";\nexport const Color = color;\nimport * as text from \"./text.js\";\nexport const Text = text;\n","/**\n * This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\n * Alea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.\n */\nconst FRAC = 2.3283064365386963e-10; /* 2^-32 */\nclass RNG {\n    constructor() {\n        this._seed = 0;\n        this._s0 = 0;\n        this._s1 = 0;\n        this._s2 = 0;\n        this._c = 0;\n    }\n    getSeed() { return this._seed; }\n    /**\n     * Seed the number generator\n     */\n    setSeed(seed) {\n        seed = (seed < 1 ? 1 / seed : seed);\n        this._seed = seed;\n        this._s0 = (seed >>> 0) * FRAC;\n        seed = (seed * 69069 + 1) >>> 0;\n        this._s1 = seed * FRAC;\n        seed = (seed * 69069 + 1) >>> 0;\n        this._s2 = seed * FRAC;\n        this._c = 1;\n        return this;\n    }\n    /**\n     * @returns Pseudorandom value [0,1), uniformly distributed\n     */\n    getUniform() {\n        let t = 2091639 * this._s0 + this._c * FRAC;\n        this._s0 = this._s1;\n        this._s1 = this._s2;\n        this._c = t | 0;\n        this._s2 = t - this._c;\n        return this._s2;\n    }\n    /**\n     * @param lowerBound The lower end of the range to return a value from, inclusive\n     * @param upperBound The upper end of the range to return a value from, inclusive\n     * @returns Pseudorandom value [lowerBound, upperBound], using ROT.RNG.getUniform() to distribute the value\n     */\n    getUniformInt(lowerBound, upperBound) {\n        let max = Math.max(lowerBound, upperBound);\n        let min = Math.min(lowerBound, upperBound);\n        return Math.floor(this.getUniform() * (max - min + 1)) + min;\n    }\n    /**\n     * @param mean Mean value\n     * @param stddev Standard deviation. ~95% of the absolute values will be lower than 2*stddev.\n     * @returns A normally distributed pseudorandom value\n     */\n    getNormal(mean = 0, stddev = 1) {\n        let u, v, r;\n        do {\n            u = 2 * this.getUniform() - 1;\n            v = 2 * this.getUniform() - 1;\n            r = u * u + v * v;\n        } while (r > 1 || r == 0);\n        let gauss = u * Math.sqrt(-2 * Math.log(r) / r);\n        return mean + gauss * stddev;\n    }\n    /**\n     * @returns Pseudorandom value [1,100] inclusive, uniformly distributed\n     */\n    getPercentage() {\n        return 1 + Math.floor(this.getUniform() * 100);\n    }\n    /**\n     * @returns Randomly picked item, null when length=0\n     */\n    getItem(array) {\n        if (!array.length) {\n            return null;\n        }\n        return array[Math.floor(this.getUniform() * array.length)];\n    }\n    /**\n     * @returns New array with randomized items\n     */\n    shuffle(array) {\n        let result = [];\n        let clone = array.slice();\n        while (clone.length) {\n            let index = clone.indexOf(this.getItem(clone));\n            result.push(clone.splice(index, 1)[0]);\n        }\n        return result;\n    }\n    /**\n     * @param data key=whatever, value=weight (relative probability)\n     * @returns whatever\n     */\n    getWeightedValue(data) {\n        let total = 0;\n        for (let id in data) {\n            total += data[id];\n        }\n        let random = this.getUniform() * total;\n        let id, part = 0;\n        for (id in data) {\n            part += data[id];\n            if (random < part) {\n                return id;\n            }\n        }\n        // If by some floating-point annoyance we have\n        // random >= total, just return the last id.\n        return id;\n    }\n    /**\n     * Get RNG state. Useful for storing the state and re-setting it via setState.\n     * @returns Internal state\n     */\n    getState() { return [this._s0, this._s1, this._s2, this._c]; }\n    /**\n     * Set a previously retrieved state.\n     */\n    setState(state) {\n        this._s0 = state[0];\n        this._s1 = state[1];\n        this._s2 = state[2];\n        this._c = state[3];\n        return this;\n    }\n    /**\n     * Returns a cloned RNG\n     */\n    clone() {\n        let clone = new RNG();\n        return clone.setState(this.getState());\n    }\n}\nexport default new RNG().setSeed(Date.now());\n","import Hex from \"./hex.js\";\nimport Rect from \"./rect.js\";\nimport Tile from \"./tile.js\";\nimport TileGL from \"./tile-gl.js\";\nimport Term from \"./term.js\";\nimport * as Text from \"../text.js\";\nimport { DEFAULT_WIDTH, DEFAULT_HEIGHT } from \"../constants.js\";\nconst BACKENDS = {\n    \"hex\": Hex,\n    \"rect\": Rect,\n    \"tile\": Tile,\n    \"tile-gl\": TileGL,\n    \"term\": Term\n};\nconst DEFAULT_OPTIONS = {\n    width: DEFAULT_WIDTH,\n    height: DEFAULT_HEIGHT,\n    transpose: false,\n    layout: \"rect\",\n    fontSize: 15,\n    spacing: 1,\n    border: 0,\n    forceSquareRatio: false,\n    fontFamily: \"monospace\",\n    fontStyle: \"\",\n    fg: \"#ccc\",\n    bg: \"#000\",\n    tileWidth: 32,\n    tileHeight: 32,\n    tileMap: {},\n    tileSet: null,\n    tileColorize: false\n};\n/**\n * @class Visual map display\n */\nlet Display = /** @class */ (() => {\n    class Display {\n        constructor(options = {}) {\n            this._data = {};\n            this._dirty = false; // false = nothing, true = all, object = dirty cells\n            this._options = {};\n            options = Object.assign({}, DEFAULT_OPTIONS, options);\n            this.setOptions(options);\n            this.DEBUG = this.DEBUG.bind(this);\n            this._tick = this._tick.bind(this);\n            this._backend.schedule(this._tick);\n        }\n        /**\n         * Debug helper, ideal as a map generator callback. Always bound to this.\n         * @param {int} x\n         * @param {int} y\n         * @param {int} what\n         */\n        DEBUG(x, y, what) {\n            let colors = [this._options.bg, this._options.fg];\n            this.draw(x, y, null, null, colors[what % colors.length]);\n        }\n        /**\n         * Clear the whole display (cover it with background color)\n         */\n        clear() {\n            this._data = {};\n            this._dirty = true;\n        }\n        /**\n         * @see ROT.Display\n         */\n        setOptions(options) {\n            Object.assign(this._options, options);\n            if (options.width || options.height || options.fontSize || options.fontFamily || options.spacing || options.layout) {\n                if (options.layout) {\n                    let ctor = BACKENDS[options.layout];\n                    this._backend = new ctor();\n                }\n                this._backend.setOptions(this._options);\n                this._dirty = true;\n            }\n            return this;\n        }\n        /**\n         * Returns currently set options\n         */\n        getOptions() { return this._options; }\n        /**\n         * Returns the DOM node of this display\n         */\n        getContainer() { return this._backend.getContainer(); }\n        /**\n         * Compute the maximum width/height to fit into a set of given constraints\n         * @param {int} availWidth Maximum allowed pixel width\n         * @param {int} availHeight Maximum allowed pixel height\n         * @returns {int[2]} cellWidth,cellHeight\n         */\n        computeSize(availWidth, availHeight) {\n            return this._backend.computeSize(availWidth, availHeight);\n        }\n        /**\n         * Compute the maximum font size to fit into a set of given constraints\n         * @param {int} availWidth Maximum allowed pixel width\n         * @param {int} availHeight Maximum allowed pixel height\n         * @returns {int} fontSize\n         */\n        computeFontSize(availWidth, availHeight) {\n            return this._backend.computeFontSize(availWidth, availHeight);\n        }\n        computeTileSize(availWidth, availHeight) {\n            let width = Math.floor(availWidth / this._options.width);\n            let height = Math.floor(availHeight / this._options.height);\n            return [width, height];\n        }\n        /**\n         * Convert a DOM event (mouse or touch) to map coordinates. Uses first touch for multi-touch.\n         * @param {Event} e event\n         * @returns {int[2]} -1 for values outside of the canvas\n         */\n        eventToPosition(e) {\n            let x, y;\n            if (\"touches\" in e) {\n                x = e.touches[0].clientX;\n                y = e.touches[0].clientY;\n            }\n            else {\n                x = e.clientX;\n                y = e.clientY;\n            }\n            return this._backend.eventToPosition(x, y);\n        }\n        /**\n         * @param {int} x\n         * @param {int} y\n         * @param {string || string[]} ch One or more chars (will be overlapping themselves)\n         * @param {string} [fg] foreground color\n         * @param {string} [bg] background color\n         */\n        draw(x, y, ch, fg, bg) {\n            if (!fg) {\n                fg = this._options.fg;\n            }\n            if (!bg) {\n                bg = this._options.bg;\n            }\n            let key = `${x},${y}`;\n            this._data[key] = [x, y, ch, fg, bg];\n            if (this._dirty === true) {\n                return;\n            } // will already redraw everything \n            if (!this._dirty) {\n                this._dirty = {};\n            } // first!\n            this._dirty[key] = true;\n        }\n        /**\n         * Draws a text at given position. Optionally wraps at a maximum length. Currently does not work with hex layout.\n         * @param {int} x\n         * @param {int} y\n         * @param {string} text May contain color/background format specifiers, %c{name}/%b{name}, both optional. %c{}/%b{} resets to default.\n         * @param {int} [maxWidth] wrap at what width?\n         * @returns {int} lines drawn\n         */\n        drawText(x, y, text, maxWidth) {\n            let fg = null;\n            let bg = null;\n            let cx = x;\n            let cy = y;\n            let lines = 1;\n            if (!maxWidth) {\n                maxWidth = this._options.width - x;\n            }\n            let tokens = Text.tokenize(text, maxWidth);\n            while (tokens.length) { // interpret tokenized opcode stream\n                let token = tokens.shift();\n                switch (token.type) {\n                    case Text.TYPE_TEXT:\n                        let isSpace = false, isPrevSpace = false, isFullWidth = false, isPrevFullWidth = false;\n                        for (let i = 0; i < token.value.length; i++) {\n                            let cc = token.value.charCodeAt(i);\n                            let c = token.value.charAt(i);\n                            if (this._options.layout === \"term\") {\n                                let cch = cc >> 8;\n                                let isCJK = cch === 0x11 || (cch >= 0x2e && cch <= 0x9f) || (cch >= 0xac && cch <= 0xd7) || (cc >= 0xA960 && cc <= 0xA97F);\n                                if (isCJK) {\n                                    this.draw(cx + 0, cy, c, fg, bg);\n                                    this.draw(cx + 1, cy, \"\\t\", fg, bg);\n                                    cx += 2;\n                                    continue;\n                                }\n                            }\n                            // Assign to `true` when the current char is full-width.\n                            isFullWidth = (cc > 0xff00 && cc < 0xff61) || (cc > 0xffdc && cc < 0xffe8) || cc > 0xffee;\n                            // Current char is space, whatever full-width or half-width both are OK.\n                            isSpace = (c.charCodeAt(0) == 0x20 || c.charCodeAt(0) == 0x3000);\n                            // The previous char is full-width and\n                            // current char is nether half-width nor a space.\n                            if (isPrevFullWidth && !isFullWidth && !isSpace) {\n                                cx++;\n                            } // add an extra position\n                            // The current char is full-width and\n                            // the previous char is not a space.\n                            if (isFullWidth && !isPrevSpace) {\n                                cx++;\n                            } // add an extra position\n                            this.draw(cx++, cy, c, fg, bg);\n                            isPrevSpace = isSpace;\n                            isPrevFullWidth = isFullWidth;\n                        }\n                        break;\n                    case Text.TYPE_FG:\n                        fg = token.value || null;\n                        break;\n                    case Text.TYPE_BG:\n                        bg = token.value || null;\n                        break;\n                    case Text.TYPE_NEWLINE:\n                        cx = x;\n                        cy++;\n                        lines++;\n                        break;\n                }\n            }\n            return lines;\n        }\n        /**\n         * Timer tick: update dirty parts\n         */\n        _tick() {\n            this._backend.schedule(this._tick);\n            if (!this._dirty) {\n                return;\n            }\n            if (this._dirty === true) { // draw all\n                this._backend.clear();\n                for (let id in this._data) {\n                    this._draw(id, false);\n                } // redraw cached data \n            }\n            else { // draw only dirty \n                for (let key in this._dirty) {\n                    this._draw(key, true);\n                }\n            }\n            this._dirty = false;\n        }\n        /**\n         * @param {string} key What to draw\n         * @param {bool} clearBefore Is it necessary to clean before?\n         */\n        _draw(key, clearBefore) {\n            let data = this._data[key];\n            if (data[4] != this._options.bg) {\n                clearBefore = true;\n            }\n            this._backend.draw(data, clearBefore);\n        }\n    }\n    Display.Rect = Rect;\n    Display.Hex = Hex;\n    Display.Tile = Tile;\n    Display.TileGL = TileGL;\n    Display.Term = Term;\n    return Display;\n})();\nexport default Display;\n","import Canvas from \"./canvas.js\";\nimport { mod } from \"../util.js\";\n/**\n * @class Hexagonal backend\n * @private\n */\nexport default class Hex extends Canvas {\n    constructor() {\n        super();\n        this._spacingX = 0;\n        this._spacingY = 0;\n        this._hexSize = 0;\n    }\n    draw(data, clearBefore) {\n        let [x, y, ch, fg, bg] = data;\n        let px = [\n            (x + 1) * this._spacingX,\n            y * this._spacingY + this._hexSize\n        ];\n        if (this._options.transpose) {\n            px.reverse();\n        }\n        if (clearBefore) {\n            this._ctx.fillStyle = bg;\n            this._fill(px[0], px[1]);\n        }\n        if (!ch) {\n            return;\n        }\n        this._ctx.fillStyle = fg;\n        let chars = [].concat(ch);\n        for (let i = 0; i < chars.length; i++) {\n            this._ctx.fillText(chars[i], px[0], Math.ceil(px[1]));\n        }\n    }\n    computeSize(availWidth, availHeight) {\n        if (this._options.transpose) {\n            availWidth += availHeight;\n            availHeight = availWidth - availHeight;\n            availWidth -= availHeight;\n        }\n        let width = Math.floor(availWidth / this._spacingX) - 1;\n        let height = Math.floor((availHeight - 2 * this._hexSize) / this._spacingY + 1);\n        return [width, height];\n    }\n    computeFontSize(availWidth, availHeight) {\n        if (this._options.transpose) {\n            availWidth += availHeight;\n            availHeight = availWidth - availHeight;\n            availWidth -= availHeight;\n        }\n        let hexSizeWidth = 2 * availWidth / ((this._options.width + 1) * Math.sqrt(3)) - 1;\n        let hexSizeHeight = availHeight / (2 + 1.5 * (this._options.height - 1));\n        let hexSize = Math.min(hexSizeWidth, hexSizeHeight);\n        // compute char ratio\n        let oldFont = this._ctx.font;\n        this._ctx.font = \"100px \" + this._options.fontFamily;\n        let width = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._ctx.font = oldFont;\n        let ratio = width / 100;\n        hexSize = Math.floor(hexSize) + 1; // closest larger hexSize\n        // FIXME char size computation does not respect transposed hexes\n        let fontSize = 2 * hexSize / (this._options.spacing * (1 + ratio / Math.sqrt(3)));\n        // closest smaller fontSize\n        return Math.ceil(fontSize) - 1;\n    }\n    _normalizedEventToPosition(x, y) {\n        let nodeSize;\n        if (this._options.transpose) {\n            x += y;\n            y = x - y;\n            x -= y;\n            nodeSize = this._ctx.canvas.width;\n        }\n        else {\n            nodeSize = this._ctx.canvas.height;\n        }\n        let size = nodeSize / this._options.height;\n        y = Math.floor(y / size);\n        if (mod(y, 2)) { /* odd row */\n            x -= this._spacingX;\n            x = 1 + 2 * Math.floor(x / (2 * this._spacingX));\n        }\n        else {\n            x = 2 * Math.floor(x / (2 * this._spacingX));\n        }\n        return [x, y];\n    }\n    /**\n     * Arguments are pixel values. If \"transposed\" mode is enabled, then these two are already swapped.\n     */\n    _fill(cx, cy) {\n        let a = this._hexSize;\n        let b = this._options.border;\n        const ctx = this._ctx;\n        ctx.beginPath();\n        if (this._options.transpose) {\n            ctx.moveTo(cx - a + b, cy);\n            ctx.lineTo(cx - a / 2 + b, cy + this._spacingX - b);\n            ctx.lineTo(cx + a / 2 - b, cy + this._spacingX - b);\n            ctx.lineTo(cx + a - b, cy);\n            ctx.lineTo(cx + a / 2 - b, cy - this._spacingX + b);\n            ctx.lineTo(cx - a / 2 + b, cy - this._spacingX + b);\n            ctx.lineTo(cx - a + b, cy);\n        }\n        else {\n            ctx.moveTo(cx, cy - a + b);\n            ctx.lineTo(cx + this._spacingX - b, cy - a / 2 + b);\n            ctx.lineTo(cx + this._spacingX - b, cy + a / 2 - b);\n            ctx.lineTo(cx, cy + a - b);\n            ctx.lineTo(cx - this._spacingX + b, cy + a / 2 - b);\n            ctx.lineTo(cx - this._spacingX + b, cy - a / 2 + b);\n            ctx.lineTo(cx, cy - a + b);\n        }\n        ctx.fill();\n    }\n    _updateSize() {\n        const opts = this._options;\n        const charWidth = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._hexSize = Math.floor(opts.spacing * (opts.fontSize + charWidth / Math.sqrt(3)) / 2);\n        this._spacingX = this._hexSize * Math.sqrt(3) / 2;\n        this._spacingY = this._hexSize * 1.5;\n        let xprop;\n        let yprop;\n        if (opts.transpose) {\n            xprop = \"height\";\n            yprop = \"width\";\n        }\n        else {\n            xprop = \"width\";\n            yprop = \"height\";\n        }\n        this._ctx.canvas[xprop] = Math.ceil((opts.width + 1) * this._spacingX);\n        this._ctx.canvas[yprop] = Math.ceil((opts.height - 1) * this._spacingY + 2 * this._hexSize);\n    }\n}\n","import Backend from \"./backend.js\";\nexport default class Canvas extends Backend {\n    constructor() {\n        super();\n        this._ctx = document.createElement(\"canvas\").getContext(\"2d\");\n    }\n    schedule(cb) { requestAnimationFrame(cb); }\n    getContainer() { return this._ctx.canvas; }\n    setOptions(opts) {\n        super.setOptions(opts);\n        const style = (opts.fontStyle ? `${opts.fontStyle} ` : ``);\n        const font = `${style} ${opts.fontSize}px ${opts.fontFamily}`;\n        this._ctx.font = font;\n        this._updateSize();\n        this._ctx.font = font;\n        this._ctx.textAlign = \"center\";\n        this._ctx.textBaseline = \"middle\";\n    }\n    clear() {\n        this._ctx.fillStyle = this._options.bg;\n        this._ctx.fillRect(0, 0, this._ctx.canvas.width, this._ctx.canvas.height);\n    }\n    eventToPosition(x, y) {\n        let canvas = this._ctx.canvas;\n        let rect = canvas.getBoundingClientRect();\n        x -= rect.left;\n        y -= rect.top;\n        x *= canvas.width / rect.width;\n        y *= canvas.height / rect.height;\n        if (x < 0 || y < 0 || x >= canvas.width || y >= canvas.height) {\n            return [-1, -1];\n        }\n        return this._normalizedEventToPosition(x, y);\n    }\n}\n","/**\n * @class Abstract display backend module\n * @private\n */\nexport default class Backend {\n    getContainer() { return null; }\n    setOptions(options) { this._options = options; }\n}\n","/**\n * Always positive modulus\n * @param x Operand\n * @param n Modulus\n * @returns x modulo n\n */\nexport function mod(x, n) {\n    return (x % n + n) % n;\n}\nexport function clamp(val, min = 0, max = 1) {\n    if (val < min)\n        return min;\n    if (val > max)\n        return max;\n    return val;\n}\nexport function capitalize(string) {\n    return string.charAt(0).toUpperCase() + string.substring(1);\n}\n/**\n * Format a string in a flexible way. Scans for %s strings and replaces them with arguments. List of patterns is modifiable via String.format.map.\n * @param {string} template\n * @param {any} [argv]\n */\nexport function format(template, ...args) {\n    let map = format.map;\n    let replacer = function (match, group1, group2, index) {\n        if (template.charAt(index - 1) == \"%\") {\n            return match.substring(1);\n        }\n        if (!args.length) {\n            return match;\n        }\n        let obj = args[0];\n        let group = group1 || group2;\n        let parts = group.split(\",\");\n        let name = parts.shift() || \"\";\n        let method = map[name.toLowerCase()];\n        if (!method) {\n            return match;\n        }\n        obj = args.shift();\n        let replaced = obj[method].apply(obj, parts);\n        let first = name.charAt(0);\n        if (first != first.toLowerCase()) {\n            replaced = capitalize(replaced);\n        }\n        return replaced;\n    };\n    return template.replace(/%(?:([a-z]+)|(?:{([^}]+)}))/gi, replacer);\n}\nformat.map = {\n    \"s\": \"toString\"\n};\n","import Canvas from \"./canvas.js\";\n/**\n * @class Rectangular backend\n * @private\n */\nlet Rect = /** @class */ (() => {\n    class Rect extends Canvas {\n        constructor() {\n            super();\n            this._spacingX = 0;\n            this._spacingY = 0;\n            this._canvasCache = {};\n        }\n        setOptions(options) {\n            super.setOptions(options);\n            this._canvasCache = {};\n        }\n        draw(data, clearBefore) {\n            if (Rect.cache) {\n                this._drawWithCache(data);\n            }\n            else {\n                this._drawNoCache(data, clearBefore);\n            }\n        }\n        _drawWithCache(data) {\n            let [x, y, ch, fg, bg] = data;\n            let hash = \"\" + ch + fg + bg;\n            let canvas;\n            if (hash in this._canvasCache) {\n                canvas = this._canvasCache[hash];\n            }\n            else {\n                let b = this._options.border;\n                canvas = document.createElement(\"canvas\");\n                let ctx = canvas.getContext(\"2d\");\n                canvas.width = this._spacingX;\n                canvas.height = this._spacingY;\n                ctx.fillStyle = bg;\n                ctx.fillRect(b, b, canvas.width - b, canvas.height - b);\n                if (ch) {\n                    ctx.fillStyle = fg;\n                    ctx.font = this._ctx.font;\n                    ctx.textAlign = \"center\";\n                    ctx.textBaseline = \"middle\";\n                    let chars = [].concat(ch);\n                    for (let i = 0; i < chars.length; i++) {\n                        ctx.fillText(chars[i], this._spacingX / 2, Math.ceil(this._spacingY / 2));\n                    }\n                }\n                this._canvasCache[hash] = canvas;\n            }\n            this._ctx.drawImage(canvas, x * this._spacingX, y * this._spacingY);\n        }\n        _drawNoCache(data, clearBefore) {\n            let [x, y, ch, fg, bg] = data;\n            if (clearBefore) {\n                let b = this._options.border;\n                this._ctx.fillStyle = bg;\n                this._ctx.fillRect(x * this._spacingX + b, y * this._spacingY + b, this._spacingX - b, this._spacingY - b);\n            }\n            if (!ch) {\n                return;\n            }\n            this._ctx.fillStyle = fg;\n            let chars = [].concat(ch);\n            for (let i = 0; i < chars.length; i++) {\n                this._ctx.fillText(chars[i], (x + 0.5) * this._spacingX, Math.ceil((y + 0.5) * this._spacingY));\n            }\n        }\n        computeSize(availWidth, availHeight) {\n            let width = Math.floor(availWidth / this._spacingX);\n            let height = Math.floor(availHeight / this._spacingY);\n            return [width, height];\n        }\n        computeFontSize(availWidth, availHeight) {\n            let boxWidth = Math.floor(availWidth / this._options.width);\n            let boxHeight = Math.floor(availHeight / this._options.height);\n            /* compute char ratio */\n            let oldFont = this._ctx.font;\n            this._ctx.font = \"100px \" + this._options.fontFamily;\n            let width = Math.ceil(this._ctx.measureText(\"W\").width);\n            this._ctx.font = oldFont;\n            let ratio = width / 100;\n            let widthFraction = ratio * boxHeight / boxWidth;\n            if (widthFraction > 1) { /* too wide with current aspect ratio */\n                boxHeight = Math.floor(boxHeight / widthFraction);\n            }\n            return Math.floor(boxHeight / this._options.spacing);\n        }\n        _normalizedEventToPosition(x, y) {\n            return [Math.floor(x / this._spacingX), Math.floor(y / this._spacingY)];\n        }\n        _updateSize() {\n            const opts = this._options;\n            const charWidth = Math.ceil(this._ctx.measureText(\"W\").width);\n            this._spacingX = Math.ceil(opts.spacing * charWidth);\n            this._spacingY = Math.ceil(opts.spacing * opts.fontSize);\n            if (opts.forceSquareRatio) {\n                this._spacingX = this._spacingY = Math.max(this._spacingX, this._spacingY);\n            }\n            this._ctx.canvas.width = opts.width * this._spacingX;\n            this._ctx.canvas.height = opts.height * this._spacingY;\n        }\n    }\n    Rect.cache = false;\n    return Rect;\n})();\nexport default Rect;\n","import Canvas from \"./canvas.js\";\n/**\n * @class Tile backend\n * @private\n */\nexport default class Tile extends Canvas {\n    constructor() {\n        super();\n        this._colorCanvas = document.createElement(\"canvas\");\n    }\n    draw(data, clearBefore) {\n        let [x, y, ch, fg, bg] = data;\n        let tileWidth = this._options.tileWidth;\n        let tileHeight = this._options.tileHeight;\n        if (clearBefore) {\n            if (this._options.tileColorize) {\n                this._ctx.clearRect(x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n            else {\n                this._ctx.fillStyle = bg;\n                this._ctx.fillRect(x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n        }\n        if (!ch) {\n            return;\n        }\n        let chars = [].concat(ch);\n        let fgs = [].concat(fg);\n        let bgs = [].concat(bg);\n        for (let i = 0; i < chars.length; i++) {\n            let tile = this._options.tileMap[chars[i]];\n            if (!tile) {\n                throw new Error(`Char \"${chars[i]}\" not found in tileMap`);\n            }\n            if (this._options.tileColorize) { // apply colorization\n                let canvas = this._colorCanvas;\n                let context = canvas.getContext(\"2d\");\n                context.globalCompositeOperation = \"source-over\";\n                context.clearRect(0, 0, tileWidth, tileHeight);\n                let fg = fgs[i];\n                let bg = bgs[i];\n                context.drawImage(this._options.tileSet, tile[0], tile[1], tileWidth, tileHeight, 0, 0, tileWidth, tileHeight);\n                if (fg != \"transparent\") {\n                    context.fillStyle = fg;\n                    context.globalCompositeOperation = \"source-atop\";\n                    context.fillRect(0, 0, tileWidth, tileHeight);\n                }\n                if (bg != \"transparent\") {\n                    context.fillStyle = bg;\n                    context.globalCompositeOperation = \"destination-over\";\n                    context.fillRect(0, 0, tileWidth, tileHeight);\n                }\n                this._ctx.drawImage(canvas, x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n            else { // no colorizing, easy\n                this._ctx.drawImage(this._options.tileSet, tile[0], tile[1], tileWidth, tileHeight, x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n        }\n    }\n    computeSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._options.tileWidth);\n        let height = Math.floor(availHeight / this._options.tileHeight);\n        return [width, height];\n    }\n    computeFontSize() {\n        throw new Error(\"Tile backend does not understand font size\");\n    }\n    _normalizedEventToPosition(x, y) {\n        return [Math.floor(x / this._options.tileWidth), Math.floor(y / this._options.tileHeight)];\n    }\n    _updateSize() {\n        const opts = this._options;\n        this._ctx.canvas.width = opts.width * opts.tileWidth;\n        this._ctx.canvas.height = opts.height * opts.tileHeight;\n        this._colorCanvas.width = opts.tileWidth;\n        this._colorCanvas.height = opts.tileHeight;\n    }\n}\n","import Backend from \"./backend.js\";\nimport * as Color from \"../color.js\";\n/**\n * @class Tile backend\n * @private\n */\nexport default class TileGL extends Backend {\n    constructor() {\n        super();\n        this._uniforms = {};\n        try {\n            this._gl = this._initWebGL();\n        }\n        catch (e) {\n            alert(e.message);\n        }\n    }\n    static isSupported() {\n        return !!document.createElement(\"canvas\").getContext(\"webgl2\", { preserveDrawingBuffer: true });\n    }\n    schedule(cb) { requestAnimationFrame(cb); }\n    getContainer() { return this._gl.canvas; }\n    setOptions(opts) {\n        super.setOptions(opts);\n        this._updateSize();\n        let tileSet = this._options.tileSet;\n        if (tileSet && \"complete\" in tileSet && !tileSet.complete) {\n            tileSet.addEventListener(\"load\", () => this._updateTexture(tileSet));\n        }\n        else {\n            this._updateTexture(tileSet);\n        }\n    }\n    draw(data, clearBefore) {\n        const gl = this._gl;\n        const opts = this._options;\n        let [x, y, ch, fg, bg] = data;\n        let scissorY = gl.canvas.height - (y + 1) * opts.tileHeight;\n        gl.scissor(x * opts.tileWidth, scissorY, opts.tileWidth, opts.tileHeight);\n        if (clearBefore) {\n            if (opts.tileColorize) {\n                gl.clearColor(0, 0, 0, 0);\n            }\n            else {\n                gl.clearColor(...parseColor(bg));\n            }\n            gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n        if (!ch) {\n            return;\n        }\n        let chars = [].concat(ch);\n        let bgs = [].concat(bg);\n        let fgs = [].concat(fg);\n        gl.uniform2fv(this._uniforms[\"targetPosRel\"], [x, y]);\n        for (let i = 0; i < chars.length; i++) {\n            let tile = this._options.tileMap[chars[i]];\n            if (!tile) {\n                throw new Error(`Char \"${chars[i]}\" not found in tileMap`);\n            }\n            gl.uniform1f(this._uniforms[\"colorize\"], opts.tileColorize ? 1 : 0);\n            gl.uniform2fv(this._uniforms[\"tilesetPosAbs\"], tile);\n            if (opts.tileColorize) {\n                gl.uniform4fv(this._uniforms[\"tint\"], parseColor(fgs[i]));\n                gl.uniform4fv(this._uniforms[\"bg\"], parseColor(bgs[i]));\n            }\n            gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n        }\n        /*\n        \n        \n                for (let i=0;i<chars.length;i++) {\n        \n                    if (this._options.tileColorize) { // apply colorization\n                        let canvas = this._colorCanvas;\n                        let context = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n                        context.globalCompositeOperation = \"source-over\";\n                        context.clearRect(0, 0, tileWidth, tileHeight);\n        \n                        let fg = fgs[i];\n                        let bg = bgs[i];\n        \n                        context.drawImage(\n                            this._options.tileSet!,\n                            tile[0], tile[1], tileWidth, tileHeight,\n                            0, 0, tileWidth, tileHeight\n                        );\n        \n                        if (fg != \"transparent\") {\n                            context.fillStyle = fg;\n                            context.globalCompositeOperation = \"source-atop\";\n                            context.fillRect(0, 0, tileWidth, tileHeight);\n                        }\n        \n                        if (bg != \"transparent\") {\n                            context.fillStyle = bg;\n                            context.globalCompositeOperation = \"destination-over\";\n                            context.fillRect(0, 0, tileWidth, tileHeight);\n                        }\n        \n                        this._ctx.drawImage(canvas, x*tileWidth, y*tileHeight, tileWidth, tileHeight);\n                    } else { // no colorizing, easy\n                        this._ctx.drawImage(\n                            this._options.tileSet!,\n                            tile[0], tile[1], tileWidth, tileHeight,\n                            x*tileWidth, y*tileHeight, tileWidth, tileHeight\n                        );\n                    }\n                }\n        \n        */\n    }\n    clear() {\n        const gl = this._gl;\n        gl.clearColor(...parseColor(this._options.bg));\n        gl.scissor(0, 0, gl.canvas.width, gl.canvas.height);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n    }\n    computeSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._options.tileWidth);\n        let height = Math.floor(availHeight / this._options.tileHeight);\n        return [width, height];\n    }\n    computeFontSize() {\n        throw new Error(\"Tile backend does not understand font size\");\n    }\n    eventToPosition(x, y) {\n        let canvas = this._gl.canvas;\n        let rect = canvas.getBoundingClientRect();\n        x -= rect.left;\n        y -= rect.top;\n        x *= canvas.width / rect.width;\n        y *= canvas.height / rect.height;\n        if (x < 0 || y < 0 || x >= canvas.width || y >= canvas.height) {\n            return [-1, -1];\n        }\n        return this._normalizedEventToPosition(x, y);\n    }\n    _initWebGL() {\n        let gl = document.createElement(\"canvas\").getContext(\"webgl2\", { preserveDrawingBuffer: true });\n        window.gl = gl;\n        let program = createProgram(gl, VS, FS);\n        gl.useProgram(program);\n        createQuad(gl);\n        UNIFORMS.forEach(name => this._uniforms[name] = gl.getUniformLocation(program, name));\n        this._program = program;\n        gl.enable(gl.BLEND);\n        gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.enable(gl.SCISSOR_TEST);\n        return gl;\n    }\n    _normalizedEventToPosition(x, y) {\n        return [Math.floor(x / this._options.tileWidth), Math.floor(y / this._options.tileHeight)];\n    }\n    _updateSize() {\n        const gl = this._gl;\n        const opts = this._options;\n        const canvasSize = [opts.width * opts.tileWidth, opts.height * opts.tileHeight];\n        gl.canvas.width = canvasSize[0];\n        gl.canvas.height = canvasSize[1];\n        gl.viewport(0, 0, canvasSize[0], canvasSize[1]);\n        gl.uniform2fv(this._uniforms[\"tileSize\"], [opts.tileWidth, opts.tileHeight]);\n        gl.uniform2fv(this._uniforms[\"targetSize\"], canvasSize);\n    }\n    _updateTexture(tileSet) {\n        createTexture(this._gl, tileSet);\n    }\n}\nconst UNIFORMS = [\"targetPosRel\", \"tilesetPosAbs\", \"tileSize\", \"targetSize\", \"colorize\", \"bg\", \"tint\"];\nconst VS = `\n#version 300 es\n\nin vec2 tilePosRel;\nout vec2 tilesetPosPx;\n\nuniform vec2 tilesetPosAbs;\nuniform vec2 tileSize;\nuniform vec2 targetSize;\nuniform vec2 targetPosRel;\n\nvoid main() {\n\tvec2 targetPosPx = (targetPosRel + tilePosRel) * tileSize;\n\tvec2 targetPosNdc = ((targetPosPx / targetSize)-0.5)*2.0;\n\ttargetPosNdc.y *= -1.0;\n\n\tgl_Position = vec4(targetPosNdc, 0.0, 1.0);\n\ttilesetPosPx = tilesetPosAbs + tilePosRel * tileSize;\n}`.trim();\nconst FS = `\n#version 300 es\nprecision highp float;\n\nin vec2 tilesetPosPx;\nout vec4 fragColor;\nuniform sampler2D image;\nuniform bool colorize;\nuniform vec4 bg;\nuniform vec4 tint;\n\nvoid main() {\n\tfragColor = vec4(0, 0, 0, 1);\n\n\tvec4 texel = texelFetch(image, ivec2(tilesetPosPx), 0);\n\n\tif (colorize) {\n\t\ttexel.rgb = tint.a * tint.rgb + (1.0-tint.a) * texel.rgb;\n\t\tfragColor.rgb = texel.a*texel.rgb + (1.0-texel.a)*bg.rgb;\n\t\tfragColor.a = texel.a + (1.0-texel.a)*bg.a;\n\t} else {\n\t\tfragColor = texel;\n\t}\n}`.trim();\nfunction createProgram(gl, vss, fss) {\n    const vs = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vs, vss);\n    gl.compileShader(vs);\n    if (!gl.getShaderParameter(vs, gl.COMPILE_STATUS)) {\n        throw new Error(gl.getShaderInfoLog(vs) || \"\");\n    }\n    const fs = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fs, fss);\n    gl.compileShader(fs);\n    if (!gl.getShaderParameter(fs, gl.COMPILE_STATUS)) {\n        throw new Error(gl.getShaderInfoLog(fs) || \"\");\n    }\n    const p = gl.createProgram();\n    gl.attachShader(p, vs);\n    gl.attachShader(p, fs);\n    gl.linkProgram(p);\n    if (!gl.getProgramParameter(p, gl.LINK_STATUS)) {\n        throw new Error(gl.getProgramInfoLog(p) || \"\");\n    }\n    return p;\n}\nfunction createQuad(gl) {\n    const pos = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]);\n    const buf = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buf);\n    gl.bufferData(gl.ARRAY_BUFFER, pos, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(0);\n    gl.vertexAttribPointer(0, 2, gl.FLOAT, false, 0, 0);\n}\nfunction createTexture(gl, data) {\n    let t = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, t);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 0);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\n    return t;\n}\nlet colorCache = {};\nfunction parseColor(color) {\n    if (!(color in colorCache)) {\n        let parsed;\n        if (color == \"transparent\") {\n            parsed = [0, 0, 0, 0];\n        }\n        else if (color.indexOf(\"rgba\") > -1) {\n            parsed = (color.match(/[\\d.]+/g) || []).map(Number);\n            for (let i = 0; i < 3; i++) {\n                parsed[i] = parsed[i] / 255;\n            }\n        }\n        else {\n            parsed = Color.fromString(color).map($ => $ / 255);\n            parsed.push(1);\n        }\n        colorCache[color] = parsed;\n    }\n    return colorCache[color];\n}\n","import { clamp } from \"./util.js\";\nimport RNG from \"./rng.js\";\nexport function fromString(str) {\n    let cached, r;\n    if (str in CACHE) {\n        cached = CACHE[str];\n    }\n    else {\n        if (str.charAt(0) == \"#\") { // hex rgb\n            let matched = str.match(/[0-9a-f]/gi) || [];\n            let values = matched.map((x) => parseInt(x, 16));\n            if (values.length == 3) {\n                cached = values.map((x) => x * 17);\n            }\n            else {\n                for (let i = 0; i < 3; i++) {\n                    values[i + 1] += 16 * values[i];\n                    values.splice(i, 1);\n                }\n                cached = values;\n            }\n        }\n        else if ((r = str.match(/rgb\\(([0-9, ]+)\\)/i))) { // decimal rgb\n            cached = r[1].split(/\\s*,\\s*/).map((x) => parseInt(x));\n        }\n        else { // html name\n            cached = [0, 0, 0];\n        }\n        CACHE[str] = cached;\n    }\n    return cached.slice();\n}\n/**\n * Add two or more colors\n */\nexport function add(color1, ...colors) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            result[i] += colors[j][i];\n        }\n    }\n    return result;\n}\n/**\n * Add two or more colors, MODIFIES FIRST ARGUMENT\n */\nexport function add_(color1, ...colors) {\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            color1[i] += colors[j][i];\n        }\n    }\n    return color1;\n}\n/**\n * Multiply (mix) two or more colors\n */\nexport function multiply(color1, ...colors) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            result[i] *= colors[j][i] / 255;\n        }\n        result[i] = Math.round(result[i]);\n    }\n    return result;\n}\n/**\n * Multiply (mix) two or more colors, MODIFIES FIRST ARGUMENT\n */\nexport function multiply_(color1, ...colors) {\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            color1[i] *= colors[j][i] / 255;\n        }\n        color1[i] = Math.round(color1[i]);\n    }\n    return color1;\n}\n/**\n * Interpolate (blend) two colors with a given factor\n */\nexport function interpolate(color1, color2, factor = 0.5) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        result[i] = Math.round(result[i] + factor * (color2[i] - color1[i]));\n    }\n    return result;\n}\nexport const lerp = interpolate;\n/**\n * Interpolate (blend) two colors with a given factor in HSL mode\n */\nexport function interpolateHSL(color1, color2, factor = 0.5) {\n    let hsl1 = rgb2hsl(color1);\n    let hsl2 = rgb2hsl(color2);\n    for (let i = 0; i < 3; i++) {\n        hsl1[i] += factor * (hsl2[i] - hsl1[i]);\n    }\n    return hsl2rgb(hsl1);\n}\nexport const lerpHSL = interpolateHSL;\n/**\n * Create a new random color based on this one\n * @param color\n * @param diff Set of standard deviations\n */\nexport function randomize(color, diff) {\n    if (!(diff instanceof Array)) {\n        diff = Math.round(RNG.getNormal(0, diff));\n    }\n    let result = color.slice();\n    for (let i = 0; i < 3; i++) {\n        result[i] += (diff instanceof Array ? Math.round(RNG.getNormal(0, diff[i])) : diff);\n    }\n    return result;\n}\n/**\n * Converts an RGB color value to HSL. Expects 0..255 inputs, produces 0..1 outputs.\n */\nexport function rgb2hsl(color) {\n    let r = color[0] / 255;\n    let g = color[1] / 255;\n    let b = color[2] / 255;\n    let max = Math.max(r, g, b), min = Math.min(r, g, b);\n    let h = 0, s, l = (max + min) / 2;\n    if (max == min) {\n        s = 0; // achromatic\n    }\n    else {\n        let d = max - min;\n        s = (l > 0.5 ? d / (2 - max - min) : d / (max + min));\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n        }\n        h /= 6;\n    }\n    return [h, s, l];\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n/**\n * Converts an HSL color value to RGB. Expects 0..1 inputs, produces 0..255 outputs.\n */\nexport function hsl2rgb(color) {\n    let l = color[2];\n    if (color[1] == 0) {\n        l = Math.round(l * 255);\n        return [l, l, l];\n    }\n    else {\n        let s = color[1];\n        let q = (l < 0.5 ? l * (1 + s) : l + s - l * s);\n        let p = 2 * l - q;\n        let r = hue2rgb(p, q, color[0] + 1 / 3);\n        let g = hue2rgb(p, q, color[0]);\n        let b = hue2rgb(p, q, color[0] - 1 / 3);\n        return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n    }\n}\nexport function toRGB(color) {\n    let clamped = color.map(x => clamp(x, 0, 255));\n    return `rgb(${clamped.join(\",\")})`;\n}\nexport function toHex(color) {\n    let clamped = color.map(x => clamp(x, 0, 255).toString(16).padStart(2, \"0\"));\n    return `#${clamped.join(\"\")}`;\n}\nconst CACHE = {\n    \"black\": [0, 0, 0],\n    \"navy\": [0, 0, 128],\n    \"darkblue\": [0, 0, 139],\n    \"mediumblue\": [0, 0, 205],\n    \"blue\": [0, 0, 255],\n    \"darkgreen\": [0, 100, 0],\n    \"green\": [0, 128, 0],\n    \"teal\": [0, 128, 128],\n    \"darkcyan\": [0, 139, 139],\n    \"deepskyblue\": [0, 191, 255],\n    \"darkturquoise\": [0, 206, 209],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"lime\": [0, 255, 0],\n    \"springgreen\": [0, 255, 127],\n    \"aqua\": [0, 255, 255],\n    \"cyan\": [0, 255, 255],\n    \"midnightblue\": [25, 25, 112],\n    \"dodgerblue\": [30, 144, 255],\n    \"forestgreen\": [34, 139, 34],\n    \"seagreen\": [46, 139, 87],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"limegreen\": [50, 205, 50],\n    \"mediumseagreen\": [60, 179, 113],\n    \"turquoise\": [64, 224, 208],\n    \"royalblue\": [65, 105, 225],\n    \"steelblue\": [70, 130, 180],\n    \"darkslateblue\": [72, 61, 139],\n    \"mediumturquoise\": [72, 209, 204],\n    \"indigo\": [75, 0, 130],\n    \"darkolivegreen\": [85, 107, 47],\n    \"cadetblue\": [95, 158, 160],\n    \"cornflowerblue\": [100, 149, 237],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"slateblue\": [106, 90, 205],\n    \"olivedrab\": [107, 142, 35],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"mediumslateblue\": [123, 104, 238],\n    \"lawngreen\": [124, 252, 0],\n    \"chartreuse\": [127, 255, 0],\n    \"aquamarine\": [127, 255, 212],\n    \"maroon\": [128, 0, 0],\n    \"purple\": [128, 0, 128],\n    \"olive\": [128, 128, 0],\n    \"gray\": [128, 128, 128],\n    \"grey\": [128, 128, 128],\n    \"skyblue\": [135, 206, 235],\n    \"lightskyblue\": [135, 206, 250],\n    \"blueviolet\": [138, 43, 226],\n    \"darkred\": [139, 0, 0],\n    \"darkmagenta\": [139, 0, 139],\n    \"saddlebrown\": [139, 69, 19],\n    \"darkseagreen\": [143, 188, 143],\n    \"lightgreen\": [144, 238, 144],\n    \"mediumpurple\": [147, 112, 216],\n    \"darkviolet\": [148, 0, 211],\n    \"palegreen\": [152, 251, 152],\n    \"darkorchid\": [153, 50, 204],\n    \"yellowgreen\": [154, 205, 50],\n    \"sienna\": [160, 82, 45],\n    \"brown\": [165, 42, 42],\n    \"darkgray\": [169, 169, 169],\n    \"darkgrey\": [169, 169, 169],\n    \"lightblue\": [173, 216, 230],\n    \"greenyellow\": [173, 255, 47],\n    \"paleturquoise\": [175, 238, 238],\n    \"lightsteelblue\": [176, 196, 222],\n    \"powderblue\": [176, 224, 230],\n    \"firebrick\": [178, 34, 34],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"mediumorchid\": [186, 85, 211],\n    \"rosybrown\": [188, 143, 143],\n    \"darkkhaki\": [189, 183, 107],\n    \"silver\": [192, 192, 192],\n    \"mediumvioletred\": [199, 21, 133],\n    \"indianred\": [205, 92, 92],\n    \"peru\": [205, 133, 63],\n    \"chocolate\": [210, 105, 30],\n    \"tan\": [210, 180, 140],\n    \"lightgray\": [211, 211, 211],\n    \"lightgrey\": [211, 211, 211],\n    \"palevioletred\": [216, 112, 147],\n    \"thistle\": [216, 191, 216],\n    \"orchid\": [218, 112, 214],\n    \"goldenrod\": [218, 165, 32],\n    \"crimson\": [220, 20, 60],\n    \"gainsboro\": [220, 220, 220],\n    \"plum\": [221, 160, 221],\n    \"burlywood\": [222, 184, 135],\n    \"lightcyan\": [224, 255, 255],\n    \"lavender\": [230, 230, 250],\n    \"darksalmon\": [233, 150, 122],\n    \"violet\": [238, 130, 238],\n    \"palegoldenrod\": [238, 232, 170],\n    \"lightcoral\": [240, 128, 128],\n    \"khaki\": [240, 230, 140],\n    \"aliceblue\": [240, 248, 255],\n    \"honeydew\": [240, 255, 240],\n    \"azure\": [240, 255, 255],\n    \"sandybrown\": [244, 164, 96],\n    \"wheat\": [245, 222, 179],\n    \"beige\": [245, 245, 220],\n    \"whitesmoke\": [245, 245, 245],\n    \"mintcream\": [245, 255, 250],\n    \"ghostwhite\": [248, 248, 255],\n    \"salmon\": [250, 128, 114],\n    \"antiquewhite\": [250, 235, 215],\n    \"linen\": [250, 240, 230],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"oldlace\": [253, 245, 230],\n    \"red\": [255, 0, 0],\n    \"fuchsia\": [255, 0, 255],\n    \"magenta\": [255, 0, 255],\n    \"deeppink\": [255, 20, 147],\n    \"orangered\": [255, 69, 0],\n    \"tomato\": [255, 99, 71],\n    \"hotpink\": [255, 105, 180],\n    \"coral\": [255, 127, 80],\n    \"darkorange\": [255, 140, 0],\n    \"lightsalmon\": [255, 160, 122],\n    \"orange\": [255, 165, 0],\n    \"lightpink\": [255, 182, 193],\n    \"pink\": [255, 192, 203],\n    \"gold\": [255, 215, 0],\n    \"peachpuff\": [255, 218, 185],\n    \"navajowhite\": [255, 222, 173],\n    \"moccasin\": [255, 228, 181],\n    \"bisque\": [255, 228, 196],\n    \"mistyrose\": [255, 228, 225],\n    \"blanchedalmond\": [255, 235, 205],\n    \"papayawhip\": [255, 239, 213],\n    \"lavenderblush\": [255, 240, 245],\n    \"seashell\": [255, 245, 238],\n    \"cornsilk\": [255, 248, 220],\n    \"lemonchiffon\": [255, 250, 205],\n    \"floralwhite\": [255, 250, 240],\n    \"snow\": [255, 250, 250],\n    \"yellow\": [255, 255, 0],\n    \"lightyellow\": [255, 255, 224],\n    \"ivory\": [255, 255, 240],\n    \"white\": [255, 255, 255]\n};\n","import Backend from \"./backend.js\";\nimport * as Color from \"../color.js\";\nfunction clearToAnsi(bg) {\n    return `\\x1b[0;48;5;${termcolor(bg)}m\\x1b[2J`;\n}\nfunction colorToAnsi(fg, bg) {\n    return `\\x1b[0;38;5;${termcolor(fg)};48;5;${termcolor(bg)}m`;\n}\nfunction positionToAnsi(x, y) {\n    return `\\x1b[${y + 1};${x + 1}H`;\n}\nfunction termcolor(color) {\n    const SRC_COLORS = 256.0;\n    const DST_COLORS = 6.0;\n    const COLOR_RATIO = DST_COLORS / SRC_COLORS;\n    let rgb = Color.fromString(color);\n    let r = Math.floor(rgb[0] * COLOR_RATIO);\n    let g = Math.floor(rgb[1] * COLOR_RATIO);\n    let b = Math.floor(rgb[2] * COLOR_RATIO);\n    return r * 36 + g * 6 + b * 1 + 16;\n}\nexport default class Term extends Backend {\n    constructor() {\n        super();\n        this._offset = [0, 0];\n        this._cursor = [-1, -1];\n        this._lastColor = \"\";\n    }\n    schedule(cb) { setTimeout(cb, 1000 / 60); }\n    setOptions(options) {\n        super.setOptions(options);\n        let size = [options.width, options.height];\n        let avail = this.computeSize();\n        this._offset = avail.map((val, index) => Math.floor((val - size[index]) / 2));\n    }\n    clear() {\n        process.stdout.write(clearToAnsi(this._options.bg));\n    }\n    draw(data, clearBefore) {\n        // determine where to draw what with what colors\n        let [x, y, ch, fg, bg] = data;\n        // determine if we need to move the terminal cursor\n        let dx = this._offset[0] + x;\n        let dy = this._offset[1] + y;\n        let size = this.computeSize();\n        if (dx < 0 || dx >= size[0]) {\n            return;\n        }\n        if (dy < 0 || dy >= size[1]) {\n            return;\n        }\n        if (dx !== this._cursor[0] || dy !== this._cursor[1]) {\n            process.stdout.write(positionToAnsi(dx, dy));\n            this._cursor[0] = dx;\n            this._cursor[1] = dy;\n        }\n        // terminals automatically clear, but if we're clearing when we're\n        // not otherwise provided with a character, just use a space instead\n        if (clearBefore) {\n            if (!ch) {\n                ch = \" \";\n            }\n        }\n        // if we're not clearing and not provided with a character, do nothing\n        if (!ch) {\n            return;\n        }\n        // determine if we need to change colors\n        let newColor = colorToAnsi(fg, bg);\n        if (newColor !== this._lastColor) {\n            process.stdout.write(newColor);\n            this._lastColor = newColor;\n        }\n        if (ch != '\\t') {\n            // write the provided symbol to the display\n            let chars = [].concat(ch);\n            process.stdout.write(chars[0]);\n        }\n        // update our position, given that we wrote a character\n        this._cursor[0]++;\n        if (this._cursor[0] >= size[0]) {\n            this._cursor[0] = 0;\n            this._cursor[1]++;\n        }\n    }\n    computeFontSize() { throw new Error(\"Terminal backend has no notion of font size\"); }\n    eventToPosition(x, y) { return [x, y]; }\n    computeSize() { return [process.stdout.columns, process.stdout.rows]; }\n}\n","/**\n * @namespace\n * Contains text tokenization and breaking routines\n */\nconst RE_COLORS = /%([bc]){([^}]*)}/g;\n// token types\nexport const TYPE_TEXT = 0;\nexport const TYPE_NEWLINE = 1;\nexport const TYPE_FG = 2;\nexport const TYPE_BG = 3;\n/**\n * Measure size of a resulting text block\n */\nexport function measure(str, maxWidth) {\n    let result = { width: 0, height: 1 };\n    let tokens = tokenize(str, maxWidth);\n    let lineWidth = 0;\n    for (let i = 0; i < tokens.length; i++) {\n        let token = tokens[i];\n        switch (token.type) {\n            case TYPE_TEXT:\n                lineWidth += token.value.length;\n                break;\n            case TYPE_NEWLINE:\n                result.height++;\n                result.width = Math.max(result.width, lineWidth);\n                lineWidth = 0;\n                break;\n        }\n    }\n    result.width = Math.max(result.width, lineWidth);\n    return result;\n}\n/**\n * Convert string to a series of a formatting commands\n */\nexport function tokenize(str, maxWidth) {\n    let result = [];\n    /* first tokenization pass - split texts and color formatting commands */\n    let offset = 0;\n    str.replace(RE_COLORS, function (match, type, name, index) {\n        /* string before */\n        let part = str.substring(offset, index);\n        if (part.length) {\n            result.push({\n                type: TYPE_TEXT,\n                value: part\n            });\n        }\n        /* color command */\n        result.push({\n            type: (type == \"c\" ? TYPE_FG : TYPE_BG),\n            value: name.trim()\n        });\n        offset = index + match.length;\n        return \"\";\n    });\n    /* last remaining part */\n    let part = str.substring(offset);\n    if (part.length) {\n        result.push({\n            type: TYPE_TEXT,\n            value: part\n        });\n    }\n    return breakLines(result, maxWidth);\n}\n/* insert line breaks into first-pass tokenized data */\nfunction breakLines(tokens, maxWidth) {\n    if (!maxWidth) {\n        maxWidth = Infinity;\n    }\n    let i = 0;\n    let lineLength = 0;\n    let lastTokenWithSpace = -1;\n    while (i < tokens.length) { /* take all text tokens, remove space, apply linebreaks */\n        let token = tokens[i];\n        if (token.type == TYPE_NEWLINE) { /* reset */\n            lineLength = 0;\n            lastTokenWithSpace = -1;\n        }\n        if (token.type != TYPE_TEXT) { /* skip non-text tokens */\n            i++;\n            continue;\n        }\n        /* remove spaces at the beginning of line */\n        while (lineLength == 0 && token.value.charAt(0) == \" \") {\n            token.value = token.value.substring(1);\n        }\n        /* forced newline? insert two new tokens after this one */\n        let index = token.value.indexOf(\"\\n\");\n        if (index != -1) {\n            token.value = breakInsideToken(tokens, i, index, true);\n            /* if there are spaces at the end, we must remove them (we do not want the line too long) */\n            let arr = token.value.split(\"\");\n            while (arr.length && arr[arr.length - 1] == \" \") {\n                arr.pop();\n            }\n            token.value = arr.join(\"\");\n        }\n        /* token degenerated? */\n        if (!token.value.length) {\n            tokens.splice(i, 1);\n            continue;\n        }\n        if (lineLength + token.value.length > maxWidth) { /* line too long, find a suitable breaking spot */\n            /* is it possible to break within this token? */\n            let index = -1;\n            while (1) {\n                let nextIndex = token.value.indexOf(\" \", index + 1);\n                if (nextIndex == -1) {\n                    break;\n                }\n                if (lineLength + nextIndex > maxWidth) {\n                    break;\n                }\n                index = nextIndex;\n            }\n            if (index != -1) { /* break at space within this one */\n                token.value = breakInsideToken(tokens, i, index, true);\n            }\n            else if (lastTokenWithSpace != -1) { /* is there a previous token where a break can occur? */\n                let token = tokens[lastTokenWithSpace];\n                let breakIndex = token.value.lastIndexOf(\" \");\n                token.value = breakInsideToken(tokens, lastTokenWithSpace, breakIndex, true);\n                i = lastTokenWithSpace;\n            }\n            else { /* force break in this token */\n                token.value = breakInsideToken(tokens, i, maxWidth - lineLength, false);\n            }\n        }\n        else { /* line not long, continue */\n            lineLength += token.value.length;\n            if (token.value.indexOf(\" \") != -1) {\n                lastTokenWithSpace = i;\n            }\n        }\n        i++; /* advance to next token */\n    }\n    tokens.push({ type: TYPE_NEWLINE }); /* insert fake newline to fix the last text line */\n    /* remove trailing space from text tokens before newlines */\n    let lastTextToken = null;\n    for (let i = 0; i < tokens.length; i++) {\n        let token = tokens[i];\n        switch (token.type) {\n            case TYPE_TEXT:\n                lastTextToken = token;\n                break;\n            case TYPE_NEWLINE:\n                if (lastTextToken) { /* remove trailing space */\n                    let arr = lastTextToken.value.split(\"\");\n                    while (arr.length && arr[arr.length - 1] == \" \") {\n                        arr.pop();\n                    }\n                    lastTextToken.value = arr.join(\"\");\n                }\n                lastTextToken = null;\n                break;\n        }\n    }\n    tokens.pop(); /* remove fake token */\n    return tokens;\n}\n/**\n * Create new tokens and insert them into the stream\n * @param {object[]} tokens\n * @param {int} tokenIndex Token being processed\n * @param {int} breakIndex Index within current token's value\n * @param {bool} removeBreakChar Do we want to remove the breaking character?\n * @returns {string} remaining unbroken token value\n */\nfunction breakInsideToken(tokens, tokenIndex, breakIndex, removeBreakChar) {\n    let newBreakToken = {\n        type: TYPE_NEWLINE\n    };\n    let newTextToken = {\n        type: TYPE_TEXT,\n        value: tokens[tokenIndex].value.substring(breakIndex + (removeBreakChar ? 1 : 0))\n    };\n    tokens.splice(tokenIndex + 1, 0, newBreakToken, newTextToken);\n    return tokens[tokenIndex].value.substring(0, breakIndex);\n}\n","/** Default with for display and map generators */\nexport let DEFAULT_WIDTH = 80;\n/** Default height for display and map generators */\nexport let DEFAULT_HEIGHT = 25;\nexport const DIRS = {\n    4: [[0, -1], [1, 0], [0, 1], [-1, 0]],\n    8: [[0, -1], [1, -1], [1, 0], [1, 1], [0, 1], [-1, 1], [-1, 0], [-1, -1]],\n    6: [[-1, -1], [1, -1], [2, 0], [1, 1], [-1, 1], [-2, 0]]\n};\nexport const KEYS = {\n    /** Cancel key. */\n    VK_CANCEL: 3,\n    /** Help key. */\n    VK_HELP: 6,\n    /** Backspace key. */\n    VK_BACK_SPACE: 8,\n    /** Tab key. */\n    VK_TAB: 9,\n    /** 5 key on Numpad when NumLock is unlocked. Or on Mac, clear key which is positioned at NumLock key. */\n    VK_CLEAR: 12,\n    /** Return/enter key on the main keyboard. */\n    VK_RETURN: 13,\n    /** Reserved, but not used. */\n    VK_ENTER: 14,\n    /** Shift key. */\n    VK_SHIFT: 16,\n    /** Control key. */\n    VK_CONTROL: 17,\n    /** Alt (Option on Mac) key. */\n    VK_ALT: 18,\n    /** Pause key. */\n    VK_PAUSE: 19,\n    /** Caps lock. */\n    VK_CAPS_LOCK: 20,\n    /** Escape key. */\n    VK_ESCAPE: 27,\n    /** Space bar. */\n    VK_SPACE: 32,\n    /** Page Up key. */\n    VK_PAGE_UP: 33,\n    /** Page Down key. */\n    VK_PAGE_DOWN: 34,\n    /** End key. */\n    VK_END: 35,\n    /** Home key. */\n    VK_HOME: 36,\n    /** Left arrow. */\n    VK_LEFT: 37,\n    /** Up arrow. */\n    VK_UP: 38,\n    /** Right arrow. */\n    VK_RIGHT: 39,\n    /** Down arrow. */\n    VK_DOWN: 40,\n    /** Print Screen key. */\n    VK_PRINTSCREEN: 44,\n    /** Ins(ert) key. */\n    VK_INSERT: 45,\n    /** Del(ete) key. */\n    VK_DELETE: 46,\n    /***/\n    VK_0: 48,\n    /***/\n    VK_1: 49,\n    /***/\n    VK_2: 50,\n    /***/\n    VK_3: 51,\n    /***/\n    VK_4: 52,\n    /***/\n    VK_5: 53,\n    /***/\n    VK_6: 54,\n    /***/\n    VK_7: 55,\n    /***/\n    VK_8: 56,\n    /***/\n    VK_9: 57,\n    /** Colon (:) key. Requires Gecko 15.0 */\n    VK_COLON: 58,\n    /** Semicolon (;) key. */\n    VK_SEMICOLON: 59,\n    /** Less-than (<) key. Requires Gecko 15.0 */\n    VK_LESS_THAN: 60,\n    /** Equals (=) key. */\n    VK_EQUALS: 61,\n    /** Greater-than (>) key. Requires Gecko 15.0 */\n    VK_GREATER_THAN: 62,\n    /** Question mark (?) key. Requires Gecko 15.0 */\n    VK_QUESTION_MARK: 63,\n    /** Atmark (@) key. Requires Gecko 15.0 */\n    VK_AT: 64,\n    /***/\n    VK_A: 65,\n    /***/\n    VK_B: 66,\n    /***/\n    VK_C: 67,\n    /***/\n    VK_D: 68,\n    /***/\n    VK_E: 69,\n    /***/\n    VK_F: 70,\n    /***/\n    VK_G: 71,\n    /***/\n    VK_H: 72,\n    /***/\n    VK_I: 73,\n    /***/\n    VK_J: 74,\n    /***/\n    VK_K: 75,\n    /***/\n    VK_L: 76,\n    /***/\n    VK_M: 77,\n    /***/\n    VK_N: 78,\n    /***/\n    VK_O: 79,\n    /***/\n    VK_P: 80,\n    /***/\n    VK_Q: 81,\n    /***/\n    VK_R: 82,\n    /***/\n    VK_S: 83,\n    /***/\n    VK_T: 84,\n    /***/\n    VK_U: 85,\n    /***/\n    VK_V: 86,\n    /***/\n    VK_W: 87,\n    /***/\n    VK_X: 88,\n    /***/\n    VK_Y: 89,\n    /***/\n    VK_Z: 90,\n    /***/\n    VK_CONTEXT_MENU: 93,\n    /** 0 on the numeric keypad. */\n    VK_NUMPAD0: 96,\n    /** 1 on the numeric keypad. */\n    VK_NUMPAD1: 97,\n    /** 2 on the numeric keypad. */\n    VK_NUMPAD2: 98,\n    /** 3 on the numeric keypad. */\n    VK_NUMPAD3: 99,\n    /** 4 on the numeric keypad. */\n    VK_NUMPAD4: 100,\n    /** 5 on the numeric keypad. */\n    VK_NUMPAD5: 101,\n    /** 6 on the numeric keypad. */\n    VK_NUMPAD6: 102,\n    /** 7 on the numeric keypad. */\n    VK_NUMPAD7: 103,\n    /** 8 on the numeric keypad. */\n    VK_NUMPAD8: 104,\n    /** 9 on the numeric keypad. */\n    VK_NUMPAD9: 105,\n    /** * on the numeric keypad. */\n    VK_MULTIPLY: 106,\n    /** + on the numeric keypad. */\n    VK_ADD: 107,\n    /***/\n    VK_SEPARATOR: 108,\n    /** - on the numeric keypad. */\n    VK_SUBTRACT: 109,\n    /** Decimal point on the numeric keypad. */\n    VK_DECIMAL: 110,\n    /** / on the numeric keypad. */\n    VK_DIVIDE: 111,\n    /** F1 key. */\n    VK_F1: 112,\n    /** F2 key. */\n    VK_F2: 113,\n    /** F3 key. */\n    VK_F3: 114,\n    /** F4 key. */\n    VK_F4: 115,\n    /** F5 key. */\n    VK_F5: 116,\n    /** F6 key. */\n    VK_F6: 117,\n    /** F7 key. */\n    VK_F7: 118,\n    /** F8 key. */\n    VK_F8: 119,\n    /** F9 key. */\n    VK_F9: 120,\n    /** F10 key. */\n    VK_F10: 121,\n    /** F11 key. */\n    VK_F11: 122,\n    /** F12 key. */\n    VK_F12: 123,\n    /** F13 key. */\n    VK_F13: 124,\n    /** F14 key. */\n    VK_F14: 125,\n    /** F15 key. */\n    VK_F15: 126,\n    /** F16 key. */\n    VK_F16: 127,\n    /** F17 key. */\n    VK_F17: 128,\n    /** F18 key. */\n    VK_F18: 129,\n    /** F19 key. */\n    VK_F19: 130,\n    /** F20 key. */\n    VK_F20: 131,\n    /** F21 key. */\n    VK_F21: 132,\n    /** F22 key. */\n    VK_F22: 133,\n    /** F23 key. */\n    VK_F23: 134,\n    /** F24 key. */\n    VK_F24: 135,\n    /** Num Lock key. */\n    VK_NUM_LOCK: 144,\n    /** Scroll Lock key. */\n    VK_SCROLL_LOCK: 145,\n    /** Circumflex (^) key. Requires Gecko 15.0 */\n    VK_CIRCUMFLEX: 160,\n    /** Exclamation (!) key. Requires Gecko 15.0 */\n    VK_EXCLAMATION: 161,\n    /** Double quote () key. Requires Gecko 15.0 */\n    VK_DOUBLE_QUOTE: 162,\n    /** Hash (#) key. Requires Gecko 15.0 */\n    VK_HASH: 163,\n    /** Dollar sign ($) key. Requires Gecko 15.0 */\n    VK_DOLLAR: 164,\n    /** Percent (%) key. Requires Gecko 15.0 */\n    VK_PERCENT: 165,\n    /** Ampersand (&) key. Requires Gecko 15.0 */\n    VK_AMPERSAND: 166,\n    /** Underscore (_) key. Requires Gecko 15.0 */\n    VK_UNDERSCORE: 167,\n    /** Open parenthesis (() key. Requires Gecko 15.0 */\n    VK_OPEN_PAREN: 168,\n    /** Close parenthesis ()) key. Requires Gecko 15.0 */\n    VK_CLOSE_PAREN: 169,\n    /* Asterisk (*) key. Requires Gecko 15.0 */\n    VK_ASTERISK: 170,\n    /** Plus (+) key. Requires Gecko 15.0 */\n    VK_PLUS: 171,\n    /** Pipe (|) key. Requires Gecko 15.0 */\n    VK_PIPE: 172,\n    /** Hyphen-US/docs/Minus (-) key. Requires Gecko 15.0 */\n    VK_HYPHEN_MINUS: 173,\n    /** Open curly bracket ({) key. Requires Gecko 15.0 */\n    VK_OPEN_CURLY_BRACKET: 174,\n    /** Close curly bracket (}) key. Requires Gecko 15.0 */\n    VK_CLOSE_CURLY_BRACKET: 175,\n    /** Tilde (~) key. Requires Gecko 15.0 */\n    VK_TILDE: 176,\n    /** Comma (,) key. */\n    VK_COMMA: 188,\n    /** Period (.) key. */\n    VK_PERIOD: 190,\n    /** Slash (/) key. */\n    VK_SLASH: 191,\n    /** Back tick (`) key. */\n    VK_BACK_QUOTE: 192,\n    /** Open square bracket ([) key. */\n    VK_OPEN_BRACKET: 219,\n    /** Back slash (\\) key. */\n    VK_BACK_SLASH: 220,\n    /** Close square bracket (]) key. */\n    VK_CLOSE_BRACKET: 221,\n    /** Quote (''') key. */\n    VK_QUOTE: 222,\n    /** Meta key on Linux, Command key on Mac. */\n    VK_META: 224,\n    /** AltGr key on Linux. Requires Gecko 15.0 */\n    VK_ALTGR: 225,\n    /** Windows logo key on Windows. Or Super or Hyper key on Linux. Requires Gecko 15.0 */\n    VK_WIN: 91,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_KANA: 21,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_HANGUL: 21,\n    /** 英数 key on Japanese Mac keyboard. Requires Gecko 15.0 */\n    VK_EISU: 22,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_JUNJA: 23,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_FINAL: 24,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_HANJA: 25,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_KANJI: 25,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_CONVERT: 28,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_NONCONVERT: 29,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_ACCEPT: 30,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_MODECHANGE: 31,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_SELECT: 41,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_PRINT: 42,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_EXECUTE: 43,\n    /** Linux support for this keycode was added in Gecko 4.0.\t */\n    VK_SLEEP: 95\n};\n","import RNG from \"./rng.js\";\n/**\n * @class (Markov process)-based string generator.\n * Copied from a <a href=\"http://www.roguebasin.roguelikedevelopment.org/index.php?title=Names_from_a_high_order_Markov_Process_and_a_simplified_Katz_back-off_scheme\">RogueBasin article</a>.\n * Offers configurable order and prior.\n */\nexport default class StringGenerator {\n    constructor(options) {\n        this._options = {\n            words: false,\n            order: 3,\n            prior: 0.001\n        };\n        Object.assign(this._options, options);\n        this._boundary = String.fromCharCode(0);\n        this._suffix = this._boundary;\n        this._prefix = [];\n        for (let i = 0; i < this._options.order; i++) {\n            this._prefix.push(this._boundary);\n        }\n        this._priorValues = {};\n        this._priorValues[this._boundary] = this._options.prior;\n        this._data = {};\n    }\n    /**\n     * Remove all learning data\n     */\n    clear() {\n        this._data = {};\n        this._priorValues = {};\n    }\n    /**\n     * @returns {string} Generated string\n     */\n    generate() {\n        let result = [this._sample(this._prefix)];\n        while (result[result.length - 1] != this._boundary) {\n            result.push(this._sample(result));\n        }\n        return this._join(result.slice(0, -1));\n    }\n    /**\n     * Observe (learn) a string from a training set\n     */\n    observe(string) {\n        let tokens = this._split(string);\n        for (let i = 0; i < tokens.length; i++) {\n            this._priorValues[tokens[i]] = this._options.prior;\n        }\n        tokens = this._prefix.concat(tokens).concat(this._suffix); /* add boundary symbols */\n        for (let i = this._options.order; i < tokens.length; i++) {\n            let context = tokens.slice(i - this._options.order, i);\n            let event = tokens[i];\n            for (let j = 0; j < context.length; j++) {\n                let subcontext = context.slice(j);\n                this._observeEvent(subcontext, event);\n            }\n        }\n    }\n    getStats() {\n        let parts = [];\n        let priorCount = Object.keys(this._priorValues).length;\n        priorCount--; // boundary\n        parts.push(\"distinct samples: \" + priorCount);\n        let dataCount = Object.keys(this._data).length;\n        let eventCount = 0;\n        for (let p in this._data) {\n            eventCount += Object.keys(this._data[p]).length;\n        }\n        parts.push(\"dictionary size (contexts): \" + dataCount);\n        parts.push(\"dictionary size (events): \" + eventCount);\n        return parts.join(\", \");\n    }\n    /**\n     * @param {string}\n     * @returns {string[]}\n     */\n    _split(str) {\n        return str.split(this._options.words ? /\\s+/ : \"\");\n    }\n    /**\n     * @param {string[]}\n     * @returns {string}\n     */\n    _join(arr) {\n        return arr.join(this._options.words ? \" \" : \"\");\n    }\n    /**\n     * @param {string[]} context\n     * @param {string} event\n     */\n    _observeEvent(context, event) {\n        let key = this._join(context);\n        if (!(key in this._data)) {\n            this._data[key] = {};\n        }\n        let data = this._data[key];\n        if (!(event in data)) {\n            data[event] = 0;\n        }\n        data[event]++;\n    }\n    /**\n     * @param {string[]}\n     * @returns {string}\n     */\n    _sample(context) {\n        context = this._backoff(context);\n        let key = this._join(context);\n        let data = this._data[key];\n        let available = {};\n        if (this._options.prior) {\n            for (let event in this._priorValues) {\n                available[event] = this._priorValues[event];\n            }\n            for (let event in data) {\n                available[event] += data[event];\n            }\n        }\n        else {\n            available = data;\n        }\n        return RNG.getWeightedValue(available);\n    }\n    /**\n     * @param {string[]}\n     * @returns {string[]}\n     */\n    _backoff(context) {\n        if (context.length > this._options.order) {\n            context = context.slice(-this._options.order);\n        }\n        else if (context.length < this._options.order) {\n            context = this._prefix.slice(0, this._options.order - context.length).concat(context);\n        }\n        while (!(this._join(context) in this._data) && context.length > 0) {\n            context = context.slice(1);\n        }\n        return context;\n    }\n}\n","import { MinHeap } from \"./MinHeap\";\nexport default class EventQueue {\n    /**\n     * @class Generic event queue: stores events and retrieves them based on their time\n     */\n    constructor() {\n        this._time = 0;\n        this._events = new MinHeap();\n    }\n    /**\n     * @returns {number} Elapsed time\n     */\n    getTime() { return this._time; }\n    /**\n     * Clear all scheduled events\n     */\n    clear() {\n        this._events = new MinHeap();\n        return this;\n    }\n    /**\n     * @param {?} event\n     * @param {number} time\n     */\n    add(event, time) {\n        this._events.push(event, time);\n    }\n    /**\n     * Locates the nearest event, advances time if necessary. Returns that event and removes it from the queue.\n     * @returns {? || null} The event previously added by addEvent, null if no event available\n     */\n    get() {\n        if (!this._events.len()) {\n            return null;\n        }\n        let { key: time, value: event } = this._events.pop();\n        if (time > 0) { /* advance */\n            this._time += time;\n            this._events.shift(-time);\n        }\n        return event;\n    }\n    /**\n     * Get the time associated with the given event\n     * @param {?} event\n     * @returns {number} time\n     */\n    getEventTime(event) {\n        const r = this._events.find(event);\n        if (r) {\n            const { key } = r;\n            return key;\n        }\n        return undefined;\n    }\n    /**\n     * Remove an event from the queue\n     * @param {?} event\n     * @returns {bool} success?\n     */\n    remove(event) {\n        return this._events.remove(event);\n    }\n    ;\n}\n","export class MinHeap {\n    constructor() {\n        this.heap = [];\n        this.timestamp = 0;\n    }\n    lessThan(a, b) {\n        return a.key == b.key ? a.timestamp < b.timestamp : a.key < b.key;\n    }\n    shift(v) {\n        this.heap = this.heap.map(({ key, value, timestamp }) => ({ key: key + v, value, timestamp }));\n    }\n    len() {\n        return this.heap.length;\n    }\n    push(value, key) {\n        this.timestamp += 1;\n        const loc = this.len();\n        this.heap.push({ value, timestamp: this.timestamp, key });\n        this.updateUp(loc);\n    }\n    pop() {\n        if (this.len() == 0) {\n            throw new Error(\"no element to pop\");\n        }\n        const top = this.heap[0];\n        if (this.len() > 1) {\n            this.heap[0] = this.heap.pop();\n            this.updateDown(0);\n        }\n        else {\n            this.heap.pop();\n        }\n        return top;\n    }\n    find(v) {\n        for (let i = 0; i < this.len(); i++) {\n            if (v == this.heap[i].value) {\n                return this.heap[i];\n            }\n        }\n        return null;\n    }\n    remove(v) {\n        let index = null;\n        for (let i = 0; i < this.len(); i++) {\n            if (v == this.heap[i].value) {\n                index = i;\n            }\n        }\n        if (index === null) {\n            return false;\n        }\n        if (this.len() > 1) {\n            let last = this.heap.pop();\n            if (last.value != v) { // if the last one is being removed, do nothing\n                this.heap[index] = last;\n                this.updateDown(index);\n            }\n            return true;\n        }\n        else {\n            this.heap.pop();\n        }\n        return true;\n    }\n    parentNode(x) {\n        return Math.floor((x - 1) / 2);\n    }\n    leftChildNode(x) {\n        return 2 * x + 1;\n    }\n    rightChildNode(x) {\n        return 2 * x + 2;\n    }\n    existNode(x) {\n        return x >= 0 && x < this.heap.length;\n    }\n    swap(x, y) {\n        const t = this.heap[x];\n        this.heap[x] = this.heap[y];\n        this.heap[y] = t;\n    }\n    minNode(numbers) {\n        const validnumbers = numbers.filter(this.existNode.bind(this));\n        let minimal = validnumbers[0];\n        for (const i of validnumbers) {\n            if (this.lessThan(this.heap[i], this.heap[minimal])) {\n                minimal = i;\n            }\n        }\n        return minimal;\n    }\n    updateUp(x) {\n        if (x == 0) {\n            return;\n        }\n        const parent = this.parentNode(x);\n        if (this.existNode(parent) && this.lessThan(this.heap[x], this.heap[parent])) {\n            this.swap(x, parent);\n            this.updateUp(parent);\n        }\n    }\n    updateDown(x) {\n        const leftChild = this.leftChildNode(x);\n        const rightChild = this.rightChildNode(x);\n        if (!this.existNode(leftChild)) {\n            return;\n        }\n        const m = this.minNode([x, leftChild, rightChild]);\n        if (m != x) {\n            this.swap(x, m);\n            this.updateDown(m);\n        }\n    }\n    debugPrint() {\n        console.log(this.heap);\n    }\n}\n","import Simple from \"./simple.js\";\nimport Speed from \"./speed.js\";\nimport Action from \"./action.js\";\nexport default { Simple, Speed, Action };\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Simple fair scheduler (round-robin style)\n */\nexport default class Simple extends Scheduler {\n    add(item, repeat) {\n        this._queue.add(item, 0);\n        return super.add(item, repeat);\n    }\n    next() {\n        if (this._current !== null && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, 0);\n        }\n        return super.next();\n    }\n}\n","import EventQueue from \"../eventqueue.js\";\nexport default class Scheduler {\n    /**\n     * @class Abstract scheduler\n     */\n    constructor() {\n        this._queue = new EventQueue();\n        this._repeat = [];\n        this._current = null;\n    }\n    /**\n     * @see ROT.EventQueue#getTime\n     */\n    getTime() { return this._queue.getTime(); }\n    /**\n     * @param {?} item\n     * @param {bool} repeat\n     */\n    add(item, repeat) {\n        if (repeat) {\n            this._repeat.push(item);\n        }\n        return this;\n    }\n    /**\n     * Get the time the given item is scheduled for\n     * @param {?} item\n     * @returns {number} time\n     */\n    getTimeOf(item) {\n        return this._queue.getEventTime(item);\n    }\n    /**\n     * Clear all items\n     */\n    clear() {\n        this._queue.clear();\n        this._repeat = [];\n        this._current = null;\n        return this;\n    }\n    /**\n     * Remove a previously added item\n     * @param {?} item\n     * @returns {bool} successful?\n     */\n    remove(item) {\n        let result = this._queue.remove(item);\n        let index = this._repeat.indexOf(item);\n        if (index != -1) {\n            this._repeat.splice(index, 1);\n        }\n        if (this._current == item) {\n            this._current = null;\n        }\n        return result;\n    }\n    /**\n     * Schedule next item\n     * @returns {?}\n     */\n    next() {\n        this._current = this._queue.get();\n        return this._current;\n    }\n}\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Speed-based scheduler\n */\nexport default class Speed extends Scheduler {\n    /**\n     * @param {object} item anything with \"getSpeed\" method\n     * @param {bool} repeat\n     * @param {number} [time=1/item.getSpeed()]\n     * @see ROT.Scheduler#add\n     */\n    add(item, repeat, time) {\n        this._queue.add(item, time !== undefined ? time : 1 / item.getSpeed());\n        return super.add(item, repeat);\n    }\n    /**\n     * @see ROT.Scheduler#next\n     */\n    next() {\n        if (this._current && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, 1 / this._current.getSpeed());\n        }\n        return super.next();\n    }\n}\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Action-based scheduler\n * @augments ROT.Scheduler\n */\nexport default class Action extends Scheduler {\n    constructor() {\n        super();\n        this._defaultDuration = 1; /* for newly added */\n        this._duration = this._defaultDuration; /* for this._current */\n    }\n    /**\n     * @param {object} item\n     * @param {bool} repeat\n     * @param {number} [time=1]\n     * @see ROT.Scheduler#add\n     */\n    add(item, repeat, time) {\n        this._queue.add(item, time || this._defaultDuration);\n        return super.add(item, repeat);\n    }\n    clear() {\n        this._duration = this._defaultDuration;\n        return super.clear();\n    }\n    remove(item) {\n        if (item == this._current) {\n            this._duration = this._defaultDuration;\n        }\n        return super.remove(item);\n    }\n    /**\n     * @see ROT.Scheduler#next\n     */\n    next() {\n        if (this._current !== null && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, this._duration || this._defaultDuration);\n            this._duration = this._defaultDuration;\n        }\n        return super.next();\n    }\n    /**\n     * Set duration for the active item\n     */\n    setDuration(time) {\n        if (this._current) {\n            this._duration = time;\n        }\n        return this;\n    }\n}\n","import DiscreteShadowcasting from \"./discrete-shadowcasting.js\";\nimport PreciseShadowcasting from \"./precise-shadowcasting.js\";\nimport RecursiveShadowcasting from \"./recursive-shadowcasting.js\";\nexport default { DiscreteShadowcasting, PreciseShadowcasting, RecursiveShadowcasting };\n","import FOV from \"./fov.js\";\n/**\n * @class Discrete shadowcasting algorithm. Obsoleted by Precise shadowcasting.\n * @augments ROT.FOV\n */\nexport default class DiscreteShadowcasting extends FOV {\n    compute(x, y, R, callback) {\n        /* this place is always visible */\n        callback(x, y, 0, 1);\n        /* standing in a dark place. FIXME is this a good idea?  */\n        if (!this._lightPasses(x, y)) {\n            return;\n        }\n        /* start and end angles */\n        let DATA = [];\n        let A, B, cx, cy, blocks;\n        /* analyze surrounding cells in concentric rings, starting from the center */\n        for (let r = 1; r <= R; r++) {\n            let neighbors = this._getCircle(x, y, r);\n            let angle = 360 / neighbors.length;\n            for (let i = 0; i < neighbors.length; i++) {\n                cx = neighbors[i][0];\n                cy = neighbors[i][1];\n                A = angle * (i - 0.5);\n                B = A + angle;\n                blocks = !this._lightPasses(cx, cy);\n                if (this._visibleCoords(Math.floor(A), Math.ceil(B), blocks, DATA)) {\n                    callback(cx, cy, r, 1);\n                }\n                if (DATA.length == 2 && DATA[0] == 0 && DATA[1] == 360) {\n                    return;\n                } /* cutoff? */\n            } /* for all cells in this ring */\n        } /* for all rings */\n    }\n    /**\n     * @param {int} A start angle\n     * @param {int} B end angle\n     * @param {bool} blocks Does current cell block visibility?\n     * @param {int[][]} DATA shadowed angle pairs\n     */\n    _visibleCoords(A, B, blocks, DATA) {\n        if (A < 0) {\n            let v1 = this._visibleCoords(0, B, blocks, DATA);\n            let v2 = this._visibleCoords(360 + A, 360, blocks, DATA);\n            return v1 || v2;\n        }\n        let index = 0;\n        while (index < DATA.length && DATA[index] < A) {\n            index++;\n        }\n        if (index == DATA.length) { /* completely new shadow */\n            if (blocks) {\n                DATA.push(A, B);\n            }\n            return true;\n        }\n        let count = 0;\n        if (index % 2) { /* this shadow starts in an existing shadow, or within its ending boundary */\n            while (index < DATA.length && DATA[index] < B) {\n                index++;\n                count++;\n            }\n            if (count == 0) {\n                return false;\n            }\n            if (blocks) {\n                if (count % 2) {\n                    DATA.splice(index - count, count, B);\n                }\n                else {\n                    DATA.splice(index - count, count);\n                }\n            }\n            return true;\n        }\n        else { /* this shadow starts outside an existing shadow, or within a starting boundary */\n            while (index < DATA.length && DATA[index] < B) {\n                index++;\n                count++;\n            }\n            /* visible when outside an existing shadow, or when overlapping */\n            if (A == DATA[index - count] && count == 1) {\n                return false;\n            }\n            if (blocks) {\n                if (count % 2) {\n                    DATA.splice(index - count, count, A);\n                }\n                else {\n                    DATA.splice(index - count, count, A, B);\n                }\n            }\n            return true;\n        }\n    }\n}\n","import { DIRS } from \"../constants.js\";\n;\n;\nexport default class FOV {\n    /**\n     * @class Abstract FOV algorithm\n     * @param {function} lightPassesCallback Does the light pass through x,y?\n     * @param {object} [options]\n     * @param {int} [options.topology=8] 4/6/8\n     */\n    constructor(lightPassesCallback, options = {}) {\n        this._lightPasses = lightPassesCallback;\n        this._options = Object.assign({ topology: 8 }, options);\n    }\n    /**\n     * Return all neighbors in a concentric ring\n     * @param {int} cx center-x\n     * @param {int} cy center-y\n     * @param {int} r range\n     */\n    _getCircle(cx, cy, r) {\n        let result = [];\n        let dirs, countFactor, startOffset;\n        switch (this._options.topology) {\n            case 4:\n                countFactor = 1;\n                startOffset = [0, 1];\n                dirs = [\n                    DIRS[8][7],\n                    DIRS[8][1],\n                    DIRS[8][3],\n                    DIRS[8][5]\n                ];\n                break;\n            case 6:\n                dirs = DIRS[6];\n                countFactor = 1;\n                startOffset = [-1, 1];\n                break;\n            case 8:\n                dirs = DIRS[4];\n                countFactor = 2;\n                startOffset = [-1, 1];\n                break;\n            default:\n                throw new Error(\"Incorrect topology for FOV computation\");\n                break;\n        }\n        /* starting neighbor */\n        let x = cx + startOffset[0] * r;\n        let y = cy + startOffset[1] * r;\n        /* circle */\n        for (let i = 0; i < dirs.length; i++) {\n            for (let j = 0; j < r * countFactor; j++) {\n                result.push([x, y]);\n                x += dirs[i][0];\n                y += dirs[i][1];\n            }\n        }\n        return result;\n    }\n}\n","import FOV from \"./fov.js\";\n/**\n * @class Precise shadowcasting algorithm\n * @augments ROT.FOV\n */\nexport default class PreciseShadowcasting extends FOV {\n    compute(x, y, R, callback) {\n        /* this place is always visible */\n        callback(x, y, 0, 1);\n        /* standing in a dark place. FIXME is this a good idea?  */\n        if (!this._lightPasses(x, y)) {\n            return;\n        }\n        /* list of all shadows */\n        let SHADOWS = [];\n        let cx, cy, blocks, A1, A2, visibility;\n        /* analyze surrounding cells in concentric rings, starting from the center */\n        for (let r = 1; r <= R; r++) {\n            let neighbors = this._getCircle(x, y, r);\n            let neighborCount = neighbors.length;\n            for (let i = 0; i < neighborCount; i++) {\n                cx = neighbors[i][0];\n                cy = neighbors[i][1];\n                /* shift half-an-angle backwards to maintain consistency of 0-th cells */\n                A1 = [i ? 2 * i - 1 : 2 * neighborCount - 1, 2 * neighborCount];\n                A2 = [2 * i + 1, 2 * neighborCount];\n                blocks = !this._lightPasses(cx, cy);\n                visibility = this._checkVisibility(A1, A2, blocks, SHADOWS);\n                if (visibility) {\n                    callback(cx, cy, r, visibility);\n                }\n                if (SHADOWS.length == 2 && SHADOWS[0][0] == 0 && SHADOWS[1][0] == SHADOWS[1][1]) {\n                    return;\n                } /* cutoff? */\n            } /* for all cells in this ring */\n        } /* for all rings */\n    }\n    /**\n     * @param {int[2]} A1 arc start\n     * @param {int[2]} A2 arc end\n     * @param {bool} blocks Does current arc block visibility?\n     * @param {int[][]} SHADOWS list of active shadows\n     */\n    _checkVisibility(A1, A2, blocks, SHADOWS) {\n        if (A1[0] > A2[0]) { /* split into two sub-arcs */\n            let v1 = this._checkVisibility(A1, [A1[1], A1[1]], blocks, SHADOWS);\n            let v2 = this._checkVisibility([0, 1], A2, blocks, SHADOWS);\n            return (v1 + v2) / 2;\n        }\n        /* index1: first shadow >= A1 */\n        let index1 = 0, edge1 = false;\n        while (index1 < SHADOWS.length) {\n            let old = SHADOWS[index1];\n            let diff = old[0] * A1[1] - A1[0] * old[1];\n            if (diff >= 0) { /* old >= A1 */\n                if (diff == 0 && !(index1 % 2)) {\n                    edge1 = true;\n                }\n                break;\n            }\n            index1++;\n        }\n        /* index2: last shadow <= A2 */\n        let index2 = SHADOWS.length, edge2 = false;\n        while (index2--) {\n            let old = SHADOWS[index2];\n            let diff = A2[0] * old[1] - old[0] * A2[1];\n            if (diff >= 0) { /* old <= A2 */\n                if (diff == 0 && (index2 % 2)) {\n                    edge2 = true;\n                }\n                break;\n            }\n        }\n        let visible = true;\n        if (index1 == index2 && (edge1 || edge2)) { /* subset of existing shadow, one of the edges match */\n            visible = false;\n        }\n        else if (edge1 && edge2 && index1 + 1 == index2 && (index2 % 2)) { /* completely equivalent with existing shadow */\n            visible = false;\n        }\n        else if (index1 > index2 && (index1 % 2)) { /* subset of existing shadow, not touching */\n            visible = false;\n        }\n        if (!visible) {\n            return 0;\n        } /* fast case: not visible */\n        let visibleLength;\n        /* compute the length of visible arc, adjust list of shadows (if blocking) */\n        let remove = index2 - index1 + 1;\n        if (remove % 2) {\n            if (index1 % 2) { /* first edge within existing shadow, second outside */\n                let P = SHADOWS[index1];\n                visibleLength = (A2[0] * P[1] - P[0] * A2[1]) / (P[1] * A2[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A2);\n                }\n            }\n            else { /* second edge within existing shadow, first outside */\n                let P = SHADOWS[index2];\n                visibleLength = (P[0] * A1[1] - A1[0] * P[1]) / (A1[1] * P[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A1);\n                }\n            }\n        }\n        else {\n            if (index1 % 2) { /* both edges within existing shadows */\n                let P1 = SHADOWS[index1];\n                let P2 = SHADOWS[index2];\n                visibleLength = (P2[0] * P1[1] - P1[0] * P2[1]) / (P1[1] * P2[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove);\n                }\n            }\n            else { /* both edges outside existing shadows */\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A1, A2);\n                }\n                return 1; /* whole arc visible! */\n            }\n        }\n        let arcLength = (A2[0] * A1[1] - A1[0] * A2[1]) / (A1[1] * A2[1]);\n        return visibleLength / arcLength;\n    }\n}\n","import FOV from \"./fov.js\";\n/** Octants used for translating recursive shadowcasting offsets */\nconst OCTANTS = [\n    [-1, 0, 0, 1],\n    [0, -1, 1, 0],\n    [0, -1, -1, 0],\n    [-1, 0, 0, -1],\n    [1, 0, 0, -1],\n    [0, 1, -1, 0],\n    [0, 1, 1, 0],\n    [1, 0, 0, 1]\n];\n/**\n * @class Recursive shadowcasting algorithm\n * Currently only supports 4/8 topologies, not hexagonal.\n * Based on Peter Harkins' implementation of Björn Bergström's algorithm described here: http://www.roguebasin.com/index.php?title=FOV_using_recursive_shadowcasting\n * @augments ROT.FOV\n */\nexport default class RecursiveShadowcasting extends FOV {\n    /**\n     * Compute visibility for a 360-degree circle\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {function} callback\n     */\n    compute(x, y, R, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        for (let i = 0; i < OCTANTS.length; i++) {\n            this._renderOctant(x, y, OCTANTS[i], R, callback);\n        }\n    }\n    /**\n     * Compute visibility for a 180-degree arc\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n     * @param {function} callback\n     */\n    compute180(x, y, R, dir, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        let previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 180 degrees\n        let nextPreviousOctant = (dir - 2 + 8) % 8; //Need to retrieve the previous two octants to render a full 180 degrees\n        let nextOctant = (dir + 1 + 8) % 8; //Need to grab to next octant to render a full 180 degrees\n        this._renderOctant(x, y, OCTANTS[nextPreviousOctant], R, callback);\n        this._renderOctant(x, y, OCTANTS[previousOctant], R, callback);\n        this._renderOctant(x, y, OCTANTS[dir], R, callback);\n        this._renderOctant(x, y, OCTANTS[nextOctant], R, callback);\n    }\n    ;\n    /**\n     * Compute visibility for a 90-degree arc\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n     * @param {function} callback\n     */\n    compute90(x, y, R, dir, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        let previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 90 degrees\n        this._renderOctant(x, y, OCTANTS[dir], R, callback);\n        this._renderOctant(x, y, OCTANTS[previousOctant], R, callback);\n    }\n    /**\n     * Render one octant (45-degree arc) of the viewshed\n     * @param {int} x\n     * @param {int} y\n     * @param {int} octant Octant to be rendered\n     * @param {int} R Maximum visibility radius\n     * @param {function} callback\n     */\n    _renderOctant(x, y, octant, R, callback) {\n        //Radius incremented by 1 to provide same coverage area as other shadowcasting radiuses\n        this._castVisibility(x, y, 1, 1.0, 0.0, R + 1, octant[0], octant[1], octant[2], octant[3], callback);\n    }\n    /**\n     * Actually calculates the visibility\n     * @param {int} startX The starting X coordinate\n     * @param {int} startY The starting Y coordinate\n     * @param {int} row The row to render\n     * @param {float} visSlopeStart The slope to start at\n     * @param {float} visSlopeEnd The slope to end at\n     * @param {int} radius The radius to reach out to\n     * @param {int} xx\n     * @param {int} xy\n     * @param {int} yx\n     * @param {int} yy\n     * @param {function} callback The callback to use when we hit a block that is visible\n     */\n    _castVisibility(startX, startY, row, visSlopeStart, visSlopeEnd, radius, xx, xy, yx, yy, callback) {\n        if (visSlopeStart < visSlopeEnd) {\n            return;\n        }\n        for (let i = row; i <= radius; i++) {\n            let dx = -i - 1;\n            let dy = -i;\n            let blocked = false;\n            let newStart = 0;\n            //'Row' could be column, names here assume octant 0 and would be flipped for half the octants\n            while (dx <= 0) {\n                dx += 1;\n                //Translate from relative coordinates to map coordinates\n                let mapX = startX + dx * xx + dy * xy;\n                let mapY = startY + dx * yx + dy * yy;\n                //Range of the row\n                let slopeStart = (dx - 0.5) / (dy + 0.5);\n                let slopeEnd = (dx + 0.5) / (dy - 0.5);\n                //Ignore if not yet at left edge of Octant\n                if (slopeEnd > visSlopeStart) {\n                    continue;\n                }\n                //Done if past right edge\n                if (slopeStart < visSlopeEnd) {\n                    break;\n                }\n                //If it's in range, it's visible\n                if ((dx * dx + dy * dy) < (radius * radius)) {\n                    callback(mapX, mapY, i, 1);\n                }\n                if (!blocked) {\n                    //If tile is a blocking tile, cast around it\n                    if (!this._lightPasses(mapX, mapY) && i < radius) {\n                        blocked = true;\n                        this._castVisibility(startX, startY, i + 1, visSlopeStart, slopeStart, radius, xx, xy, yx, yy, callback);\n                        newStart = slopeEnd;\n                    }\n                }\n                else {\n                    //Keep narrowing if scanning across a block\n                    if (!this._lightPasses(mapX, mapY)) {\n                        newStart = slopeEnd;\n                        continue;\n                    }\n                    //Block has ended\n                    blocked = false;\n                    visSlopeStart = newStart;\n                }\n            }\n            if (blocked) {\n                break;\n            }\n        }\n    }\n}\n","import Arena from \"./arena.js\";\nimport Uniform from \"./uniform.js\";\nimport Cellular from \"./cellular.js\";\nimport Digger from \"./digger.js\";\nimport EllerMaze from \"./ellermaze.js\";\nimport DividedMaze from \"./dividedmaze.js\";\nimport IceyMaze from \"./iceymaze.js\";\nimport Rogue from \"./rogue.js\";\nexport default { Arena, Uniform, Cellular, Digger, EllerMaze, DividedMaze, IceyMaze, Rogue };\n","import Map from \"./map.js\";\n/**\n * @class Simple empty rectangular room\n * @augments ROT.Map\n */\nexport default class Arena extends Map {\n    create(callback) {\n        let w = this._width - 1;\n        let h = this._height - 1;\n        for (let i = 0; i <= w; i++) {\n            for (let j = 0; j <= h; j++) {\n                let empty = (i && j && i < w && j < h);\n                callback(i, j, empty ? 0 : 1);\n            }\n        }\n        return this;\n    }\n}\n","import { DEFAULT_WIDTH, DEFAULT_HEIGHT } from \"../constants.js\";\n;\nexport default class Map {\n    /**\n     * @class Base map generator\n     * @param {int} [width=ROT.DEFAULT_WIDTH]\n     * @param {int} [height=ROT.DEFAULT_HEIGHT]\n     */\n    constructor(width = DEFAULT_WIDTH, height = DEFAULT_HEIGHT) {\n        this._width = width;\n        this._height = height;\n    }\n    ;\n    _fillMap(value) {\n        let map = [];\n        for (let i = 0; i < this._width; i++) {\n            map.push([]);\n            for (let j = 0; j < this._height; j++) {\n                map[i].push(value);\n            }\n        }\n        return map;\n    }\n}\n","import Dungeon from \"./dungeon.js\";\nimport { Room, Corridor } from \"./features.js\";\nimport RNG from \"../rng.js\";\n;\n/**\n * @class Dungeon generator which tries to fill the space evenly. Generates independent rooms and tries to connect them.\n * @augments ROT.Map.Dungeon\n */\nexport default class Uniform extends Dungeon {\n    constructor(width, height, options) {\n        super(width, height);\n        this._options = {\n            roomWidth: [3, 9],\n            roomHeight: [3, 5],\n            roomDugPercentage: 0.1,\n            timeLimit: 1000 /* we stop after this much time has passed (msec) */\n        };\n        Object.assign(this._options, options);\n        this._map = [];\n        this._dug = 0;\n        this._roomAttempts = 20; /* new room is created N-times until is considered as impossible to generate */\n        this._corridorAttempts = 20; /* corridors are tried N-times until the level is considered as impossible to connect */\n        this._connected = []; /* list of already connected rooms */\n        this._unconnected = []; /* list of remaining unconnected rooms */\n        this._digCallback = this._digCallback.bind(this);\n        this._canBeDugCallback = this._canBeDugCallback.bind(this);\n        this._isWallCallback = this._isWallCallback.bind(this);\n    }\n    /**\n     * Create a map. If the time limit has been hit, returns null.\n     * @see ROT.Map#create\n     */\n    create(callback) {\n        let t1 = Date.now();\n        while (1) {\n            let t2 = Date.now();\n            if (t2 - t1 > this._options.timeLimit) {\n                return null;\n            } /* time limit! */\n            this._map = this._fillMap(1);\n            this._dug = 0;\n            this._rooms = [];\n            this._unconnected = [];\n            this._generateRooms();\n            if (this._rooms.length < 2) {\n                continue;\n            }\n            if (this._generateCorridors()) {\n                break;\n            }\n        }\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this._map[i][j]);\n                }\n            }\n        }\n        return this;\n    }\n    /**\n     * Generates a suitable amount of rooms\n     */\n    _generateRooms() {\n        let w = this._width - 2;\n        let h = this._height - 2;\n        let room;\n        do {\n            room = this._generateRoom();\n            if (this._dug / (w * h) > this._options.roomDugPercentage) {\n                break;\n            } /* achieved requested amount of free space */\n        } while (room);\n        /* either enough rooms, or not able to generate more of them :) */\n    }\n    /**\n     * Try to generate one room\n     */\n    _generateRoom() {\n        let count = 0;\n        while (count < this._roomAttempts) {\n            count++;\n            let room = Room.createRandom(this._width, this._height, this._options);\n            if (!room.isValid(this._isWallCallback, this._canBeDugCallback)) {\n                continue;\n            }\n            room.create(this._digCallback);\n            this._rooms.push(room);\n            return room;\n        }\n        /* no room was generated in a given number of attempts */\n        return null;\n    }\n    /**\n     * Generates connectors beween rooms\n     * @returns {bool} success Was this attempt successfull?\n     */\n    _generateCorridors() {\n        let cnt = 0;\n        while (cnt < this._corridorAttempts) {\n            cnt++;\n            this._corridors = [];\n            /* dig rooms into a clear map */\n            this._map = this._fillMap(1);\n            for (let i = 0; i < this._rooms.length; i++) {\n                let room = this._rooms[i];\n                room.clearDoors();\n                room.create(this._digCallback);\n            }\n            this._unconnected = RNG.shuffle(this._rooms.slice());\n            this._connected = [];\n            if (this._unconnected.length) {\n                this._connected.push(this._unconnected.pop());\n            } /* first one is always connected */\n            while (1) {\n                /* 1. pick random connected room */\n                let connected = RNG.getItem(this._connected);\n                if (!connected) {\n                    break;\n                }\n                /* 2. find closest unconnected */\n                let room1 = this._closestRoom(this._unconnected, connected);\n                if (!room1) {\n                    break;\n                }\n                /* 3. connect it to closest connected */\n                let room2 = this._closestRoom(this._connected, room1);\n                if (!room2) {\n                    break;\n                }\n                let ok = this._connectRooms(room1, room2);\n                if (!ok) {\n                    break;\n                } /* stop connecting, re-shuffle */\n                if (!this._unconnected.length) {\n                    return true;\n                } /* done; no rooms remain */\n            }\n        }\n        return false;\n    }\n    ;\n    /**\n     * For a given room, find the closest one from the list\n     */\n    _closestRoom(rooms, room) {\n        let dist = Infinity;\n        let center = room.getCenter();\n        let result = null;\n        for (let i = 0; i < rooms.length; i++) {\n            let r = rooms[i];\n            let c = r.getCenter();\n            let dx = c[0] - center[0];\n            let dy = c[1] - center[1];\n            let d = dx * dx + dy * dy;\n            if (d < dist) {\n                dist = d;\n                result = r;\n            }\n        }\n        return result;\n    }\n    _connectRooms(room1, room2) {\n        /*\n            room1.debug();\n            room2.debug();\n        */\n        let center1 = room1.getCenter();\n        let center2 = room2.getCenter();\n        let diffX = center2[0] - center1[0];\n        let diffY = center2[1] - center1[1];\n        let start;\n        let end;\n        let dirIndex1, dirIndex2, min, max, index;\n        if (Math.abs(diffX) < Math.abs(diffY)) { /* first try connecting north-south walls */\n            dirIndex1 = (diffY > 0 ? 2 : 0);\n            dirIndex2 = (dirIndex1 + 2) % 4;\n            min = room2.getLeft();\n            max = room2.getRight();\n            index = 0;\n        }\n        else { /* first try connecting east-west walls */\n            dirIndex1 = (diffX > 0 ? 1 : 3);\n            dirIndex2 = (dirIndex1 + 2) % 4;\n            min = room2.getTop();\n            max = room2.getBottom();\n            index = 1;\n        }\n        start = this._placeInWall(room1, dirIndex1); /* corridor will start here */\n        if (!start) {\n            return false;\n        }\n        if (start[index] >= min && start[index] <= max) { /* possible to connect with straight line (I-like) */\n            end = start.slice();\n            let value = 0;\n            switch (dirIndex2) {\n                case 0:\n                    value = room2.getTop() - 1;\n                    break;\n                case 1:\n                    value = room2.getRight() + 1;\n                    break;\n                case 2:\n                    value = room2.getBottom() + 1;\n                    break;\n                case 3:\n                    value = room2.getLeft() - 1;\n                    break;\n            }\n            end[(index + 1) % 2] = value;\n            this._digLine([start, end]);\n        }\n        else if (start[index] < min - 1 || start[index] > max + 1) { /* need to switch target wall (L-like) */\n            let diff = start[index] - center2[index];\n            let rotation = 0;\n            switch (dirIndex2) {\n                case 0:\n                case 1:\n                    rotation = (diff < 0 ? 3 : 1);\n                    break;\n                case 2:\n                case 3:\n                    rotation = (diff < 0 ? 1 : 3);\n                    break;\n            }\n            dirIndex2 = (dirIndex2 + rotation) % 4;\n            end = this._placeInWall(room2, dirIndex2);\n            if (!end) {\n                return false;\n            }\n            let mid = [0, 0];\n            mid[index] = start[index];\n            let index2 = (index + 1) % 2;\n            mid[index2] = end[index2];\n            this._digLine([start, mid, end]);\n        }\n        else { /* use current wall pair, but adjust the line in the middle (S-like) */\n            let index2 = (index + 1) % 2;\n            end = this._placeInWall(room2, dirIndex2);\n            if (!end) {\n                return false;\n            }\n            let mid = Math.round((end[index2] + start[index2]) / 2);\n            let mid1 = [0, 0];\n            let mid2 = [0, 0];\n            mid1[index] = start[index];\n            mid1[index2] = mid;\n            mid2[index] = end[index];\n            mid2[index2] = mid;\n            this._digLine([start, mid1, mid2, end]);\n        }\n        room1.addDoor(start[0], start[1]);\n        room2.addDoor(end[0], end[1]);\n        index = this._unconnected.indexOf(room1);\n        if (index != -1) {\n            this._unconnected.splice(index, 1);\n            this._connected.push(room1);\n        }\n        index = this._unconnected.indexOf(room2);\n        if (index != -1) {\n            this._unconnected.splice(index, 1);\n            this._connected.push(room2);\n        }\n        return true;\n    }\n    _placeInWall(room, dirIndex) {\n        let start = [0, 0];\n        let dir = [0, 0];\n        let length = 0;\n        switch (dirIndex) {\n            case 0:\n                dir = [1, 0];\n                start = [room.getLeft(), room.getTop() - 1];\n                length = room.getRight() - room.getLeft() + 1;\n                break;\n            case 1:\n                dir = [0, 1];\n                start = [room.getRight() + 1, room.getTop()];\n                length = room.getBottom() - room.getTop() + 1;\n                break;\n            case 2:\n                dir = [1, 0];\n                start = [room.getLeft(), room.getBottom() + 1];\n                length = room.getRight() - room.getLeft() + 1;\n                break;\n            case 3:\n                dir = [0, 1];\n                start = [room.getLeft() - 1, room.getTop()];\n                length = room.getBottom() - room.getTop() + 1;\n                break;\n        }\n        let avail = [];\n        let lastBadIndex = -2;\n        for (let i = 0; i < length; i++) {\n            let x = start[0] + i * dir[0];\n            let y = start[1] + i * dir[1];\n            avail.push(null);\n            let isWall = (this._map[x][y] == 1);\n            if (isWall) {\n                if (lastBadIndex != i - 1) {\n                    avail[i] = [x, y];\n                }\n            }\n            else {\n                lastBadIndex = i;\n                if (i) {\n                    avail[i - 1] = null;\n                }\n            }\n        }\n        for (let i = avail.length - 1; i >= 0; i--) {\n            if (!avail[i]) {\n                avail.splice(i, 1);\n            }\n        }\n        return (avail.length ? RNG.getItem(avail) : null);\n    }\n    /**\n     * Dig a polyline.\n     */\n    _digLine(points) {\n        for (let i = 1; i < points.length; i++) {\n            let start = points[i - 1];\n            let end = points[i];\n            let corridor = new Corridor(start[0], start[1], end[0], end[1]);\n            corridor.create(this._digCallback);\n            this._corridors.push(corridor);\n        }\n    }\n    _digCallback(x, y, value) {\n        this._map[x][y] = value;\n        if (value == 0) {\n            this._dug++;\n        }\n    }\n    _isWallCallback(x, y) {\n        if (x < 0 || y < 0 || x >= this._width || y >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _canBeDugCallback(x, y) {\n        if (x < 1 || y < 1 || x + 1 >= this._width || y + 1 >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n}\n","import Map from \"./map.js\";\n/**\n * @class Dungeon map: has rooms and corridors\n * @augments ROT.Map\n */\nexport default class Dungeon extends Map {\n    constructor(width, height) {\n        super(width, height);\n        this._rooms = [];\n        this._corridors = [];\n    }\n    /**\n     * Get all generated rooms\n     * @returns {ROT.Map.Feature.Room[]}\n     */\n    getRooms() { return this._rooms; }\n    /**\n     * Get all generated corridors\n     * @returns {ROT.Map.Feature.Corridor[]}\n     */\n    getCorridors() { return this._corridors; }\n}\n","import RNG from \"../rng.js\";\n;\n/**\n * @class Dungeon feature; has own .create() method\n */\nclass Feature {\n}\n/**\n * @class Room\n * @augments ROT.Map.Feature\n * @param {int} x1\n * @param {int} y1\n * @param {int} x2\n * @param {int} y2\n * @param {int} [doorX]\n * @param {int} [doorY]\n */\nexport class Room extends Feature {\n    constructor(x1, y1, x2, y2, doorX, doorY) {\n        super();\n        this._x1 = x1;\n        this._y1 = y1;\n        this._x2 = x2;\n        this._y2 = y2;\n        this._doors = {};\n        if (doorX !== undefined && doorY !== undefined) {\n            this.addDoor(doorX, doorY);\n        }\n    }\n    ;\n    /**\n     * Room of random size, with a given doors and direction\n     */\n    static createRandomAt(x, y, dx, dy, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        if (dx == 1) { /* to the right */\n            let y2 = y - Math.floor(RNG.getUniform() * height);\n            return new this(x + 1, y2, x + width, y2 + height - 1, x, y);\n        }\n        if (dx == -1) { /* to the left */\n            let y2 = y - Math.floor(RNG.getUniform() * height);\n            return new this(x - width, y2, x - 1, y2 + height - 1, x, y);\n        }\n        if (dy == 1) { /* to the bottom */\n            let x2 = x - Math.floor(RNG.getUniform() * width);\n            return new this(x2, y + 1, x2 + width - 1, y + height, x, y);\n        }\n        if (dy == -1) { /* to the top */\n            let x2 = x - Math.floor(RNG.getUniform() * width);\n            return new this(x2, y - height, x2 + width - 1, y - 1, x, y);\n        }\n        throw new Error(\"dx or dy must be 1 or -1\");\n    }\n    /**\n     * Room of random size, positioned around center coords\n     */\n    static createRandomCenter(cx, cy, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        let x1 = cx - Math.floor(RNG.getUniform() * width);\n        let y1 = cy - Math.floor(RNG.getUniform() * height);\n        let x2 = x1 + width - 1;\n        let y2 = y1 + height - 1;\n        return new this(x1, y1, x2, y2);\n    }\n    /**\n     * Room of random size within a given dimensions\n     */\n    static createRandom(availWidth, availHeight, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        let left = availWidth - width - 1;\n        let top = availHeight - height - 1;\n        let x1 = 1 + Math.floor(RNG.getUniform() * left);\n        let y1 = 1 + Math.floor(RNG.getUniform() * top);\n        let x2 = x1 + width - 1;\n        let y2 = y1 + height - 1;\n        return new this(x1, y1, x2, y2);\n    }\n    addDoor(x, y) {\n        this._doors[x + \",\" + y] = 1;\n        return this;\n    }\n    /**\n     * @param {function}\n     */\n    getDoors(cb) {\n        for (let key in this._doors) {\n            let parts = key.split(\",\");\n            cb(parseInt(parts[0]), parseInt(parts[1]));\n        }\n        return this;\n    }\n    clearDoors() {\n        this._doors = {};\n        return this;\n    }\n    addDoors(isWallCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x != left && x != right && y != top && y != bottom) {\n                    continue;\n                }\n                if (isWallCallback(x, y)) {\n                    continue;\n                }\n                this.addDoor(x, y);\n            }\n        }\n        return this;\n    }\n    debug() {\n        console.log(\"room\", this._x1, this._y1, this._x2, this._y2);\n    }\n    isValid(isWallCallback, canBeDugCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x == left || x == right || y == top || y == bottom) {\n                    if (!isWallCallback(x, y)) {\n                        return false;\n                    }\n                }\n                else {\n                    if (!canBeDugCallback(x, y)) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n    /**\n     * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty, 1 = wall, 2 = door. Multiple doors are allowed.\n     */\n    create(digCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        let value = 0;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x + \",\" + y in this._doors) {\n                    value = 2;\n                }\n                else if (x == left || x == right || y == top || y == bottom) {\n                    value = 1;\n                }\n                else {\n                    value = 0;\n                }\n                digCallback(x, y, value);\n            }\n        }\n    }\n    getCenter() {\n        return [Math.round((this._x1 + this._x2) / 2), Math.round((this._y1 + this._y2) / 2)];\n    }\n    getLeft() { return this._x1; }\n    getRight() { return this._x2; }\n    getTop() { return this._y1; }\n    getBottom() { return this._y2; }\n}\n/**\n * @class Corridor\n * @augments ROT.Map.Feature\n * @param {int} startX\n * @param {int} startY\n * @param {int} endX\n * @param {int} endY\n */\nexport class Corridor extends Feature {\n    constructor(startX, startY, endX, endY) {\n        super();\n        this._startX = startX;\n        this._startY = startY;\n        this._endX = endX;\n        this._endY = endY;\n        this._endsWithAWall = true;\n    }\n    static createRandomAt(x, y, dx, dy, options) {\n        let min = options.corridorLength[0];\n        let max = options.corridorLength[1];\n        let length = RNG.getUniformInt(min, max);\n        return new this(x, y, x + dx * length, y + dy * length);\n    }\n    debug() {\n        console.log(\"corridor\", this._startX, this._startY, this._endX, this._endY);\n    }\n    isValid(isWallCallback, canBeDugCallback) {\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        let length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        let nx = dy;\n        let ny = -dx;\n        let ok = true;\n        for (let i = 0; i < length; i++) {\n            let x = sx + i * dx;\n            let y = sy + i * dy;\n            if (!canBeDugCallback(x, y)) {\n                ok = false;\n            }\n            if (!isWallCallback(x + nx, y + ny)) {\n                ok = false;\n            }\n            if (!isWallCallback(x - nx, y - ny)) {\n                ok = false;\n            }\n            if (!ok) {\n                length = i;\n                this._endX = x - dx;\n                this._endY = y - dy;\n                break;\n            }\n        }\n        /**\n         * If the length degenerated, this corridor might be invalid\n         */\n        /* not supported */\n        if (length == 0) {\n            return false;\n        }\n        /* length 1 allowed only if the next space is empty */\n        if (length == 1 && isWallCallback(this._endX + dx, this._endY + dy)) {\n            return false;\n        }\n        /**\n         * We do not want the corridor to crash into a corner of a room;\n         * if any of the ending corners is empty, the N+1th cell of this corridor must be empty too.\n         *\n         * Situation:\n         * #######1\n         * .......?\n         * #######2\n         *\n         * The corridor was dug from left to right.\n         * 1, 2 - problematic corners, ? = N+1th cell (not dug)\n         */\n        let firstCornerBad = !isWallCallback(this._endX + dx + nx, this._endY + dy + ny);\n        let secondCornerBad = !isWallCallback(this._endX + dx - nx, this._endY + dy - ny);\n        this._endsWithAWall = isWallCallback(this._endX + dx, this._endY + dy);\n        if ((firstCornerBad || secondCornerBad) && this._endsWithAWall) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty.\n     */\n    create(digCallback) {\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        let length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        for (let i = 0; i < length; i++) {\n            let x = sx + i * dx;\n            let y = sy + i * dy;\n            digCallback(x, y, 0);\n        }\n        return true;\n    }\n    createPriorityWalls(priorityWallCallback) {\n        if (!this._endsWithAWall) {\n            return;\n        }\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        let nx = dy;\n        let ny = -dx;\n        priorityWallCallback(this._endX + dx, this._endY + dy);\n        priorityWallCallback(this._endX + nx, this._endY + ny);\n        priorityWallCallback(this._endX - nx, this._endY - ny);\n    }\n}\n","import Map from \"./map.js\";\nimport { DIRS } from \"../constants.js\";\nimport RNG from \"../rng.js\";\n;\n/**\n * @class Cellular automaton map generator\n * @augments ROT.Map\n * @param {int} [width=ROT.DEFAULT_WIDTH]\n * @param {int} [height=ROT.DEFAULT_HEIGHT]\n * @param {object} [options] Options\n * @param {int[]} [options.born] List of neighbor counts for a new cell to be born in empty space\n * @param {int[]} [options.survive] List of neighbor counts for an existing  cell to survive\n * @param {int} [options.topology] Topology 4 or 6 or 8\n */\nexport default class Cellular extends Map {\n    constructor(width, height, options = {}) {\n        super(width, height);\n        this._options = {\n            born: [5, 6, 7, 8],\n            survive: [4, 5, 6, 7, 8],\n            topology: 8\n        };\n        this.setOptions(options);\n        this._dirs = DIRS[this._options.topology];\n        this._map = this._fillMap(0);\n    }\n    /**\n     * Fill the map with random values\n     * @param {float} probability Probability for a cell to become alive; 0 = all empty, 1 = all full\n     */\n    randomize(probability) {\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                this._map[i][j] = (RNG.getUniform() < probability ? 1 : 0);\n            }\n        }\n        return this;\n    }\n    /**\n     * Change options.\n     * @see ROT.Map.Cellular\n     */\n    setOptions(options) { Object.assign(this._options, options); }\n    set(x, y, value) { this._map[x][y] = value; }\n    create(callback) {\n        let newMap = this._fillMap(0);\n        let born = this._options.born;\n        let survive = this._options.survive;\n        for (let j = 0; j < this._height; j++) {\n            let widthStep = 1;\n            let widthStart = 0;\n            if (this._options.topology == 6) {\n                widthStep = 2;\n                widthStart = j % 2;\n            }\n            for (let i = widthStart; i < this._width; i += widthStep) {\n                let cur = this._map[i][j];\n                let ncount = this._getNeighbors(i, j);\n                if (cur && survive.indexOf(ncount) != -1) { /* survive */\n                    newMap[i][j] = 1;\n                }\n                else if (!cur && born.indexOf(ncount) != -1) { /* born */\n                    newMap[i][j] = 1;\n                }\n            }\n        }\n        this._map = newMap;\n        callback && this._serviceCallback(callback);\n    }\n    _serviceCallback(callback) {\n        for (let j = 0; j < this._height; j++) {\n            let widthStep = 1;\n            let widthStart = 0;\n            if (this._options.topology == 6) {\n                widthStep = 2;\n                widthStart = j % 2;\n            }\n            for (let i = widthStart; i < this._width; i += widthStep) {\n                callback(i, j, this._map[i][j]);\n            }\n        }\n    }\n    /**\n     * Get neighbor count at [i,j] in this._map\n     */\n    _getNeighbors(cx, cy) {\n        let result = 0;\n        for (let i = 0; i < this._dirs.length; i++) {\n            let dir = this._dirs[i];\n            let x = cx + dir[0];\n            let y = cy + dir[1];\n            if (x < 0 || x >= this._width || y < 0 || y >= this._height) {\n                continue;\n            }\n            result += (this._map[x][y] == 1 ? 1 : 0);\n        }\n        return result;\n    }\n    /**\n     * Make sure every non-wall space is accessible.\n     * @param {function} callback to call to display map when do\n     * @param {int} value to consider empty space - defaults to 0\n     * @param {function} callback to call when a new connection is made\n     */\n    connect(callback, value, connectionCallback) {\n        if (!value)\n            value = 0;\n        let allFreeSpace = [];\n        let notConnected = {};\n        // find all free space\n        let widthStep = 1;\n        let widthStarts = [0, 0];\n        if (this._options.topology == 6) {\n            widthStep = 2;\n            widthStarts = [0, 1];\n        }\n        for (let y = 0; y < this._height; y++) {\n            for (let x = widthStarts[y % 2]; x < this._width; x += widthStep) {\n                if (this._freeSpace(x, y, value)) {\n                    let p = [x, y];\n                    notConnected[this._pointKey(p)] = p;\n                    allFreeSpace.push([x, y]);\n                }\n            }\n        }\n        let start = allFreeSpace[RNG.getUniformInt(0, allFreeSpace.length - 1)];\n        let key = this._pointKey(start);\n        let connected = {};\n        connected[key] = start;\n        delete notConnected[key];\n        // find what's connected to the starting point\n        this._findConnected(connected, notConnected, [start], false, value);\n        while (Object.keys(notConnected).length > 0) {\n            // find two points from notConnected to connected\n            let p = this._getFromTo(connected, notConnected);\n            let from = p[0]; // notConnected\n            let to = p[1]; // connected\n            // find everything connected to the starting point\n            let local = {};\n            local[this._pointKey(from)] = from;\n            this._findConnected(local, notConnected, [from], true, value);\n            // connect to a connected cell\n            let tunnelFn = (this._options.topology == 6 ? this._tunnelToConnected6 : this._tunnelToConnected);\n            tunnelFn.call(this, to, from, connected, notConnected, value, connectionCallback);\n            // now all of local is connected\n            for (let k in local) {\n                let pp = local[k];\n                this._map[pp[0]][pp[1]] = value;\n                connected[k] = pp;\n                delete notConnected[k];\n            }\n        }\n        callback && this._serviceCallback(callback);\n    }\n    /**\n     * Find random points to connect. Search for the closest point in the larger space.\n     * This is to minimize the length of the passage while maintaining good performance.\n     */\n    _getFromTo(connected, notConnected) {\n        let from = [0, 0], to = [0, 0], d;\n        let connectedKeys = Object.keys(connected);\n        let notConnectedKeys = Object.keys(notConnected);\n        for (let i = 0; i < 5; i++) {\n            if (connectedKeys.length < notConnectedKeys.length) {\n                let keys = connectedKeys;\n                to = connected[keys[RNG.getUniformInt(0, keys.length - 1)]];\n                from = this._getClosest(to, notConnected);\n            }\n            else {\n                let keys = notConnectedKeys;\n                from = notConnected[keys[RNG.getUniformInt(0, keys.length - 1)]];\n                to = this._getClosest(from, connected);\n            }\n            d = (from[0] - to[0]) * (from[0] - to[0]) + (from[1] - to[1]) * (from[1] - to[1]);\n            if (d < 64) {\n                break;\n            }\n        }\n        // console.log(\">>> connected=\" + to + \" notConnected=\" + from + \" dist=\" + d);\n        return [from, to];\n    }\n    _getClosest(point, space) {\n        let minPoint = null;\n        let minDist = null;\n        for (let k in space) {\n            let p = space[k];\n            let d = (p[0] - point[0]) * (p[0] - point[0]) + (p[1] - point[1]) * (p[1] - point[1]);\n            if (minDist == null || d < minDist) {\n                minDist = d;\n                minPoint = p;\n            }\n        }\n        return minPoint;\n    }\n    _findConnected(connected, notConnected, stack, keepNotConnected, value) {\n        while (stack.length > 0) {\n            let p = stack.splice(0, 1)[0];\n            let tests;\n            if (this._options.topology == 6) {\n                tests = [\n                    [p[0] + 2, p[1]],\n                    [p[0] + 1, p[1] - 1],\n                    [p[0] - 1, p[1] - 1],\n                    [p[0] - 2, p[1]],\n                    [p[0] - 1, p[1] + 1],\n                    [p[0] + 1, p[1] + 1],\n                ];\n            }\n            else {\n                tests = [\n                    [p[0] + 1, p[1]],\n                    [p[0] - 1, p[1]],\n                    [p[0], p[1] + 1],\n                    [p[0], p[1] - 1]\n                ];\n            }\n            for (let i = 0; i < tests.length; i++) {\n                let key = this._pointKey(tests[i]);\n                if (connected[key] == null && this._freeSpace(tests[i][0], tests[i][1], value)) {\n                    connected[key] = tests[i];\n                    if (!keepNotConnected) {\n                        delete notConnected[key];\n                    }\n                    stack.push(tests[i]);\n                }\n            }\n        }\n    }\n    _tunnelToConnected(to, from, connected, notConnected, value, connectionCallback) {\n        let a, b;\n        if (from[0] < to[0]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        for (let xx = a[0]; xx <= b[0]; xx++) {\n            this._map[xx][a[1]] = value;\n            let p = [xx, a[1]];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback && a[0] < b[0]) {\n            connectionCallback(a, [b[0], a[1]]);\n        }\n        // x is now fixed\n        let x = b[0];\n        if (from[1] < to[1]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        for (let yy = a[1]; yy < b[1]; yy++) {\n            this._map[x][yy] = value;\n            let p = [x, yy];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback && a[1] < b[1]) {\n            connectionCallback([b[0], a[1]], [b[0], b[1]]);\n        }\n    }\n    _tunnelToConnected6(to, from, connected, notConnected, value, connectionCallback) {\n        let a, b;\n        if (from[0] < to[0]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        // tunnel diagonally until horizontally level\n        let xx = a[0];\n        let yy = a[1];\n        while (!(xx == b[0] && yy == b[1])) {\n            let stepWidth = 2;\n            if (yy < b[1]) {\n                yy++;\n                stepWidth = 1;\n            }\n            else if (yy > b[1]) {\n                yy--;\n                stepWidth = 1;\n            }\n            if (xx < b[0]) {\n                xx += stepWidth;\n            }\n            else if (xx > b[0]) {\n                xx -= stepWidth;\n            }\n            else if (b[1] % 2) {\n                // Won't step outside map if destination on is map's right edge\n                xx -= stepWidth;\n            }\n            else {\n                // ditto for left edge\n                xx += stepWidth;\n            }\n            this._map[xx][yy] = value;\n            let p = [xx, yy];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback) {\n            connectionCallback(from, to);\n        }\n    }\n    _freeSpace(x, y, value) {\n        return x >= 0 && x < this._width && y >= 0 && y < this._height && this._map[x][y] == value;\n    }\n    _pointKey(p) { return p[0] + \".\" + p[1]; }\n}\n","import Dungeon from \"./dungeon.js\";\nimport { Room, Corridor } from \"./features.js\";\nimport RNG from \"../rng.js\";\nimport { DIRS } from \"../constants.js\";\nconst FEATURES = {\n    \"room\": Room,\n    \"corridor\": Corridor\n};\n/**\n * Random dungeon generator using human-like digging patterns.\n * Heavily based on Mike Anderson's ideas from the \"Tyrant\" algo, mentioned at\n * http://www.roguebasin.roguelikedevelopment.org/index.php?title=Dungeon-Building_Algorithm.\n */\nexport default class Digger extends Dungeon {\n    constructor(width, height, options = {}) {\n        super(width, height);\n        this._options = Object.assign({\n            roomWidth: [3, 9],\n            roomHeight: [3, 5],\n            corridorLength: [3, 10],\n            dugPercentage: 0.2,\n            timeLimit: 1000 /* we stop after this much time has passed (msec) */\n        }, options);\n        this._features = {\n            \"room\": 4,\n            \"corridor\": 4\n        };\n        this._map = [];\n        this._featureAttempts = 20; /* how many times do we try to create a feature on a suitable wall */\n        this._walls = {}; /* these are available for digging */\n        this._dug = 0;\n        this._digCallback = this._digCallback.bind(this);\n        this._canBeDugCallback = this._canBeDugCallback.bind(this);\n        this._isWallCallback = this._isWallCallback.bind(this);\n        this._priorityWallCallback = this._priorityWallCallback.bind(this);\n    }\n    create(callback) {\n        this._rooms = [];\n        this._corridors = [];\n        this._map = this._fillMap(1);\n        this._walls = {};\n        this._dug = 0;\n        let area = (this._width - 2) * (this._height - 2);\n        this._firstRoom();\n        let t1 = Date.now();\n        let priorityWalls;\n        do {\n            priorityWalls = 0;\n            let t2 = Date.now();\n            if (t2 - t1 > this._options.timeLimit) {\n                break;\n            }\n            /* find a good wall */\n            let wall = this._findWall();\n            if (!wall) {\n                break;\n            } /* no more walls */\n            let parts = wall.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            let dir = this._getDiggingDirection(x, y);\n            if (!dir) {\n                continue;\n            } /* this wall is not suitable */\n            //\t\tconsole.log(\"wall\", x, y);\n            /* try adding a feature */\n            let featureAttempts = 0;\n            do {\n                featureAttempts++;\n                if (this._tryFeature(x, y, dir[0], dir[1])) { /* feature added */\n                    //if (this._rooms.length + this._corridors.length == 2) { this._rooms[0].addDoor(x, y); } /* first room oficially has doors */\n                    this._removeSurroundingWalls(x, y);\n                    this._removeSurroundingWalls(x - dir[0], y - dir[1]);\n                    break;\n                }\n            } while (featureAttempts < this._featureAttempts);\n            for (let id in this._walls) {\n                if (this._walls[id] > 1) {\n                    priorityWalls++;\n                }\n            }\n        } while (this._dug / area < this._options.dugPercentage || priorityWalls); /* fixme number of priority walls */\n        this._addDoors();\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this._map[i][j]);\n                }\n            }\n        }\n        this._walls = {};\n        this._map = [];\n        return this;\n    }\n    _digCallback(x, y, value) {\n        if (value == 0 || value == 2) { /* empty */\n            this._map[x][y] = 0;\n            this._dug++;\n        }\n        else { /* wall */\n            this._walls[x + \",\" + y] = 1;\n        }\n    }\n    _isWallCallback(x, y) {\n        if (x < 0 || y < 0 || x >= this._width || y >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _canBeDugCallback(x, y) {\n        if (x < 1 || y < 1 || x + 1 >= this._width || y + 1 >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _priorityWallCallback(x, y) { this._walls[x + \",\" + y] = 2; }\n    ;\n    _firstRoom() {\n        let cx = Math.floor(this._width / 2);\n        let cy = Math.floor(this._height / 2);\n        let room = Room.createRandomCenter(cx, cy, this._options);\n        this._rooms.push(room);\n        room.create(this._digCallback);\n    }\n    /**\n     * Get a suitable wall\n     */\n    _findWall() {\n        let prio1 = [];\n        let prio2 = [];\n        for (let id in this._walls) {\n            let prio = this._walls[id];\n            if (prio == 2) {\n                prio2.push(id);\n            }\n            else {\n                prio1.push(id);\n            }\n        }\n        let arr = (prio2.length ? prio2 : prio1);\n        if (!arr.length) {\n            return null;\n        } /* no walls :/ */\n        let id = RNG.getItem(arr.sort()); // sort to make the order deterministic\n        delete this._walls[id];\n        return id;\n    }\n    /**\n     * Tries adding a feature\n     * @returns {bool} was this a successful try?\n     */\n    _tryFeature(x, y, dx, dy) {\n        let featureName = RNG.getWeightedValue(this._features);\n        let ctor = FEATURES[featureName];\n        let feature = ctor.createRandomAt(x, y, dx, dy, this._options);\n        if (!feature.isValid(this._isWallCallback, this._canBeDugCallback)) {\n            //\t\tconsole.log(\"not valid\");\n            //\t\tfeature.debug();\n            return false;\n        }\n        feature.create(this._digCallback);\n        //\tfeature.debug();\n        if (feature instanceof Room) {\n            this._rooms.push(feature);\n        }\n        if (feature instanceof Corridor) {\n            feature.createPriorityWalls(this._priorityWallCallback);\n            this._corridors.push(feature);\n        }\n        return true;\n    }\n    _removeSurroundingWalls(cx, cy) {\n        let deltas = DIRS[4];\n        for (let i = 0; i < deltas.length; i++) {\n            let delta = deltas[i];\n            let x = cx + delta[0];\n            let y = cy + delta[1];\n            delete this._walls[x + \",\" + y];\n            x = cx + 2 * delta[0];\n            y = cy + 2 * delta[1];\n            delete this._walls[x + \",\" + y];\n        }\n    }\n    /**\n     * Returns vector in \"digging\" direction, or false, if this does not exist (or is not unique)\n     */\n    _getDiggingDirection(cx, cy) {\n        if (cx <= 0 || cy <= 0 || cx >= this._width - 1 || cy >= this._height - 1) {\n            return null;\n        }\n        let result = null;\n        let deltas = DIRS[4];\n        for (let i = 0; i < deltas.length; i++) {\n            let delta = deltas[i];\n            let x = cx + delta[0];\n            let y = cy + delta[1];\n            if (!this._map[x][y]) { /* there already is another empty neighbor! */\n                if (result) {\n                    return null;\n                }\n                result = delta;\n            }\n        }\n        /* no empty neighbor */\n        if (!result) {\n            return null;\n        }\n        return [-result[0], -result[1]];\n    }\n    /**\n     * Find empty spaces surrounding rooms, and apply doors.\n     */\n    _addDoors() {\n        let data = this._map;\n        function isWallCallback(x, y) {\n            return (data[x][y] == 1);\n        }\n        ;\n        for (let i = 0; i < this._rooms.length; i++) {\n            let room = this._rooms[i];\n            room.clearDoors();\n            room.addDoors(isWallCallback);\n        }\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * Join lists with \"i\" and \"i+1\"\n */\nfunction addToList(i, L, R) {\n    R[L[i + 1]] = R[i];\n    L[R[i]] = L[i + 1];\n    R[i] = i + 1;\n    L[i + 1] = i;\n}\n/**\n * Remove \"i\" from its list\n */\nfunction removeFromList(i, L, R) {\n    R[L[i]] = R[i];\n    L[R[i]] = L[i];\n    R[i] = i;\n    L[i] = i;\n}\n/**\n * Maze generator - Eller's algorithm\n * See http://homepages.cwi.nl/~tromp/maze.html for explanation\n */\nexport default class EllerMaze extends Map {\n    create(callback) {\n        let map = this._fillMap(1);\n        let w = Math.ceil((this._width - 2) / 2);\n        let rand = 9 / 24;\n        let L = [];\n        let R = [];\n        for (let i = 0; i < w; i++) {\n            L.push(i);\n            R.push(i);\n        }\n        L.push(w - 1); /* fake stop-block at the right side */\n        let j;\n        for (j = 1; j + 3 < this._height; j += 2) {\n            /* one row */\n            for (let i = 0; i < w; i++) {\n                /* cell coords (will be always empty) */\n                let x = 2 * i + 1;\n                let y = j;\n                map[x][y] = 0;\n                /* right connection */\n                if (i != L[i + 1] && RNG.getUniform() > rand) {\n                    addToList(i, L, R);\n                    map[x + 1][y] = 0;\n                }\n                /* bottom connection */\n                if (i != L[i] && RNG.getUniform() > rand) {\n                    /* remove connection */\n                    removeFromList(i, L, R);\n                }\n                else {\n                    /* create connection */\n                    map[x][y + 1] = 0;\n                }\n            }\n        }\n        /* last row */\n        for (let i = 0; i < w; i++) {\n            /* cell coords (will be always empty) */\n            let x = 2 * i + 1;\n            let y = j;\n            map[x][y] = 0;\n            /* right connection */\n            if (i != L[i + 1] && (i == L[i] || RNG.getUniform() > rand)) {\n                /* dig right also if the cell is separated, so it gets connected to the rest of maze */\n                addToList(i, L, R);\n                map[x + 1][y] = 0;\n            }\n            removeFromList(i, L, R);\n        }\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                callback(i, j, map[i][j]);\n            }\n        }\n        return this;\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * @class Recursively divided maze, http://en.wikipedia.org/wiki/Maze_generation_algorithm#Recursive_division_method\n * @augments ROT.Map\n */\nexport default class DividedMaze extends Map {\n    constructor() {\n        super(...arguments);\n        this._stack = [];\n        this._map = [];\n    }\n    create(callback) {\n        let w = this._width;\n        let h = this._height;\n        this._map = [];\n        for (let i = 0; i < w; i++) {\n            this._map.push([]);\n            for (let j = 0; j < h; j++) {\n                let border = (i == 0 || j == 0 || i + 1 == w || j + 1 == h);\n                this._map[i].push(border ? 1 : 0);\n            }\n        }\n        this._stack = [\n            [1, 1, w - 2, h - 2]\n        ];\n        this._process();\n        for (let i = 0; i < w; i++) {\n            for (let j = 0; j < h; j++) {\n                callback(i, j, this._map[i][j]);\n            }\n        }\n        this._map = [];\n        return this;\n    }\n    _process() {\n        while (this._stack.length) {\n            let room = this._stack.shift(); /* [left, top, right, bottom] */\n            this._partitionRoom(room);\n        }\n    }\n    _partitionRoom(room) {\n        let availX = [];\n        let availY = [];\n        for (let i = room[0] + 1; i < room[2]; i++) {\n            let top = this._map[i][room[1] - 1];\n            let bottom = this._map[i][room[3] + 1];\n            if (top && bottom && !(i % 2)) {\n                availX.push(i);\n            }\n        }\n        for (let j = room[1] + 1; j < room[3]; j++) {\n            let left = this._map[room[0] - 1][j];\n            let right = this._map[room[2] + 1][j];\n            if (left && right && !(j % 2)) {\n                availY.push(j);\n            }\n        }\n        if (!availX.length || !availY.length) {\n            return;\n        }\n        let x = RNG.getItem(availX);\n        let y = RNG.getItem(availY);\n        this._map[x][y] = 1;\n        let walls = [];\n        let w = [];\n        walls.push(w); /* left part */\n        for (let i = room[0]; i < x; i++) {\n            this._map[i][y] = 1;\n            if (i % 2)\n                w.push([i, y]);\n        }\n        w = [];\n        walls.push(w); /* right part */\n        for (let i = x + 1; i <= room[2]; i++) {\n            this._map[i][y] = 1;\n            if (i % 2)\n                w.push([i, y]);\n        }\n        w = [];\n        walls.push(w); /* top part */\n        for (let j = room[1]; j < y; j++) {\n            this._map[x][j] = 1;\n            if (j % 2)\n                w.push([x, j]);\n        }\n        w = [];\n        walls.push(w); /* bottom part */\n        for (let j = y + 1; j <= room[3]; j++) {\n            this._map[x][j] = 1;\n            if (j % 2)\n                w.push([x, j]);\n        }\n        let solid = RNG.getItem(walls);\n        for (let i = 0; i < walls.length; i++) {\n            let w = walls[i];\n            if (w == solid) {\n                continue;\n            }\n            let hole = RNG.getItem(w);\n            this._map[hole[0]][hole[1]] = 0;\n        }\n        this._stack.push([room[0], room[1], x - 1, y - 1]); /* left top */\n        this._stack.push([x + 1, room[1], room[2], y - 1]); /* right top */\n        this._stack.push([room[0], y + 1, x - 1, room[3]]); /* left bottom */\n        this._stack.push([x + 1, y + 1, room[2], room[3]]); /* right bottom */\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * Icey's Maze generator\n * See http://www.roguebasin.roguelikedevelopment.org/index.php?title=Simple_maze for explanation\n */\nexport default class IceyMaze extends Map {\n    constructor(width, height, regularity = 0) {\n        super(width, height);\n        this._regularity = regularity;\n        this._map = [];\n    }\n    create(callback) {\n        let width = this._width;\n        let height = this._height;\n        let map = this._fillMap(1);\n        width -= (width % 2 ? 1 : 2);\n        height -= (height % 2 ? 1 : 2);\n        let cx = 0;\n        let cy = 0;\n        let nx = 0;\n        let ny = 0;\n        let done = 0;\n        let blocked = false;\n        let dirs = [\n            [0, 0],\n            [0, 0],\n            [0, 0],\n            [0, 0]\n        ];\n        do {\n            cx = 1 + 2 * Math.floor(RNG.getUniform() * (width - 1) / 2);\n            cy = 1 + 2 * Math.floor(RNG.getUniform() * (height - 1) / 2);\n            if (!done) {\n                map[cx][cy] = 0;\n            }\n            if (!map[cx][cy]) {\n                this._randomize(dirs);\n                do {\n                    if (Math.floor(RNG.getUniform() * (this._regularity + 1)) == 0) {\n                        this._randomize(dirs);\n                    }\n                    blocked = true;\n                    for (let i = 0; i < 4; i++) {\n                        nx = cx + dirs[i][0] * 2;\n                        ny = cy + dirs[i][1] * 2;\n                        if (this._isFree(map, nx, ny, width, height)) {\n                            map[nx][ny] = 0;\n                            map[cx + dirs[i][0]][cy + dirs[i][1]] = 0;\n                            cx = nx;\n                            cy = ny;\n                            blocked = false;\n                            done++;\n                            break;\n                        }\n                    }\n                } while (!blocked);\n            }\n        } while (done + 1 < width * height / 4);\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                callback(i, j, map[i][j]);\n            }\n        }\n        this._map = [];\n        return this;\n    }\n    _randomize(dirs) {\n        for (let i = 0; i < 4; i++) {\n            dirs[i][0] = 0;\n            dirs[i][1] = 0;\n        }\n        switch (Math.floor(RNG.getUniform() * 4)) {\n            case 0:\n                dirs[0][0] = -1;\n                dirs[1][0] = 1;\n                dirs[2][1] = -1;\n                dirs[3][1] = 1;\n                break;\n            case 1:\n                dirs[3][0] = -1;\n                dirs[2][0] = 1;\n                dirs[1][1] = -1;\n                dirs[0][1] = 1;\n                break;\n            case 2:\n                dirs[2][0] = -1;\n                dirs[3][0] = 1;\n                dirs[0][1] = -1;\n                dirs[1][1] = 1;\n                break;\n            case 3:\n                dirs[1][0] = -1;\n                dirs[0][0] = 1;\n                dirs[3][1] = -1;\n                dirs[2][1] = 1;\n                break;\n        }\n    }\n    _isFree(map, x, y, width, height) {\n        if (x < 1 || y < 1 || x >= width || y >= height) {\n            return false;\n        }\n        return map[x][y];\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\nimport { DIRS } from \"../constants.js\";\n/**\n * Dungeon generator which uses the \"orginal\" Rogue dungeon generation algorithm. See http://kuoi.com/~kamikaze/GameDesign/art07_rogue_dungeon.php\n * @author hyakugei\n */\nexport default class Rogue extends Map {\n    constructor(width, height, options) {\n        super(width, height);\n        this.map = [];\n        this.rooms = [];\n        this.connectedCells = [];\n        options = Object.assign({\n            cellWidth: 3,\n            cellHeight: 3 //     ie. as an array with min-max values for each direction....\n        }, options);\n        /*\n        Set the room sizes according to the over-all width of the map,\n        and the cell sizes.\n        */\n        if (!options.hasOwnProperty(\"roomWidth\")) {\n            options[\"roomWidth\"] = this._calculateRoomSize(this._width, options[\"cellWidth\"]);\n        }\n        if (!options.hasOwnProperty(\"roomHeight\")) {\n            options[\"roomHeight\"] = this._calculateRoomSize(this._height, options[\"cellHeight\"]);\n        }\n        this._options = options;\n    }\n    create(callback) {\n        this.map = this._fillMap(1);\n        this.rooms = [];\n        this.connectedCells = [];\n        this._initRooms();\n        this._connectRooms();\n        this._connectUnconnectedRooms();\n        this._createRandomRoomConnections();\n        this._createRooms();\n        this._createCorridors();\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this.map[i][j]);\n                }\n            }\n        }\n        return this;\n    }\n    _calculateRoomSize(size, cell) {\n        let max = Math.floor((size / cell) * 0.8);\n        let min = Math.floor((size / cell) * 0.25);\n        if (min < 2) {\n            min = 2;\n        }\n        if (max < 2) {\n            max = 2;\n        }\n        return [min, max];\n    }\n    _initRooms() {\n        // create rooms array. This is the \"grid\" list from the algo.\n        for (let i = 0; i < this._options.cellWidth; i++) {\n            this.rooms.push([]);\n            for (let j = 0; j < this._options.cellHeight; j++) {\n                this.rooms[i].push({ \"x\": 0, \"y\": 0, \"width\": 0, \"height\": 0, \"connections\": [], \"cellx\": i, \"celly\": j });\n            }\n        }\n    }\n    _connectRooms() {\n        //pick random starting grid\n        let cgx = RNG.getUniformInt(0, this._options.cellWidth - 1);\n        let cgy = RNG.getUniformInt(0, this._options.cellHeight - 1);\n        let idx;\n        let ncgx;\n        let ncgy;\n        let found = false;\n        let room;\n        let otherRoom;\n        let dirToCheck;\n        // find  unconnected neighbour cells\n        do {\n            //dirToCheck = [0, 1, 2, 3, 4, 5, 6, 7];\n            dirToCheck = [0, 2, 4, 6];\n            dirToCheck = RNG.shuffle(dirToCheck);\n            do {\n                found = false;\n                idx = dirToCheck.pop();\n                ncgx = cgx + DIRS[8][idx][0];\n                ncgy = cgy + DIRS[8][idx][1];\n                if (ncgx < 0 || ncgx >= this._options.cellWidth) {\n                    continue;\n                }\n                if (ncgy < 0 || ncgy >= this._options.cellHeight) {\n                    continue;\n                }\n                room = this.rooms[cgx][cgy];\n                if (room[\"connections\"].length > 0) {\n                    // as long as this room doesn't already coonect to me, we are ok with it.\n                    if (room[\"connections\"][0][0] == ncgx && room[\"connections\"][0][1] == ncgy) {\n                        break;\n                    }\n                }\n                otherRoom = this.rooms[ncgx][ncgy];\n                if (otherRoom[\"connections\"].length == 0) {\n                    otherRoom[\"connections\"].push([cgx, cgy]);\n                    this.connectedCells.push([ncgx, ncgy]);\n                    cgx = ncgx;\n                    cgy = ncgy;\n                    found = true;\n                }\n            } while (dirToCheck.length > 0 && found == false);\n        } while (dirToCheck.length > 0);\n    }\n    _connectUnconnectedRooms() {\n        //While there are unconnected rooms, try to connect them to a random connected neighbor\n        //(if a room has no connected neighbors yet, just keep cycling, you'll fill out to it eventually).\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        this.connectedCells = RNG.shuffle(this.connectedCells);\n        let room;\n        let otherRoom;\n        let validRoom;\n        for (let i = 0; i < this._options.cellWidth; i++) {\n            for (let j = 0; j < this._options.cellHeight; j++) {\n                room = this.rooms[i][j];\n                if (room[\"connections\"].length == 0) {\n                    let directions = [0, 2, 4, 6];\n                    directions = RNG.shuffle(directions);\n                    validRoom = false;\n                    do {\n                        let dirIdx = directions.pop();\n                        let newI = i + DIRS[8][dirIdx][0];\n                        let newJ = j + DIRS[8][dirIdx][1];\n                        if (newI < 0 || newI >= cw || newJ < 0 || newJ >= ch) {\n                            continue;\n                        }\n                        otherRoom = this.rooms[newI][newJ];\n                        validRoom = true;\n                        if (otherRoom[\"connections\"].length == 0) {\n                            break;\n                        }\n                        for (let k = 0; k < otherRoom[\"connections\"].length; k++) {\n                            if (otherRoom[\"connections\"][k][0] == i && otherRoom[\"connections\"][k][1] == j) {\n                                validRoom = false;\n                                break;\n                            }\n                        }\n                        if (validRoom) {\n                            break;\n                        }\n                    } while (directions.length);\n                    if (validRoom) {\n                        room[\"connections\"].push([otherRoom[\"cellx\"], otherRoom[\"celly\"]]);\n                    }\n                    else {\n                        console.log(\"-- Unable to connect room.\");\n                    }\n                }\n            }\n        }\n    }\n    _createRandomRoomConnections() {\n        // Empty for now.\n    }\n    _createRooms() {\n        let w = this._width;\n        let h = this._height;\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        let cwp = Math.floor(this._width / cw);\n        let chp = Math.floor(this._height / ch);\n        let roomw;\n        let roomh;\n        let roomWidth = this._options[\"roomWidth\"];\n        let roomHeight = this._options[\"roomHeight\"];\n        let sx;\n        let sy;\n        let otherRoom;\n        for (let i = 0; i < cw; i++) {\n            for (let j = 0; j < ch; j++) {\n                sx = cwp * i;\n                sy = chp * j;\n                if (sx == 0) {\n                    sx = 1;\n                }\n                if (sy == 0) {\n                    sy = 1;\n                }\n                roomw = RNG.getUniformInt(roomWidth[0], roomWidth[1]);\n                roomh = RNG.getUniformInt(roomHeight[0], roomHeight[1]);\n                if (j > 0) {\n                    otherRoom = this.rooms[i][j - 1];\n                    while (sy - (otherRoom[\"y\"] + otherRoom[\"height\"]) < 3) {\n                        sy++;\n                    }\n                }\n                if (i > 0) {\n                    otherRoom = this.rooms[i - 1][j];\n                    while (sx - (otherRoom[\"x\"] + otherRoom[\"width\"]) < 3) {\n                        sx++;\n                    }\n                }\n                let sxOffset = Math.round(RNG.getUniformInt(0, cwp - roomw) / 2);\n                let syOffset = Math.round(RNG.getUniformInt(0, chp - roomh) / 2);\n                while (sx + sxOffset + roomw >= w) {\n                    if (sxOffset) {\n                        sxOffset--;\n                    }\n                    else {\n                        roomw--;\n                    }\n                }\n                while (sy + syOffset + roomh >= h) {\n                    if (syOffset) {\n                        syOffset--;\n                    }\n                    else {\n                        roomh--;\n                    }\n                }\n                sx = sx + sxOffset;\n                sy = sy + syOffset;\n                this.rooms[i][j][\"x\"] = sx;\n                this.rooms[i][j][\"y\"] = sy;\n                this.rooms[i][j][\"width\"] = roomw;\n                this.rooms[i][j][\"height\"] = roomh;\n                for (let ii = sx; ii < sx + roomw; ii++) {\n                    for (let jj = sy; jj < sy + roomh; jj++) {\n                        this.map[ii][jj] = 0;\n                    }\n                }\n            }\n        }\n    }\n    _getWallPosition(aRoom, aDirection) {\n        let rx;\n        let ry;\n        let door;\n        if (aDirection == 1 || aDirection == 3) {\n            rx = RNG.getUniformInt(aRoom[\"x\"] + 1, aRoom[\"x\"] + aRoom[\"width\"] - 2);\n            if (aDirection == 1) {\n                ry = aRoom[\"y\"] - 2;\n                door = ry + 1;\n            }\n            else {\n                ry = aRoom[\"y\"] + aRoom[\"height\"] + 1;\n                door = ry - 1;\n            }\n            this.map[rx][door] = 0; // i'm not setting a specific 'door' tile value right now, just empty space.\n        }\n        else {\n            ry = RNG.getUniformInt(aRoom[\"y\"] + 1, aRoom[\"y\"] + aRoom[\"height\"] - 2);\n            if (aDirection == 2) {\n                rx = aRoom[\"x\"] + aRoom[\"width\"] + 1;\n                door = rx - 1;\n            }\n            else {\n                rx = aRoom[\"x\"] - 2;\n                door = rx + 1;\n            }\n            this.map[door][ry] = 0; // i'm not setting a specific 'door' tile value right now, just empty space.\n        }\n        return [rx, ry];\n    }\n    _drawCorridor(startPosition, endPosition) {\n        let xOffset = endPosition[0] - startPosition[0];\n        let yOffset = endPosition[1] - startPosition[1];\n        let xpos = startPosition[0];\n        let ypos = startPosition[1];\n        let tempDist;\n        let xDir;\n        let yDir;\n        let move; // 2 element array, element 0 is the direction, element 1 is the total value to move.\n        let moves = []; // a list of 2 element arrays\n        let xAbs = Math.abs(xOffset);\n        let yAbs = Math.abs(yOffset);\n        let percent = RNG.getUniform(); // used to split the move at different places along the long axis\n        let firstHalf = percent;\n        let secondHalf = 1 - percent;\n        xDir = xOffset > 0 ? 2 : 6;\n        yDir = yOffset > 0 ? 4 : 0;\n        if (xAbs < yAbs) {\n            // move firstHalf of the y offset\n            tempDist = Math.ceil(yAbs * firstHalf);\n            moves.push([yDir, tempDist]);\n            // move all the x offset\n            moves.push([xDir, xAbs]);\n            // move sendHalf of the  y offset\n            tempDist = Math.floor(yAbs * secondHalf);\n            moves.push([yDir, tempDist]);\n        }\n        else {\n            //  move firstHalf of the x offset\n            tempDist = Math.ceil(xAbs * firstHalf);\n            moves.push([xDir, tempDist]);\n            // move all the y offset\n            moves.push([yDir, yAbs]);\n            // move secondHalf of the x offset.\n            tempDist = Math.floor(xAbs * secondHalf);\n            moves.push([xDir, tempDist]);\n        }\n        this.map[xpos][ypos] = 0;\n        while (moves.length > 0) {\n            move = moves.pop();\n            while (move[1] > 0) {\n                xpos += DIRS[8][move[0]][0];\n                ypos += DIRS[8][move[0]][1];\n                this.map[xpos][ypos] = 0;\n                move[1] = move[1] - 1;\n            }\n        }\n    }\n    _createCorridors() {\n        // Draw Corridors between connected rooms\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        let room;\n        let connection;\n        let otherRoom;\n        let wall;\n        let otherWall;\n        for (let i = 0; i < cw; i++) {\n            for (let j = 0; j < ch; j++) {\n                room = this.rooms[i][j];\n                for (let k = 0; k < room[\"connections\"].length; k++) {\n                    connection = room[\"connections\"][k];\n                    otherRoom = this.rooms[connection[0]][connection[1]];\n                    // figure out what wall our corridor will start one.\n                    // figure out what wall our corridor will end on.\n                    if (otherRoom[\"cellx\"] > room[\"cellx\"]) {\n                        wall = 2;\n                        otherWall = 4;\n                    }\n                    else if (otherRoom[\"cellx\"] < room[\"cellx\"]) {\n                        wall = 4;\n                        otherWall = 2;\n                    }\n                    else if (otherRoom[\"celly\"] > room[\"celly\"]) {\n                        wall = 3;\n                        otherWall = 1;\n                    }\n                    else {\n                        wall = 1;\n                        otherWall = 3;\n                    }\n                    this._drawCorridor(this._getWallPosition(room, wall), this._getWallPosition(otherRoom, otherWall));\n                }\n            }\n        }\n    }\n}\n","import Simplex from \"./simplex.js\";\nexport default { Simplex };\n","import Noise from \"./noise.js\";\nimport RNG from \"../rng.js\";\nimport { mod } from \"../util.js\";\nconst F2 = 0.5 * (Math.sqrt(3) - 1);\nconst G2 = (3 - Math.sqrt(3)) / 6;\n/**\n * A simple 2d implementation of simplex noise by Ondrej Zara\n *\n * Based on a speed-improved simplex noise algorithm for 2D, 3D and 4D in Java.\n * Which is based on example code by Stefan Gustavson (stegu@itn.liu.se).\n * With Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\n * Better rank ordering method by Stefan Gustavson in 2012.\n */\nexport default class Simplex extends Noise {\n    /**\n     * @param gradients Random gradients\n     */\n    constructor(gradients = 256) {\n        super();\n        this._gradients = [\n            [0, -1],\n            [1, -1],\n            [1, 0],\n            [1, 1],\n            [0, 1],\n            [-1, 1],\n            [-1, 0],\n            [-1, -1]\n        ];\n        let permutations = [];\n        for (let i = 0; i < gradients; i++) {\n            permutations.push(i);\n        }\n        permutations = RNG.shuffle(permutations);\n        this._perms = [];\n        this._indexes = [];\n        for (let i = 0; i < 2 * gradients; i++) {\n            this._perms.push(permutations[i % gradients]);\n            this._indexes.push(this._perms[i] % this._gradients.length);\n        }\n    }\n    get(xin, yin) {\n        let perms = this._perms;\n        let indexes = this._indexes;\n        let count = perms.length / 2;\n        let n0 = 0, n1 = 0, n2 = 0, gi; // Noise contributions from the three corners\n        // Skew the input space to determine which simplex cell we're in\n        let s = (xin + yin) * F2; // Hairy factor for 2D\n        let i = Math.floor(xin + s);\n        let j = Math.floor(yin + s);\n        let t = (i + j) * G2;\n        let X0 = i - t; // Unskew the cell origin back to (x,y) space\n        let Y0 = j - t;\n        let x0 = xin - X0; // The x,y distances from the cell origin\n        let y0 = yin - Y0;\n        // For the 2D case, the simplex shape is an equilateral triangle.\n        // Determine which simplex we are in.\n        let i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n        if (x0 > y0) {\n            i1 = 1;\n            j1 = 0;\n        }\n        else { // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n            i1 = 0;\n            j1 = 1;\n        } // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n        // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n        // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n        // c = (3-sqrt(3))/6\n        let x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n        let y1 = y0 - j1 + G2;\n        let x2 = x0 - 1 + 2 * G2; // Offsets for last corner in (x,y) unskewed coords\n        let y2 = y0 - 1 + 2 * G2;\n        // Work out the hashed gradient indices of the three simplex corners\n        let ii = mod(i, count);\n        let jj = mod(j, count);\n        // Calculate the contribution from the three corners\n        let t0 = 0.5 - x0 * x0 - y0 * y0;\n        if (t0 >= 0) {\n            t0 *= t0;\n            gi = indexes[ii + perms[jj]];\n            let grad = this._gradients[gi];\n            n0 = t0 * t0 * (grad[0] * x0 + grad[1] * y0);\n        }\n        let t1 = 0.5 - x1 * x1 - y1 * y1;\n        if (t1 >= 0) {\n            t1 *= t1;\n            gi = indexes[ii + i1 + perms[jj + j1]];\n            let grad = this._gradients[gi];\n            n1 = t1 * t1 * (grad[0] * x1 + grad[1] * y1);\n        }\n        let t2 = 0.5 - x2 * x2 - y2 * y2;\n        if (t2 >= 0) {\n            t2 *= t2;\n            gi = indexes[ii + 1 + perms[jj + 1]];\n            let grad = this._gradients[gi];\n            n2 = t2 * t2 * (grad[0] * x2 + grad[1] * y2);\n        }\n        // Add contributions from each corner to get the final noise value.\n        // The result is scaled to return values in the interval [-1,1].\n        return 70 * (n0 + n1 + n2);\n    }\n}\n","/**\n * Base noise generator\n */\nexport default class Noise {\n}\n","import Dijkstra from \"./dijkstra.js\";\nimport AStar from \"./astar.js\";\nexport default { Dijkstra, AStar };\n","import Path from \"./path.js\";\n/**\n * @class Simplified Dijkstra's algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nexport default class Dijkstra extends Path {\n    constructor(toX, toY, passableCallback, options) {\n        super(toX, toY, passableCallback, options);\n        this._computed = {};\n        this._todo = [];\n        this._add(toX, toY, null);\n    }\n    /**\n     * Compute a path from a given point\n     * @see ROT.Path#compute\n     */\n    compute(fromX, fromY, callback) {\n        let key = fromX + \",\" + fromY;\n        if (!(key in this._computed)) {\n            this._compute(fromX, fromY);\n        }\n        if (!(key in this._computed)) {\n            return;\n        }\n        let item = this._computed[key];\n        while (item) {\n            callback(item.x, item.y);\n            item = item.prev;\n        }\n    }\n    /**\n     * Compute a non-cached value\n     */\n    _compute(fromX, fromY) {\n        while (this._todo.length) {\n            let item = this._todo.shift();\n            if (item.x == fromX && item.y == fromY) {\n                return;\n            }\n            let neighbors = this._getNeighbors(item.x, item.y);\n            for (let i = 0; i < neighbors.length; i++) {\n                let neighbor = neighbors[i];\n                let x = neighbor[0];\n                let y = neighbor[1];\n                let id = x + \",\" + y;\n                if (id in this._computed) {\n                    continue;\n                } /* already done */\n                this._add(x, y, item);\n            }\n        }\n    }\n    _add(x, y, prev) {\n        let obj = {\n            x: x,\n            y: y,\n            prev: prev\n        };\n        this._computed[x + \",\" + y] = obj;\n        this._todo.push(obj);\n    }\n}\n","import { DIRS } from \"../constants.js\";\n/**\n * @class Abstract pathfinder\n * @param {int} toX Target X coord\n * @param {int} toY Target Y coord\n * @param {function} passableCallback Callback to determine map passability\n * @param {object} [options]\n * @param {int} [options.topology=8]\n */\nexport default class Path {\n    constructor(toX, toY, passableCallback, options = {}) {\n        this._toX = toX;\n        this._toY = toY;\n        this._passableCallback = passableCallback;\n        this._options = Object.assign({\n            topology: 8\n        }, options);\n        this._dirs = DIRS[this._options.topology];\n        if (this._options.topology == 8) { /* reorder dirs for more aesthetic result (vertical/horizontal first) */\n            this._dirs = [\n                this._dirs[0],\n                this._dirs[2],\n                this._dirs[4],\n                this._dirs[6],\n                this._dirs[1],\n                this._dirs[3],\n                this._dirs[5],\n                this._dirs[7]\n            ];\n        }\n    }\n    _getNeighbors(cx, cy) {\n        let result = [];\n        for (let i = 0; i < this._dirs.length; i++) {\n            let dir = this._dirs[i];\n            let x = cx + dir[0];\n            let y = cy + dir[1];\n            if (!this._passableCallback(x, y)) {\n                continue;\n            }\n            result.push([x, y]);\n        }\n        return result;\n    }\n}\n","import Path from \"./path.js\";\n/**\n * @class Simplified A* algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nexport default class AStar extends Path {\n    constructor(toX, toY, passableCallback, options = {}) {\n        super(toX, toY, passableCallback, options);\n        this._todo = [];\n        this._done = {};\n    }\n    /**\n     * Compute a path from a given point\n     * @see ROT.Path#compute\n     */\n    compute(fromX, fromY, callback) {\n        this._todo = [];\n        this._done = {};\n        this._fromX = fromX;\n        this._fromY = fromY;\n        this._add(this._toX, this._toY, null);\n        while (this._todo.length) {\n            let item = this._todo.shift();\n            let id = item.x + \",\" + item.y;\n            if (id in this._done) {\n                continue;\n            }\n            this._done[id] = item;\n            if (item.x == fromX && item.y == fromY) {\n                break;\n            }\n            let neighbors = this._getNeighbors(item.x, item.y);\n            for (let i = 0; i < neighbors.length; i++) {\n                let neighbor = neighbors[i];\n                let x = neighbor[0];\n                let y = neighbor[1];\n                let id = x + \",\" + y;\n                if (id in this._done) {\n                    continue;\n                }\n                this._add(x, y, item);\n            }\n        }\n        let item = this._done[fromX + \",\" + fromY];\n        if (!item) {\n            return;\n        }\n        while (item) {\n            callback(item.x, item.y);\n            item = item.prev;\n        }\n    }\n    _add(x, y, prev) {\n        let h = this._distance(x, y);\n        let obj = {\n            x: x,\n            y: y,\n            prev: prev,\n            g: (prev ? prev.g + 1 : 0),\n            h: h\n        };\n        /* insert into priority queue */\n        let f = obj.g + obj.h;\n        for (let i = 0; i < this._todo.length; i++) {\n            let item = this._todo[i];\n            let itemF = item.g + item.h;\n            if (f < itemF || (f == itemF && h < item.h)) {\n                this._todo.splice(i, 0, obj);\n                return;\n            }\n        }\n        this._todo.push(obj);\n    }\n    _distance(x, y) {\n        switch (this._options.topology) {\n            case 4:\n                return (Math.abs(x - this._fromX) + Math.abs(y - this._fromY));\n                break;\n            case 6:\n                let dx = Math.abs(x - this._fromX);\n                let dy = Math.abs(y - this._fromY);\n                return dy + Math.max(0, (dx - dy) / 2);\n                break;\n            case 8:\n                return Math.max(Math.abs(x - this._fromX), Math.abs(y - this._fromY));\n                break;\n        }\n    }\n}\n","/**\n * @class Asynchronous main loop\n * @param {ROT.Scheduler} scheduler\n */\nexport default class Engine {\n    constructor(scheduler) {\n        this._scheduler = scheduler;\n        this._lock = 1;\n    }\n    /**\n     * Start the main loop. When this call returns, the loop is locked.\n     */\n    start() { return this.unlock(); }\n    /**\n     * Interrupt the engine by an asynchronous action\n     */\n    lock() {\n        this._lock++;\n        return this;\n    }\n    /**\n     * Resume execution (paused by a previous lock)\n     */\n    unlock() {\n        if (!this._lock) {\n            throw new Error(\"Cannot unlock unlocked engine\");\n        }\n        this._lock--;\n        while (!this._lock) {\n            let actor = this._scheduler.next();\n            if (!actor) {\n                return this.lock();\n            } /* no actors */\n            let result = actor.act();\n            if (result && result.then) { /* actor returned a \"thenable\", looks like a Promise */\n                this.lock();\n                result.then(this.unlock.bind(this));\n            }\n        }\n        return this;\n    }\n}\n","import * as Color from \"./color.js\";\n;\n;\n;\n;\n/**\n * Lighting computation, based on a traditional FOV for multiple light sources and multiple passes.\n */\nexport default class Lighting {\n    constructor(reflectivityCallback, options = {}) {\n        this._reflectivityCallback = reflectivityCallback;\n        this._options = {};\n        options = Object.assign({\n            passes: 1,\n            emissionThreshold: 100,\n            range: 10\n        }, options);\n        this._lights = {};\n        this._reflectivityCache = {};\n        this._fovCache = {};\n        this.setOptions(options);\n    }\n    /**\n     * Adjust options at runtime\n     */\n    setOptions(options) {\n        Object.assign(this._options, options);\n        if (options && options.range) {\n            this.reset();\n        }\n        return this;\n    }\n    /**\n     * Set the used Field-Of-View algo\n     */\n    setFOV(fov) {\n        this._fov = fov;\n        this._fovCache = {};\n        return this;\n    }\n    /**\n     * Set (or remove) a light source\n     */\n    setLight(x, y, color) {\n        let key = x + \",\" + y;\n        if (color) {\n            this._lights[key] = (typeof (color) == \"string\" ? Color.fromString(color) : color);\n        }\n        else {\n            delete this._lights[key];\n        }\n        return this;\n    }\n    /**\n     * Remove all light sources\n     */\n    clearLights() { this._lights = {}; }\n    /**\n     * Reset the pre-computed topology values. Call whenever the underlying map changes its light-passability.\n     */\n    reset() {\n        this._reflectivityCache = {};\n        this._fovCache = {};\n        return this;\n    }\n    /**\n     * Compute the lighting\n     */\n    compute(lightingCallback) {\n        let doneCells = {};\n        let emittingCells = {};\n        let litCells = {};\n        for (let key in this._lights) { /* prepare emitters for first pass */\n            let light = this._lights[key];\n            emittingCells[key] = [0, 0, 0];\n            Color.add_(emittingCells[key], light);\n        }\n        for (let i = 0; i < this._options.passes; i++) { /* main loop */\n            this._emitLight(emittingCells, litCells, doneCells);\n            if (i + 1 == this._options.passes) {\n                continue;\n            } /* not for the last pass */\n            emittingCells = this._computeEmitters(litCells, doneCells);\n        }\n        for (let litKey in litCells) { /* let the user know what and how is lit */\n            let parts = litKey.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            lightingCallback(x, y, litCells[litKey]);\n        }\n        return this;\n    }\n    /**\n     * Compute one iteration from all emitting cells\n     * @param emittingCells These emit light\n     * @param litCells Add projected light to these\n     * @param doneCells These already emitted, forbid them from further calculations\n     */\n    _emitLight(emittingCells, litCells, doneCells) {\n        for (let key in emittingCells) {\n            let parts = key.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            this._emitLightFromCell(x, y, emittingCells[key], litCells);\n            doneCells[key] = 1;\n        }\n        return this;\n    }\n    /**\n     * Prepare a list of emitters for next pass\n     */\n    _computeEmitters(litCells, doneCells) {\n        let result = {};\n        for (let key in litCells) {\n            if (key in doneCells) {\n                continue;\n            } /* already emitted */\n            let color = litCells[key];\n            let reflectivity;\n            if (key in this._reflectivityCache) {\n                reflectivity = this._reflectivityCache[key];\n            }\n            else {\n                let parts = key.split(\",\");\n                let x = parseInt(parts[0]);\n                let y = parseInt(parts[1]);\n                reflectivity = this._reflectivityCallback(x, y);\n                this._reflectivityCache[key] = reflectivity;\n            }\n            if (reflectivity == 0) {\n                continue;\n            } /* will not reflect at all */\n            /* compute emission color */\n            let emission = [0, 0, 0];\n            let intensity = 0;\n            for (let i = 0; i < 3; i++) {\n                let part = Math.round(color[i] * reflectivity);\n                emission[i] = part;\n                intensity += part;\n            }\n            if (intensity > this._options.emissionThreshold) {\n                result[key] = emission;\n            }\n        }\n        return result;\n    }\n    /**\n     * Compute one iteration from one cell\n     */\n    _emitLightFromCell(x, y, color, litCells) {\n        let key = x + \",\" + y;\n        let fov;\n        if (key in this._fovCache) {\n            fov = this._fovCache[key];\n        }\n        else {\n            fov = this._updateFOV(x, y);\n        }\n        for (let fovKey in fov) {\n            let formFactor = fov[fovKey];\n            let result;\n            if (fovKey in litCells) { /* already lit */\n                result = litCells[fovKey];\n            }\n            else { /* newly lit */\n                result = [0, 0, 0];\n                litCells[fovKey] = result;\n            }\n            for (let i = 0; i < 3; i++) {\n                result[i] += Math.round(color[i] * formFactor);\n            } /* add light color */\n        }\n        return this;\n    }\n    /**\n     * Compute FOV (\"form factor\") for a potential light source at [x,y]\n     */\n    _updateFOV(x, y) {\n        let key1 = x + \",\" + y;\n        let cache = {};\n        this._fovCache[key1] = cache;\n        let range = this._options.range;\n        function cb(x, y, r, vis) {\n            let key2 = x + \",\" + y;\n            let formFactor = vis * (1 - r / range);\n            if (formFactor == 0) {\n                return;\n            }\n            cache[key2] = formFactor;\n        }\n        ;\n        this._fov.compute(x, y, range, cb.bind(this));\n        return cache;\n    }\n}\n","import { MeleeCommand } from '../ecs/components';\nimport System from './System';\n\nexport default class MeleeSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [MeleeCommand],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            const target = entity.meleeCommand.target;\n\n            if (target) {\n                entity.fireEvent('try-melee', {\n                    target,\n                });\n            }\n\n            entity.meleeCommand.destroy();\n        });\n    }\n}\n","import { SCREEN_DEATH } from '../core/screens/ScreenType';\nimport { Dead, IsDestroying, IsPlayer } from '../ecs/components';\nimport System from './System';\n\nexport default class DeathSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [Dead],\n            none: [IsDestroying],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            entity.fireEvent('death');\n\n            if (entity.has(IsPlayer)) {\n                this.game.screens.setScreen(SCREEN_DEATH);\n            } else {\n                entity.add(IsDestroying);\n            }\n        });\n    }\n}\n","import { game } from '../core/Game';\nimport { Particle, ParticleEmitter } from '../ecs/components';\nimport System from './System';\n\nexport default class ParticleSystem extends System {\n    #particleQuery = null;\n    #emitterQuery = null;\n\n    constructor(game) {\n        super(game);\n        this.#emitterQuery = game.ecs.createQuery({\n            all: [ParticleEmitter],\n        });\n        this.#particleQuery = game.ecs.createQuery({\n            all: [Particle],\n        });\n    }\n\n    createParticle(x, y, properties = {}) {\n        const e = this.game.ecs.createEntity();\n\n        e.add(Particle, {\n            ...properties,\n            x,\n            y,\n        });\n    }\n\n    createEmitter(x, y, particleData = {}) {\n        const e = this.game.ecs.createEntity();\n\n        e.add(ParticleEmitter, {\n            x,\n            y,\n            particleData: {\n                direction: {\n                    x: 0,\n                    y: 1,\n                },\n                glyphs: ['░', '▒', '▓', '█'],\n                fg1s: ['cyan', 'blue'],\n                speed: 0.04,\n                lifetime: 600,\n                ...particleData,\n            },\n        });\n    }\n\n    update(dt) {\n        this.#emitterQuery.get().forEach((entity) => {\n            const emitter = entity.particleEmitter;\n\n            emitter.age += dt;\n\n            if (emitter.isExpired) {\n                entity.destroy();\n            } else {\n                const total = (emitter.rate / 1000) * emitter.duration;\n                const targetCount = Math.trunc(emitter.percent * total);\n\n                for (let i = emitter.count; i < targetCount; i++) {\n                    emitter.createParticle();\n                }\n            }\n        });\n\n        this.#particleQuery.get().forEach((entity) => {\n            const particle = entity.particle;\n\n            particle.age += dt;\n\n            if (particle.isExpired) {\n                entity.destroy();\n                return;\n            }\n\n            particle.x += particle.direction.x * particle.speed;\n            particle.y += particle.direction.y * particle.speed;\n\n            if (!this.game.camera.isInView(particle.x, particle.y)) {\n                return;\n            }\n\n            const screen = this.game.camera.worldToScreen(\n                particle.x,\n                particle.y\n            );\n\n            this.game.renderer.draw(\n                Math.round(screen.x),\n                Math.round(screen.y),\n                particle.glyph,\n                particle.fg1,\n                particle.fg2,\n                particle.bg\n            );\n        });\n    }\n}\n","import { Faction } from '../ecs/components';\nimport Manager from './Manager';\n\nexport default class FactionManager extends Manager {\n    isHostile(factionA, factionB) {\n        return factionA !== factionB;\n    }\n\n    areEntitiesHostile(entityA, entityB) {\n        const factionA = entityA.get(Faction);\n        const factionB = entityB.get(Faction);\n\n        if (factionA && factionB) {\n            return this.isHostile(factionA.name, factionB.name);\n        }\n\n        return false;\n    }\n}\n","import Manager from './Manager';\n\nexport default class CameraManager extends Manager {\n    width = 32;\n    height = 24;\n\n    #focusX = 0;\n    #focusY = 0;\n\n    constructor(game) {\n        super(game);\n        window.addEventListener('resize', this.onWindowResize.bind(this));\n        this.computeSize();\n    }\n\n    get topLeftWorldX() {\n        return Math.min(\n            Math.max(0, this.#focusX - this.width / 2),\n            Math.max(\n                (this.width - this.game.map.width) / -2,\n                this.game.map.width - this.width\n            )\n        );\n    }\n\n    get topLeftWorldY() {\n        return Math.min(\n            Math.max(0, this.#focusY - this.height / 2),\n            Math.max(\n                (this.height - this.game.map.height) / -2,\n                this.game.map.height - this.height\n            )\n        );\n    }\n\n    computeSize() {\n        this.width = Math.floor(window.innerWidth / 32) - 2;\n        this.height = Math.floor(window.innerHeight / 32) - 2;\n    }\n\n    onWindowResize() {\n        this.computeSize();\n        this.game.renderer.resizeDisplay(this.width, this.height);\n    }\n\n    setFocus(x, y) {\n        this.#focusX = x;\n        this.#focusY = y;\n    }\n\n    worldToScreen(x, y) {\n        return {\n            x: x - this.topLeftWorldX,\n            y: y - this.topLeftWorldY,\n        };\n    }\n\n    screenToWorld(x, y) {\n        return {\n            x: x + this.topLeftWorldX,\n            y: y + this.topLeftWorldY,\n        };\n    }\n\n    isInView(worldX, worldY) {\n        const screen = this.worldToScreen(worldX, worldY);\n\n        return (\n            screen.x < this.width &&\n            screen.y < this.height &&\n            screen.x >= 0 &&\n            screen.y >= 0\n        );\n    }\n}\n","import System from './System';\n\nexport default class FPSMonitoringSystem extends System {\n    update(dt) {\n        const sector = this.game.world.sector;\n        let sectorTxt = '';\n\n        if (sector) {\n            sectorTxt = `(${sector.x}, ${sector.y})`;\n        };\n\n        const fps = Math.trunc(1000 / dt);\n        const display = `${sectorTxt} ${fps}`;\n\n        const textWidth = this.game.renderer.computeTextWidth(display);\n        const x = this.game.camera.width - textWidth;\n\n        this.game.renderer.drawText(\n            x,\n            this.game.camera.height - 1,\n            display,\n            '#172e2e'\n        );\n    }\n}\n","import WorldData from '../data/WorldData';\nimport { IsPlayer } from '../ecs/components';\nimport Manager from './Manager';\nimport { SCREEN_LOAD_SECTOR } from './screens/ScreenType';\n\nexport class WorldManager extends Manager {\n    #data;\n    #sectorId;\n    #entry;\n\n    get sectorId() {\n        return this.#sectorId;\n    }\n\n    get sector() {\n        return this.#data.getSector(this.#sectorId);\n    }\n\n    get entry() {\n        return this.#entry;\n    }\n\n    constructor(game) {\n        super(game);\n\n        this.#data = new WorldData();\n    }\n\n    getSetupData() {\n        return {\n            sectorId: this.#data.getStartingSector().id,\n            exploredSectorIds: [],\n        };\n    }\n\n    getSaveGameData() {\n        // TODO only save sector data??\n        const data = Array.from(this.game.ecs.entities.all).filter(\n            (e) => !e.has(IsPlayer)\n        );\n        const serialized = this.game.ecs.serialize(data);\n\n        console.log('serialized map data', serialized);\n\n        this.game.state.saveSectorEntityData(this.sector.id, serialized);\n\n        // this.game.state.saveSectorEntityData(this.sector.id, this.game.ecs.serialize());\n\n        return {\n            sectorId: this.sector.id,\n            exploredSectorIds: [],\n        };\n    }\n\n    setup(data) {\n        const sector = this.#data.getSector(data.sectorId);\n\n        this.game.screens.setScreen(SCREEN_LOAD_SECTOR, {\n            nextSector: sector,\n            entry: data.position,\n        });\n    }\n\n    teardown() {\n        // TODO: destroy all sector entities?\n        this.#sectorId = null;\n    }\n\n    onSectorLoaded(sector, entry) {\n        this.#sectorId = sector.id;\n\n        const data = this.game.state.loadSectorEntityData(sector.id);\n\n        if (data) {\n            console.log('loading sector...', data);\n            this.game.ecs.deserialize(data);\n        } else {\n            console.log('generating sector...');\n            sector.generate(this.game);\n        }\n    }\n\n    enterSector(sector, entry) {\n        this.game.screens.setScreen(SCREEN_LOAD_SECTOR, {\n            prevousSector: this.sector,\n            nextSector: sector,\n            entry,\n        });\n    }\n}\n","import { Sector } from './Sector';\nimport data from './world.json';\n\nexport default class WorldData {\n    #sectors = [];\n\n    get width() {\n        return data.width;\n    }\n\n    get height() {\n        return data.height;\n    }\n\n    idx(x, y) {\n        return y * this.width + x;\n    }\n\n    coord(idx) {\n        return {\n            x: Math.trunc(idx % this.width),\n            y: Math.trunc(idx / this.width),\n        };\n    }\n\n    constructor() {\n        this.#sectors = [];\n\n        for (let x = 0; x < data.width; x++) {\n            for (let y = 0; y < data.height; y++) {\n                const sector = Sector.parseData(this, data.sectors[y][x], x, y);\n\n                this.#sectors[sector.id] = sector;\n            }\n        }\n    }\n\n    isOutOfBounds(x, y) {\n        return x < 0 || y < 0 || x >= this.width || y >= this.height;\n    }\n\n    getStartingSector() {\n        return this.getSector(0);\n    }\n\n    getSectorByCoord(x, y) {\n        return this.getSector(this.idx(x, y));\n    }\n\n    getSector(idx) {\n        const { x, y } = this.coord(idx);\n\n        if (this.isOutOfBounds(x, y)) {\n            return new Sector(this, x, y);\n        }\n\n        return this.#sectors[idx];\n    }\n}\n","import { game } from '../core/Game';\nimport { getGenerator } from '../level/generators/generators';\n\nexport class Sector {\n    #x = 0;\n    #y = 0;\n    connectionsNorth = [];\n    connectionsWest = [];\n    generator = {};\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get id() {\n        return this.world.idx(this.x, this.y);\n    }\n\n    get northSector() {\n        return this.world.getSectorByCoord(this.#x, this.#y - 1);\n    }\n\n    get southSector() {\n        return this.world.getSectorByCoord(this.#x, this.#y + 1);\n    }\n\n    get eastSector() {\n        return this.world.getSectorByCoord(this.#x + 1, this.#y);\n    }\n\n    get westSector() {\n        return this.world.getSectorByCoord(this.#x - 1, this.#y);\n    }\n\n    constructor(world, x, y) {\n        this.world = world;\n        this.#x = x;\n        this.#y = y;\n    }\n\n    getExits() {\n        const exits = [];\n\n        // north\n        exits.push(...this.connectionsNorth.map((c) => ({\n            x: 12,\n            y: 0,\n        })));\n\n        // west\n        exits.push(...this.connectionsWest.map((c) => ({\n            x: 0,\n            y: 12,\n        })));\n\n        // east\n        exits.push(...this.eastSector.connectionsWest.map((c) => ({\n            x: game.map.width - 1,\n            y: 12,\n        })));\n\n        // south\n        exits.push(...this.southSector.connectionsNorth.map((c) => ({\n            x: 12,\n            y: game.map.height - 1,\n        })));\n\n        return exits;\n    }\n\n    generate(game) {\n        const exits = this.getExits();\n        const generator = getGenerator(this.generator.type);\n\n        const settings = {\n            width: game.map.width,\n            height: game.map.height,\n            exits,\n        };\n\n        const tiles = generator.generate(settings);\n\n        generator.populate(settings, tiles);\n\n        this.tiles = tiles;\n    }\n\n    static parseData(world, data, x, y) {\n        const sector = new Sector(world, x, y);\n\n        sector.connectionsNorth = data.connectionsNorth;\n        sector.connectionsWest = data.connectionsWest;\n        sector.generator = data.generator;\n\n        return sector;\n    }\n}\n","import { ForestCabinsGenerator } from './ForestCabinsGenerator';\nimport { ForestGenerator } from './ForestGenerator';\nimport { ForestStrongholdGenerator } from './ForestStrongholdGenerator';\nimport { ForestTownGenerator } from './ForestTownGenerator';\n\nconst mapping = {\n    ['FOREST']: ForestGenerator,\n    ['FOREST_STRONGHOLD']: ForestStrongholdGenerator,\n    ['FOREST_CABINS']: ForestCabinsGenerator,\n    ['FOREST_TOWN']: ForestTownGenerator,\n};\n\nexport const getGenerator = (name) => {\n    return mapping[name];\n};\n","import { pickRandom } from '../../utils/rand';\nimport { digExits } from '../LevelConnections';\nimport { UniformScheme } from '../schemes/UniformScheme';\nimport { TILE_THEME_CABIN, TILE_THEME_FOREST } from '../themes/TileTheme';\nimport SectorGenerator from './SectorGenerator';\n\nexport class ForestCabinsGenerator extends SectorGenerator {\n    static generate(settings) {\n        const tiles = UniformScheme.generate({\n            width: settings.width,\n            height: settings.height,\n        });\n\n        tiles.rooms.forEach((room) => room.theme = TILE_THEME_FOREST);\n\n        const mediumRooms = tiles.rooms.filter((r) => r.width >= 3 && r.height >= 3);\n        const room = pickRandom(mediumRooms);\n\n        if (room) {\n            room.theme = TILE_THEME_CABIN;\n            room.includeWalls = true;\n        }\n\n        const distancedRooms = mediumRooms.filter((r) => r !== room);\n        const room2 = pickRandom(distancedRooms);\n\n        if (room2) {\n            room2.theme = TILE_THEME_CABIN;\n            room2.includeWalls = true;\n        }\n\n        const leftovers = tiles.getUnassignedTiles();\n\n        leftovers.forEach((tile) => {\n            tile.theme = TILE_THEME_FOREST\n        });\n\n        digExits(tiles, settings.exits);\n\n        return tiles;\n    }\n}\n","export const pickRandom = (arr) => {\n    return arr[Math.floor(Math.random() * arr.length)];\n};\n\nexport const randomInt = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n};\n","import { computeAStar } from '../utils/AStar';\nimport { diagonalDistance } from '../utils/diagonalDistance';\nimport { manhattanDistance } from '../utils/ManhattanDistance';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from './TileData';\n\nconst getClosestTile = (tiles, target) => {\n    let closest = null;\n    let closestDistance = null;\n\n    tiles.data.forEach((tile) => {\n        if (!tile.isType(TILE_TYPE_FLOOR)) {\n            return;\n        }\n\n        const distance = manhattanDistance(tile, target);\n\n        if (distance < closestDistance || closest === null) {\n            closest = tile;\n            closestDistance = distance;\n            return;\n        }\n    });\n\n    return closest;\n}\n\nexport const digExit = (tiles, exit) => {\n    const source = getClosestTile(tiles, exit);\n\n    if (source.x === exit.x && source.y === exit.y) {\n        tiles.setTileType(exit.x, exit.y, TILE_TYPE_FLOOR);\n        return;\n    }\n\n    tiles.setTileType(source.x, source.y, TILE_TYPE_WALL);\n    tiles.setTileType(exit.x, exit.y, TILE_TYPE_WALL);\n\n    const result = computeAStar({\n        goal: {\n            x: source.x,\n            y: source.y,\n        },\n        start: {\n            x: exit.x,\n            y: exit.y,\n        },\n        cost: (a, b) => {\n            if (tiles.isOnEdge(b.x, b.y)) {\n                return Infinity\n            }\n\n            if (tiles.tileTypeMatches(b.x, b.y, TILE_TYPE_WALL)) {\n                return diagonalDistance(a, b);\n            }\n\n            return Infinity;\n        }\n    });\n\n    result.path.forEach((segment) => {\n        tiles.setTileType(segment.x, segment.y, TILE_TYPE_FLOOR);\n    });\n\n    if (result.success) {\n        const door = result.path[result.path.length - 2];\n        const room = tiles.getRoomForTile(door.x, door.y);\n\n        if (room) {\n            room.addExit(door.x, door.y);\n        }\n    }\n};\n\nexport const digExits = (tiles, exits) => {\n    exits.forEach((exit) => digExit(tiles, exit));\n};\n","import { TILE_THEME_CASTLE } from './themes/TileTheme';\n\nexport const TILE_TYPE_FLOOR = 0;\nexport const TILE_TYPE_WALL = 1;\nexport const TILE_TYPE_OUT_OF_BOUNDS = 1;\n\nexport class TileData {\n    x = -1;\n    y = -1;\n    type = TILE_TYPE_OUT_OF_BOUNDS;\n    theme = TILE_THEME_CASTLE;\n\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n\n    isType(type) {\n        return this.type === type;\n    }\n}\n\nexport const createTileData = (x, y) => new TileData(x, y);\n","import CastleTheme from './CastleTheme';\nimport ForestTheme from './ForestTheme';\nimport CabinTheme from './CabinTheme';\n\nexport const TILE_THEME_FOREST = 0;\nexport const TILE_THEME_CASTLE = 1;\nexport const TILE_THEME_CABIN = 2;\n\nconst mapping = {\n    [TILE_THEME_FOREST]: ForestTheme,\n    [TILE_THEME_CASTLE]: CastleTheme,\n    [TILE_THEME_CABIN]: CabinTheme,\n};\n\nexport const getThemePopulator = (theme) => {\n    return mapping[theme];\n};\n","import { game } from '../../core/Game';\nimport { TILE_TYPE_WALL } from '../TileData';\nimport TileThemePopulator from './TileThemePopulator';\n\nexport default class CastleTheme extends TileThemePopulator {\n    static populateTile(tile) {\n        if (this.getEntities(tile).length === 0) {\n            if (tile.isType(TILE_TYPE_WALL)) {\n                const wall = game.ecs.createPrefab('Wall');\n\n                wall.position.setPos(tile.x, tile.y);\n            }\n        }\n    }\n\n    static populateRoom(room) {\n        room.exits.forEach((exit) => {\n            const door = game.ecs.createPrefab('Door');\n\n            if (this.getEntities(exit).length === 0) {\n                door.position.setPos(exit.x, exit.y);\n            }\n        });\n\n        room.tiles.forEach((tile) => this.populateTile(tile));\n    }\n}\n","import { game } from '../../core/Game';\nimport { pickRandom } from '../../utils/rand';\n\nexport default class TileThemePopulator {\n    static populateTile(tile) {\n    }\n\n    static populateRoom(room) {\n        room.tiles.forEach((tile) => {\n            this.populateTile(tile);\n        });\n    }\n\n    static populate(tiles) {\n        tiles.data.forEach((tile) => {\n            this.populateTile(tile);\n        });\n    }\n\n    static getEntities(tile) {\n        return game.map.getEntitiesAt(tile.x, tile.y);\n    }\n\n    static clearTile(tile) {\n        getEntities(tile).forEach((e) => {\n            e.destroy();\n        });\n    }\n\n    static getRandomEmptyTile(tileArr, attempts=100) {\n        for (let i = 0; i < attempts; i++) {\n            const tile = pickRandom(tileArr);\n\n            if (this.getEntities(tile) <= 0) {\n                return tile;\n            }\n        }\n\n        console.warn(`ran out of attempts (${attempts}) to place item`, tileArr);\n    }\n\n    static trySpawn(room, cb) {\n        const tile = this.getRandomEmptyTile(room.interiorTiles);\n\n        if (tile) {\n            cb(tile);\n        }\n    }\n}\n","import { BoredGoalType } from '../../ai/GoalTypes';\nimport { game } from '../../core/Game';\nimport { LIQUID_BLOOD, LIQUID_HONEY, LIQUID_WATER } from '../../enums/LiquidTypes';\nimport { randomInt } from '../../utils/rand';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\nimport TileThemePopulator from './TileThemePopulator';\n\nexport default class ForestTheme extends TileThemePopulator {\n    static populateTile(tile) {\n        if (tile.isType(TILE_TYPE_WALL)) {\n            const type = Math.random() < 0.5 ? 'PineTree' : 'SmallPineTree';\n            const tree = game.ecs.createPrefab(type);\n\n            tree.position.setPos(tile.x, tile.y);\n        }\n    }\n\n    static populateRoom(room) {\n        room.tiles.forEach((tile) => {\n            this.populateTile(tile);\n\n            if (Math.random() < .1) {\n                if (tile.isType(TILE_TYPE_FLOOR)) {\n                    const stone = game.ecs.createPrefab('Stone');\n\n                    stone.position.setPos(tile.x, tile.y);\n                }\n            }\n        });\n\n        for (let i = 0; i < randomInt(0, 1); i++) {\n            this.trySpawn(room, (tile) => {\n                const goblin = game.ecs.createPrefab('Goblin');\n\n                goblin.position.setPos(tile.x, tile.y);\n                goblin.brain.pushGoal(BoredGoalType.create());\n            });\n        }\n\n        for (let i = 0; i < randomInt(0, 1); i++) {\n            this.trySpawn(room, (tile) => {\n                const vial = game.ecs.createPrefab('Vial');\n\n                vial.liquidContainer.contents = LIQUID_BLOOD;\n                vial.position.setPos(tile.x, tile.y);\n            });\n        }\n\n        for (let i = 0; i < randomInt(0, 1); i++) {\n            this.trySpawn(room, (tile) => {\n                const vial = game.ecs.createPrefab('Vial');\n\n                vial.liquidContainer.contents = LIQUID_WATER;\n                vial.position.setPos(tile.x, tile.y);\n            });\n        }\n\n        for (let i = 0; i < randomInt(0, 1); i++) {\n            this.trySpawn(room, (tile) => {\n                const vial = game.ecs.createPrefab('Vial');\n\n                vial.liquidContainer.contents = LIQUID_HONEY;\n                vial.position.setPos(tile.x, tile.y);\n            });\n        }\n    }\n}\n","import { BoredGoalType } from '../../ai/GoalTypes';\nimport { game } from '../../core/Game';\nimport { LIQUID_HONEY } from '../../enums/LiquidTypes';\nimport { randomInt } from '../../utils/rand';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\nimport TileThemePopulator from './TileThemePopulator';\n\nexport default class CabinTheme extends TileThemePopulator {\n    static populateTile(tile) {\n        if (this.getEntities(tile).length === 0) {\n            if (tile.isType(TILE_TYPE_WALL)) {\n                const wall = game.ecs.createPrefab('WoodWall');\n\n                wall.position.setPos(tile.x, tile.y);\n            }\n        }\n    }\n\n    static populateRoom(room) {\n        room.exits.forEach((exit) => {\n            const door = game.ecs.createPrefab('Door');\n\n            if (this.getEntities(exit).length === 0) {\n                door.position.setPos(exit.x, exit.y);\n            }\n        });\n\n        room.tiles.forEach((tile) => this.populateTile(tile));\n\n        this.trySpawn(room, (tile) => {\n            const chest = game.ecs.createPrefab('Chest');\n            const stone = game.ecs.createPrefab('Stone');\n            const vial = game.ecs.createPrefab('Vial');\n\n            vial.liquidContainer.contents = LIQUID_HONEY;\n            chest.position.setPos(tile.x, tile.y);\n            chest.inventory.addLoot(vial);\n            chest.inventory.addLoot(stone);\n        });\n\n        for (let i = 0; i < randomInt(0, 3); i++) {\n            this.trySpawn(room, (tile) => {\n                const wanderer = game.ecs.createPrefab('HumanWanderer');\n\n                wanderer.position.setPos(tile.x, tile.y);\n                wanderer.brain.pushGoal(BoredGoalType.create());\n            });\n        }\n    }\n}\n","import { Map as MapGenerator } from 'rot-js';\nimport { digExits } from '../LevelConnections';\nimport TileContainer from '../TileContainer';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\nimport TileScheme from '../TileScheme';\n\nexport class UniformScheme extends TileScheme {\n    static generate(settings) {\n        const width = settings.width;\n        const height = settings.height;\n        const exits = settings.exits || [];\n        const tiles = new TileContainer(width, height);\n\n        const generator = new MapGenerator.Uniform(width, height, {\n            timeLimit: 8000,\n            roomWidth: settings.roomWidth || [2, 8],\n            roomHeight: settings.roomHeight || [2, 8],\n            roomDugPercentage: settings.digPercentage || 0.8,\n        });\n\n        generator.create((x, y, v) => {\n            if (v === 0) {\n                tiles.setTileType(x, y, TILE_TYPE_FLOOR);\n            }\n\n            if (v === 1) {\n                tiles.setTileType(x, y, TILE_TYPE_WALL);\n            }\n        });\n\n        generator.getRooms().forEach((r) => {\n            const room = tiles.createRoom(\n                r.getLeft(),\n                r.getTop(),\n                (r.getRight() - r.getLeft()) + 1,\n                (r.getBottom() - r.getTop()) + 1\n            );\n            r.getDoors((x, y) => {\n                room.addExit(x, y);\n            });\n        });\n\n        digExits(tiles, exits);\n\n        return tiles;\n    }\n}\n","import Grid from '../utils/Grid';\nimport RoomData from './RoomData';\nimport { createTileData, TILE_TYPE_FLOOR } from './TileData';\n\nexport default class TileContainer {\n    #defaultType = TILE_TYPE_FLOOR;\n    #grid = [];\n    #rooms = {};\n\n    get width() {\n        return this.#grid.width;\n    }\n\n    get height() {\n        return this.#grid.height;\n    }\n\n    get size() {\n        return this.width * this.height;\n    }\n\n    get data() {\n        return this.#grid.data;\n    }\n\n    get rooms() {\n        return Object.values(this.#rooms);\n    }\n\n    constructor(width, height, defaultType = TILE_TYPE_FLOOR) {\n        this.#grid = new Grid(width, height, createTileData);\n        this.#defaultType = defaultType;\n        this.clear();\n    }\n\n    getTile(x, y) {\n        return this.#grid.get(x, y);\n    }\n\n    setTileType(x, y, type) {\n        this.#grid.get(x, y).type = type;\n    }\n\n    setTileTheme(x, y, theme) {\n        this.#grid.get(x, y).theme = theme;\n    }\n\n    getTileType(x, y) {\n        return this.getTile(x, y).type;\n    }\n\n    addRoom(room) {\n        this.#rooms[room.id] = room;\n    }\n\n    createRoom(x, y, width, height) {\n        const room = new RoomData(x, y, width, height, this);\n\n        this.addRoom(room);\n\n        return room;\n    }\n\n    clear() {\n        this.fill(0, 0, this.width, this.height, this.#defaultType);\n    }\n\n    fill(x, y, width, height, type) {\n        for (let i = x; i < x + width; i++) {\n            for (let j = y; j < y + height; j++) {\n                this.setTileType(i, j, type);\n            }\n        }\n    }\n\n    tileTypeMatches(x, y, type) {\n        return this.getTile(x, y).isType(type);\n    }\n\n    combineOther(offsetX, offsetY, tiles) {\n        tiles.rooms.forEach((room) => {\n            room.cloneTo(room.x + offsetX, room.y + offsetY, this);\n        });\n        tiles.data.forEach((tile) => {\n            this.setTileType(tile.x + offsetX, tile.y + offsetY, tile.type);\n            this.setTileTheme(tile.x + offsetX, tile.y + offsetY, tile.theme);\n        });\n    }\n\n    isOnEdge(x, y) {\n        return x === 0 || y === 0 || x === this.width - 1 || y === this.height - 1;\n    }\n\n    setTheme(theme) {\n        this.data.forEach((tile) => this.setTileTheme(tile.x, tile.y, theme));\n        this.rooms.forEach((room) => room.theme = theme);\n    }\n\n    getRoomForTile(x, y) {\n        const tile = this.getTile(x, y);\n\n        return this.rooms.find((room) => {\n            return room.tiles.includes(tile);\n        });\n    }\n\n    getUnassignedTiles() {\n        return this.data.filter((tile) => {\n            return !this.getRoomForTile(tile.x, tile.y);\n        });\n    }\n\n    getNeighbors(x, y) {\n        return this.#grid.getNeighbors(x, y);\n    }\n}\n","export default class Grid {\n    #width = 0;\n    #height = 0;\n    #data = [];\n    #defaultValueGenerator = () => null;\n\n    get width() {\n        return this.#width;\n    }\n\n    get height() {\n        return this.#height;\n    }\n\n    get size() {\n        return this.#width * this.#height;\n    }\n\n    get data() {\n        return this.#data;\n    }\n\n    constructor(width, height, defaultValueGenerator) {\n        this.#width = width;\n        this.#height = height;\n        this.#defaultValueGenerator = defaultValueGenerator;\n\n        this.clear();\n    }\n\n    idx(x, y) {\n        return y * this.width + x;\n    }\n\n    coord(idx) {\n        return {\n            x: Math.trunc(idx % this.width),\n            y: Math.trunc(idx / this.width),\n        };\n    }\n\n    clear() {\n        for (let i = 0; i < this.size; i++) {\n            const { x, y } = this.coord(i);\n\n            this.#data[i] = this.#defaultValueGenerator(x, y);\n        }\n    }\n\n    set(x, y, value) {\n        if (this.isOutOfBounds(x, y)) {\n            console.warn(\n                `Trying to set out-of-bounds coordinates (${x}, ${y}) to value ${value}`\n            );\n            return;\n        }\n\n        const idx = this.idx(x, y);\n\n        this.#data[idx] = value;\n    }\n\n    get(x, y) {\n        if (this.isOutOfBounds(x, y)) {\n            return this.#defaultValueGenerator();\n        }\n\n        return this.#data[this.idx(x, y)];\n    }\n\n    isOutOfBounds(x, y) {\n        return x < 0 || y < 0 || x >= this.width || y >= this.height;\n    }\n\n    getNeighbors(x, y) {\n        return [\n            this.get(x - 1, y - 1), // TOP LEFT\n            this.get(x, y - 1), // TOP\n            this.get(x + 1, y - 1), // TOP RIGHT\n            this.get(x - 1, y), // LEFT\n            this.get(x + 1, y), // RIGHT\n            this.get(x - 1, y + 1), // BOTTOM LEFT\n            this.get(x, y + 1), // BOTTOM\n            this.get(x + 1, y + 1), // BOTTOM RIGHT\n        ];\n    }\n}\n","import { nanoid } from 'nanoid'\nimport { TILE_THEME_FOREST } from './themes/TileTheme';\nimport { TILE_TYPE_FLOOR } from './TileData';\n\nexport default class RoomData {\n    id = 0;\n    x = 0;\n    y = 0;\n    width = 0;\n    height = 0;\n    theme = TILE_THEME_FOREST;\n    includeWalls = false;\n    #container = null;\n    #exitCoords = [];\n\n    get relativeExits() {\n        return this.#exitCoords;\n    }\n\n    get exits() {\n        return this.relativeExits.map((exit) => ({\n            x: exit.x + this.x,\n            y: exit.y + this.y,\n        }));\n    }\n\n    get left() {\n        return this.includeWalls ? this.x - 1 : this.x;\n    }\n\n    get right() {\n        return this.includeWalls ? this.x + this.width + 1 : this.x + this.width;\n    }\n\n    get top() {\n        return this.includeWalls ? this.y - 1 : this.y;\n    }\n\n    get bottom() {\n        return this.includeWalls ? this.y + this.height + 1 : this.y + this.height;\n    }\n\n    get borderTiles() {\n        const start = this.includeWalls ? -1 : 0;\n        const endWidth = this.includeWalls ? this.width + 1 : this.width;\n        const endHeight = this.includeWalls ? this.height + 1 : this.height;\n        const borders = [];\n\n        for (let i = start; i < endWidth; i++) {\n            for (let j = start; j < endHeight; j++) {\n                if (i === start || i === endWidth - 1|| j === start || j === endHeight - 1) {\n                    borders.push(this.#container.getTile(\n                        i + this.x,\n                        j + this.y\n                    ));\n                }\n            }\n        }\n\n        return borders;\n    }\n\n    get interiorTiles() {\n        const interior = [];\n\n        for (let i = 0; i < this.width; i++) {\n            for (let j = 0; j < this.height; j++) {\n                interior.push(this.#container.getTile(\n                    i + this.x,\n                    j + this.y\n                ));\n            }\n        }\n\n        return interior;\n    }\n\n    get tiles() {\n        const start = this.includeWalls ? -1 : 0;\n        const endWidth = this.includeWalls ? this.width + 1 : this.width;\n        const endHeight = this.includeWalls ? this.height + 1 : this.height;\n        const tiles = [];\n\n        for (let i = start; i < endWidth; i++) {\n            for (let j = start; j < endHeight; j++) {\n                tiles.push(this.#container.getTile(i + this.x, j + this.y));\n            }\n        }\n\n        return tiles;\n    }\n\n    constructor(x, y, width, height, container) {\n        this.id = nanoid();\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.#container = container;\n    }\n\n    addRelativeExit(x, y) {\n        this.#container.setTileType(this.x + x, this.y + y, TILE_TYPE_FLOOR);\n        this.#exitCoords.push({ x, y });\n    }\n\n    addExit(x, y) {\n        this.addRelativeExit(x - this.x, y - this.y);\n    }\n\n    cloneTo(x, y, container) {\n        const room = new RoomData(x, y, this.width, this.height, container);\n\n        room.theme = this.theme;\n        room.includeWalls = this.includeWalls;\n\n        this.relativeExits.forEach((exit) => {\n            room.addRelativeExit(exit.x, exit.y);\n        });\n\n        container.addRoom(room);\n\n        return room;\n    }\n\n    containsPoint(x, y) {\n        return x <= this.right && x >= this.left && y <= this.bottom && y >= this.top;\n    }\n\n    intersects(left, top, right, bottom) {\n        const c1 = left < this.right;\n        const c2 = right > this.left;\n        const c3 = top < this.bottom;\n        const c4 = bottom > this.top;\n\n        return c1 && c2 && c3 && c4;\n    }\n}\n","// This file replaces `index.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nimport { urlAlphabet } from './url-alphabet/index.js'\n\nif (false) {\n  // All bundlers will remove this block in the production bundle.\n  if (\n    typeof navigator !== 'undefined' &&\n    navigator.product === 'ReactNative' &&\n    typeof crypto === 'undefined'\n  ) {\n    throw new Error(\n      'React Native does not have a built-in secure random generator. ' +\n        'If you don’t need unpredictable IDs use `nanoid/non-secure`. ' +\n        'For secure IDs, import `react-native-get-random-values` ' +\n        'before Nano ID. If you use Expo, install `expo-random` ' +\n        'and use `nanoid/async`.'\n    )\n  }\n  if (typeof msCrypto !== 'undefined' && typeof crypto === 'undefined') {\n    throw new Error(\n      'Import file with `if (!window.crypto) window.crypto = window.msCrypto`' +\n        ' before importing Nano ID to fix IE 11 support'\n    )\n  }\n  if (typeof crypto === 'undefined') {\n    throw new Error(\n      'Your browser does not have secure random generator. ' +\n        'If you don’t need unpredictable IDs, you can use nanoid/non-secure.'\n    )\n  }\n}\n\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\n\nlet customRandom = (alphabet, size, getRandom) => {\n  // First, a bitmask is necessary to generate the ID. The bitmask makes bytes\n  // values closer to the alphabet size. The bitmask calculates the closest\n  // `2^31 - 1` number, which exceeds the alphabet size.\n  // For example, the bitmask for the alphabet size 30 is 31 (00011111).\n  // `Math.clz32` is not used, because it is not available in browsers.\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  // Though, the bitmask solution is not perfect since the bytes exceeding\n  // the alphabet size are refused. Therefore, to reliably generate the ID,\n  // the random bytes redundancy has to be satisfied.\n\n  // Note: every hardware random generator call is performance expensive,\n  // because the system call for entropy collection takes a lot of time.\n  // So, to avoid additional system calls, extra bytes are requested in advance.\n\n  // Next, a step determines how many random bytes to generate.\n  // The number of random bytes gets decided upon the ID size, mask,\n  // alphabet size, and magic number 1.6 (using 1.6 peaks at performance\n  // according to benchmarks).\n\n  // `-~f => Math.ceil(f)` if f is a float\n  // `-~i => i + 1` if i is an integer\n  let step = -~((1.6 * mask * size) / alphabet.length)\n\n  return () => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      // A compact alternative for `for (var i = 0; i < step; i++)`.\n      let j = step\n      while (j--) {\n        // Adding `|| ''` refuses a random byte that exceeds the alphabet size.\n        id += alphabet[bytes[j] & mask] || ''\n        // `id.length + 1 === size` is a more compact option.\n        if (id.length === +size) return id\n      }\n    }\n  }\n}\n\nlet customAlphabet = (alphabet, size) => customRandom(alphabet, size, random)\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  while (size--) {\n    // It is incorrect to use bytes exceeding the alphabet size.\n    // The following mask reduces the random byte in the 0-255 value\n    // range to the 0-63 value range. Therefore, adding hacks, such\n    // as empty string fallback or magic numbers, is unneccessary because\n    // the bitmask trims bytes down to the alphabet size.\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      // `0-9a-z`\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      // `A-Z`\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","// This alphabet uses `A-Za-z0-9_-` symbols. The genetic algorithm helped\n// optimize the gzip compression for this alphabet.\nlet urlAlphabet =\n  'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW'\n\nexport { urlAlphabet }\n","export default class TileScheme {\n    static generate() {}\n\n    static populate() {}\n}\n","import { getThemePopulator } from '../themes/TileTheme';\nimport TileContainer from '../TileContainer';\n\nexport default class SectorGenerator {\n    static generate(settings) {\n        return new TileContainer(settings.width, settings.height);\n    }\n\n    static populate(settings, tiles) {\n        tiles.rooms.forEach((room) => {\n            const theme = getThemePopulator(room.theme);\n\n            theme.populateRoom(room);\n        });\n\n        tiles.getUnassignedTiles().forEach((tile) => {\n            const theme = getThemePopulator(tile.theme);\n\n            theme.populateTile(tile);\n        });\n    }\n};\n","import { digExits } from '../LevelConnections';\nimport { UniformScheme } from '../schemes/UniformScheme';\nimport { TILE_THEME_FOREST } from '../themes/TileTheme';\nimport SectorGenerator from './SectorGenerator';\n\nexport class ForestGenerator extends SectorGenerator {\n    static generate(settings) {\n        const tiles = UniformScheme.generate({\n            width: settings.width,\n            height: settings.height,\n            exits: settings.exits\n        });\n\n        tiles.setTheme(TILE_THEME_FOREST);\n\n        digExits(tiles, settings.exits);\n\n        return tiles;\n    }\n}\n","import { digExits } from '../LevelConnections';\nimport { DenseCastleScheme } from '../schemes/DenseCastleScheme';\nimport { UniformScheme } from '../schemes/UniformScheme';\nimport { TILE_THEME_CASTLE, TILE_THEME_FOREST } from '../themes/TileTheme';\nimport TileContainer from '../TileContainer';\nimport SectorGenerator from './SectorGenerator';\n\nexport class ForestStrongholdGenerator extends SectorGenerator {\n    static generate(settings) {\n        const tiles = new TileContainer(settings.width, settings.height);\n        const padding = 5;\n        const exitOffset = Math.ceil(padding / 2) - 1;\n\n        const top = UniformScheme.generate({\n            width: settings.width - padding,\n            height: padding,\n            exits: [\n                { x: exitOffset, y: padding - 1 },\n                { x: settings.width - padding - 1, y: exitOffset - 1 },\n                { x: padding + 11, y: padding - 1 },\n            ]\n        });\n\n        const left = UniformScheme.generate({\n            width: padding,\n            height: settings.height - padding,\n            exits: [\n                { x: exitOffset, y: 0 },\n                { x: padding - 1, y: settings.height - padding - exitOffset - 1 }\n            ]\n        });\n\n        const bottom = UniformScheme.generate({\n            width: settings.width - padding,\n            height: padding,\n            exits: [\n                { x: 0, y: exitOffset - 1 },\n                { x: settings.width - padding - exitOffset - 1, y: 0 }\n            ]\n        });\n\n        const right = UniformScheme.generate({\n            width: padding,\n            height: settings.height - padding,\n            exits: [\n                { x: 0, y: exitOffset - 1 },\n                { x: exitOffset - 1, y: settings.height - padding - 1 }\n            ]\n        });\n\n        const castle = DenseCastleScheme.generate({\n            width: (settings.width - (padding * 2)) + 2,\n            height: (settings.height - (padding * 2)) + 2,\n            exits: [{ x: 12, y: 0 }],\n        });\n\n        top.setTheme(TILE_THEME_FOREST);\n        left.setTheme(TILE_THEME_FOREST);\n        bottom.setTheme(TILE_THEME_FOREST);\n        right.setTheme(TILE_THEME_FOREST);\n        castle.setTheme(TILE_THEME_CASTLE);\n\n        tiles.combineOther(0, 0, top);\n        tiles.combineOther(0, padding, left);\n        tiles.combineOther(padding, settings.height - padding, bottom);\n        tiles.combineOther(settings.width - padding, 0, right);\n        tiles.combineOther(padding - 1, padding - 1, castle);\n\n        digExits(tiles, settings.exits);\n\n        return tiles;\n    }\n}\n","import { digExits } from '../LevelConnections';\nimport TileContainer from '../TileContainer';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\nimport { pickRandom, randomInt } from '../../utils/rand';\nimport { computeAStar } from '../../utils/AStar';\nimport { diagonalDistance } from '../../utils/diagonalDistance';\nimport TileScheme from '../TileScheme';\n\nconst VERTICAL = 0;\nconst HORIZONTAL = 1;\n\nlet curId = 1;\nconst createNodeId = () => curId++;\n\nconst splitNodeVertical = (node, cut) => {\n    const leftId = createNodeId();\n    const rightId = createNodeId();\n    const left = {\n        id: leftId,\n        isLeaf: true,\n        parentId: node.id,\n        siblingId: rightId,\n        offsetX: node.offsetX,\n        offsetY: node.offsetY,\n        width: cut,\n        height: node.height,\n    };\n    const right = {\n        id: rightId,\n        isLeaf: true,\n        parentId: node.id,\n        siblingId: leftId,\n        offsetX: node.offsetX + cut,\n        offsetY: node.offsetY,\n        width: node.width - cut,\n        height: node.height,\n    };\n    return [left, right];\n};\n\nconst splitNodeHorizontal = (node, cut) => {\n    const topId = createNodeId();\n    const bottomId = createNodeId();\n    const top = {\n        id: topId,\n        isLeaf: true,\n        parentId: node.id,\n        siblingId: bottomId,\n        offsetX: node.offsetX,\n        offsetY: node.offsetY,\n        width: node.width,\n        height: cut,\n    };\n    const bottom = {\n        id: bottomId,\n        isLeaf: true,\n        parentId: node.id,\n        siblingId: topId,\n        offsetX: node.offsetX,\n        offsetY: node.offsetY + cut,\n        width: node.width,\n        height: node.height - cut,\n    };\n\n    return [top, bottom];\n};\n\nexport class DenseCastleScheme extends TileScheme {\n    static generate(settings) {\n        const width = settings.width;\n        const height = settings.height;\n        const exits = settings.exits || [];\n\n        const minRoomWidth = settings.minRoomWidth || 4;\n        const minRoomHeight = settings.minRoomHeight || 4;\n\n        const maxRoomWidth = settings.maxRoomWidth || 12;\n        const maxRoomHeight = settings.maxRoomHeight || 12;\n\n        const splitIgnoreChance = settings.splitIgnoreChance || 0.8;\n\n        const loopiness = settings.loopiness || 35;\n\n        const tiles = new TileContainer(width, height);\n\n        for (let i = 0; i < width; i++) {\n            for (let j = 0; j < height; j++) {\n                if (i === 0 || i === width - 1 || j === 0 || j === height - 1) {\n                    tiles.setTileType(i, j, TILE_TYPE_WALL);\n                } else {\n                    tiles.setTileType(i, j, TILE_TYPE_FLOOR);\n                }\n            }\n        }\n\n        const nodes = [\n            {\n                isLeaf: true,\n                parentId: null,\n                siblingId: null,\n                id: createNodeId(),\n                offsetX: 0,\n                offsetY: 0,\n                height: height - 1,\n                width: width - 1,\n            },\n        ];\n\n        const graph = [];\n\n        while (nodes.length > 0) {\n            const node = nodes.pop();\n            graph.push(node);\n\n            if (node.width < maxRoomWidth && node.height < maxRoomHeight) {\n                const ignoreSplit = Math.random() < splitIgnoreChance;\n\n                if (ignoreSplit) {\n                    continue;\n                }\n            }\n\n            const directions = [];\n\n            if (node.width - minRoomWidth - 1 > minRoomWidth) {\n                directions.push(VERTICAL);\n            }\n\n            if (node.height - minRoomHeight - 1 > minRoomHeight) {\n                directions.push(HORIZONTAL);\n            }\n\n            if (directions.length <= 0) {\n                continue;\n            }\n\n            const direction = pickRandom(directions);\n\n            if (direction === VERTICAL) {\n                const cut = randomInt(\n                    minRoomWidth + 1,\n                    node.width - minRoomWidth - 1\n                );\n\n                nodes.push(...splitNodeVertical(node, cut));\n            } else {\n                const cut = randomInt(\n                    minRoomHeight + 1,\n                    node.height - minRoomHeight - 1\n                );\n\n                nodes.push(...splitNodeHorizontal(node, cut));\n            }\n\n            node.isLeaf = false;\n        }\n\n        graph.forEach((node) => {\n            if (node.parentId === null) {\n                return;\n            }\n\n            if (node.isLeaf) {\n                const room = tiles.createRoom(\n                    node.offsetX + 1,\n                    node.offsetY + 1,\n                    node.width - 1,\n                    node.height - 1\n                );\n\n                room.includeWalls = true;\n\n                for (let i = 0; i < node.width; i++) {\n                    tiles.setTileType(\n                        node.offsetX + i,\n                        node.offsetY,\n                        TILE_TYPE_WALL\n                    );\n                }\n\n                for (let j = 0; j < node.height; j++) {\n                    tiles.setTileType(\n                        node.offsetX,\n                        node.offsetY + j,\n                        TILE_TYPE_WALL\n                    );\n                }\n                return;\n            }\n        });\n\n        graph.forEach((node) => {\n            if (node.parentId === null) {\n                return;\n            }\n\n            const sibling = graph.find((n) => n.id === node.siblingId);\n\n            let doorCandidates = [];\n            let hasSib = false;\n\n            if (sibling.offsetX < node.offsetX) {\n                hasSib = true;\n                for (let i = 1; i < node.height; i++) {\n                    const x = node.offsetX;\n                    const y = node.offsetY + i;\n                    const tile = tiles.getTile(x, y);\n\n                    if (\n                        tiles.tileTypeMatches(x - 1, y, TILE_TYPE_FLOOR) &&\n                        tiles.tileTypeMatches(x + 1, y, TILE_TYPE_FLOOR)\n                    ) {\n                        doorCandidates.push(tile);\n                    }\n                }\n            } else if (sibling.offsetY < node.offsetY) {\n                hasSib = true;\n                for (let i = 1; i < node.width; i++) {\n                    const x = node.offsetX + i;\n                    const y = node.offsetY;\n                    const tile = tiles.getTile(x, y);\n\n                    if (\n                        tiles.tileTypeMatches(x, y - 1, TILE_TYPE_FLOOR) &&\n                        tiles.tileTypeMatches(x, y + 1, TILE_TYPE_FLOOR)\n                    ) {\n                        doorCandidates.push(tile);\n                    }\n                }\n            }\n\n            const door = pickRandom(doorCandidates);\n\n            if (hasSib && !door) {\n                console.warn(\n                    'cannot make door!?',\n                    node,\n                    node.width,\n                    node.height\n                );\n            }\n\n            if (door) {\n                const room = tiles.getRoomForTile(door.x, door.y);\n\n                if (room) {\n                    room.addExit(door.x, door.y);\n                }\n\n                tiles.setTileType(door.x, door.y, TILE_TYPE_FLOOR);\n            }\n        });\n\n        const cost = (a, b) => {\n            if (tiles.tileTypeMatches(b.x, b.y, TILE_TYPE_FLOOR)) {\n                return diagonalDistance(a, b);\n            }\n\n            return Infinity;\n        };\n\n        const tryAddLoop = (a, b) => {\n            if (a.isType(TILE_TYPE_FLOOR) && b.isType(TILE_TYPE_FLOOR)) {\n                const start = {\n                    x: b.x,\n                    y: b.y,\n                };\n                const goal = {\n                    x: a.x,\n                    y: a.y,\n                };\n                const path = computeAStar({\n                    start,\n                    goal,\n                    cost\n                });\n\n                if (path.success && path.cost >= loopiness) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n\n        tiles.data\n            .filter((tile) => tile.isType(TILE_TYPE_WALL))\n            .forEach((tile) => {\n                const north = tiles.getTile(tile.x, tile.y - 1);\n                const south = tiles.getTile(tile.x, tile.y + 1);\n\n                if (tryAddLoop(north, south)) {\n                    tiles.setTileType(tile.x, tile.y, TILE_TYPE_FLOOR);\n\n                    const room = tiles.getRoomForTile(tile.x, tile.y);\n\n                    if (room) {\n                        room.addExit(tile.x, tile.y);\n                    }\n\n                    return;\n                }\n\n                const east = tiles.getTile(tile.x - 1, tile.y);\n                const west = tiles.getTile(tile.x + 1, tile.y);\n\n                if (tryAddLoop(east, west)) {\n                    tiles.setTileType(tile.x, tile.y, TILE_TYPE_FLOOR);\n\n                    const room = tiles.getRoomForTile(tile.x, tile.y);\n\n                    if (room) {\n                        room.addExit(tile.x, tile.y);\n                    }\n\n                    return;\n                }\n            });\n\n        digExits(tiles, exits);\n\n        return tiles;\n    }\n}\n","import { game } from '../../core/Game';\nimport { computeAStar } from '../../utils/AStar';\nimport { diagonalDistance } from '../../utils/diagonalDistance';\nimport { pickRandom } from '../../utils/rand';\nimport { digExits } from '../LevelConnections';\nimport { ScatteredScheme } from '../schemes/ScatteredScheme';\nimport { getThemePopulator, TILE_THEME_CABIN, TILE_THEME_FOREST } from '../themes/TileTheme';\nimport { TILE_TYPE_WALL } from '../TileData';\nimport { addBorder } from './GeneratorUtils';\nimport SectorGenerator from './SectorGenerator';\n\nconst isTopLeftCorner = (t, room) => t.x === room.left && t.y === room.top;\nconst isBottomLeftCorner = (t, room) => t.x === room.left && t.y === room.bottom - 1;\nconst isBottomRightCorner = (t, room) => t.x === room.right - 1 && t.y === room.bottom - 1;\nconst isTopRightCorner = (t, room) => t.x === room.right - 1 && t.y === room.top;\n\nexport class ForestTownGenerator extends SectorGenerator {\n    static generate(settings) {\n        const tiles = ScatteredScheme.generate({\n            width: settings.width,\n            height: settings.height,\n            exits: settings.exits\n        });\n\n        tiles.setTheme(TILE_THEME_CABIN);\n\n        const addDoor = (room) => {\n            const edges = room.borderTiles.filter((t) => !(\n                isTopLeftCorner(t, room)\n                || isBottomLeftCorner(t, room)\n                || isBottomRightCorner(t, room)\n                || isTopRightCorner(t, room)\n            ));\n\n            const door = pickRandom(edges);\n\n            if (door) {\n                room.addExit(door.x, door.y);\n            }\n        };\n\n        tiles.rooms.forEach(addDoor);\n\n        tiles.getUnassignedTiles().forEach((tile) => {\n            tile.theme = TILE_THEME_FOREST;\n        });\n\n        addBorder(tiles);\n\n        digExits(tiles, settings.exits);\n\n        return tiles;\n    }\n\n    static populate(settings, tiles) {\n        tiles.rooms.forEach((room) => {\n            const theme = getThemePopulator(room.theme);\n\n            theme.populateRoom(room);\n        });\n\n        const doors = tiles.rooms.map((room) => room.exits).flat();\n        const walkways = new Set();\n\n        const populatePath = (result) => {\n            if (!result.success) {\n                return;\n            }\n\n            result.path.forEach((segment) => {\n                const entities = game.map.getEntitiesAt(segment.x, segment.y);\n\n                if (entities.length > 0) {\n                    return;\n                }\n\n                const walkway = game.ecs.createPrefab('DirtPathway');\n\n                walkway.position.setPos(segment.x, segment.y);\n                walkways.add(`${segment.x},${segment.y}`);\n            });\n        };\n\n        const generatePath = (start, end) => {\n            const path = computeAStar({\n                start: {\n                    x: start.x,\n                    y: start.y,\n                },\n                goal: {\n                    x: end.x,\n                    y: end.y,\n                },\n                cost: (a, b) => {\n                    if (tiles.tileTypeMatches(b.x, b.y, TILE_TYPE_WALL)) {\n                        return Infinity;\n                    }\n\n                    const neighbors = tiles.getNeighbors(b.x, b.y);\n                    const walls = neighbors.filter((n) => n.isType(TILE_TYPE_WALL));\n\n                    if (walls.length > 0) {\n                        return walls.length * 2;\n                    }\n\n                    if (walkways.has(`${b.x},${b.y}`)) {\n                        return .1;\n                    }\n\n                    return diagonalDistance(a, b) * 2;\n                }\n            });\n\n            populatePath(path);\n        };\n\n        doors.forEach((doorA) => {\n            settings.exits.forEach((exit) => {\n                generatePath(doorA, exit);\n            });\n            doors.forEach((doorB) => {\n                if (doorA === doorB) {\n                    return;\n                }\n\n                generatePath(doorA, doorB);\n            });\n        });\n\n        tiles.getUnassignedTiles().forEach((tile) => {\n            const theme = getThemePopulator(tile.theme);\n\n            theme.populateTile(tile);\n        });\n    }\n}\n","import { randomInt } from '../../utils/rand';\nimport { digExits } from '../LevelConnections';\nimport TileContainer from '../TileContainer';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\nimport TileScheme from '../TileScheme';\n\n\nexport class ScatteredScheme extends TileScheme {\n    static generate(settings) {\n        const attempt = settings.attempt || 1;\n        const maxAttempts = settings.maxAttempts || 100;\n        const width = settings.width;\n        const height = settings.height;\n        const padding = settings.padding || 3;\n        const roomPadding = settings.roomPadding || 3;\n        const minCount = settings.minCount || 5;\n        const maxCount = settings.maxCount || 8;\n        const minWidth = settings.minWidth || 6;\n        const maxWidth = settings.maxWidth || 10;\n        const minHeight = settings.minHeight || 6;\n        const maxHeight = settings.maxHeight || 10;\n        const exits = settings.exits || [];\n        const tiles = new TileContainer(width, height);\n\n        if (attempt > maxAttempts) {\n            console.warn(`Failed to generate ScatteredScheme in ${maxAttempts} attempts`);\n\n            return tiles;\n        }\n\n        const createBox = () => {\n            const width = randomInt(minWidth, maxWidth);\n            const height = randomInt(minHeight, maxHeight);\n\n            return {\n                x: randomInt(padding, settings.width - padding - width),\n                y: randomInt(padding, settings.height - padding - height),\n                width,\n                height,\n                get top() { return this.y - roomPadding; },\n                get bottom() { return this.y + this.height + roomPadding; },\n                get left() { return this.x - roomPadding; },\n                get right() { return this.x + this.width + roomPadding; },\n            };\n        };\n\n        const overlaps = (box) => {\n            return tiles.rooms.some((room) => {\n                return room.intersects(box.left, box.top, box.right, box.bottom)\n            });\n        };\n\n        for (let i = 0; i < 100; i++) {\n            const box = createBox();\n\n            if (overlaps(box)) {\n                continue;\n            }\n\n            for (let i = 0; i < box.width; i++) {\n                for (let j = 0; j < box.height; j++) {\n                    const point = {\n                        x: box.x + i,\n                        y: box.y + j,\n                    };\n\n                    if (i === 0 || i === box.width - 1 || j === 0 || j === box.height - 1) {\n                        tiles.setTileType(point.x, point.y, TILE_TYPE_WALL);\n                    } else {\n                        tiles.setTileType(point.x, point.y, TILE_TYPE_FLOOR);\n                    }\n                }\n            }\n\n            tiles.createRoom(box.x, box.y, box.width, box.height);\n\n            if (tiles.rooms.length >= maxCount) {\n                break;\n            }\n        }\n\n        if (tiles.rooms.length < minCount) {\n            console.warn('COULD NOT GET MINIMUM COUNT');\n            return this.generate({\n                ...settings,\n                attempt: attempt + 1,\n            });\n        }\n\n        digExits(tiles, exits);\n\n        return tiles;\n    }\n}\n","import { TILE_TYPE_WALL } from '../TileData';\n\nexport const addBorder = (tiles) => {\n    for (let i = 0; i < tiles.width; i++) {\n        tiles.setTileType(i, 0, TILE_TYPE_WALL);\n        tiles.setTileType(i, tiles.height - 1, TILE_TYPE_WALL);\n    }\n\n    for (let j = 1; j < tiles.height - 1; j++) {\n        tiles.setTileType(0, j, TILE_TYPE_WALL);\n        tiles.setTileType(tiles.width - 1, j, TILE_TYPE_WALL);\n    }\n};\n","import { getMessage, shouldAppear } from '../enums/ConsoleEvents';\nimport Manager from './Manager';\n\nexport default class ConsoleManager extends Manager {\n    #messages = [];\n    #events = [];\n    #viewCount = 2;\n\n    event(type, data) {\n        this.#events.push({ type, data });\n    }\n\n    log(text) {\n        this.#messages.push({ text });\n    }\n\n    render(dt) {\n        this.#events.forEach(({ type, data }) => {\n            if (shouldAppear(type, data)) {\n                this.#messages.push({\n                    text: getMessage(type, data),\n                });\n            }\n        });\n        this.#events = [];\n\n        const msgs = this.#messages.slice(\n            Math.max(this.#messages.length - this.#viewCount, 0)\n        );\n        const height = Math.min(msgs.length, this.#viewCount);\n\n        msgs.forEach((message, i) => {\n            this.game.renderer.drawText(\n                0,\n                this.game.camera.height - 1 - (height - i),\n                message.text\n            );\n        });\n    }\n}\n","import { IsDestroying } from '../ecs/components';\nimport System from './System';\n\nexport default class DestroySystem extends System {\n    #query;\n\n    constructor(game) {\n        super(game);\n\n        this.#query = game.ecs.createQuery({\n            all: [IsDestroying],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            if (entity.isDestroying.pass > 0) {\n                entity.destroy();\n            } else {\n                entity.isDestroying.pass++;\n            }\n        });\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(0);\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}