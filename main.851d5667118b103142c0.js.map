{"version":3,"sources":["webpack://sleepy/webpack/runtime/create fake namespace object","webpack://sleepy/./src/index.js","webpack://sleepy/./src/utils/ImageLoader.js","webpack://sleepy/./node_modules/howler/dist/howler.js","webpack://sleepy/./src/core/Game.js","webpack://sleepy/./src/core/rendering/RenderManager.js","webpack://sleepy/./src/core/Manager.js","webpack://sleepy/./src/core/rendering/Display.js","webpack://sleepy/./src/utils/Grid.js","webpack://sleepy/./src/core/rendering/spritesheets.js","webpack://sleepy/./src/core/rendering/SpriteSheet.js","webpack://sleepy/./src/core/rendering/cp437.js","webpack://sleepy/./src/core/rendering/Sprite.js","webpack://sleepy/./src/utils/ColorParser.js","webpack://sleepy/./node_modules/color-parse/index.mjs","webpack://sleepy/./node_modules/color-name/index.js","webpack://sleepy/./src/core/input/InputController.js","webpack://sleepy/./src/core/input/events/InputKeyboardEvent.js","webpack://sleepy/./src/core/input/events/InputEvent.js","webpack://sleepy/./src/core/input/events/InputMouseEvent.js","webpack://sleepy/./src/systems/ActionSystem.js","webpack://sleepy/./src/ecs/components/Actor.js","webpack://sleepy/../node_modules/camelcase/index.js","webpack://sleepy/../src/util/string-util.js","webpack://sleepy/../src/Properties/Property.js","webpack://sleepy/../src/Properties/SimpleProperty.js","webpack://sleepy/../src/Properties/EntityProperty.js","webpack://sleepy/../src/Properties/EntityArrayProperty.js","webpack://sleepy/../src/Properties/PropertyFactory.js","webpack://sleepy/../src/Component.js","webpack://sleepy/../src/registries/ComponentRegistry.js","webpack://sleepy/../node_modules/deepmerge/dist/cjs.js","webpack://sleepy/../src/PrefabComponent.js","webpack://sleepy/../src/Prefab.js","webpack://sleepy/../src/registries/PrefabRegistry.js","webpack://sleepy/../src/EntityEvent.js","webpack://sleepy/../src/Entity.js","webpack://sleepy/../src/registries/EntityRegistry.js","webpack://sleepy/../src/Query.js","webpack://sleepy/../src/registries/QueryRegistry.js","webpack://sleepy/../src/Engine.js","webpack://sleepy/../node_modules/nanoid/non-secure/index.js","webpack://sleepy/./src/ecs/components/IsDestroying.js","webpack://sleepy/./src/ecs/components/LiquidContainer.js","webpack://sleepy/./src/data/Spawnables.js","webpack://sleepy/./src/data/Spawner.js","webpack://sleepy/./src/data/spawnables/SpawnableVialHoney.js","webpack://sleepy/./src/enums/LiquidTypes.js","webpack://sleepy/./src/data/spawnables/SpawnableVialBlood.js","webpack://sleepy/./src/data/spawnables/SpawnableVialWater.js","webpack://sleepy/./src/data/spawnables/SpawnableGoblinGrunt.js","webpack://sleepy/./src/ai/GoalTypes/BoredGoalType.js","webpack://sleepy/./src/ai/GoalTypes/GoalType.js","webpack://sleepy/./src/ai/GoalActionResult.js","webpack://sleepy/./src/ai/GoalTypes/KillSomethingGoalType.js","webpack://sleepy/./src/utils/AStar.js","webpack://sleepy/./src/utils/diagonalDistance.js","webpack://sleepy/./src/utils/ManhattanDistance.js","webpack://sleepy/./src/utils/PriorityQueue.js","webpack://sleepy/./src/ai/GoalTypes/MoveGoalType.js","webpack://sleepy/./src/ai/GoalTypes/EatFoodGoalType.js","webpack://sleepy/./src/data/spawnables/SpawnablePineTree.js","webpack://sleepy/./src/utils/rand.js","webpack://sleepy/./src/data/spawnables/SpawnableHumanWanderer.js","webpack://sleepy/./src/data/spawnables/SpawnablePoolLiquid.js","webpack://sleepy/./src/ecs/components/Door.js","webpack://sleepy/./src/ecs/components/Blocker.js","webpack://sleepy/./src/ecs/components/Shadowcaster.js","webpack://sleepy/./src/ecs/components/Armor.js","webpack://sleepy/./src/ecs/components/Loot.js","webpack://sleepy/./src/ecs/components/Inventory.js","webpack://sleepy/./src/core/screens/ScreenType.js","webpack://sleepy/./src/ecs/components/IsInventoried.js","webpack://sleepy/./src/ecs/components/Stackable.js","webpack://sleepy/./src/enums/Stackables.js","webpack://sleepy/./src/ecs/components/Throwable.js","webpack://sleepy/./src/data/Abilities.js","webpack://sleepy/./src/data/abilities/ArmorAbility.js","webpack://sleepy/./src/data/abilities/Ability.js","webpack://sleepy/./src/data/abilities/SpeedAbility.js","webpack://sleepy/./src/data/abilities/ThrowingAbility.js","webpack://sleepy/./src/data/Stats.js","webpack://sleepy/./src/data/abilities/DodgeAbility.js","webpack://sleepy/./src/data/Attack.js","webpack://sleepy/./src/data/DamageTypes.js","webpack://sleepy/./src/enums/CursorSegments.js","webpack://sleepy/./src/utils/BresenhamLine.js","webpack://sleepy/./src/ecs/components/Body.js","webpack://sleepy/./src/ecs/components/IsVisible.js","webpack://sleepy/./src/ecs/components/FragileGlass.js","webpack://sleepy/./src/enums/ConsoleEvents.js","webpack://sleepy/./src/ecs/components/Brain.js","webpack://sleepy/./src/ecs/components/Goal.js","webpack://sleepy/./src/ai/GoalEvaluator.js","webpack://sleepy/./src/ecs/components/Moniker.js","webpack://sleepy/./src/ecs/components/Logger.js","webpack://sleepy/./src/ecs/components/Position.js","webpack://sleepy/./src/ecs/components/Glyph.js","webpack://sleepy/./src/ecs/components/Legs.js","webpack://sleepy/./src/ecs/components/IsPlayer.js","webpack://sleepy/./src/ecs/components/Wandering.js","webpack://sleepy/./src/enums/Directions.js","webpack://sleepy/./src/ecs/components/Explorable.js","webpack://sleepy/./src/ecs/components/Explored.js","webpack://sleepy/./src/ecs/components/Health.js","webpack://sleepy/./src/ecs/components/IsDead.js","webpack://sleepy/./src/ecs/components/FactionMember.js","webpack://sleepy/./src/enums/Factions.js","webpack://sleepy/./src/data/Faction.js","webpack://sleepy/./src/ecs/components/Eyes.js","webpack://sleepy/./src/ecs/components/Particle.js","webpack://sleepy/./src/ecs/components/ParticleEmitter.js","webpack://sleepy/./src/ecs/components/LootDropper.js","webpack://sleepy/./src/data/tables/LootSpawn.js","webpack://sleepy/./src/utils/WeightedTable.js","webpack://sleepy/./src/data/tables/loot/LootTableGoblin.js","webpack://sleepy/./src/data/tables/loot/LootTableForest.js","webpack://sleepy/./src/ecs/components/IsEquipped.js","webpack://sleepy/./src/ecs/components/Equipment.js","webpack://sleepy/./src/data/EquipmentSlotType.js","webpack://sleepy/./src/ecs/components/EquipmentSlot.js","webpack://sleepy/./src/data/WeaponTypes.js","webpack://sleepy/./src/data/WeaponFamilies.js","webpack://sleepy/./src/data/weapons/WpnTypeBattleAxe.js","webpack://sleepy/./src/data/weapons/WeaponType.js","webpack://sleepy/./src/data/weapons/WpnTypeGreatsword.js","webpack://sleepy/./src/data/weapons/WpnTypeMace.js","webpack://sleepy/./src/data/Statuses.js","webpack://sleepy/./src/data/statuses/StatusBleeding.js","webpack://sleepy/./src/enums/StatusTypes.js","webpack://sleepy/./src/data/statuses/Status.js","webpack://sleepy/./src/data/statuses/StatusStunned.js","webpack://sleepy/./src/data/weapons/WpnTypeShortsword.js","webpack://sleepy/./src/data/weapons/WpnTypeUnarmed.js","webpack://sleepy/./src/ecs/components/Stats.js","webpack://sleepy/./node_modules/rot-js/lib/util.js","webpack://sleepy/./src/ecs/components/Race.js","webpack://sleepy/./src/data/Races.js","webpack://sleepy/./src/data/RaceData.js","webpack://sleepy/./src/ecs/components/Weapon.js","webpack://sleepy/./src/ecs/components/Status.js","webpack://sleepy/./src/ecs/components/Ground.js","webpack://sleepy/./src/ecs/components/IsIncapacitated.js","webpack://sleepy/./src/ecs/components/SharpTrap.js","webpack://sleepy/./src/systems/System.js","webpack://sleepy/./src/systems/RenderSystem.js","webpack://sleepy/./src/systems/UISystem.js","webpack://sleepy/./src/core/input/MouseManager.js","webpack://sleepy/./src/core/input/CommandManager.js","webpack://sleepy/./src/core/input/InputDomainType.js","webpack://sleepy/./src/core/input/commands.js","webpack://sleepy/./src/core/input/InputCommand.js","webpack://sleepy/./src/core/input/InputCommandType.js","webpack://sleepy/./src/core/input/KeyCodes.js","webpack://sleepy/./src/core/screens/ScreenManager.js","webpack://sleepy/./src/core/screens/screens/AdventureScreen.js","webpack://sleepy/./src/core/screens/screens/Screen.js","webpack://sleepy/./src/core/screens/screens/MainMenuScreen.js","webpack://sleepy/./src/core/screens/screens/DeathScreen.js","webpack://sleepy/./src/core/screens/screens/InventoryScreen.js","webpack://sleepy/./src/utils/SelectableList.js","webpack://sleepy/./src/core/screens/screens/InteractModalScreen.js","webpack://sleepy/./src/core/screens/screens/CursorScreen.js","webpack://sleepy/./src/core/screens/screens/LoadSectorScreen.js","webpack://sleepy/./src/core/screens/screens/EquipmentScreen.js","webpack://sleepy/./src/core/screens/screens/ListSelectionScreen.js","webpack://sleepy/./node_modules/rot-js/lib/scheduler/simple.js","webpack://sleepy/./node_modules/rot-js/lib/scheduler/scheduler.js","webpack://sleepy/./node_modules/rot-js/lib/eventqueue.js","webpack://sleepy/./node_modules/rot-js/lib/MinHeap.js","webpack://sleepy/./src/core/screens/screens/CharacterScreen.js","webpack://sleepy/./src/core/PlayerManager.js","webpack://sleepy/./src/ecs/index.js","webpack://sleepy/./src/core/GameStateManager.js","webpack://sleepy/./src/core/ClockManager.js","webpack://sleepy/./src/systems/CursorSystem.js","webpack://sleepy/./src/core/MapManager.js","webpack://sleepy/./src/utils/FastMap.js","webpack://sleepy/./src/systems/FOVSystem.js","webpack://sleepy/./node_modules/rot-js/lib/index.js","webpack://sleepy/./node_modules/rot-js/lib/rng.js","webpack://sleepy/./node_modules/rot-js/lib/display/display.js","webpack://sleepy/./node_modules/rot-js/lib/display/hex.js","webpack://sleepy/./node_modules/rot-js/lib/display/canvas.js","webpack://sleepy/./node_modules/rot-js/lib/display/backend.js","webpack://sleepy/./node_modules/rot-js/lib/display/rect.js","webpack://sleepy/./node_modules/rot-js/lib/display/tile.js","webpack://sleepy/./node_modules/rot-js/lib/display/tile-gl.js","webpack://sleepy/./node_modules/rot-js/lib/color.js","webpack://sleepy/./node_modules/rot-js/lib/display/term.js","webpack://sleepy/./node_modules/rot-js/lib/text.js","webpack://sleepy/./node_modules/rot-js/lib/constants.js","webpack://sleepy/./node_modules/rot-js/lib/stringgenerator.js","webpack://sleepy/./node_modules/rot-js/lib/scheduler/index.js","webpack://sleepy/./node_modules/rot-js/lib/scheduler/speed.js","webpack://sleepy/./node_modules/rot-js/lib/scheduler/action.js","webpack://sleepy/./node_modules/rot-js/lib/fov/index.js","webpack://sleepy/./node_modules/rot-js/lib/fov/discrete-shadowcasting.js","webpack://sleepy/./node_modules/rot-js/lib/fov/fov.js","webpack://sleepy/./node_modules/rot-js/lib/fov/precise-shadowcasting.js","webpack://sleepy/./node_modules/rot-js/lib/fov/recursive-shadowcasting.js","webpack://sleepy/./node_modules/rot-js/lib/map/index.js","webpack://sleepy/./node_modules/rot-js/lib/map/arena.js","webpack://sleepy/./node_modules/rot-js/lib/map/map.js","webpack://sleepy/./node_modules/rot-js/lib/map/uniform.js","webpack://sleepy/./node_modules/rot-js/lib/map/dungeon.js","webpack://sleepy/./node_modules/rot-js/lib/map/features.js","webpack://sleepy/./node_modules/rot-js/lib/map/cellular.js","webpack://sleepy/./node_modules/rot-js/lib/map/digger.js","webpack://sleepy/./node_modules/rot-js/lib/map/ellermaze.js","webpack://sleepy/./node_modules/rot-js/lib/map/dividedmaze.js","webpack://sleepy/./node_modules/rot-js/lib/map/iceymaze.js","webpack://sleepy/./node_modules/rot-js/lib/map/rogue.js","webpack://sleepy/./node_modules/rot-js/lib/noise/index.js","webpack://sleepy/./node_modules/rot-js/lib/noise/simplex.js","webpack://sleepy/./node_modules/rot-js/lib/noise/noise.js","webpack://sleepy/./node_modules/rot-js/lib/path/index.js","webpack://sleepy/./node_modules/rot-js/lib/path/dijkstra.js","webpack://sleepy/./node_modules/rot-js/lib/path/path.js","webpack://sleepy/./node_modules/rot-js/lib/path/astar.js","webpack://sleepy/./node_modules/rot-js/lib/engine.js","webpack://sleepy/./node_modules/rot-js/lib/lighting.js","webpack://sleepy/./src/systems/DeathSystem.js","webpack://sleepy/./src/systems/ParticleSystem.js","webpack://sleepy/./src/core/FactionManager.js","webpack://sleepy/./src/core/CameraManager.js","webpack://sleepy/./src/systems/FPSMonitoringSystem.js","webpack://sleepy/./src/core/WorldManager.js","webpack://sleepy/./src/data/WorldData.js","webpack://sleepy/./src/data/Sector.js","webpack://sleepy/./src/level/generators/generators.js","webpack://sleepy/./src/level/generators/ForestCabinsGenerator.js","webpack://sleepy/./src/level/LevelConnections.js","webpack://sleepy/./src/level/TileData.js","webpack://sleepy/./src/level/themes/TileTheme.js","webpack://sleepy/./src/level/themes/CastleTheme.js","webpack://sleepy/./src/level/themes/TileThemePopulator.js","webpack://sleepy/./src/level/themes/ForestTheme.js","webpack://sleepy/./src/level/themes/CabinTheme.js","webpack://sleepy/./src/level/schemes/UniformScheme.js","webpack://sleepy/./src/level/TileContainer.js","webpack://sleepy/./src/level/RoomData.js","webpack://sleepy/./node_modules/nanoid/index.prod.js","webpack://sleepy/./node_modules/nanoid/url-alphabet/index.js","webpack://sleepy/./src/level/TileScheme.js","webpack://sleepy/./src/level/generators/SectorGenerator.js","webpack://sleepy/./src/level/generators/ForestGenerator.js","webpack://sleepy/./src/level/generators/ForestStrongholdGenerator.js","webpack://sleepy/./src/level/schemes/DenseCastleScheme.js","webpack://sleepy/./src/level/generators/ForestTownGenerator.js","webpack://sleepy/./src/level/schemes/ScatteredScheme.js","webpack://sleepy/./src/level/generators/GeneratorUtils.js","webpack://sleepy/./src/core/ConsoleManager.js","webpack://sleepy/./src/systems/DestroySystem.js","webpack://sleepy/./src/core/MusicManager.js","webpack://sleepy/./src/systems/StatusSystem.js","webpack://sleepy/./src/systems/LiquidSystem.js","webpack://sleepy/./src/systems/TrapSystem.js","webpack://sleepy/webpack/bootstrap","webpack://sleepy/webpack/runtime/compat get default export","webpack://sleepy/webpack/runtime/define property getters","webpack://sleepy/webpack/runtime/global","webpack://sleepy/webpack/runtime/hasOwnProperty shorthand","webpack://sleepy/webpack/runtime/make namespace object","webpack://sleepy/webpack/startup"],"names":["leafPrototypes","getProto","loadImages","then","require","window","game","ecs","start","Howler","loadImage","img","Promise","resolve","reject","complete","addEventListener","error","imgs","Array","from","document","querySelectorAll","all","map","HowlerGlobal","this","init","prototype","self","_counter","_html5AudioPool","html5PoolSize","_codecs","_howls","_muted","_volume","_canPlayEvent","_navigator","navigator","masterGain","noAudio","usingWebAudio","autoSuspend","ctx","autoUnlock","_setup","volume","vol","parseFloat","setupAudioContext","gain","setValueAtTime","currentTime","i","length","_webAudio","ids","_getSoundIds","j","sound","_soundById","_node","mute","muted","stop","unload","close","codecs","ext","replace","state","_autoSuspend","Audio","oncanplaythrough","e","_setupCodecs","audioTest","err","canPlayType","mpegTest","checkOpera","userAgent","match","isOldOpera","parseInt","split","mp3","mpeg","opus","ogg","oga","wav","aac","caf","m4a","m4b","mp4","weba","webm","dolby","flac","_unlockAudio","_audioUnlocked","_mobileUnloaded","sampleRate","_scratchBuffer","createBuffer","unlock","audioNode","_unlocked","_releaseHtml5Audio","load","_autoResume","source","createBufferSource","buffer","connect","destination","noteOn","resume","onended","disconnect","removeEventListener","_emit","_obtainHtml5Audio","pop","testPlay","play","catch","console","warn","audio","push","suspend","_sounds","_paused","_suspendTimer","clearTimeout","setTimeout","handleSuspension","_resumeAfterSuspend","Howl","o","src","_autoplay","autoplay","_format","format","_html5","html5","_loop","loop","_pool","pool","_preload","preload","_rate","rate","_sprite","sprite","_src","undefined","_xhr","method","xhr","headers","withCredentials","_duration","_state","_endTimers","_queue","_playLock","_onend","onend","fn","_onfade","onfade","_onload","onload","_onloaderror","onloaderror","_onplayerror","onplayerror","_onpause","onpause","_onplay","onplay","_onstop","onstop","_onmute","onmute","_onvolume","onvolume","_onrate","onrate","_onseek","onseek","_onunlock","onunlock","_onresume","event","action","url","str","exec","toLowerCase","location","protocol","slice","Sound","loadBuffer","internal","id","num","_ended","_id","_inactiveSound","soundId","_loadQueue","seek","Math","max","_seek","duration","timeout","abs","setParams","_start","_stop","node","playWebAudio","_refreshBuffer","_playStart","bufferSource","noteGrainOn","Infinity","bind","once","_clearTimer","playHtml5","playbackRate","paused","loadedNoReadyState","ejecta","readyState","isCocoonJS","listener","pause","_rateSeek","_stopFade","noteOff","_cleanBuffer","isNaN","arguments","_clearSound","_interval","args","index","indexOf","apply","fade","to","len","min","end","linearRampToValueAtTime","_startFadeInterval","isGroup","diff","steps","stepLen","lastTick","Date","now","_fadeTo","setInterval","tick","round","clearInterval","cancelScheduledValues","loopStart","loopEnd","playing","realTime","rateSeek","seekAndEmit","emitSeek","sounds","_errorFn","_loadFn","_endFn","splice","remCache","cache","on","events","off","isId","keys","Object","isArray","msg","call","task","shift","ended","_drain","reset","limit","cnt","_panner","isIOS","vendor","test","howl","_parent","parent","create","createGain","createGainNode","_errorListener","_loadListener","_endListener","code","ceil","__default","loadSound","data","atob","dataView","Uint8Array","charCodeAt","decodeAudioData","XMLHttpRequest","open","responseType","forEach","key","setRequestHeader","status","response","onerror","safeXhrSend","send","arraybuffer","success","AudioContext","webkitAudioContext","iOS","platform","appVersion","version","safari","exports","global","_super","_pos","_orientation","stereo","pan","pos","x","y","z","positionX","setTargetAtTime","positionY","positionZ","setPosition","orientation","xUp","yUp","zUp","or","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","_stereo","_pannerAttr","coneInnerAngle","coneOuterAngle","coneOuterGain","distanceModel","maxDistance","panningModel","refDistance","rolloffFactor","_onstereo","onstereo","_onpos","onpos","_onorientation","onorientation","pannerType","createStereoPanner","setupPanner","orientationX","orientationY","orientationZ","pannerAttr","_coneInnerAngle","_coneOuterAngle","_coneOuterGain","_distanceModel","_maxDistance","_refDistance","_rolloffFactor","_panningModel","pa","panner","type","createPanner","Game","engine","constructor","ECS","music","MusicManager","mouse","MouseManager","clock","ClockManager","renderer","Renderer","GameStateManager","world","WorldManager","MapManager","camera","CameraManager","factions","FactionManager","player","PlayerManager","commands","CommandManager","screens","ScreenManager","input","InputController","ConsoleManager","actionSystem","ActionSystem","deathSystem","DeathSystem","statusSystem","StatusSystem","FOVSystem","renderSystem","RenderSystem","UISystem","cursor","CursorSystem","particles","ParticleSystem","fps","FPSMonitoringSystem","destroySystem","DestroySystem","liquidSystem","LiquidSystem","trapSystem","TrapSystem","boundLoop","requestAnimationFrame","updateAdventureSystems","dt","update","playerTurn","updatePlayerSystems","render","t","Manager","display","canvas","super","spritesheets","spritesheet","name","Display","width","height","tileWidth","tileHeight","body","appendChild","resizeDisplay","zoom","setSize","draw","char","fg1","fg2","bg","tiles","getSprite","computeTextWidth","text","drawText","font","charAt","drawTextCenter","clear","clearArea","pxToTile","xPx","yPx","trunc","onNewGame","getSaveGameData","cells","Grid","suppressOOBWarn","createElement","getContext","alpha","globalCompositeOperation","textBaseline","widthPx","heightPx","style","cssText","clearAndResize","set","colorize","fillStyle","clearColor","fillRect","offsetX","cellX","cellY","filter","c","cell","pixelX","pixelY","drawImage","_width","_height","defaultValueGenerator","idx","coord","size","value","isOutOfBounds","get","getNeighbors","tileImage","getElementById","fontImage","SpriteSheet","image","spriteWidth","spriteCountX","spriteHeight","spriteCountY","cp437","row","glyph","Sprite","isBlack","r","g","b","sheet","sourceX","sourceY","primaryCss","secondaryCss","primary","parseColor","secondary","_cache","hasOwnProperty","pixels","getImageData","cvs","putImageData","colorStr","parsed","colorParse","values","cstr","m","space","parts","names","base","isRGB","trim","baseHues","join","red","R","green","G","blue","B","h","hue","H","s","saturation","S","l","lightness","L","brightness","a","opacity","orange","yellow","purple","module","onKeydown","container","onMouseClick","onMouseMove","onMouseEnter","onMouseLeave","evt","InputKeyboardEvent","keyCode","shiftKey","ctrl","ctrlKey","alt","altKey","meta","metaKey","preventDefault","onInputEvent","offsetY","InputMouseEvent","button","updatePosition","updateMouseEnter","updateMouseLeave","InputEvent","tileX","tileY","System","createQuery","Actor","none","IsDestroying","IsDead","IsIncapacitated","entities","sorted","sort","actor","energy","entity","hasEnergy","incrementTick","addEnergy","tickDelta","isPlayer","getNextAction","fireEvent","Component","onEnergyConsumed","reduceEnergy","onTick","camelCase","options","TypeError","pascalCase","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","character","preserveCamelCase","_","p1","camelCache","camelString","camelcaseSlow","pascalCache","Property","component","enumerable","v","serialize","onDestroyed","cleanupReference","SimpleProperty","EntityProperty","getEntity","EntityArrayProperty","Proxy","target","prop","receiver","Reflect","old","deleteProperty","proxy","ref","PropertyStrategy","Boolean","ob","properties","_onAttached","_onDetached","_onDestroyed","onAttached","onDetached","remove","destroy","clone","createComponent","_onEvent","handlerName","onEvent","_defaultPropertyValue","propertyName","_defineProxies","initialProperties","initialValue","property","PropertyFactory","ComponentRegistry","Map","register","getAccessor","typeOrClassOrComponent","_getType","_definitions","typeOrClass","definition","isMergeableObject","isNonNullObject","stringValue","isReactElement","isSpecial","REACT_ELEMENT_TYPE","Symbol","cloneUnlessOtherwiseSpecified","deepmerge","val","defaultArrayMerge","element","getKeys","getEnumerableOwnPropertySymbols","propertyIsOnObject","object","mergeObject","propertyIsUnsafe","customMerge","getMergeFunction","sourceIsArray","array","Error","prev","next","PrefabComponent","componentDef","overwrite","applyToEntity","initialProps","props","merge","Prefab","addComponent","prefabComponent","arrComps","accessor","components","initialCompProps","PrefabRegistry","deserialize","registered","prefab","inherit","comps","componentData","def","_ecs","nameOrClassOrPrefab","_prefabs","nameOrClass","EntityEvent","is","handle","prevent","Entity","has","hasType","nestedComponent","add","attach","configurable","allowMultiple","owns","isComponent","instance","o2","k2","v2","EntityRegistry","_entities","createOrGetById","onEntityDestroyed","cleanupRefs","refs","_refs","addRef","entityId","Set","removeRef","json","list","entityData","deserializeEntity","pascalString","d","Query","any","isMatch","hasAny","_filter","some","hasAll","every","hasNone","onEntityAdded","onEntityRemoved","candidate","isTracking","cb","_onEntityCreated","_onComponentAdded","_onComponentRemoved","_onEntityDestroyed","bustCache","QueryRegistry","filters","query","onComponentAdded","onComponentRemoved","onEntityCreated","Engine","nanoid","generateId","createEntity","createPrefab","prefabs","destroyEntity","registerPrefab","registerComponent","queries","pass","LiquidContainer","isEmpty","liquids","content","maxVolume","overridePrimary","liquid","overrideSecondary","_checkDestroyOnEmpty","destroyOnEmpty","isDestroying","pour","quantity","isPourable","spawn","SPWN_POOL_LIQUID","combineFrom","other","sum","onTryPour","interactor","position","getPos","onTryDrink","drinkLiquid","onGetInteractions","interactions","LIQUID_BLOOD","isFreeFlowing","SPWN_VIAL_HONEY","SPWN_VIAL_BLOOD","SPWN_VIAL_WATER","SPWN_STONE","SPWN_GOBLIN_GRUNT","SPWN_HUMAN_WANDERER","SPWN_PINE_TREE","SPWN_WOOD_WALL","SPWN_WOOD_DOOR","SPWN_WOOD_CHEST","SPWN_STONE_WALL","SPWN_DIRT_PATH","SPWN_CORPSE","SPWN_GLASS_SHARD","SPWN_AMULET","SPWN_CLOTH_ARMOR","SPWN_LEATHER_BOOTS","SPWN_SHORTSWORD","SPWN_GREATSWORD","SPWN_BATTLE_AXE","SPWN_HATCHET","SPWN_MACE","SPWN_GROUND_GRASS","SPWN_GROUND_STONE","simplePrefab","prefabName","spawnables","VialHoney","VialBlood","VialWater","GoblinGrunt","HumanWanderer","PineTree","PoolLiquid","setPos","createSpawnable","vial","liquidContainer","LIQUID_HONEY","LIQUID_WATER","LIQUID_OIL","colorDesc","onDrink","log","direction","glyphs","fg1s","speed","lifetime","goblin","brain","pushGoal","BoredGoalType","sword","equipmentSlot","handRight","equip","GoalType","goal","targets","killGoal","KillSomethingGoalType","SUCCESS","boredomGoal","FAILURE","originalIntent","INVALID","isDead","isDestroyed","handled","targetPos","result","computeAStar","cost","diagonalDistance","blocker","isIncapacitated","sharpTrap","segment","path","delta","moveGoal","MoveGoalType","defaultSettings","allowDiagonals","settings","heuristic","manhattanDistance","PriorityQueue","cameFrom","costSoFar","startKey","goalKey","costs","put","currentKey","current","neighbors","nextKey","graphCost","newCost","priority","previous","previousKey","unshift","dx","dy","peek","item","createItem","EatFoodGoalType","food","pickRandom","arr","floor","random","randomInt","randomBool","randomWeightedBool","weight","wanderer","Door","isOpen","chOpen","chClosed","openDoor","ch","shadowcaster","closeDoor","Blocker","Shadowcaster","onTryCloseDoor","onTryOpenDoor","onProjectileHit","stopProjectile","deflectProjectile","isAttached","Armor","onQueryEquippedAbilityModifierArmor","modifiers","moniker","mod","Loot","isInventoried","IsInventoried","Inventory","inventory","hasLoot","onEquipped","addLoot","onTryPickUp","onTryTake","owner","removeLoot","onQueryOwnership","getStackable","stackableIdentifier","find","Stackable","stackable","identifier","loot","existing","addOther","dropLoot","dropper","onTryOpen","SCREEN_INVENTORY","accessible","SCREEN_MAIN_MENU","SCREEN_ADVENTURE","SCREEN_DEATH","SCREEN_INTERACT_MODAL","SCREEN_CURSOR","SCREEN_LOAD_SECTOR","SCREEN_EQUIPMENT","SCREEN_LIST_SELECT","SCREEN_CHARACTER","isOwnedBy","onTryDrop","onThrown","increment","amount","STACKABLE_DEFAULT","STACKABLE_STONE","STACKABLE_GLASS_SHARD","Throwable","throw","trajectory","initiator","stopped","deflected","hit","projectile","getStat","STAT_STRENGTH","damage","die","modifier","attack","Attack","attacker","defender","weaponName","damageType","ignoreDodge","onTryThrow","range","getAbilityValue","ABILITY_THROWING","drawLine","drawTags","onResult","bresenhamLine","onCancel","getSegmentTypes","line","lineValid","CURSOR_SEGMENT_NONE","IsVisible","Body","CURSOR_SEGMENT_INTEREST","CURSOR_SEGMENT_UNKNOWN","CURSOR_SEGMENT_INVALID","interestIdx","blockerIdx","DMG_TYPE_BLUDGEONING","ABILITY_SPEED","ABILITY_ARMOR","ABILITY_DODGE","lookup","ArmorAbility","SpeedAbility","ThrowingAbility","DodgeAbility","getAbility","getAbilityName","compute","getArmorBlockPercent","ability","unscaled","Ability","getModifierSum","baseStat","getModifiers","reduce","cur","STAT_ATHLETICISM","STAT_FINESSE","STAT_TRICKERY","getStatName","stat","stats","rollStat","statCheck","getDodgePercent","DMG_TYPE_PIERCING","DMG_TYPE_SLASHING","verb","getDmgTypeName","getDmgTypeVerb","colorMap","glyphMap","getCursorSegmentTypeColor","getCursorSegmentTypeGlyph","x0","y0","x1","y1","sx","sy","e2","bresenhamLineExclusive","onDeath","corpse","corpseSpawnable","FragileGlass","shatter","CONSOLE_EVENT_SHATTER","onCollideGround","onCollide","CONSOLE_EVENT_DAMAGE","CONSOLE_EVENT_DEAD","CONSOLE_EVENT_MISS","CONSOLE_EVENT_BLOCK","CONSOLE_EVENT_TRAP_SHARP","getMonikerSubject","Moniker","simpleDisplay","getMonikerIndirectObject","IsPlayer","mapping","message","dodgePrcnt","shouldAppear","dmgVerb","dmg","blocked","blockText","trap","getMessage","Brain","goals","onTakeAction","peekGoal","isFinished","popGoal","currentGoal","takeAction","removeGoal","goalsToDestroy","isSelf","isSiblingGoal","Goal","GoalEvaluator","goalTypeMap","GoalTypes","goalType","getGoalType","disp","door","Logger","onLog","Position","getPosition","equals","Glyph","col","primaryColorOverride","secondaryColorOverride","Legs","onTryMove","targetX","targetY","targetTileEntities","nonHostile","factionMember","Wandering","onBoredom","Directions","directions","shortName","fullName","adjacent","DIR_NW","DIR_N","DIR_NE","DIR_W","DIR_Z","DIR_E","DIR_SW","DIR_S","DIR_SE","getAdjacentDeltas","directionFromDelta","dir","Explorable","Explored","Health","applyDamage","onAttacked","dodge","isDodged","isKilled","armor","armorPrcnt","onHeal","FactionMember","getFactionByName","FACTION_PLAYER","FACTION_VILLAGER","FACTION_GOBLIN","FACTION_NATURE","Faction","villager","nature","Eyes","canSee","onTryDetectHostiles","Particle","age","frame","chunks","percent","fg2s","bgs","startX","startY","ParticleEmitter","createParticle","particle","particleData","count","LootDropper","spawnLoot","tables","TBL_LOOT_GOBLIN","LootTableGoblin","TBL_LOOT_FOREST","LootTableForest","getTable","tableKey","pickLoot","tableKeys","WeightedTable","pick","spawnable","rows","currentW","chance","maxWeight","table","goblins","forest","IsEquipped","slotKey","onDropped","slot","unequip","Equipment","onTryEquip","slots","slotTypes","includes","slotType","header","onRenderRow","isSelected","onSelect","onTryUnequip","isEquipped","EQ_SLOT_BODY","EQ_SLOT_NECK","EQ_SLOT_FEET","EQ_SLOT_ARM","EQ_SLOT_HAND","EquipmentSlot","equipment","onTryMelee","isPrimary","selfPos","isAdjacent","getWeaponType","WPN_TYPE_UNARMED","onQueryAbilityModifierArmor","isOffhand","WPN_TYPE_WAR_HAMMER","WPN_TYPE_SLEDGE_HAMMER","WPN_TYPE_CLUB","WPN_TYPE_MACE","WPN_TYPE_HEAVY_AXE","WPN_TYPE_BATTLE_AXE","WPN_TYPE_GREATSWORD","WPN_TYPE_SHORTSWORD","WPN_TYPE_DAGGER","WPN_TYPE_STAFF","WPN_TYPE_HALBERD","WPN_TYPE_JAVELIN","WpnTypeUnarmed","family","WPN_FAMILY_HAMMER","WPN_FAMILY_AXE","WpnTypeBattleAxe","WpnTypeGreatsword","WpnTypeShortsword","WpnTypeMace","WPN_FAMILY_BLADE","WPN_FAMILY_POLEARM","getWeaponTypeName","getWeaponTypeFamily","getWeaponTypeDmgType","WPN_FAMILY_ARCHERY","WPN_FAMILY_UNARMED","WPN_FAMILY_CUDGEL","getWeaponFamilyName","WeaponType","_createAttack","weapon","roll","attacks","secondAttack","weaponDamageText","user","getShortDescription","fam","getAttacks","_getNeighborAttacks","attackerPos","defenderPos","deltaX","deltaY","flat","hostile","_tryAttackDefender","addStatus","STATUS_STUNNED","STATUS_BLEEDING","StatusBleeding","StatusStunned","getStatus","Status","STATUS_TYPE_CONDITION","getDmgPerTurn","potency","ticks","remainingLifetime","health","isCompleted","Stats","_sumMods","getStatModifiers","getStatModifierSum","mods","capitalize","modSum","strength","finesse","athleticism","trickery","baseStrength","baseFinesse","baseAthleticism","baseTrickery","n","clamp","toUpperCase","substring","template","group1","group2","obj","replaced","first","Race","getRaceData","modStrength","modFinesse","modAthleticism","modTrickery","onQueryStatModifierStrength","strengthMod","onQueryStatModifierFinesse","finesseMod","onQueryStatModifierAthleticism","athleticismMod","onQueryStatModifierTrickery","trickeryMod","onQueryAbilityModifierSpeed","RACE_HUMAN","RACE_GOBLIN","RaceData","Weapon","weaponType","onTryUseMelee","Ground","SharpTrap","challenge","renderTile","screenToWorld","isInView","getEntitiesAt","renderableZ","renderable","isVisible","background","explored","turn","subTurn","toFixed","padEnd","hp","INPUT_DOMAIN_DEFAULT","cmd","registerCommand","_inputStack","getNextCommand","getCommandForInputEvent","pushDomain","domain","_domainStack","popDomain","lastIndexOf","getDomainCommands","_commands","matches","command","INPUT_DOMAIN_MAIN_MENU","INPUT_DOMAIN_ADVENTURE","INPUT_DOMAIN_LOOK","INPUT_DOMAIN_LIST","isKeyboard","InputCommand","INPUT_CMD_CONFIRM","KEY_ENTER","KEY_SPACE","INPUT_CMD_CANCEL","KEY_ESCAPE","INPUT_CMD_SAVE","KEY_S","INPUT_CMD_LOAD","KEY_L","INPUT_CMD_NEW_GAME","KEY_N","INPUT_CMD_WAIT","INPUT_CMD_MOVE_NW","KEY_Q","INPUT_CMD_MOVE_N","KEY_W","KEY_UP","INPUT_CMD_MOVE_NE","KEY_E","INPUT_CMD_MOVE_W","KEY_A","KEY_LEFT","INPUT_CMD_MOVE_E","KEY_D","KEY_RIGHT","INPUT_CMD_MOVE_SW","KEY_Z","INPUT_CMD_MOVE_S","KEY_X","KEY_DOWN","INPUT_CMD_MOVE_SE","KEY_C","INPUT_CMD_SELECT_NW","INPUT_CMD_SELECT_N","INPUT_CMD_SELECT_NE","INPUT_CMD_SELECT_W","INPUT_CMD_SELECT_E","INPUT_CMD_SELECT_SW","INPUT_CMD_SELECT_S","INPUT_CMD_SELECT_SE","INPUT_CMD_INTERACT","INPUT_CMD_LOOK","INPUT_CMD_PICK_UP","KEY_G","KEY_J","INPUT_CMD_INVENTORY","KEY_I","INPUT_CMD_EQUIPMENT","KEY_P","INPUT_CMD_CHARACTER","KEY_Y","inputEvent","KEY_CANCEL","KEY_HELP","KEY_BACK_SPACE","KEY_TAB","KEY_CLEAR","KEY_ENTER_SPECIAL","KEY_SHIFT","KEY_CONTROL","KEY_ALT","KEY_PAUSE","KEY_CAPS_LOCK","KEY_KANA","KEY_EISU","KEY_JUNJA","KEY_FINAL","KEY_HANJA","KEY_CONVERT","KEY_NONCONVERT","KEY_ACCEPT","KEY_MODECHANGE","KEY_PAGE_UP","KEY_PAGE_DOWN","KEY_END","KEY_HOME","KEY_SELECT","KEY_PRINT","KEY_EXECUTE","KEY_PRINTSCREEN","KEY_INSERT","KEY_DELETE","KEY_NUM_0","KEY_NUM_1","KEY_NUM_2","KEY_NUM_3","KEY_NUM_4","KEY_NUM_5","KEY_NUM_6","KEY_NUM_7","KEY_NUM_8","KEY_NUM_9","KEY_COLON","KEY_SEMICOLON","KEY_LESS_THAN","KEY_EQUALS","KEY_GREATER_THAN","KEY_QUESTION_MARK","KEY_AT","KEY_B","KEY_F","KEY_H","KEY_K","KEY_M","KEY_O","KEY_R","KEY_T","KEY_U","KEY_V","KEY_META","KEY_CONTEXT_MENU","KEY_SLEEP","KEY_NUMPAD_0","KEY_NUMPAD_1","KEY_NUMPAD_2","KEY_NUMPAD_3","KEY_NUMPAD_4","KEY_NUMPAD_5","KEY_NUMPAD_6","KEY_NUMPAD_7","KEY_NUMPAD_8","KEY_NUMPAD_9","KEY_MULTIPLY","KEY_ADD","KEY_SEPARATOR","KEY_SUBTRACT","KEY_DECIMAL","KEY_DIVIDE","KEY_F1","KEY_F2","KEY_F3","KEY_F4","KEY_F5","KEY_F6","KEY_F7","KEY_F8","KEY_F9","KEY_F10","KEY_F11","KEY_F12","KEY_F13","KEY_F14","KEY_F15","KEY_F16","KEY_F17","KEY_F18","KEY_F19","KEY_F20","KEY_F21","KEY_F22","KEY_F23","KEY_F24","KEY_NUM_LOCK","KEY_SCROLL_LOCK","KEY_WIN_OEM_FJ_JISHO","KEY_WIN_OEM_FJ_MASSHOU","KEY_WIN_OEM_FJ_TOUROKU","KEY_WIN_OEM_FJ_LOYA","KEY_WIN_OEM_FJ_ROYA","KEY_CIRCUMFLEX","KEY_EXCLAMATION","KEY_DOUBLE_QUOTE","KEY_HASH","KEY_DOLLAR","KEY_PERCENT","KEY_AMPERSAND","KEY_UNDERSCORE","KEY_OPEN_PAREN","KEY_CLOSE_PAREN","KEY_ASTERISK","KEY_PLUS","KEY_PIPE","KEY_HYPHEN_MINUS","KEY_OPEN_CURLY_BRACKET","KEY_CLOSE_CURLY_BRACKET","KEY_TILDE","KEY_VOLUME_MUTE","KEY_VOLUME_DOWN","KEY_VOLUME_UP","KEY_SEMICOLON_2","KEY_EQUALS_2","KEY_COMMA","KEY_MINUS","KEY_PERIOD","KEY_SLASH","KEY_BACK_QUOTE","KEY_OPEN_BRACKET","KEY_BACK_SLASH","KEY_CLOSE_BRACKET","KEY_QUOTE","KEY_META_2","KEY_ALTGR","KEY_WIN_ICO_HELP","KEY_WIN_ICO_00","KEY_WIN_ICO_CLEAR","KEY_WIN_OEM_RESET","KEY_WIN_OEM_JUMP","KEY_WIN_OEM_PA1","KEY_WIN_OEM_PA2","KEY_WIN_OEM_PA3","KEY_WIN_OEM_WSCTRL","KEY_WIN_OEM_CUSEL","KEY_WIN_OEM_ATTN","KEY_WIN_OEM_FINISH","KEY_WIN_OEM_COPY","KEY_WIN_OEM_AUTO","KEY_WIN_OEM_ENLW","KEY_WIN_OEM_BACKTAB","KEY_ATTN","KEY_CRSEL","KEY_EXSEL","KEY_EREOF","KEY_PLAY","KEY_ZOOM","KEY_PA1","KEY_WIN_OEM_CLEAR","MainMenuScreen","AdventureScreen","DeathScreen","InventoryScreen","InteractModalScreen","CursorScreen","LoadSectorScreen","EquipmentScreen","ListSelectionScreen","CharacterScreen","setScreen","screenType","screen","onLeave","onEnter","screenCtx","replaceScreen","pushScreen","popScreen","onUpdate","Screen","computeFOV","setFocus","onDirectionInput","directionDelta","playerPosition","targetPosition","hostileEntities","areEntitiesHostile","melee","doorEntity","move","onPickUpCommand","lootable","onInteract","items","onGetRowName","interactable","onInteractDirection","handleInput","saveGame","loadGame","wait","isStarted","onConfirm","newGame","inputCommand","gameOver","SelectableList","setItems","selectItem","selected","up","down","ypos","textLen","_items","_idx","refreshList","isBack","interaction","left","top","listPadding","xpos","weaponDmg","NOOP","enable","disable","cursorColor","types","color","worldToScreen","getEntities","faction","relation","getEntityRelation","getDisplay","drawCursor","prevousSector","nextSector","renderLoadingText","sectorId","entry","loadGameData","onSectorLoaded","prevText","nextText","selectSlot","defaultRowRender","cancel","Simple","Scheduler","repeat","_current","_repeat","EventQueue","getTime","getTimeOf","getEventTime","_time","_events","MinHeap","time","heap","timestamp","lessThan","loc","updateUp","updateDown","last","parentNode","leftChildNode","rightChildNode","existNode","swap","minNode","numbers","validnumbers","minimal","leftChild","rightChild","debugPrint","healthMax","pad","modDir","getSetupData","serialized","setup","teardown","actionQueue","turns","destroyEntities","cloneEntity","initiateTeardown","initiateSetup","prompt","deleteFile","filename","localStorage","setItem","JSON","stringify","file","startsWith","removeItem","saveSectorPositionData","positionData","saveSectorEntityData","loadSectorEntityData","getItem","parse","loadSectorPositionData","loadSavefileData","prevTurn","curTurn","toggle","isEnabled","FastMap","getRandomEmptyPosition","sector","includeGround","ground","x2","y2","getEntitiesInRect","getEntitiesInRange","diameter","getNeighborEntities","isOutOfbounds","onPlayerOutOfBounds","enterSector","northSector","southSector","eastSector","westSector","_data","_idHash","entries","delete","fov","FOV","isSquareVisible","setVisible","explorable","visibility","Util","util","Color","Text","FRAC","RNG","_seed","_s0","_s1","_s2","_c","getSeed","setSeed","seed","getUniform","getUniformInt","lowerBound","upperBound","getNormal","mean","stddev","u","sqrt","getPercentage","shuffle","getWeightedValue","total","part","getState","setState","BACKENDS","Hex","Rect","Tile","TileGL","Term","DEFAULT_OPTIONS","DEFAULT_WIDTH","DEFAULT_HEIGHT","transpose","layout","fontSize","spacing","border","forceSquareRatio","fontFamily","fontStyle","fg","tileMap","tileSet","tileColorize","_dirty","_options","assign","setOptions","DEBUG","_tick","_backend","schedule","what","colors","ctor","getOptions","getContainer","computeSize","availWidth","availHeight","computeFontSize","computeTileSize","eventToPosition","touches","clientX","clientY","maxWidth","cx","cy","lines","tokens","token","isSpace","isPrevSpace","isFullWidth","isPrevFullWidth","cc","cch","_draw","clearBefore","Canvas","_spacingX","_spacingY","_hexSize","px","reverse","_ctx","_fill","chars","concat","fillText","hexSizeWidth","hexSizeHeight","hexSize","oldFont","measureText","ratio","_normalizedEventToPosition","nodeSize","beginPath","moveTo","lineTo","fill","_updateSize","opts","charWidth","xprop","yprop","Backend","textAlign","rect","getBoundingClientRect","_canvasCache","_drawWithCache","_drawNoCache","hash","boxWidth","boxHeight","widthFraction","_colorCanvas","clearRect","fgs","tile","context","_uniforms","_gl","_initWebGL","alert","preserveDrawingBuffer","_updateTexture","gl","scissorY","scissor","COLOR_BUFFER_BIT","uniform2fv","uniform1f","uniform4fv","drawArrays","TRIANGLE_STRIP","program","vss","fss","vs","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","fs","FRAGMENT_SHADER","p","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","VS","FS","useProgram","Float32Array","buf","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","createQuad","UNIFORMS","getUniformLocation","_program","BLEND","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","SCISSOR_TEST","canvasSize","viewport","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","REPEAT","TEXTURE_WRAP_T","pixelStorei","UNPACK_FLIP_Y_WEBGL","texImage2D","RGBA","UNSIGNED_BYTE","colorCache","Number","$","fromString","cached","CACHE","color1","add_","multiply","multiply_","interpolate","color2","factor","lerp","interpolateHSL","hsl1","rgb2hsl","hsl2","hsl2rgb","lerpHSL","randomize","hue2rgb","q","toRGB","clamped","toHex","toString","padStart","termcolor","rgb","DST_COLORS","_offset","_cursor","_lastColor","avail","process","stdout","write","positionToAnsi","newColor","colorToAnsi","columns","RE_COLORS","TYPE_TEXT","TYPE_NEWLINE","TYPE_FG","TYPE_BG","measure","tokenize","lineWidth","offset","lineLength","lastTokenWithSpace","breakInsideToken","nextIndex","breakIndex","lastTextToken","breakLines","tokenIndex","removeBreakChar","newBreakToken","newTextToken","DIRS","4","8","6","KEYS","VK_CANCEL","VK_HELP","VK_BACK_SPACE","VK_TAB","VK_CLEAR","VK_RETURN","VK_ENTER","VK_SHIFT","VK_CONTROL","VK_ALT","VK_PAUSE","VK_CAPS_LOCK","VK_ESCAPE","VK_SPACE","VK_PAGE_UP","VK_PAGE_DOWN","VK_END","VK_HOME","VK_LEFT","VK_UP","VK_RIGHT","VK_DOWN","VK_PRINTSCREEN","VK_INSERT","VK_DELETE","VK_0","VK_1","VK_2","VK_3","VK_4","VK_5","VK_6","VK_7","VK_8","VK_9","VK_COLON","VK_SEMICOLON","VK_LESS_THAN","VK_EQUALS","VK_GREATER_THAN","VK_QUESTION_MARK","VK_AT","VK_A","VK_B","VK_C","VK_D","VK_E","VK_F","VK_G","VK_H","VK_I","VK_J","VK_K","VK_L","VK_M","VK_N","VK_O","VK_P","VK_Q","VK_R","VK_S","VK_T","VK_U","VK_V","VK_W","VK_X","VK_Y","VK_Z","VK_CONTEXT_MENU","VK_NUMPAD0","VK_NUMPAD1","VK_NUMPAD2","VK_NUMPAD3","VK_NUMPAD4","VK_NUMPAD5","VK_NUMPAD6","VK_NUMPAD7","VK_NUMPAD8","VK_NUMPAD9","VK_MULTIPLY","VK_ADD","VK_SEPARATOR","VK_SUBTRACT","VK_DECIMAL","VK_DIVIDE","VK_F1","VK_F2","VK_F3","VK_F4","VK_F5","VK_F6","VK_F7","VK_F8","VK_F9","VK_F10","VK_F11","VK_F12","VK_F13","VK_F14","VK_F15","VK_F16","VK_F17","VK_F18","VK_F19","VK_F20","VK_F21","VK_F22","VK_F23","VK_F24","VK_NUM_LOCK","VK_SCROLL_LOCK","VK_CIRCUMFLEX","VK_EXCLAMATION","VK_DOUBLE_QUOTE","VK_HASH","VK_DOLLAR","VK_PERCENT","VK_AMPERSAND","VK_UNDERSCORE","VK_OPEN_PAREN","VK_CLOSE_PAREN","VK_ASTERISK","VK_PLUS","VK_PIPE","VK_HYPHEN_MINUS","VK_OPEN_CURLY_BRACKET","VK_CLOSE_CURLY_BRACKET","VK_TILDE","VK_COMMA","VK_PERIOD","VK_SLASH","VK_BACK_QUOTE","VK_OPEN_BRACKET","VK_BACK_SLASH","VK_CLOSE_BRACKET","VK_QUOTE","VK_META","VK_ALTGR","VK_WIN","VK_KANA","VK_HANGUL","VK_EISU","VK_JUNJA","VK_FINAL","VK_HANJA","VK_KANJI","VK_CONVERT","VK_NONCONVERT","VK_ACCEPT","VK_MODECHANGE","VK_SELECT","VK_PRINT","VK_EXECUTE","VK_SLEEP","StringGenerator","words","order","prior","_boundary","String","fromCharCode","_suffix","_prefix","_priorValues","generate","_sample","_join","observe","_split","subcontext","_observeEvent","getStats","priorCount","dataCount","eventCount","_backoff","available","Speed","Action","getSpeed","_defaultDuration","setDuration","DiscreteShadowcasting","PreciseShadowcasting","RecursiveShadowcasting","callback","_lightPasses","A","blocks","DATA","_getCircle","angle","_visibleCoords","v1","lightPassesCallback","topology","dirs","countFactor","startOffset","A1","A2","SHADOWS","neighborCount","_checkVisibility","index1","edge1","index2","edge2","visibleLength","visible","P","P1","P2","OCTANTS","_renderOctant","compute180","previousOctant","nextPreviousOctant","nextOctant","compute90","octant","_castVisibility","visSlopeStart","visSlopeEnd","radius","xx","xy","yx","yy","newStart","mapX","mapY","slopeStart","slopeEnd","Arena","Uniform","Cellular","Digger","EllerMaze","DividedMaze","IceyMaze","Rogue","w","_fillMap","Dungeon","roomWidth","roomHeight","roomDugPercentage","timeLimit","_map","_dug","_roomAttempts","_corridorAttempts","_connected","_unconnected","_digCallback","_canBeDugCallback","_isWallCallback","t1","_rooms","_generateRooms","_generateCorridors","room","_generateRoom","Room","isValid","_corridors","clearDoors","connected","room1","_closestRoom","room2","_connectRooms","rooms","dist","center","getCenter","dirIndex1","dirIndex2","center1","center2","diffX","diffY","getLeft","getRight","getTop","getBottom","_placeInWall","_digLine","rotation","mid","mid1","mid2","addDoor","dirIndex","lastBadIndex","points","corridor","Corridor","getRooms","getCorridors","Feature","doorX","doorY","_x1","_y1","_x2","_y2","_doors","getDoors","addDoors","isWallCallback","right","bottom","debug","canBeDugCallback","digCallback","endX","endY","_startX","_startY","_endX","_endY","_endsWithAWall","corridorLength","nx","ny","ok","firstCornerBad","secondCornerBad","createPriorityWalls","priorityWallCallback","born","survive","_dirs","probability","newMap","widthStep","widthStart","ncount","_getNeighbors","_serviceCallback","connectionCallback","allFreeSpace","notConnected","widthStarts","_freeSpace","_pointKey","_findConnected","_getFromTo","local","_tunnelToConnected6","_tunnelToConnected","k","pp","connectedKeys","notConnectedKeys","_getClosest","point","minPoint","minDist","stack","keepNotConnected","tests","pkey","stepWidth","FEATURES","dugPercentage","_features","_featureAttempts","_walls","_priorityWallCallback","area","_firstRoom","priorityWalls","wall","_findWall","_getDiggingDirection","featureAttempts","_tryFeature","_removeSurroundingWalls","_addDoors","prio1","prio2","featureName","feature","createRandomAt","deltas","addToList","removeFromList","_stack","_process","_partitionRoom","availX","availY","walls","solid","hole","regularity","_regularity","done","_randomize","_isFree","connectedCells","cellWidth","cellHeight","_calculateRoomSize","_initRooms","_connectUnconnectedRooms","_createRandomRoomConnections","_createRooms","_createCorridors","ncgx","ncgy","otherRoom","dirToCheck","cgx","cgy","found","validRoom","cw","dirIdx","newI","newJ","roomw","roomh","cwp","chp","sxOffset","syOffset","ii","jj","_getWallPosition","aRoom","aDirection","rx","ry","_drawCorridor","startPosition","endPosition","tempDist","xDir","yDir","xOffset","yOffset","moves","xAbs","yAbs","firstHalf","secondHalf","connection","otherWall","Simplex","F2","G2","Noise","gradients","_gradients","permutations","_perms","_indexes","xin","yin","gi","i1","j1","perms","indexes","n0","n1","n2","t0","grad","t2","Dijkstra","AStar","Path","toX","toY","passableCallback","_computed","_todo","_add","fromX","fromY","_compute","neighbor","_toX","_toY","_passableCallback","_done","_fromX","_fromY","_distance","f","itemF","scheduler","_scheduler","_lock","lock","act","Lighting","reflectivityCallback","_reflectivityCallback","passes","emissionThreshold","_lights","_reflectivityCache","_fovCache","setFOV","_fov","setLight","clearLights","lightingCallback","doneCells","emittingCells","litCells","light","_emitLight","_computeEmitters","litKey","_emitLightFromCell","reflectivity","emission","intensity","_updateFOV","fovKey","formFactor","key1","vis","createEmitter","emitter","particleEmitter","isExpired","targetCount","setRelation","getFactionById","isHostile","factionA","factionB","_relationKey","idA","idB","relations","getRelation","entityA","entityB","memberA","memberB","onWindowResize","clampX","innerWidth","renderedTileWidth","clampY","innerHeight","renderedTileHeight","topLeftWorldX","padding","_focusX","topLeftWorldY","_focusY","setZoom","setPadding","getScreenRect","worldX","worldY","fpsElement","getElementsByClassName","frames","frameCount","innerText","getSector","WorldData","getStartingSector","exploredSectorIds","Sector","getSectorByCoord","getExits","exits","connectionsNorth","connectionsWest","generator","getGenerator","populate","ForestGenerator","ForestStrongholdGenerator","ForestCabinsGenerator","ForestTownGenerator","SectorGenerator","UniformScheme","theme","TILE_THEME_FOREST","mediumRooms","TILE_THEME_CABIN","includeWalls","distancedRooms","getUnassignedTiles","digExits","digExit","exit","closest","closestDistance","isType","TILE_TYPE_FLOOR","distance","getClosestTile","setTileType","TILE_TYPE_WALL","isOnEdge","tileTypeMatches","getRoomForTile","addExit","TILE_TYPE_OUT_OF_BOUNDS","TileData","TILE_THEME_CASTLE","createTileData","ForestTheme","CastleTheme","CabinTheme","getThemePopulator","TileThemePopulator","populateTile","trySpawn","tileArr","attempts","getRandomEmptyTile","interiorTiles","chest","TileScheme","TileContainer","MapGenerator","digPercentage","createRoom","defaultType","getTile","setTileTheme","getTileType","addRoom","RoomData","combineOther","cloneTo","setTheme","relativeExits","endWidth","endHeight","borders","interior","addRelativeExit","containsPoint","intersects","c1","c2","c3","c4","bytes","crypto","getRandomValues","customRandom","alphabet","getRandom","mask","LN2","step","customAlphabet","byte","urlAlphabet","populateRoom","exitOffset","castle","DenseCastleScheme","curId","createNodeId","splitNodeVertical","cut","leftId","rightId","isLeaf","parentId","siblingId","splitNodeHorizontal","topId","bottomId","minRoomWidth","minRoomHeight","maxRoomWidth","maxRoomHeight","splitIgnoreChance","loopiness","nodes","graph","sibling","doorCandidates","hasSib","tryAddLoop","north","south","east","west","ScatteredScheme","edges","borderTiles","isTopLeftCorner","isBottomLeftCorner","isBottomRightCorner","isTopRightCorner","addBorder","doors","walkways","generatePath","doorA","doorB","attempt","maxAttempts","roomPadding","minCount","maxCount","minWidth","minHeight","maxHeight","createBox","overlaps","box","msgs","Track","intro","isPlaying","host","pathname","track","tracks","currentTrack","rv","sharpTrapQuery","turnDelta","trapEntity","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","getter","__esModule","getPrototypeOf","__proto__","mode","ns","getOwnPropertyNames","defineProperty","globalThis","Function","toStringTag"],"mappings":";UACIA,eADAC,S,wRCGJC,gEAAaC,MAAK,KACd,MAAM,MAAWC,oBAAQ,GAEzBC,OAAOC,KAAOA,KACdD,OAAOE,IAAMD,KAAKC,IAElBD,KAAKE,WAGTC,kDAAc,I,mMCZd,MAAMC,UAAaC,KACf,IAAIC,SAAQ,CAACC,QAASC,UACdH,IAAII,UACJF,UAGJF,IAAIK,iBAAiB,QAAQ,KACzBH,aAGJF,IAAIK,iBAAiB,SAAUC,QAC3BH,OAAOG,aAINf,WAAa,KACtB,MAAMgB,KAAOC,MAAMC,KAAKC,SAASC,iBAAiB,QAElD,OAAOV,QAAQW,IAAIL,KAAKM,IAAId,c,uCClBhC,mCAUA,WAEE,aASA,IAAIe,aAAe,WACjBC,KAAKC,QAEPF,aAAaG,UAAY,CAKvBD,KAAM,WACJ,IAAIE,KAAOH,MAAQjB,OA8BnB,OA3BAoB,KAAKC,SAAW,IAGhBD,KAAKE,gBAAkB,GACvBF,KAAKG,cAAgB,GAGrBH,KAAKI,QAAU,GACfJ,KAAKK,OAAS,GACdL,KAAKM,QAAS,EACdN,KAAKO,QAAU,EACfP,KAAKQ,cAAgB,iBACrBR,KAAKS,WAAgC,oBAAXjC,QAA0BA,OAAOkC,UAAalC,OAAOkC,UAAY,KAG3FV,KAAKW,WAAa,KAClBX,KAAKY,SAAU,EACfZ,KAAKa,eAAgB,EACrBb,KAAKc,aAAc,EACnBd,KAAKe,IAAM,KAGXf,KAAKgB,YAAa,EAGlBhB,KAAKiB,SAEEjB,MAQTkB,OAAQ,SAASC,KACf,IAAInB,KAAOH,MAAQjB,OAQnB,GAPAuC,IAAMC,WAAWD,KAGZnB,KAAKe,KACRM,yBAGiB,IAARF,KAAuBA,KAAO,GAAKA,KAAO,EAAG,CAItD,GAHAnB,KAAKO,QAAUY,IAGXnB,KAAKM,OACP,OAAON,KAILA,KAAKa,eACPb,KAAKW,WAAWW,KAAKC,eAAeJ,IAAKvC,OAAOmC,IAAIS,aAItD,IAAK,IAAIC,EAAE,EAAGA,EAAEzB,KAAKK,OAAOqB,OAAQD,IAClC,IAAKzB,KAAKK,OAAOoB,GAAGE,UAKlB,IAHA,IAAIC,IAAM5B,KAAKK,OAAOoB,GAAGI,eAGhBC,EAAE,EAAGA,EAAEF,IAAIF,OAAQI,IAAK,CAC/B,IAAIC,MAAQ/B,KAAKK,OAAOoB,GAAGO,WAAWJ,IAAIE,IAEtCC,OAASA,MAAME,QACjBF,MAAME,MAAMf,OAASa,MAAMxB,QAAUY,KAM7C,OAAOnB,KAGT,OAAOA,KAAKO,SAOd2B,KAAM,SAASC,OACb,IAAInC,KAAOH,MAAQjB,OAGdoB,KAAKe,KACRM,oBAGFrB,KAAKM,OAAS6B,MAGVnC,KAAKa,eACPb,KAAKW,WAAWW,KAAKC,eAAeY,MAAQ,EAAInC,KAAKO,QAAS3B,OAAOmC,IAAIS,aAI3E,IAAK,IAAIC,EAAE,EAAGA,EAAEzB,KAAKK,OAAOqB,OAAQD,IAClC,IAAKzB,KAAKK,OAAOoB,GAAGE,UAKlB,IAHA,IAAIC,IAAM5B,KAAKK,OAAOoB,GAAGI,eAGhBC,EAAE,EAAGA,EAAEF,IAAIF,OAAQI,IAAK,CAC/B,IAAIC,MAAQ/B,KAAKK,OAAOoB,GAAGO,WAAWJ,IAAIE,IAEtCC,OAASA,MAAME,QACjBF,MAAME,MAAME,QAASA,OAAgBJ,MAAMzB,QAMnD,OAAON,MAMToC,KAAM,WAIJ,IAHA,IAAIpC,KAAOH,MAAQjB,OAGV6C,EAAE,EAAGA,EAAEzB,KAAKK,OAAOqB,OAAQD,IAClCzB,KAAKK,OAAOoB,GAAGW,OAGjB,OAAOpC,MAOTqC,OAAQ,WAGN,IAFA,IAAIrC,KAAOH,MAAQjB,OAEV6C,EAAEzB,KAAKK,OAAOqB,OAAO,EAAGD,GAAG,EAAGA,IACrCzB,KAAKK,OAAOoB,GAAGY,SAUjB,OANIrC,KAAKa,eAAiBb,KAAKe,UAAiC,IAAnBf,KAAKe,IAAIuB,QACpDtC,KAAKe,IAAIuB,QACTtC,KAAKe,IAAM,KACXM,qBAGKrB,MAQTuC,OAAQ,SAASC,KACf,OAAQ3C,MAAQjB,QAAQwB,QAAQoC,IAAIC,QAAQ,MAAO,MAOrDxB,OAAQ,WACN,IAAIjB,KAAOH,MAAQjB,OASnB,GANAoB,KAAK0C,MAAQ1C,KAAKe,KAAMf,KAAKe,IAAI2B,OAAuB,YAGxD1C,KAAK2C,gBAGA3C,KAAKa,cAER,GAAqB,oBAAV+B,MACT,SAIuC,KAH1B,IAAIA,OAGCC,mBACd7C,KAAKQ,cAAgB,WAEvB,MAAMsC,GACN9C,KAAKY,SAAU,OAGjBZ,KAAKY,SAAU,EAKnB,KACa,IAAIgC,OACNT,QACPnC,KAAKY,SAAU,GAEjB,MAAOkC,IAOT,OAJK9C,KAAKY,SACRZ,KAAK+C,eAGA/C,MAOT+C,aAAc,WACZ,IAAI/C,KAAOH,MAAQjB,OACfoE,UAAY,KAGhB,IACEA,UAA8B,oBAAVJ,MAAyB,IAAIA,MAAU,KAC3D,MAAOK,KACP,OAAOjD,KAGT,IAAKgD,WAA8C,mBAA1BA,UAAUE,YACjC,OAAOlD,KAGT,IAAImD,SAAWH,UAAUE,YAAY,eAAeT,QAAQ,OAAQ,IAGhEW,WAAapD,KAAKS,YAAcT,KAAKS,WAAW4C,UAAUC,MAAM,kBAChEC,WAAcH,YAAcI,SAASJ,WAAW,GAAGK,MAAM,KAAK,GAAI,IAAM,GAoB5E,OAlBAzD,KAAKI,QAAU,CACbsD,MAASH,aAAeJ,WAAYH,UAAUE,YAAY,cAAcT,QAAQ,OAAQ,KACxFkB,OAAQR,SACRS,OAAQZ,UAAUE,YAAY,4BAA4BT,QAAQ,OAAQ,IAC1EoB,MAAOb,UAAUE,YAAY,8BAA8BT,QAAQ,OAAQ,IAC3EqB,MAAOd,UAAUE,YAAY,8BAA8BT,QAAQ,OAAQ,IAC3EsB,OAAQf,UAAUE,YAAY,0BAA4BF,UAAUE,YAAY,cAAcT,QAAQ,OAAQ,IAC9GuB,MAAOhB,UAAUE,YAAY,cAAcT,QAAQ,OAAQ,IAC3DwB,MAAOjB,UAAUE,YAAY,gBAAgBT,QAAQ,OAAQ,IAC7DyB,OAAQlB,UAAUE,YAAY,iBAAmBF,UAAUE,YAAY,eAAiBF,UAAUE,YAAY,eAAeT,QAAQ,OAAQ,IAC7I0B,OAAQnB,UAAUE,YAAY,iBAAmBF,UAAUE,YAAY,eAAiBF,UAAUE,YAAY,eAAeT,QAAQ,OAAQ,IAC7I2B,OAAQpB,UAAUE,YAAY,iBAAmBF,UAAUE,YAAY,eAAiBF,UAAUE,YAAY,eAAeT,QAAQ,OAAQ,IAC7I4B,OAAQrB,UAAUE,YAAY,+BAA+BT,QAAQ,OAAQ,IAC7E6B,OAAQtB,UAAUE,YAAY,+BAA+BT,QAAQ,OAAQ,IAC7E8B,QAASvB,UAAUE,YAAY,4BAA4BT,QAAQ,OAAQ,IAC3E+B,QAASxB,UAAUE,YAAY,kBAAoBF,UAAUE,YAAY,gBAAgBT,QAAQ,OAAQ,KAGpGzC,MASTyE,aAAc,WACZ,IAAIzE,KAAOH,MAAQjB,OAGnB,IAAIoB,KAAK0E,gBAAmB1E,KAAKe,IAAjC,CAIAf,KAAK0E,gBAAiB,EACtB1E,KAAKgB,YAAa,EAKbhB,KAAK2E,iBAA2C,QAAxB3E,KAAKe,IAAI6D,aACpC5E,KAAK2E,iBAAkB,EACvB3E,KAAKqC,UAKPrC,KAAK6E,eAAiB7E,KAAKe,IAAI+D,aAAa,EAAG,EAAG,OAKlD,IAAIC,OAAS,SAASjC,GAOpB,KAAO9C,KAAKE,gBAAgBwB,OAAS1B,KAAKG,eACxC,IACE,IAAI6E,UAAY,IAAIpC,MAIpBoC,UAAUC,WAAY,EAGtBjF,KAAKkF,mBAAmBF,WACxB,MAAOlC,GACP9C,KAAKY,SAAU,EACf,MAKJ,IAAK,IAAIa,EAAE,EAAGA,EAAEzB,KAAKK,OAAOqB,OAAQD,IAClC,IAAKzB,KAAKK,OAAOoB,GAAGE,UAKlB,IAHA,IAAIC,IAAM5B,KAAKK,OAAOoB,GAAGI,eAGhBC,EAAE,EAAGA,EAAEF,IAAIF,OAAQI,IAAK,CAC/B,IAAIC,MAAQ/B,KAAKK,OAAOoB,GAAGO,WAAWJ,IAAIE,IAEtCC,OAASA,MAAME,QAAUF,MAAME,MAAMgD,YACvClD,MAAME,MAAMgD,WAAY,EACxBlD,MAAME,MAAMkD,QAOpBnF,KAAKoF,cAGL,IAAIC,OAASrF,KAAKe,IAAIuE,qBACtBD,OAAOE,OAASvF,KAAK6E,eACrBQ,OAAOG,QAAQxF,KAAKe,IAAI0E,kBAGI,IAAjBJ,OAAO1G,MAChB0G,OAAOK,OAAO,GAEdL,OAAO1G,MAAM,GAIgB,mBAApBqB,KAAKe,IAAI4E,QAClB3F,KAAKe,IAAI4E,SAIXN,OAAOO,QAAU,WACfP,OAAOQ,WAAW,GAGlB7F,KAAK0E,gBAAiB,EAGtBlF,SAASsG,oBAAoB,aAAcf,QAAQ,GACnDvF,SAASsG,oBAAoB,WAAYf,QAAQ,GACjDvF,SAASsG,oBAAoB,QAASf,QAAQ,GAG9C,IAAK,IAAItD,EAAE,EAAGA,EAAEzB,KAAKK,OAAOqB,OAAQD,IAClCzB,KAAKK,OAAOoB,GAAGsE,MAAM,YAU3B,OAJAvG,SAASL,iBAAiB,aAAc4F,QAAQ,GAChDvF,SAASL,iBAAiB,WAAY4F,QAAQ,GAC9CvF,SAASL,iBAAiB,QAAS4F,QAAQ,GAEpC/E,OAQTgG,kBAAmB,WACjB,IAAIhG,KAAOH,MAAQjB,OAGnB,GAAIoB,KAAKE,gBAAgBwB,OACvB,OAAO1B,KAAKE,gBAAgB+F,MAI9B,IAAIC,UAAW,IAAItD,OAAQuD,OAO3B,OANID,UAA+B,oBAAZnH,UAA4BmH,oBAAoBnH,SAAoC,mBAAlBmH,SAAS5H,OAChG4H,SAASE,OAAM,WACbC,QAAQC,KAAK,6EAIV,IAAI1D,OAObsC,mBAAoB,SAASqB,OAC3B,IAAIvG,KAAOH,MAAQjB,OAOnB,OAJI2H,MAAMtB,WACRjF,KAAKE,gBAAgBsG,KAAKD,OAGrBvG,MAQT2C,aAAc,WACZ,IAAI3C,KAAOH,KAEX,GAAKG,KAAKc,aAAgBd,KAAKe,UAAmC,IAArBf,KAAKe,IAAI0F,SAA4B7H,OAAOiC,cAAzF,CAKA,IAAK,IAAIY,EAAE,EAAGA,EAAEzB,KAAKK,OAAOqB,OAAQD,IAClC,GAAIzB,KAAKK,OAAOoB,GAAGE,UACjB,IAAK,IAAIG,EAAE,EAAGA,EAAE9B,KAAKK,OAAOoB,GAAGiF,QAAQhF,OAAQI,IAC7C,IAAK9B,KAAKK,OAAOoB,GAAGiF,QAAQ5E,GAAG6E,QAC7B,OAAO3G,KAkCf,OA5BIA,KAAK4G,eACPC,aAAa7G,KAAK4G,eAIpB5G,KAAK4G,cAAgBE,YAAW,WAC9B,GAAK9G,KAAKc,YAAV,CAIAd,KAAK4G,cAAgB,KACrB5G,KAAK0C,MAAQ,aAGb,IAAIqE,iBAAmB,WACrB/G,KAAK0C,MAAQ,YAET1C,KAAKgH,6BACAhH,KAAKgH,oBACZhH,KAAKoF,gBAMTpF,KAAKe,IAAI0F,UAAUnI,KAAKyI,iBAAkBA,qBACzC,KAEI/G,OAOToF,YAAa,WACX,IAAIpF,KAAOH,KAEX,GAAKG,KAAKe,UAAkC,IAApBf,KAAKe,IAAI4E,QAA2B/G,OAAOiC,cAyBnE,MArBmB,YAAfb,KAAK0C,OAA0C,gBAAnB1C,KAAKe,IAAI2B,OAA2B1C,KAAK4G,eACvEC,aAAa7G,KAAK4G,eAClB5G,KAAK4G,cAAgB,MACG,cAAf5G,KAAK0C,OAAwC,YAAf1C,KAAK0C,OAA0C,gBAAnB1C,KAAKe,IAAI2B,OAC5E1C,KAAKe,IAAI4E,SAASrH,MAAK,WACrB0B,KAAK0C,MAAQ,UAGb,IAAK,IAAIjB,EAAE,EAAGA,EAAEzB,KAAKK,OAAOqB,OAAQD,IAClCzB,KAAKK,OAAOoB,GAAGsE,MAAM,aAIrB/F,KAAK4G,gBACPC,aAAa7G,KAAK4G,eAClB5G,KAAK4G,cAAgB,OAEC,eAAf5G,KAAK0C,QACd1C,KAAKgH,qBAAsB,GAGtBhH,OAKX,IAAIpB,OAAS,IAAIgB,aASbqH,KAAO,SAASC,GAIbA,EAAEC,KAAwB,IAAjBD,EAAEC,IAAIzF,OAHT7B,KAQNC,KAAKoH,GAJRb,QAAQjH,MAAM,+DAMlB6H,KAAKlH,UAAY,CAMfD,KAAM,SAASoH,GACb,IAAIlH,KAAOH,KA2EX,OAxEKjB,OAAOmC,KACVM,oBAIFrB,KAAKoH,UAAYF,EAAEG,WAAY,EAC/BrH,KAAKsH,QAA+B,iBAAbJ,EAAEK,OAAuBL,EAAEK,OAAS,CAACL,EAAEK,QAC9DvH,KAAKwH,OAASN,EAAEO,QAAS,EACzBzH,KAAKM,OAAS4G,EAAEhF,OAAQ,EACxBlC,KAAK0H,MAAQR,EAAES,OAAQ,EACvB3H,KAAK4H,MAAQV,EAAEW,MAAQ,EACvB7H,KAAK8H,SAAiC,kBAAdZ,EAAEa,SAAuC,aAAdb,EAAEa,SAA0Bb,EAAEa,QACjF/H,KAAKgI,MAAQd,EAAEe,MAAQ,EACvBjI,KAAKkI,QAAUhB,EAAEiB,QAAU,GAC3BnI,KAAKoI,KAAyB,iBAAVlB,EAAEC,IAAoBD,EAAEC,IAAM,CAACD,EAAEC,KACrDnH,KAAKO,aAAuB8H,IAAbnB,EAAEhG,OAAuBgG,EAAEhG,OAAS,EACnDlB,KAAKsI,KAAO,CACVC,OAAQrB,EAAEsB,KAAOtB,EAAEsB,IAAID,OAASrB,EAAEsB,IAAID,OAAS,MAC/CE,QAASvB,EAAEsB,KAAOtB,EAAEsB,IAAIC,QAAUvB,EAAEsB,IAAIC,QAAU,KAClDC,mBAAiBxB,EAAEsB,MAAOtB,EAAEsB,IAAIE,kBAAkBxB,EAAEsB,IAAIE,iBAI1D1I,KAAK2I,UAAY,EACjB3I,KAAK4I,OAAS,WACd5I,KAAK0G,QAAU,GACf1G,KAAK6I,WAAa,GAClB7I,KAAK8I,OAAS,GACd9I,KAAK+I,WAAY,EAGjB/I,KAAKgJ,OAAS9B,EAAE+B,MAAQ,CAAC,CAACC,GAAIhC,EAAE+B,QAAU,GAC1CjJ,KAAKmJ,QAAUjC,EAAEkC,OAAS,CAAC,CAACF,GAAIhC,EAAEkC,SAAW,GAC7CpJ,KAAKqJ,QAAUnC,EAAEoC,OAAS,CAAC,CAACJ,GAAIhC,EAAEoC,SAAW,GAC7CtJ,KAAKuJ,aAAerC,EAAEsC,YAAc,CAAC,CAACN,GAAIhC,EAAEsC,cAAgB,GAC5DxJ,KAAKyJ,aAAevC,EAAEwC,YAAc,CAAC,CAACR,GAAIhC,EAAEwC,cAAgB,GAC5D1J,KAAK2J,SAAWzC,EAAE0C,QAAU,CAAC,CAACV,GAAIhC,EAAE0C,UAAY,GAChD5J,KAAK6J,QAAU3C,EAAE4C,OAAS,CAAC,CAACZ,GAAIhC,EAAE4C,SAAW,GAC7C9J,KAAK+J,QAAU7C,EAAE8C,OAAS,CAAC,CAACd,GAAIhC,EAAE8C,SAAW,GAC7ChK,KAAKiK,QAAU/C,EAAEgD,OAAS,CAAC,CAAChB,GAAIhC,EAAEgD,SAAW,GAC7ClK,KAAKmK,UAAYjD,EAAEkD,SAAW,CAAC,CAAClB,GAAIhC,EAAEkD,WAAa,GACnDpK,KAAKqK,QAAUnD,EAAEoD,OAAS,CAAC,CAACpB,GAAIhC,EAAEoD,SAAW,GAC7CtK,KAAKuK,QAAUrD,EAAEsD,OAAS,CAAC,CAACtB,GAAIhC,EAAEsD,SAAW,GAC7CxK,KAAKyK,UAAYvD,EAAEwD,SAAW,CAAC,CAACxB,GAAIhC,EAAEwD,WAAa,GACnD1K,KAAK2K,UAAY,GAGjB3K,KAAK2B,UAAY/C,OAAOiC,gBAAkBb,KAAKwH,YAGrB,IAAf5I,OAAOmC,KAAuBnC,OAAOmC,KAAOnC,OAAOoC,YAC5DpC,OAAO6F,eAIT7F,OAAOyB,OAAOmG,KAAKxG,MAGfA,KAAKoH,WACPpH,KAAK8I,OAAOtC,KAAK,CACfoE,MAAO,OACPC,OAAQ,WACN7K,KAAKmG,UAMPnG,KAAK8H,UAA8B,SAAlB9H,KAAK8H,UACxB9H,KAAKmF,OAGAnF,MAOTmF,KAAM,WACJ,IACI2F,IAAM,KAGV,GAAIlM,OAAOgC,QAJAf,KAKJkG,MAAM,YAAa,KAAM,yBADhC,CAMyB,iBAVdlG,KAUKuI,OAVLvI,KAWJuI,KAAO,CAXHvI,KAWSuI,OAIpB,IAAK,IAAI3G,EAAE,EAAGA,EAfH5B,KAeUuI,KAAK1G,OAAQD,IAAK,CACrC,IAAIe,IAAKuI,IAET,GAlBSlL,KAkBAyH,SAlBAzH,KAkBgByH,QAAQ7F,GAE/Be,IApBO3C,KAoBIyH,QAAQ7F,OACd,CAGL,GAAmB,iBADnBsJ,IAvBOlL,KAuBIuI,KAAK3G,IACa,CAxBtB5B,KAyBAkG,MAAM,YAAa,KAAM,0DAC9B,UAIFvD,IAAM,0BAA0BwI,KAAKD,QAEnCvI,IAAM,aAAawI,KAAKD,IAAItH,MAAM,IAAK,GAAG,KAGxCjB,MACFA,IAAMA,IAAI,GAAGyI,eAUjB,GALKzI,KACH6D,QAAQC,KAAK,8FAIX9D,KAAO5D,OAAO2D,OAAOC,KAAM,CAC7BsI,IA/COjL,KA+CIuI,KAAK3G,GAChB,OAIJ,GAAKqJ,IAuBL,OA3EWjL,KAyDNuI,KAAO0C,IAzDDjL,KA0DN+I,OAAS,UAImB,WAA7BpK,OAAO0M,SAASC,UAA6C,UAApBL,IAAIM,MAAM,EAAG,KA9D/CvL,KA+DJ2H,QAAS,EA/DL3H,KAgEJ8B,WAAY,GAInB,IAAI0J,MApEOxL,WAuEF8B,WACP2J,WAxESzL,gBAqDJkG,MAAM,YAAa,KAAM,kDA+BlCI,KAAM,SAASgC,OAAQoD,UACrB,IAAIvL,KAAOH,KACP2L,GAAK,KAGT,GAAsB,iBAAXrD,OACTqD,GAAKrD,OACLA,OAAS,SACJ,IAAsB,iBAAXA,QAAuC,WAAhBnI,KAAK4I,SAAwB5I,KAAKkI,QAAQC,QAEjF,OAAO,KACF,QAAsB,IAAXA,SAEhBA,OAAS,aAIJnI,KAAK+I,WAAW,CAEnB,IADA,IAAI0C,IAAM,EACDhK,EAAE,EAAGA,EAAEzB,KAAK0G,QAAQhF,OAAQD,IAC/BzB,KAAK0G,QAAQjF,GAAGkF,UAAY3G,KAAK0G,QAAQjF,GAAGiK,SAC9CD,MACAD,GAAKxL,KAAK0G,QAAQjF,GAAGkK,KAIb,IAARF,IACFtD,OAAS,KAETqD,GAAK,MAMX,IAAIzJ,MAAQyJ,GAAKxL,KAAKgC,WAAWwJ,IAAMxL,KAAK4L,iBAG5C,IAAK7J,MACH,OAAO,KAWT,GAPIyJ,KAAOrD,SACTA,OAASpG,MAAMmG,SAAW,aAMR,WAAhBlI,KAAK4I,OAAqB,CAE5B7G,MAAMmG,QAAUC,OAGhBpG,MAAM2J,QAAS,EAGf,IAAIG,QAAU9J,MAAM4J,IAQpB,OAPA3L,KAAK8I,OAAOtC,KAAK,CACfoE,MAAO,OACPC,OAAQ,WACN7K,KAAKmG,KAAK0F,YAIPA,QAIT,GAAIL,KAAOzJ,MAAM4E,QAMf,OAJK4E,UACHvL,KAAK8L,WAAW,QAGX/J,MAAM4J,IAIX3L,KAAK2B,WACP/C,OAAOwG,cAIT,IAAI2G,KAAOC,KAAKC,IAAI,EAAGlK,MAAMmK,MAAQ,EAAInK,MAAMmK,MAAQlM,KAAKkI,QAAQC,QAAQ,GAAK,KAC7EgE,SAAWH,KAAKC,IAAI,GAAKjM,KAAKkI,QAAQC,QAAQ,GAAKnI,KAAKkI,QAAQC,QAAQ,IAAM,IAAQ4D,MACtFK,QAAsB,IAAXD,SAAmBH,KAAKK,IAAItK,MAAMiG,OAC7CrJ,MAAQqB,KAAKkI,QAAQC,QAAQ,GAAK,IAClC/F,MAAQpC,KAAKkI,QAAQC,QAAQ,GAAKnI,KAAKkI,QAAQC,QAAQ,IAAM,IACjEpG,MAAMmG,QAAUC,OAIhBpG,MAAM2J,QAAS,EAGf,IAAIY,UAAY,WACdvK,MAAM4E,SAAU,EAChB5E,MAAMmK,MAAQH,KACdhK,MAAMwK,OAAS5N,MACfoD,MAAMyK,MAAQpK,KACdL,MAAM2F,SAAW3F,MAAM2F,QAAS1H,KAAKkI,QAAQC,QAAQ,KAIvD,KAAI4D,MAAQ3J,MAAZ,CAMA,IAAIqK,KAAO1K,MAAME,MACjB,GAAIjC,KAAK2B,UAAW,CAElB,IAAI+K,aAAe,WACjB1M,KAAK+I,WAAY,EACjBuD,YACAtM,KAAK2M,eAAe5K,OAGpB,IAAIZ,IAAOY,MAAMzB,QAAUN,KAAKM,OAAU,EAAIyB,MAAMxB,QACpDkM,KAAKnL,KAAKC,eAAeJ,IAAKvC,OAAOmC,IAAIS,aACzCO,MAAM6K,WAAahO,OAAOmC,IAAIS,iBAGS,IAA5BiL,KAAKI,aAAalO,MAC3BoD,MAAM2F,MAAQ+E,KAAKI,aAAaC,YAAY,EAAGf,KAAM,OAASU,KAAKI,aAAaC,YAAY,EAAGf,KAAMI,UAErGpK,MAAM2F,MAAQ+E,KAAKI,aAAalO,MAAM,EAAGoN,KAAM,OAASU,KAAKI,aAAalO,MAAM,EAAGoN,KAAMI,UAIvFC,UAAYW,MACd/M,KAAK6I,WAAW9G,MAAM4J,KAAO7E,WAAW9G,KAAK0L,OAAOsB,KAAKhN,KAAM+B,OAAQqK,UAGpEb,UACHzE,YAAW,WACT9G,KAAK+F,MAAM,OAAQhE,MAAM4J,KACzB3L,KAAK8L,eACJ,IAIc,YAAjBlN,OAAO8D,OAA4C,gBAArB9D,OAAOmC,IAAI2B,MAC3CgK,gBAEA1M,KAAK+I,WAAY,EAGjB/I,KAAKiN,KAAK,SAAUP,cAGpB1M,KAAKkN,YAAYnL,MAAM4J,UAEpB,CAEL,IAAIwB,UAAY,WACdV,KAAKjL,YAAcuK,KACnBU,KAAKtK,MAAQJ,MAAMzB,QAAUN,KAAKM,QAAU1B,OAAO0B,QAAUmM,KAAKtK,MAClEsK,KAAKvL,OAASa,MAAMxB,QAAU3B,OAAOsC,SACrCuL,KAAKW,aAAerL,MAAMiG,MAG1B,IACE,IAAI7B,KAAOsG,KAAKtG,OAwChB,GArCIA,MAA2B,oBAAZpH,UAA4BoH,gBAAgBpH,SAAgC,mBAAdoH,KAAK7H,OAEpF0B,KAAK+I,WAAY,EAGjBuD,YAGAnG,KACG7H,MAAK,WACJ0B,KAAK+I,WAAY,EACjB0D,KAAKxH,WAAY,EACZsG,WACHvL,KAAK+F,MAAM,OAAQhE,MAAM4J,KACzB3L,KAAK8L,iBAGR1F,OAAM,WACLpG,KAAK+I,WAAY,EACjB/I,KAAK+F,MAAM,YAAahE,MAAM4J,IAAK,+IAInC5J,MAAM2J,QAAS,EACf3J,MAAM4E,SAAU,MAEV4E,WACVvL,KAAK+I,WAAY,EACjBuD,YACAtM,KAAK+F,MAAM,OAAQhE,MAAM4J,KACzB3L,KAAK8L,cAIPW,KAAKW,aAAerL,MAAMiG,MAGtByE,KAAKY,OAGP,YAFArN,KAAK+F,MAAM,YAAahE,MAAM4J,IAAK,+IAMtB,cAAXxD,QAA0BpG,MAAM2F,MAClC1H,KAAK6I,WAAW9G,MAAM4J,KAAO7E,WAAW9G,KAAK0L,OAAOsB,KAAKhN,KAAM+B,OAAQqK,UAEvEpM,KAAK6I,WAAW9G,MAAM4J,KAAO,WAE3B3L,KAAK0L,OAAO3J,OAGZ0K,KAAK3G,oBAAoB,QAAS9F,KAAK6I,WAAW9G,MAAM4J,MAAM,IAEhEc,KAAKtN,iBAAiB,QAASa,KAAK6I,WAAW9G,MAAM4J,MAAM,IAE7D,MAAO1I,KACPjD,KAAK+F,MAAM,YAAahE,MAAM4J,IAAK1I,OAKtB,2FAAbwJ,KAAKtF,MACPsF,KAAKtF,IAAMnH,KAAKoI,KAChBqE,KAAKtH,QAIP,IAAImI,mBAAsB9O,QAAUA,OAAO+O,SAAad,KAAKe,YAAc5O,OAAO6B,WAAWgN,WAC7F,GAAIhB,KAAKe,YAAc,GAAKF,mBAC1BH,gBACK,CACLnN,KAAK+I,WAAY,EAEjB,IAAI2E,SAAW,WAEbP,YAGAV,KAAK3G,oBAAoBlH,OAAO4B,cAAekN,UAAU,IAE3DjB,KAAKtN,iBAAiBP,OAAO4B,cAAekN,UAAU,GAGtD1N,KAAKkN,YAAYnL,MAAM4J,MAI3B,OAAO5J,MAAM4J,IAtJX3L,KAAK0L,OAAO3J,QA8JhB4L,MAAO,SAASnC,IACd,IAAIxL,KAAOH,KAGX,GAAoB,WAAhBG,KAAK4I,QAAuB5I,KAAK+I,UAQnC,OAPA/I,KAAK8I,OAAOtC,KAAK,CACfoE,MAAO,QACPC,OAAQ,WACN7K,KAAK2N,MAAMnC,OAIRxL,KAMT,IAFA,IAAI4B,IAAM5B,KAAK6B,aAAa2J,IAEnB/J,EAAE,EAAGA,EAAEG,IAAIF,OAAQD,IAAK,CAE/BzB,KAAKkN,YAAYtL,IAAIH,IAGrB,IAAIM,MAAQ/B,KAAKgC,WAAWJ,IAAIH,IAEhC,GAAIM,QAAUA,MAAM4E,UAElB5E,MAAMmK,MAAQlM,KAAK+L,KAAKnK,IAAIH,IAC5BM,MAAM6L,UAAY,EAClB7L,MAAM4E,SAAU,EAGhB3G,KAAK6N,UAAUjM,IAAIH,IAEfM,MAAME,OACR,GAAIjC,KAAK2B,UAAW,CAElB,IAAKI,MAAME,MAAM4K,aACf,cAG2C,IAAlC9K,MAAME,MAAM4K,aAAazK,KAClCL,MAAME,MAAM4K,aAAaiB,QAAQ,GAEjC/L,MAAME,MAAM4K,aAAazK,KAAK,GAIhCpC,KAAK+N,aAAahM,MAAME,YACd+L,MAAMjM,MAAME,MAAMkK,WAAapK,MAAME,MAAMkK,WAAaY,KAClEhL,MAAME,MAAM0L,QAMbM,UAAU,IACbjO,KAAK+F,MAAM,QAAShE,MAAQA,MAAM4J,IAAM,MAI5C,OAAO3L,MASToC,KAAM,SAASoJ,GAAID,UACjB,IAAIvL,KAAOH,KAGX,GAAoB,WAAhBG,KAAK4I,QAAuB5I,KAAK+I,UAQnC,OAPA/I,KAAK8I,OAAOtC,KAAK,CACfoE,MAAO,OACPC,OAAQ,WACN7K,KAAKoC,KAAKoJ,OAIPxL,KAMT,IAFA,IAAI4B,IAAM5B,KAAK6B,aAAa2J,IAEnB/J,EAAE,EAAGA,EAAEG,IAAIF,OAAQD,IAAK,CAE/BzB,KAAKkN,YAAYtL,IAAIH,IAGrB,IAAIM,MAAQ/B,KAAKgC,WAAWJ,IAAIH,IAE5BM,QAEFA,MAAMmK,MAAQnK,MAAMwK,QAAU,EAC9BxK,MAAM6L,UAAY,EAClB7L,MAAM4E,SAAU,EAChB5E,MAAM2J,QAAS,EAGf1L,KAAK6N,UAAUjM,IAAIH,IAEfM,MAAME,QACJjC,KAAK2B,UAEHI,MAAME,MAAM4K,oBAC+B,IAAlC9K,MAAME,MAAM4K,aAAazK,KAClCL,MAAME,MAAM4K,aAAaiB,QAAQ,GAEjC/L,MAAME,MAAM4K,aAAazK,KAAK,GAIhCpC,KAAK+N,aAAahM,MAAME,QAEhB+L,MAAMjM,MAAME,MAAMkK,WAAapK,MAAME,MAAMkK,WAAaY,MAClEhL,MAAME,MAAMT,YAAcO,MAAMwK,QAAU,EAC1CxK,MAAME,MAAM0L,QAGR5L,MAAME,MAAMkK,WAAaY,KAC3B/M,KAAKkO,YAAYnM,MAAME,SAKxBsJ,UACHvL,KAAK+F,MAAM,OAAQhE,MAAM4J,MAK/B,OAAO3L,MASTkC,KAAM,SAASC,MAAOqJ,IACpB,IAAIxL,KAAOH,KAGX,GAAoB,WAAhBG,KAAK4I,QAAsB5I,KAAK+I,UAQlC,OAPA/I,KAAK8I,OAAOtC,KAAK,CACfoE,MAAO,OACPC,OAAQ,WACN7K,KAAKkC,KAAKC,MAAOqJ,OAIdxL,KAIT,QAAkB,IAAPwL,GAAoB,CAC7B,GAAqB,kBAAVrJ,MAGT,OAAOnC,KAAKM,OAFZN,KAAKM,OAAS6B,MASlB,IAFA,IAAIP,IAAM5B,KAAK6B,aAAa2J,IAEnB/J,EAAE,EAAGA,EAAEG,IAAIF,OAAQD,IAAK,CAE/B,IAAIM,MAAQ/B,KAAKgC,WAAWJ,IAAIH,IAE5BM,QACFA,MAAMzB,OAAS6B,MAGXJ,MAAMoM,WACRnO,KAAK6N,UAAU9L,MAAM4J,KAGnB3L,KAAK2B,WAAaI,MAAME,MAC1BF,MAAME,MAAMX,KAAKC,eAAeY,MAAQ,EAAIJ,MAAMxB,QAAS3B,OAAOmC,IAAIS,aAC7DO,MAAME,QACfF,MAAME,MAAME,QAAQvD,OAAO0B,QAAgB6B,OAG7CnC,KAAK+F,MAAM,OAAQhE,MAAM4J,MAI7B,OAAO3L,MAWTkB,OAAQ,WACN,IAEIC,IAAKqK,GAqBLzJ,MAvBA/B,KAAOH,KACPuO,KAAOH,UAIX,GAAoB,IAAhBG,KAAK1M,OAEP,OAAO1B,KAAKO,QACP,GAAoB,IAAhB6N,KAAK1M,QAAgC,IAAhB0M,KAAK1M,aAAmC,IAAZ0M,KAAK,GAAoB,CAEnF,IAAIxM,IAAM5B,KAAK6B,eACXwM,MAAQzM,IAAI0M,QAAQF,KAAK,IACzBC,OAAS,EACX7C,GAAKhI,SAAS4K,KAAK,GAAI,IAEvBjN,IAAMC,WAAWgN,KAAK,SAEfA,KAAK1M,QAAU,IACxBP,IAAMC,WAAWgN,KAAK,IACtB5C,GAAKhI,SAAS4K,KAAK,GAAI,KAKzB,UAAmB,IAARjN,KAAuBA,KAAO,GAAKA,KAAO,GA2CnD,OADAY,MAAQyJ,GAAKxL,KAAKgC,WAAWwJ,IAAMxL,KAAK0G,QAAQ,IACjC3E,MAAMxB,QAAU,EAzC/B,GAAoB,WAAhBP,KAAK4I,QAAsB5I,KAAK+I,UAQlC,OAPA/I,KAAK8I,OAAOtC,KAAK,CACfoE,MAAO,SACPC,OAAQ,WACN7K,KAAKkB,OAAOqN,MAAMvO,KAAMoO,SAIrBpO,UAIS,IAAPwL,KACTxL,KAAKO,QAAUY,KAIjBqK,GAAKxL,KAAK6B,aAAa2J,IACvB,IAAK,IAAI/J,EAAE,EAAGA,EAAE+J,GAAG9J,OAAQD,KAEzBM,MAAQ/B,KAAKgC,WAAWwJ,GAAG/J,OAGzBM,MAAMxB,QAAUY,IAGXiN,KAAK,IACRpO,KAAK6N,UAAUrC,GAAG/J,IAGhBzB,KAAK2B,WAAaI,MAAME,QAAUF,MAAMzB,OAC1CyB,MAAME,MAAMX,KAAKC,eAAeJ,IAAKvC,OAAOmC,IAAIS,aACvCO,MAAME,QAAUF,MAAMzB,SAC/ByB,MAAME,MAAMf,OAASC,IAAMvC,OAAOsC,UAGpClB,KAAK+F,MAAM,SAAUhE,MAAM4J,MAQjC,OAAO3L,MAWTwO,KAAM,SAASjP,KAAMkP,GAAIC,IAAKlD,IAC5B,IAAIxL,KAAOH,KAGX,GAAoB,WAAhBG,KAAK4I,QAAuB5I,KAAK+I,UAQnC,OAPA/I,KAAK8I,OAAOtC,KAAK,CACfoE,MAAO,OACPC,OAAQ,WACN7K,KAAKwO,KAAKjP,KAAMkP,GAAIC,IAAKlD,OAItBxL,KAITT,KAAOyM,KAAK2C,IAAI3C,KAAKC,IAAI,EAAG7K,WAAW7B,OAAQ,GAC/CkP,GAAKzC,KAAK2C,IAAI3C,KAAKC,IAAI,EAAG7K,WAAWqN,KAAM,GAC3CC,IAAMtN,WAAWsN,KAGjB1O,KAAKkB,OAAO3B,KAAMiM,IAIlB,IADA,IAAI5J,IAAM5B,KAAK6B,aAAa2J,IACnB/J,EAAE,EAAGA,EAAEG,IAAIF,OAAQD,IAAK,CAE/B,IAAIM,MAAQ/B,KAAKgC,WAAWJ,IAAIH,IAGhC,GAAIM,MAAO,CAOT,GALKyJ,IACHxL,KAAK6N,UAAUjM,IAAIH,IAIjBzB,KAAK2B,YAAcI,MAAMzB,OAAQ,CACnC,IAAIkB,YAAc5C,OAAOmC,IAAIS,YACzBoN,IAAMpN,YAAekN,IAAM,IAC/B3M,MAAMxB,QAAUhB,KAChBwC,MAAME,MAAMX,KAAKC,eAAehC,KAAMiC,aACtCO,MAAME,MAAMX,KAAKuN,wBAAwBJ,GAAIG,KAG/C5O,KAAK8O,mBAAmB/M,MAAOxC,KAAMkP,GAAIC,IAAK9M,IAAIH,QAAkB,IAAP+J,KAIjE,OAAOxL,MAYT8O,mBAAoB,SAAS/M,MAAOxC,KAAMkP,GAAIC,IAAKlD,GAAIuD,SACrD,IAAI/O,KAAOH,KACPsB,IAAM5B,KACNyP,KAAOP,GAAKlP,KACZ0P,MAAQjD,KAAKK,IAAI2C,KAAO,KACxBE,QAAUlD,KAAKC,IAAI,EAAIgD,MAAQ,EAAKP,IAAMO,MAAQP,KAClDS,SAAWC,KAAKC,MAGpBtN,MAAMuN,QAAUb,GAGhB1M,MAAMoM,UAAYoB,aAAY,WAE5B,IAAIC,MAAQJ,KAAKC,MAAQF,UAAYT,IACrCS,SAAWC,KAAKC,MAChBlO,KAAO6N,KAAOQ,KAGdrO,IAAM6K,KAAKyD,MAAY,IAANtO,KAAa,IAI5BA,IADE6N,KAAO,EACHhD,KAAKC,IAAIwC,GAAItN,KAEb6K,KAAK2C,IAAIF,GAAItN,KAIjBnB,KAAK2B,UACPI,MAAMxB,QAAUY,IAEhBnB,KAAKkB,OAAOC,IAAKY,MAAM4J,KAAK,GAI1BoD,UACF/O,KAAKO,QAAUY,MAIZsN,GAAKlP,MAAQ4B,KAAOsN,IAAQA,GAAKlP,MAAQ4B,KAAOsN,MACnDiB,cAAc3N,MAAMoM,WACpBpM,MAAMoM,UAAY,KAClBpM,MAAMuN,QAAU,KAChBtP,KAAKkB,OAAOuN,GAAI1M,MAAM4J,KACtB3L,KAAK+F,MAAM,OAAQhE,MAAM4J,QAE1BuD,UASLrB,UAAW,SAASrC,IAClB,IACIzJ,MADOlC,KACMmC,WAAWwJ,IAc5B,OAZIzJ,OAASA,MAAMoM,YAHRtO,KAIA8B,WACPI,MAAME,MAAMX,KAAKqO,sBAAsB/Q,OAAOmC,IAAIS,aAGpDkO,cAAc3N,MAAMoM,WACpBpM,MAAMoM,UAAY,KATTtO,KAUJqB,OAAOa,MAAMuN,QAAS9D,IAC3BzJ,MAAMuN,QAAU,KAXPzP,KAYJkG,MAAM,OAAQyF,KAZV3L,MA0Bb8H,KAAM,WACJ,IAEIA,KAAM6D,GAAIzJ,MAFV/B,KAAOH,KACPuO,KAAOH,UAIX,GAAoB,IAAhBG,KAAK1M,OAEP,OAAO1B,KAAK0H,MACP,GAAoB,IAAhB0G,KAAK1M,OAAc,CAC5B,GAAuB,kBAAZ0M,KAAK,GAMd,SADArM,MAAQ/B,KAAKgC,WAAWwB,SAAS4K,KAAK,GAAI,OAC3BrM,MAAM2F,MALrBC,KAAOyG,KAAK,GACZpO,KAAK0H,MAAQC,UAMU,IAAhByG,KAAK1M,SACdiG,KAAOyG,KAAK,GACZ5C,GAAKhI,SAAS4K,KAAK,GAAI,KAKzB,IADA,IAAIxM,IAAM5B,KAAK6B,aAAa2J,IACnB/J,EAAE,EAAGA,EAAEG,IAAIF,OAAQD,KAC1BM,MAAQ/B,KAAKgC,WAAWJ,IAAIH,OAG1BM,MAAM2F,MAAQC,KACV3H,KAAK2B,WAAaI,MAAME,OAASF,MAAME,MAAM4K,eAC/C9K,MAAME,MAAM4K,aAAalF,KAAOA,KAC5BA,OACF5F,MAAME,MAAM4K,aAAa+C,UAAY7N,MAAMwK,QAAU,EACrDxK,MAAME,MAAM4K,aAAagD,QAAU9N,MAAMyK,SAMjD,OAAOxM,MAWTiI,KAAM,WACJ,IAEIA,KAAMuD,GAqBNzJ,MAvBA/B,KAAOH,KACPuO,KAAOH,UAIX,GAAoB,IAAhBG,KAAK1M,OAEP8J,GAAKxL,KAAK0G,QAAQ,GAAGiF,SAChB,GAAoB,IAAhByC,KAAK1M,OAAc,CAE5B,IAAIE,IAAM5B,KAAK6B,eACXwM,MAAQzM,IAAI0M,QAAQF,KAAK,IACzBC,OAAS,EACX7C,GAAKhI,SAAS4K,KAAK,GAAI,IAEvBnG,KAAO7G,WAAWgN,KAAK,SAEA,IAAhBA,KAAK1M,SACduG,KAAO7G,WAAWgN,KAAK,IACvB5C,GAAKhI,SAAS4K,KAAK,GAAI,KAKzB,GAAoB,iBAATnG,KAwDT,OADAlG,MAAQ/B,KAAKgC,WAAWwJ,KACTzJ,MAAMiG,MAAQhI,KAAKgI,MAtDlC,GAAoB,WAAhBhI,KAAK4I,QAAuB5I,KAAK+I,UAQnC,OAPA/I,KAAK8I,OAAOtC,KAAK,CACfoE,MAAO,OACPC,OAAQ,WACN7K,KAAKiI,KAAKsG,MAAMvO,KAAMoO,SAInBpO,UAIS,IAAPwL,KACTxL,KAAKgI,MAAQC,MAIfuD,GAAKxL,KAAK6B,aAAa2J,IACvB,IAAK,IAAI/J,EAAE,EAAGA,EAAE+J,GAAG9J,OAAQD,IAIzB,GAFAM,MAAQ/B,KAAKgC,WAAWwJ,GAAG/J,IAEhB,CAGLzB,KAAK8P,QAAQtE,GAAG/J,MAClBM,MAAM6L,UAAY5N,KAAK+L,KAAKP,GAAG/J,IAC/BM,MAAM6K,WAAa5M,KAAK2B,UAAY/C,OAAOmC,IAAIS,YAAcO,MAAM6K,YAErE7K,MAAMiG,MAAQC,KAGVjI,KAAK2B,WAAaI,MAAME,OAASF,MAAME,MAAM4K,aAC/C9K,MAAME,MAAM4K,aAAaO,aAAa7L,eAAe0G,KAAMrJ,OAAOmC,IAAIS,aAC7DO,MAAME,QACfF,MAAME,MAAMmL,aAAenF,MAI7B,IAAI8D,KAAO/L,KAAK+L,KAAKP,GAAG/J,IACpB0K,UAAanM,KAAKkI,QAAQnG,MAAMmG,SAAS,GAAKlI,KAAKkI,QAAQnG,MAAMmG,SAAS,IAAM,IAAQ6D,KACxFK,QAAsB,IAAXD,SAAmBH,KAAKK,IAAItK,MAAMiG,QAG7ChI,KAAK6I,WAAW2C,GAAG/J,KAAQM,MAAM4E,UACnC3G,KAAKkN,YAAY1B,GAAG/J,IACpBzB,KAAK6I,WAAW2C,GAAG/J,IAAMqF,WAAW9G,KAAK0L,OAAOsB,KAAKhN,KAAM+B,OAAQqK,UAGrEpM,KAAK+F,MAAM,OAAQhE,MAAM4J,KAQ/B,OAAO3L,MAWT+L,KAAM,WACJ,IAEIA,KAAMP,GAFNxL,KAAOH,KACPuO,KAAOH,UAIX,GAAoB,IAAhBG,KAAK1M,OAEP8J,GAAKxL,KAAK0G,QAAQ,GAAGiF,SAChB,GAAoB,IAAhByC,KAAK1M,OAAc,CAE5B,IAAIE,IAAM5B,KAAK6B,eACXwM,MAAQzM,IAAI0M,QAAQF,KAAK,IACzBC,OAAS,EACX7C,GAAKhI,SAAS4K,KAAK,GAAI,IACdpO,KAAK0G,QAAQhF,SACtB8J,GAAKxL,KAAK0G,QAAQ,GAAGiF,IACrBI,KAAO3K,WAAWgN,KAAK,UAEA,IAAhBA,KAAK1M,SACdqK,KAAO3K,WAAWgN,KAAK,IACvB5C,GAAKhI,SAAS4K,KAAK,GAAI,KAIzB,QAAkB,IAAP5C,GACT,OAAOxL,KAIT,GAAoB,iBAAT+L,OAAsC,WAAhB/L,KAAK4I,QAAuB5I,KAAK+I,WAQhE,OAPA/I,KAAK8I,OAAOtC,KAAK,CACfoE,MAAO,OACPC,OAAQ,WACN7K,KAAK+L,KAAKwC,MAAMvO,KAAMoO,SAInBpO,KAIT,IAAI+B,MAAQ/B,KAAKgC,WAAWwJ,IAE5B,GAAIzJ,MAAO,CACT,KAAoB,iBAATgK,MAAqBA,MAAQ,GAwCjC,CACL,GAAI/L,KAAK2B,UAAW,CAClB,IAAIoO,SAAW/P,KAAK8P,QAAQtE,IAAM5M,OAAOmC,IAAIS,YAAcO,MAAM6K,WAAa,EAC1EoD,SAAWjO,MAAM6L,UAAY7L,MAAM6L,UAAY7L,MAAMmK,MAAQ,EACjE,OAAOnK,MAAMmK,OAAS8D,SAAWD,SAAW/D,KAAKK,IAAItK,MAAMiG,QAE3D,OAAOjG,MAAME,MAAMT,YA5CrB,IAAIsO,QAAU9P,KAAK8P,QAAQtE,IACvBsE,SACF9P,KAAK2N,MAAMnC,IAAI,GAIjBzJ,MAAMmK,MAAQH,KACdhK,MAAM2J,QAAS,EACf1L,KAAKkN,YAAY1B,IAGZxL,KAAK2B,YAAaI,MAAME,OAAU+L,MAAMjM,MAAME,MAAMkK,YACvDpK,MAAME,MAAMT,YAAcuK,MAI5B,IAAIkE,YAAc,WAChBjQ,KAAK+F,MAAM,OAAQyF,IAGfsE,SACF9P,KAAKmG,KAAKqF,IAAI,IAKlB,GAAIsE,UAAY9P,KAAK2B,UAAW,CAC9B,IAAIuO,SAAW,WACRlQ,KAAK+I,UAGRjC,WAAWoJ,SAAU,GAFrBD,eAKJnJ,WAAWoJ,SAAU,QAErBD,cAaN,OAAOjQ,MAQT8P,QAAS,SAAStE,IAIhB,GAAkB,iBAAPA,GAAiB,CAC1B,IAAIzJ,MAJKlC,KAIQmC,WAAWwJ,IAC5B,QAAOzJ,QAASA,MAAM4E,QAIxB,IAAK,IAAIlF,EAAE,EAAGA,EATH5B,KASU6G,QAAQhF,OAAQD,IACnC,IAVS5B,KAUC6G,QAAQjF,GAAGkF,QACnB,OAAO,EAIX,OAAO,GAQTwF,SAAU,SAASX,IACjB,IACIW,SADOtM,KACS8I,UAGhB5G,MAJOlC,KAIMmC,WAAWwJ,IAK5B,OAJIzJ,QACFoK,SANStM,KAMOqI,QAAQnG,MAAMmG,SAAS,GAAK,KAGvCiE,UAOTzJ,MAAO,WACL,OAAO7C,KAAK+I,QAOdvG,OAAQ,WAKN,IAJA,IAAIrC,KAAOH,KAGPsQ,OAASnQ,KAAK0G,QACTjF,EAAE,EAAGA,EAAE0O,OAAOzO,OAAQD,IAExB0O,OAAO1O,GAAGkF,SACb3G,KAAKoC,KAAK+N,OAAO1O,GAAGkK,KAIjB3L,KAAK2B,YAER3B,KAAKkO,YAAYiC,OAAO1O,GAAGQ,OAG3BkO,OAAO1O,GAAGQ,MAAM6D,oBAAoB,QAASqK,OAAO1O,GAAG2O,UAAU,GACjED,OAAO1O,GAAGQ,MAAM6D,oBAAoBlH,OAAO4B,cAAe2P,OAAO1O,GAAG4O,SAAS,GAC7EF,OAAO1O,GAAGQ,MAAM6D,oBAAoB,QAASqK,OAAO1O,GAAG6O,QAAQ,GAG/D1R,OAAOsG,mBAAmBiL,OAAO1O,GAAGQ,eAI/BkO,OAAO1O,GAAGQ,MAGjBjC,KAAKkN,YAAYiD,OAAO1O,GAAGkK,KAI7B,IAAI0C,MAAQzP,OAAOyB,OAAOiO,QAAQtO,MAC9BqO,OAAS,GACXzP,OAAOyB,OAAOkQ,OAAOlC,MAAO,GAI9B,IAAImC,UAAW,EACf,IAAK/O,EAAE,EAAGA,EAAE7C,OAAOyB,OAAOqB,OAAQD,IAChC,GAAI7C,OAAOyB,OAAOoB,GAAG2G,OAASpI,KAAKoI,MAAQpI,KAAKoI,KAAKkG,QAAQ1P,OAAOyB,OAAOoB,GAAG2G,OAAS,EAAG,CACxFoI,UAAW,EACX,MAgBJ,OAZIC,OAASD,iBACJC,MAAMzQ,KAAKoI,MAIpBxJ,OAAOgC,SAAU,EAGjBZ,KAAK4I,OAAS,WACd5I,KAAK0G,QAAU,GACf1G,KAAO,KAEA,MAWT0Q,GAAI,SAAS9F,MAAO1B,GAAIsC,GAAIyB,MAC1B,IACI0D,OADO9Q,KACO,MAAQ+K,OAM1B,MAJkB,mBAAP1B,IACTyH,OAAOnK,KAAKyG,KAAO,CAACzB,GAAQtC,GAAQ+D,MAAc,CAACzB,GAAQtC,KAJlDrJ,MAiBb+Q,IAAK,SAAShG,MAAO1B,GAAIsC,IACvB,IACImF,OADO9Q,KACO,MAAQ+K,OACtBnJ,EAAI,EAQR,GALkB,iBAAPyH,KACTsC,GAAKtC,GACLA,GAAK,MAGHA,IAAMsC,GAER,IAAK/J,EAAE,EAAGA,EAAEkP,OAAOjP,OAAQD,IAAK,CAC9B,IAAIoP,KAAQrF,KAAOmF,OAAOlP,GAAG+J,GAC7B,GAAItC,KAAOyH,OAAOlP,GAAGyH,IAAM2H,OAAS3H,IAAM2H,KAAM,CAC9CF,OAAOJ,OAAO9O,EAAG,GACjB,YAGC,GAAImJ,MAnBA/K,KAqBJ,MAAQ+K,OAAS,OACjB,CAEL,IAAIkG,KAAOC,OAAOD,KAxBTjR,MAyBT,IAAK4B,EAAE,EAAGA,EAAEqP,KAAKpP,OAAQD,IACS,IAA3BqP,KAAKrP,GAAG6M,QAAQ,QAAiBhP,MAAM0R,QA1BrCnR,KA0BkDiR,KAAKrP,OA1BvD5B,KA2BAiR,KAAKrP,IAAM,IAKtB,OAhCW5B,MA0CboN,KAAM,SAASrC,MAAO1B,GAAIsC,IAMxB,OALW3L,KAGN6Q,GAAG9F,MAAO1B,GAAIsC,GAAI,GAHZ3L,MAebkG,MAAO,SAAS6E,MAAOY,GAAIyF,KAKzB,IAJA,IACIN,OADO9Q,KACO,MAAQ+K,OAGjBnJ,EAAEkP,OAAOjP,OAAO,EAAGD,GAAG,EAAGA,IAE3BkP,OAAOlP,GAAG+J,IAAMmF,OAAOlP,GAAG+J,KAAOA,IAAgB,SAAVZ,QAC1C9D,WAAW,SAASoC,IAClBA,GAAGgI,KAAKrR,KAAM2L,GAAIyF,MAClBjE,KATKnN,KASM8Q,OAAOlP,GAAGyH,IAAK,GAGxByH,OAAOlP,GAAGwL,MAZPpN,KAaA+Q,IAAIhG,MAAO+F,OAAOlP,GAAGyH,GAAIyH,OAAOlP,GAAG+J,KAQ9C,OArBW3L,KAmBNiM,WAAWlB,OAnBL/K,MA8BbiM,WAAY,SAASlB,OAGnB,GAFW/K,KAEFiJ,OAAOpH,OAAS,EAAG,CAC1B,IAAIyP,KAHKtR,KAGOiJ,OAAO,GAGnBqI,KAAKvG,QAAUA,QANV/K,KAOFiJ,OAAOsI,QAPLvR,KAQFiM,cAIFlB,OACHuG,KAAKtG,SAIT,OAjBWhL,MAyBb6L,OAAQ,SAAS3J,OACf,IACIoG,OAASpG,MAAMmG,QAKnB,IANWrI,KAMD8B,WAAaI,MAAME,QAAUF,MAAME,MAAMoL,SAAWtL,MAAME,MAAMoP,OAAStP,MAAME,MAAMT,YAAcO,MAAMyK,MAEjH,OADA1F,WAPSjH,KAOO6L,OAAOsB,KAPdnN,KAOyBkC,OAAQ,KAPjClC,KAYX,IAAI8H,QAAU5F,MAAM2F,QAZT7H,KAYuBqI,QAAQC,QAAQ,IAWlD,GAvBWtI,KAeNkG,MAAM,MAAOhE,MAAM4J,MAfb9L,KAkBD8B,WAAagG,MAlBZ9H,KAmBJuC,KAAKL,MAAM4J,KAAK,GAAMxF,KAAKpE,MAAM4J,KAnB7B9L,KAuBF8B,WAAagG,KAAM,CAvBjB9H,KAwBJkG,MAAM,OAAQhE,MAAM4J,KACzB5J,MAAMmK,MAAQnK,MAAMwK,QAAU,EAC9BxK,MAAM6L,UAAY,EAClB7L,MAAM6K,WAAahO,OAAOmC,IAAIS,YAE9B,IAAI4K,QAA0C,KAA9BrK,MAAMyK,MAAQzK,MAAMwK,QAAkBP,KAAKK,IAAItK,MAAMiG,OA7B5DnI,KA8BJgJ,WAAW9G,MAAM4J,KAAO7E,WA9BpBjH,KA8BoC6L,OAAOsB,KA9B3CnN,KA8BsDkC,OAAQqK,SAuBzE,OArDWvM,KAkCF8B,YAAcgG,OACrB5F,MAAM4E,SAAU,EAChB5E,MAAM2J,QAAS,EACf3J,MAAMmK,MAAQnK,MAAMwK,QAAU,EAC9BxK,MAAM6L,UAAY,EAtCT/N,KAuCJqN,YAAYnL,MAAM4J,KAvCd9L,KA0CJkO,aAAahM,MAAME,OAGxBrD,OAAO+D,gBA7CE9C,KAiDD8B,WAAcgG,MAjDb9H,KAkDJuC,KAAKL,MAAM4J,KAAK,GAlDZ9L,MA6DbqN,YAAa,SAAS1B,IAGpB,GAFW3L,KAEFgJ,WAAW2C,IAAK,CAEvB,GAAmC,mBAJ1B3L,KAIOgJ,WAAW2C,IACzB3E,aALOhH,KAKWgJ,WAAW2C,SACxB,CACL,IAAIzJ,MAPGlC,KAOUmC,WAAWwJ,IACxBzJ,OAASA,MAAME,OACjBF,MAAME,MAAM6D,oBAAoB,QAT3BjG,KASyCgJ,WAAW2C,KAAK,UATzD3L,KAaGgJ,WAAW2C,IAGzB,OAhBW3L,MAwBbmC,WAAY,SAASwJ,IAInB,IAHA,IAGS/J,EAAE,EAAGA,EAHH5B,KAGU6G,QAAQhF,OAAQD,IACnC,GAAI+J,KAJK3L,KAIO6G,QAAQjF,GAAGkK,IACzB,OALO9L,KAKK6G,QAAQjF,GAIxB,OAAO,MAOTmK,eAAgB,WACH/L,KAENyR,SAGL,IAAK,IAAI7P,EAAE,EAAGA,EALH5B,KAKU6G,QAAQhF,OAAQD,IACnC,GANS5B,KAMA6G,QAAQjF,GAAGiK,OAClB,OAPO7L,KAOK6G,QAAQjF,GAAG8P,QAK3B,OAAO,IAAIlG,MAZAxL,OAkBbyR,OAAQ,WACN,IACIE,MADO3R,KACM+H,MACb6J,IAAM,EACNhQ,EAAI,EAGR,KANW5B,KAMF6G,QAAQhF,OAAS8P,OAA1B,CAKA,IAAK/P,EAAE,EAAGA,EAXC5B,KAWM6G,QAAQhF,OAAQD,IAXtB5B,KAYA6G,QAAQjF,GAAGiK,QAClB+F,MAKJ,IAAKhQ,EAlBM5B,KAkBC6G,QAAQhF,OAAS,EAAGD,GAAG,EAAGA,IAAK,CACzC,GAAIgQ,KAAOD,MACT,OApBO3R,KAuBA6G,QAAQjF,GAAGiK,SAvBX7L,KAyBE8B,WAzBF9B,KAyBoB6G,QAAQjF,GAAGQ,OAzB/BpC,KA0BA6G,QAAQjF,GAAGQ,MAAM4D,WAAW,GA1B5BhG,KA8BF6G,QAAQ6J,OAAO9O,EAAG,GACvBgQ,UAUN5P,aAAc,SAAS2J,IAGrB,QAAkB,IAAPA,GAAoB,CAE7B,IADA,IAAI5J,IAAM,GACDH,EAAE,EAAGA,EAJL5B,KAIY6G,QAAQhF,OAAQD,IACnCG,IAAI4E,KALG3G,KAKO6G,QAAQjF,GAAGkK,KAG3B,OAAO/J,IAEP,MAAO,CAAC4J,KASZmB,eAAgB,SAAS5K,OAsBvB,OAlBAA,MAAME,MAAM4K,aAAejO,OAAOmC,IAAIuE,qBACtCvD,MAAME,MAAM4K,aAAatH,OAASkL,MAJvB5Q,KAIkCuI,MAGzCrG,MAAM2P,QACR3P,MAAME,MAAM4K,aAAarH,QAAQzD,MAAM2P,SAEvC3P,MAAME,MAAM4K,aAAarH,QAAQzD,MAAME,OAIzCF,MAAME,MAAM4K,aAAalF,KAAO5F,MAAM2F,MAClC3F,MAAM2F,QACR3F,MAAME,MAAM4K,aAAa+C,UAAY7N,MAAMwK,QAAU,EACrDxK,MAAME,MAAM4K,aAAagD,QAAU9N,MAAMyK,OAAS,GAEpDzK,MAAME,MAAM4K,aAAaO,aAAa7L,eAAeQ,MAAMiG,MAAOpJ,OAAOmC,IAAIS,aAnBlE3B,MA6BbkO,aAAc,SAAStB,MACrB,IACIkF,MAAQ/S,OAAO6B,YAAc7B,OAAO6B,WAAWmR,OAAOtD,QAAQ,UAAY,EAE9E,GAAI1P,OAAOiG,gBAAkB4H,KAAKI,eAChCJ,KAAKI,aAAajH,QAAU,KAC5B6G,KAAKI,aAAahH,WAAW,GACzB8L,OACF,IAAMlF,KAAKI,aAAatH,OAAS3G,OAAOiG,eAAkB,MAAM/B,IAKpE,OAFA2J,KAAKI,aAAe,KAVThN,MAmBbqO,YAAa,SAASzB,MACN,kBAAkBoF,KAAKjT,OAAO6B,YAAc7B,OAAO6B,WAAW4C,aAE1EoJ,KAAKtF,IAAM,4FAYjB,IAAIkE,MAAQ,SAASyG,MACnBjS,KAAKkS,QAAUD,KACfjS,KAAKC,QAEPuL,MAAMtL,UAAY,CAKhBD,KAAM,WACJ,IACIkS,OADOnS,KACOkS,QAqBlB,OAtBWlS,KAINS,OAAS0R,OAAO1R,OAJVT,KAKN6H,MAAQsK,OAAOtK,MALT7H,KAMNU,QAAUyR,OAAOzR,QANXV,KAONmI,MAAQgK,OAAOhK,MAPTnI,KAQNqM,MAAQ,EARFrM,KASN8G,SAAU,EATJ9G,KAUN6L,QAAS,EAVH7L,KAWNqI,QAAU,YAXJrI,KAcN8L,MAAQ/M,OAAOqB,SAGpB+R,OAAOtL,QAAQF,KAjBJ3G,WAoBNoS,SApBMpS,MA6BboS,OAAQ,WACN,IACID,OADOnS,KACOkS,QACd7Q,OAAUtC,OAAO0B,QAFVT,KAEyBS,QAFzBT,KAEwCkS,QAAQzR,OAAU,EAF1DT,KAEmEU,QAkC9E,OAhCIyR,OAAOrQ,WAJA9B,KAMJoC,WAA0C,IAA1BrD,OAAOmC,IAAImR,WAA8BtT,OAAOmC,IAAIoR,iBAAmBvT,OAAOmC,IAAImR,aAN9FrS,KAOJoC,MAAMX,KAAKC,eAAeL,OAAQtC,OAAOmC,IAAIS,aAPzC3B,KAQJoC,MAAMoL,QAAS,EARXxN,KASJoC,MAAMuD,QAAQ5G,OAAO+B,aAChB/B,OAAOgC,UAVRf,KAYJoC,MAAQrD,OAAOoH,oBAZXnG,KAeJuQ,SAfIvQ,KAeYuS,eAAepF,KAf3BnN,WAgBJoC,MAAM9C,iBAAiB,QAhBnBU,KAgBiCuQ,UAAU,GAhB3CvQ,KAmBJwQ,QAnBIxQ,KAmBWwS,cAAcrF,KAnBzBnN,WAoBJoC,MAAM9C,iBAAiBP,OAAO4B,cApB1BX,KAoB8CwQ,SAAS,GApBvDxQ,KAwBJyQ,OAxBIzQ,KAwBUyS,aAAatF,KAxBvBnN,WAyBJoC,MAAM9C,iBAAiB,QAzBnBU,KAyBiCyQ,QAAQ,GAzBzCzQ,KA4BJoC,MAAMkF,IAAM6K,OAAO5J,KA5BfvI,KA6BJoC,MAAM8F,SAA8B,IAApBiK,OAAOlK,SAAoB,OAASkK,OAAOlK,SA7BvDjI,KA8BJoC,MAAMf,OAASA,OAAStC,OAAOsC,SA9B3BrB,KAiCJoC,MAAMkD,QAjCFtF,MA2Cb0R,MAAO,WACL,IACIS,OADOnS,KACOkS,QAgBlB,OAjBWlS,KAINS,OAAS0R,OAAO1R,OAJVT,KAKN6H,MAAQsK,OAAOtK,MALT7H,KAMNU,QAAUyR,OAAOzR,QANXV,KAONmI,MAAQgK,OAAOhK,MAPTnI,KAQNqM,MAAQ,EARFrM,KASN+N,UAAY,EATN/N,KAUN8G,SAAU,EAVJ9G,KAWN6L,QAAS,EAXH7L,KAYNqI,QAAU,YAZJrI,KAeN8L,MAAQ/M,OAAOqB,SAfTJ,MAuBbuS,eAAgB,WACHvS,KAGNkS,QAAQhM,MAAM,YAHRlG,KAG0B8L,IAH1B9L,KAGoCoC,MAAM7C,MAH1CS,KAGuDoC,MAAM7C,MAAMmT,KAAO,GAH1E1S,KAMNoC,MAAM6D,oBAAoB,QANpBjG,KAMkCuQ,UAAU,IAMzDiC,cAAe,WACb,IACIL,OADOnS,KACOkS,QAGlBC,OAAOrJ,UAAYqD,KAAKwG,KAA2B,GAJxC3S,KAIuBoC,MAAMkK,UAAiB,GAGd,IAAvC4E,OAAOD,KAAKkB,OAAO9J,SAASxG,SAC9BsQ,OAAO9J,QAAU,CAACuK,UAAW,CAAC,EAAsB,IAAnBT,OAAOrJ,aAGpB,WAAlBqJ,OAAOpJ,SACToJ,OAAOpJ,OAAS,SAChBoJ,OAAOjM,MAAM,QACbiM,OAAOlG,cAdEjM,KAkBNoC,MAAM6D,oBAAoBlH,OAAO4B,cAlB3BX,KAkB+CwQ,SAAS,IAMrEiC,aAAc,WACZ,IACIN,OADOnS,KACOkS,QAGdC,OAAOrJ,YAAcoE,MAGvBiF,OAAOrJ,UAAYqD,KAAKwG,KAA2B,GAP1C3S,KAOyBoC,MAAMkK,UAAiB,GAGrD6F,OAAO9J,QAAQuK,UAAU,KAAO1F,MAClCiF,OAAO9J,QAAQuK,UAAU,GAAwB,IAAnBT,OAAOrJ,WAIvCqJ,OAAOtG,OAfE7L,YAmBNoC,MAAM6D,oBAAoB,QAnBpBjG,KAmBkCyQ,QAAQ,KAOzD,IAAIG,MAAQ,GAMRnF,WAAa,SAAStL,MACxB,IAAI8K,IAAM9K,KAAKoI,KAGf,GAAIqI,MAAM3F,KAOR,OALA9K,KAAK2I,UAAY8H,MAAM3F,KAAKqB,cAG5BuG,UAAU1S,MAKZ,GAAI,sBAAsB6R,KAAK/G,KAAM,CAInC,IAFA,IAAI6H,KAAOC,KAAK9H,IAAIrH,MAAM,KAAK,IAC3BoP,SAAW,IAAIC,WAAWH,KAAKjR,QAC1BD,EAAE,EAAGA,EAAEkR,KAAKjR,SAAUD,EAC7BoR,SAASpR,GAAKkR,KAAKI,WAAWtR,GAGhCuR,gBAAgBH,SAAStN,OAAQvF,UAC5B,CAEL,IAAIwI,IAAM,IAAIyK,eACdzK,IAAI0K,KAAKlT,KAAKsI,KAAKC,OAAQuC,KAAK,GAChCtC,IAAIE,gBAAkB1I,KAAKsI,KAAKI,gBAChCF,IAAI2K,aAAe,cAGfnT,KAAKsI,KAAKG,SACZsI,OAAOD,KAAK9Q,KAAKsI,KAAKG,SAAS2K,SAAQ,SAASC,KAC9C7K,IAAI8K,iBAAiBD,IAAKrT,KAAKsI,KAAKG,QAAQ4K,SAIhD7K,IAAIc,OAAS,WAEX,IAAIiJ,MAAQ/J,IAAI+K,OAAS,IAAI,GAChB,MAAThB,MAAyB,MAATA,MAAyB,MAATA,KAKpCS,gBAAgBxK,IAAIgL,SAAUxT,MAJ5BA,KAAK+F,MAAM,YAAa,KAAM,0CAA4CyC,IAAI+K,OAAS,MAM3F/K,IAAIiL,QAAU,WAERzT,KAAK2B,YACP3B,KAAKwH,QAAS,EACdxH,KAAK2B,WAAY,EACjB3B,KAAK0G,QAAU,UACR+J,MAAM3F,KACb9K,KAAKmF,SAGTuO,YAAYlL,OAQZkL,YAAc,SAASlL,KACzB,IACEA,IAAImL,OACJ,MAAO7Q,GACP0F,IAAIiL,YASJT,gBAAkB,SAASY,YAAa5T,MAE1C,IAAIZ,MAAQ,WACVY,KAAK+F,MAAM,YAAa,KAAM,gCAI5B8N,QAAU,SAAStO,QACjBA,QAAUvF,KAAK0G,QAAQhF,OAAS,GAClC+O,MAAMzQ,KAAKoI,MAAQ7C,OACnBmN,UAAU1S,KAAMuF,SAEhBnG,SAKmB,oBAAZL,SAAiE,IAAtCH,OAAOmC,IAAIiS,gBAAgBtR,OAC/D9C,OAAOmC,IAAIiS,gBAAgBY,aAAatV,KAAKuV,SAASzN,MAAMhH,OAE5DR,OAAOmC,IAAIiS,gBAAgBY,YAAaC,QAASzU,QASjDsT,UAAY,SAAS1S,KAAMuF,QAEzBA,SAAWvF,KAAK2I,YAClB3I,KAAK2I,UAAYpD,OAAO4G,UAIe,IAArC4E,OAAOD,KAAK9Q,KAAKkI,SAASxG,SAC5B1B,KAAKkI,QAAU,CAACuK,UAAW,CAAC,EAAoB,IAAjBzS,KAAK2I,aAIlB,WAAhB3I,KAAK4I,SACP5I,KAAK4I,OAAS,SACd5I,KAAK+F,MAAM,QACX/F,KAAK8L,eAOLzK,kBAAoB,WAEtB,GAAKzC,OAAOiC,cAAZ,CAKA,IAC8B,oBAAjBiT,aACTlV,OAAOmC,IAAM,IAAI+S,aACsB,oBAAvBC,mBAChBnV,OAAOmC,IAAM,IAAIgT,mBAEjBnV,OAAOiC,eAAgB,EAEzB,MAAMiC,GACNlE,OAAOiC,eAAgB,EAIpBjC,OAAOmC,MACVnC,OAAOiC,eAAgB,GAKzB,IAAImT,IAAO,iBAAiBnC,KAAKjT,OAAO6B,YAAc7B,OAAO6B,WAAWwT,UACpEC,WAAatV,OAAO6B,YAAc7B,OAAO6B,WAAWyT,WAAW5Q,MAAM,0BACrE6Q,QAAUD,WAAa1Q,SAAS0Q,WAAW,GAAI,IAAM,KACzD,GAAIF,KAAOG,SAAWA,QAAU,EAAG,CACjC,IAAIC,OAAS,SAASvC,KAAKjT,OAAO6B,YAAc7B,OAAO6B,WAAW4C,UAAU4H,eACxErM,OAAO6B,aAAe2T,SACxBxV,OAAOiC,eAAgB,GAKvBjC,OAAOiC,gBACTjC,OAAO+B,gBAA+C,IAA1B/B,OAAOmC,IAAImR,WAA8BtT,OAAOmC,IAAIoR,iBAAmBvT,OAAOmC,IAAImR,aAC9GtT,OAAO+B,WAAWW,KAAKC,eAAe3C,OAAO0B,OAAS,EAAI1B,OAAO2B,QAAS3B,OAAOmC,IAAIS,aACrF5C,OAAO+B,WAAW6E,QAAQ5G,OAAOmC,IAAI0E,cAIvC7G,OAAOqC,gBAKD,8CACJ,MAAO,CACLrC,OACAqI,OAHE,cAAC,OAAD,8CAUNoN,eAAiBzV,OACjByV,aAAepN,UAIK,IAAXqN,uBACTA,sBAAO1U,aAAeA,aACtB0U,sBAAO1V,OAASA,OAChB0V,sBAAOrN,KAAOA,KACdqN,sBAAOjJ,MAAQA,OACY,oBAAX7M,SAChBA,OAAOoB,aAAeA,aACtBpB,OAAOI,OAASA,OAChBJ,OAAOyI,KAAOA,KACdzI,OAAO6M,MAAQA,OAz/EnB,GA0gFA,WAEE,aA8HuB,IAASkJ,OA3HhC3U,aAAaG,UAAUyU,KAAO,CAAC,EAAG,EAAG,GACrC5U,aAAaG,UAAU0U,aAAe,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,GAWvD7U,aAAaG,UAAU2U,OAAS,SAASC,KAIvC,IAHW9U,KAGDkB,MAHClB,KAGYkB,IAAI2M,SACzB,OAJS7N,KAQX,IAAK,IAAI4B,EARE5B,KAQKQ,OAAOqB,OAAO,EAAGD,GAAG,EAAGA,IAR5B5B,KASJQ,OAAOoB,GAAGiT,OAAOC,KAGxB,OAZW9U,MAuBbD,aAAaG,UAAU6U,IAAM,SAASC,EAAGC,EAAGC,GAI1C,OAHWlV,KAGDkB,KAHClB,KAGYkB,IAAI2M,UAK3BoH,EAAkB,iBAANA,EARDjV,KAQwB2U,KAAK,GAAKM,EAC7CC,EAAkB,iBAANA,EATDlV,KASwB2U,KAAK,GAAKO,EAE5B,iBAANF,EAXAhV,KAsBG2U,MAtBH3U,KAYJ2U,KAAO,CAACK,EAAGC,EAAGC,QAEwB,IAdlClV,KAcOkB,IAAI2M,SAASsH,WAdpBnV,KAeFkB,IAAI2M,SAASsH,UAAUC,gBAfrBpV,KAe0C2U,KAAK,GAAI5V,OAAOmC,IAAIS,YAAa,IAf3E3B,KAgBFkB,IAAI2M,SAASwH,UAAUD,gBAhBrBpV,KAgB0C2U,KAAK,GAAI5V,OAAOmC,IAAIS,YAAa,IAhB3E3B,KAiBFkB,IAAI2M,SAASyH,UAAUF,gBAjBrBpV,KAiB0C2U,KAAK,GAAI5V,OAAOmC,IAAIS,YAAa,KAjB3E3B,KAmBFkB,IAAI2M,SAAS0H,YAnBXvV,KAmB4B2U,KAAK,GAnBjC3U,KAmB0C2U,KAAK,GAnB/C3U,KAmBwD2U,KAAK,IAnB7D3U,aA0CbD,aAAaG,UAAUsV,YAAc,SAASR,EAAGC,EAAGC,EAAGO,IAAKC,IAAKC,KAI/D,IAHW3V,KAGDkB,MAHClB,KAGYkB,IAAI2M,SACzB,OAJS7N,KAQX,IAAI4V,GARO5V,KAQG4U,aAOd,OANAK,EAAkB,iBAANA,EAAkBW,GAAG,GAAKX,EACtCC,EAAkB,iBAANA,EAAkBU,GAAG,GAAKV,EACtCO,IAAsB,iBAARA,IAAoBG,GAAG,GAAKH,IAC1CC,IAAsB,iBAARA,IAAoBE,GAAG,GAAKF,IAC1CC,IAAsB,iBAARA,IAAoBC,GAAG,GAAKD,IAEzB,iBAANX,EAcFY,IA7BE5V,KAgBJ4U,aAAe,CAACI,EAAGC,EAAGC,EAAGO,IAAKC,IAAKC,UAEE,IAlBjC3V,KAkBOkB,IAAI2M,SAASgI,UAlBpB7V,KAmBFkB,IAAI2M,SAASgI,SAAST,gBAAgBJ,EAAGjW,OAAOmC,IAAIS,YAAa,IAnB/D3B,KAoBFkB,IAAI2M,SAASiI,SAASV,gBAAgBH,EAAGlW,OAAOmC,IAAIS,YAAa,IApB/D3B,KAqBFkB,IAAI2M,SAASkI,SAASX,gBAAgBF,EAAGnW,OAAOmC,IAAIS,YAAa,IArB/D3B,KAsBFkB,IAAI2M,SAASmI,IAAIZ,gBAAgBK,IAAK1W,OAAOmC,IAAIS,YAAa,IAtB5D3B,KAuBFkB,IAAI2M,SAASoI,IAAIb,gBAAgBM,IAAK3W,OAAOmC,IAAIS,YAAa,IAvB5D3B,KAwBFkB,IAAI2M,SAASqI,IAAId,gBAAgBO,IAAK5W,OAAOmC,IAAIS,YAAa,KAxB5D3B,KA0BFkB,IAAI2M,SAASsI,eAAenB,EAAGC,EAAGC,EAAGO,IAAKC,IAAKC,KA1B7C3V,OA2CboH,KAAKlH,UAAUD,MAAiByU,OA2B7BtN,KAAKlH,UAAUD,KA1BT,SAASoH,GAwBd,OAvBWrH,KAGN4U,aAAevN,EAAEmO,aAAe,CAAC,EAAG,EAAG,GAHjCxV,KAINoW,QAAU/O,EAAEwN,QAAU,KAJhB7U,KAKN2U,KAAOtN,EAAE0N,KAAO,KALV/U,KAMNqW,YAAc,CACjBC,oBAA4C,IAArBjP,EAAEiP,eAAiCjP,EAAEiP,eAAiB,IAC7EC,oBAA4C,IAArBlP,EAAEkP,eAAiClP,EAAEkP,eAAiB,IAC7EC,mBAA0C,IAApBnP,EAAEmP,cAAgCnP,EAAEmP,cAAgB,EAC1EC,mBAA0C,IAApBpP,EAAEoP,cAAgCpP,EAAEoP,cAAgB,UAC1EC,iBAAsC,IAAlBrP,EAAEqP,YAA8BrP,EAAEqP,YAAc,IACpEC,kBAAwC,IAAnBtP,EAAEsP,aAA+BtP,EAAEsP,aAAe,OACvEC,iBAAsC,IAAlBvP,EAAEuP,YAA8BvP,EAAEuP,YAAc,EACpEC,mBAA0C,IAApBxP,EAAEwP,cAAgCxP,EAAEwP,cAAgB,GAdjE7W,KAkBN8W,UAAYzP,EAAE0P,SAAW,CAAC,CAAC1N,GAAIhC,EAAE0P,WAAa,GAlBxC/W,KAmBNgX,OAAS3P,EAAE4P,MAAQ,CAAC,CAAC5N,GAAIhC,EAAE4P,QAAU,GAnB/BjX,KAoBNkX,eAAiB7P,EAAE8P,cAAgB,CAAC,CAAC9N,GAAIhC,EAAE8P,gBAAkB,GAG3DzC,OAAOrD,KAAKrR,KAAMqH,KAU7BD,KAAKlH,UAAU2U,OAAS,SAASC,IAAKnJ,IACpC,IAAIxL,KAAOH,KAGX,IAAKG,KAAK2B,UACR,OAAO3B,KAIT,GAAoB,WAAhBA,KAAK4I,OAQP,OAPA5I,KAAK8I,OAAOtC,KAAK,CACfoE,MAAO,SACPC,OAAQ,WACN7K,KAAK0U,OAAOC,IAAKnJ,OAIdxL,KAIT,IAAIiX,gBAAuD,IAAlCrY,OAAOmC,IAAImW,mBAAsC,UAAY,SAGtF,QAAkB,IAAP1L,GAAoB,CAE7B,GAAmB,iBAARmJ,IAIT,OAAO3U,KAAKiW,QAHZjW,KAAKiW,QAAUtB,IACf3U,KAAKwU,KAAO,CAACG,IAAK,EAAG,GAQzB,IADA,IAAI/S,IAAM5B,KAAK6B,aAAa2J,IACnB/J,EAAE,EAAGA,EAAEG,IAAIF,OAAQD,IAAK,CAE/B,IAAIM,MAAQ/B,KAAKgC,WAAWJ,IAAIH,IAEhC,GAAIM,MAAO,CACT,GAAmB,iBAAR4S,IA4BT,OAAO5S,MAAMkU,QA3BblU,MAAMkU,QAAUtB,IAChB5S,MAAMyS,KAAO,CAACG,IAAK,EAAG,GAElB5S,MAAME,QAERF,MAAMmU,YAAYM,aAAe,aAG5BzU,MAAM2P,SAAY3P,MAAM2P,QAAQiD,KACnCwC,YAAYpV,MAAOkV,YAGF,YAAfA,gBACqC,IAA5BlV,MAAM2P,QAAQsD,WACvBjT,MAAM2P,QAAQsD,UAAUzT,eAAeoT,IAAK/V,OAAOmC,IAAIS,aACvDO,MAAM2P,QAAQwD,UAAU3T,eAAe,EAAG3C,OAAOmC,IAAIS,aACrDO,MAAM2P,QAAQyD,UAAU5T,eAAe,EAAG3C,OAAOmC,IAAIS,cAErDO,MAAM2P,QAAQ0D,YAAYT,IAAK,EAAG,GAGpC5S,MAAM2P,QAAQiD,IAAIpT,eAAeoT,IAAK/V,OAAOmC,IAAIS,cAIrDxB,KAAK+F,MAAM,SAAUhE,MAAM4J,MAOjC,OAAO3L,MAWTiH,KAAKlH,UAAU6U,IAAM,SAASC,EAAGC,EAAGC,EAAGvJ,IACrC,IAAIxL,KAAOH,KAGX,IAAKG,KAAK2B,UACR,OAAO3B,KAIT,GAAoB,WAAhBA,KAAK4I,OAQP,OAPA5I,KAAK8I,OAAOtC,KAAK,CACfoE,MAAO,MACPC,OAAQ,WACN7K,KAAK4U,IAAIC,EAAGC,EAAGC,EAAGvJ,OAIfxL,KAQT,GAJA8U,EAAkB,iBAANA,EAAkB,EAAIA,EAClCC,EAAkB,iBAANA,GAAmB,GAAMA,OAGnB,IAAPvJ,GAAoB,CAE7B,GAAiB,iBAANqJ,EAGT,OAAO7U,KAAKwU,KAFZxU,KAAKwU,KAAO,CAACK,EAAGC,EAAGC,GAQvB,IADA,IAAInT,IAAM5B,KAAK6B,aAAa2J,IACnB/J,EAAE,EAAGA,EAAEG,IAAIF,OAAQD,IAAK,CAE/B,IAAIM,MAAQ/B,KAAKgC,WAAWJ,IAAIH,IAEhC,GAAIM,MAAO,CACT,GAAiB,iBAAN8S,EAoBT,OAAO9S,MAAMyS,KAnBbzS,MAAMyS,KAAO,CAACK,EAAGC,EAAGC,GAEhBhT,MAAME,QAEHF,MAAM2P,UAAW3P,MAAM2P,QAAQiD,KAClCwC,YAAYpV,MAAO,gBAGkB,IAA5BA,MAAM2P,QAAQsD,WACvBjT,MAAM2P,QAAQsD,UAAUzT,eAAesT,EAAGjW,OAAOmC,IAAIS,aACrDO,MAAM2P,QAAQwD,UAAU3T,eAAeuT,EAAGlW,OAAOmC,IAAIS,aACrDO,MAAM2P,QAAQyD,UAAU5T,eAAewT,EAAGnW,OAAOmC,IAAIS,cAErDO,MAAM2P,QAAQ0D,YAAYP,EAAGC,EAAGC,IAIpC/U,KAAK+F,MAAM,MAAOhE,MAAM4J,MAO9B,OAAO3L,MAaTiH,KAAKlH,UAAUsV,YAAc,SAASR,EAAGC,EAAGC,EAAGvJ,IAC7C,IAAIxL,KAAOH,KAGX,IAAKG,KAAK2B,UACR,OAAO3B,KAIT,GAAoB,WAAhBA,KAAK4I,OAQP,OAPA5I,KAAK8I,OAAOtC,KAAK,CACfoE,MAAO,cACPC,OAAQ,WACN7K,KAAKqV,YAAYR,EAAGC,EAAGC,EAAGvJ,OAIvBxL,KAQT,GAJA8U,EAAkB,iBAANA,EAAkB9U,KAAKyU,aAAa,GAAKK,EACrDC,EAAkB,iBAANA,EAAkB/U,KAAKyU,aAAa,GAAKM,OAGnC,IAAPvJ,GAAoB,CAE7B,GAAiB,iBAANqJ,EAGT,OAAO7U,KAAKyU,aAFZzU,KAAKyU,aAAe,CAACI,EAAGC,EAAGC,GAQ/B,IADA,IAAInT,IAAM5B,KAAK6B,aAAa2J,IACnB/J,EAAE,EAAGA,EAAEG,IAAIF,OAAQD,IAAK,CAE/B,IAAIM,MAAQ/B,KAAKgC,WAAWJ,IAAIH,IAEhC,GAAIM,MAAO,CACT,GAAiB,iBAAN8S,EAyBT,OAAO9S,MAAM0S,aAxBb1S,MAAM0S,aAAe,CAACI,EAAGC,EAAGC,GAExBhT,MAAME,QAEHF,MAAM2P,UAEJ3P,MAAMyS,OACTzS,MAAMyS,KAAOxU,KAAKwU,MAAQ,CAAC,EAAG,GAAI,KAGpC2C,YAAYpV,MAAO,iBAGqB,IAA/BA,MAAM2P,QAAQ0F,cACvBrV,MAAM2P,QAAQ0F,aAAa7V,eAAesT,EAAGjW,OAAOmC,IAAIS,aACxDO,MAAM2P,QAAQ2F,aAAa9V,eAAeuT,EAAGlW,OAAOmC,IAAIS,aACxDO,MAAM2P,QAAQ4F,aAAa/V,eAAewT,EAAGnW,OAAOmC,IAAIS,cAExDO,MAAM2P,QAAQsE,eAAenB,EAAGC,EAAGC,IAIvC/U,KAAK+F,MAAM,cAAehE,MAAM4J,MAOtC,OAAO3L,MAiCTiH,KAAKlH,UAAUwX,WAAa,WAC1B,IAEIrQ,EAAGsE,GAAIzJ,MAFP/B,KAAOH,KACPuO,KAAOH,UAIX,IAAKjO,KAAK2B,UACR,OAAO3B,KAIT,GAAoB,IAAhBoO,KAAK1M,OAEP,OAAO1B,KAAKkW,YACP,GAAoB,IAAhB9H,KAAK1M,OAAc,CAC5B,GAAuB,iBAAZ0M,KAAK,GAgCd,OADArM,MAAQ/B,KAAKgC,WAAWwB,SAAS4K,KAAK,GAAI,MAC3BrM,MAAMmU,YAAclW,KAAKkW,YA/BxChP,EAAIkH,KAAK,QAGS,IAAP5C,KACJtE,EAAEqQ,aACLrQ,EAAEqQ,WAAa,CACbpB,eAAgBjP,EAAEiP,eAClBC,eAAgBlP,EAAEkP,eAClBC,cAAenP,EAAEmP,cACjBC,cAAepP,EAAEoP,cACjBC,YAAarP,EAAEqP,YACfE,YAAavP,EAAEuP,YACfC,cAAexP,EAAEwP,cACjBF,aAActP,EAAEsP,eAIpBxW,KAAKkW,YAAc,CACjBC,oBAAuD,IAAhCjP,EAAEqQ,WAAWpB,eAAiCjP,EAAEqQ,WAAWpB,eAAiBnW,KAAKwX,gBACxGpB,oBAAuD,IAAhClP,EAAEqQ,WAAWnB,eAAiClP,EAAEqQ,WAAWnB,eAAiBpW,KAAKyX,gBACxGpB,mBAAqD,IAA/BnP,EAAEqQ,WAAWlB,cAAgCnP,EAAEqQ,WAAWlB,cAAgBrW,KAAK0X,eACrGpB,mBAAqD,IAA/BpP,EAAEqQ,WAAWjB,cAAgCpP,EAAEqQ,WAAWjB,cAAgBtW,KAAK2X,eACrGpB,iBAAiD,IAA7BrP,EAAEqQ,WAAWhB,YAA8BrP,EAAEqQ,WAAWhB,YAAcvW,KAAK4X,aAC/FnB,iBAAiD,IAA7BvP,EAAEqQ,WAAWd,YAA8BvP,EAAEqQ,WAAWd,YAAczW,KAAK6X,aAC/FnB,mBAAqD,IAA/BxP,EAAEqQ,WAAWb,cAAgCxP,EAAEqQ,WAAWb,cAAgB1W,KAAK8X,eACrGtB,kBAAmD,IAA9BtP,EAAEqQ,WAAWf,aAA+BtP,EAAEqQ,WAAWf,aAAexW,KAAK+X,qBAQ/E,IAAhB3J,KAAK1M,SACdwF,EAAIkH,KAAK,GACT5C,GAAKhI,SAAS4K,KAAK,GAAI,KAKzB,IADA,IAAIxM,IAAM5B,KAAK6B,aAAa2J,IACnB/J,EAAE,EAAGA,EAAEG,IAAIF,OAAQD,IAG1B,GAFAM,MAAQ/B,KAAKgC,WAAWJ,IAAIH,IAEjB,CAET,IAAIuW,GAAKjW,MAAMmU,YACf8B,GAAK,CACH7B,oBAA4C,IAArBjP,EAAEiP,eAAiCjP,EAAEiP,eAAiB6B,GAAG7B,eAChFC,oBAA4C,IAArBlP,EAAEkP,eAAiClP,EAAEkP,eAAiB4B,GAAG5B,eAChFC,mBAA0C,IAApBnP,EAAEmP,cAAgCnP,EAAEmP,cAAgB2B,GAAG3B,cAC7EC,mBAA0C,IAApBpP,EAAEoP,cAAgCpP,EAAEoP,cAAgB0B,GAAG1B,cAC7EC,iBAAsC,IAAlBrP,EAAEqP,YAA8BrP,EAAEqP,YAAcyB,GAAGzB,YACvEE,iBAAsC,IAAlBvP,EAAEuP,YAA8BvP,EAAEuP,YAAcuB,GAAGvB,YACvEC,mBAA0C,IAApBxP,EAAEwP,cAAgCxP,EAAEwP,cAAgBsB,GAAGtB,cAC7EF,kBAAwC,IAAnBtP,EAAEsP,aAA+BtP,EAAEsP,aAAewB,GAAGxB,cAI5E,IAAIyB,OAASlW,MAAM2P,QACfuG,QACFA,OAAO9B,eAAiB6B,GAAG7B,eAC3B8B,OAAO7B,eAAiB4B,GAAG5B,eAC3B6B,OAAO5B,cAAgB2B,GAAG3B,cAC1B4B,OAAO3B,cAAgB0B,GAAG1B,cAC1B2B,OAAO1B,YAAcyB,GAAGzB,YACxB0B,OAAOxB,YAAcuB,GAAGvB,YACxBwB,OAAOvB,cAAgBsB,GAAGtB,cAC1BuB,OAAOzB,aAAewB,GAAGxB,eAGpBzU,MAAMyS,OACTzS,MAAMyS,KAAOxU,KAAKwU,MAAQ,CAAC,EAAG,GAAI,KAIpC2C,YAAYpV,MAAO,YAKzB,OAAO/B,MAWTqL,MAAMtL,UAAUD,KAAQ,SAASyU,QAC/B,OAAO,WACL,IACIvC,OADOnS,KACOkS,QADPlS,KAIN4U,aAAezC,OAAOyC,aAJhB5U,KAKNoW,QAAUjE,OAAOiE,QALXpW,KAMN2U,KAAOxC,OAAOwC,KANR3U,KAONqW,YAAclE,OAAOkE,YAG1B3B,OAAOrD,KAAKrR,MAVDA,KAaFoW,QACPjE,OAAO0C,OAdE7U,KAcUoW,SAdVpW,KAeK2U,MACdxC,OAAO4C,IAhBE/U,KAgBO2U,KAAK,GAhBZ3U,KAgBqB2U,KAAK,GAhB1B3U,KAgBmC2U,KAAK,GAhBxC3U,KAgBiD8L,MAlBxC,CAqBrBN,MAAMtL,UAAUD,MAOnBuL,MAAMtL,UAAUwR,MAAS,SAASgD,QAChC,OAAO,WACL,IACIvC,OADOnS,KACOkS,QAqBlB,OAtBWlS,KAIN4U,aAAezC,OAAOyC,aAJhB5U,KAKNoW,QAAUjE,OAAOiE,QALXpW,KAMN2U,KAAOxC,OAAOwC,KANR3U,KAONqW,YAAclE,OAAOkE,YAPfrW,KAUFoW,QACPjE,OAAO0C,OAXE7U,KAWUoW,SAXVpW,KAYK2U,KACdxC,OAAO4C,IAbE/U,KAaO2U,KAAK,GAbZ3U,KAaqB2U,KAAK,GAb1B3U,KAamC2U,KAAK,GAbxC3U,KAaiD8L,KAbjD9L,KAcK6R,UAdL7R,KAgBJ6R,QAAQ7L,WAAW,GAhBfhG,KAiBJ6R,aAAUrJ,EACf2J,OAAOrF,eAlBE9M,OAsBJ0U,OAAOrD,KAAKrR,OAxBE,CA0BtBwL,MAAMtL,UAAUwR,OAUnB,IAAI4F,YAAc,SAASpV,MAAOmW,MAInB,aAHbA,KAAOA,MAAQ,YAIbnW,MAAM2P,QAAU9S,OAAOmC,IAAIoX,eAC3BpW,MAAM2P,QAAQyE,eAAiBpU,MAAMmU,YAAYC,eACjDpU,MAAM2P,QAAQ0E,eAAiBrU,MAAMmU,YAAYE,eACjDrU,MAAM2P,QAAQ2E,cAAgBtU,MAAMmU,YAAYG,cAChDtU,MAAM2P,QAAQ4E,cAAgBvU,MAAMmU,YAAYI,cAChDvU,MAAM2P,QAAQ6E,YAAcxU,MAAMmU,YAAYK,YAC9CxU,MAAM2P,QAAQ+E,YAAc1U,MAAMmU,YAAYO,YAC9C1U,MAAM2P,QAAQgF,cAAgB3U,MAAMmU,YAAYQ,cAChD3U,MAAM2P,QAAQ8E,aAAezU,MAAMmU,YAAYM,kBAER,IAA5BzU,MAAM2P,QAAQsD,WACvBjT,MAAM2P,QAAQsD,UAAUzT,eAAeQ,MAAMyS,KAAK,GAAI5V,OAAOmC,IAAIS,aACjEO,MAAM2P,QAAQwD,UAAU3T,eAAeQ,MAAMyS,KAAK,GAAI5V,OAAOmC,IAAIS,aACjEO,MAAM2P,QAAQyD,UAAU5T,eAAeQ,MAAMyS,KAAK,GAAI5V,OAAOmC,IAAIS,cAEjEO,MAAM2P,QAAQ0D,YAAYrT,MAAMyS,KAAK,GAAIzS,MAAMyS,KAAK,GAAIzS,MAAMyS,KAAK,SAG3B,IAA/BzS,MAAM2P,QAAQ0F,cACvBrV,MAAM2P,QAAQ0F,aAAa7V,eAAeQ,MAAM0S,aAAa,GAAI7V,OAAOmC,IAAIS,aAC5EO,MAAM2P,QAAQ2F,aAAa9V,eAAeQ,MAAM0S,aAAa,GAAI7V,OAAOmC,IAAIS,aAC5EO,MAAM2P,QAAQ4F,aAAa/V,eAAeQ,MAAM0S,aAAa,GAAI7V,OAAOmC,IAAIS,cAE5EO,MAAM2P,QAAQsE,eAAejU,MAAM0S,aAAa,GAAI1S,MAAM0S,aAAa,GAAI1S,MAAM0S,aAAa,MAGhG1S,MAAM2P,QAAU9S,OAAOmC,IAAImW,qBAC3BnV,MAAM2P,QAAQiD,IAAIpT,eAAeQ,MAAMkU,QAASrX,OAAOmC,IAAIS,cAG7DO,MAAM2P,QAAQlM,QAAQzD,MAAME,OAGvBF,MAAM4E,SACT5E,MAAMgQ,QAAQpE,MAAM5L,MAAM4J,KAAK,GAAMxF,KAAKpE,MAAM4J,KAAK,IAjoB3D,I,yhFCx/Ee,MAAMyM,KAGjB,UACI,OAAOvY,KAAKwY,OAAOA,OAGvBC,cAAc,iDACVzY,KAAKwY,OAAS,IAAIE,0CAAI1Y,MACtBA,KAAK2Y,MAAQ,IAAIC,oDAAa5Y,MAC9BA,KAAK6Y,MAAQ,IAAIC,yDAAa9Y,MAC9BA,KAAK+Y,MAAQ,IAAIC,oDAAahZ,MAC9BA,KAAKiZ,SAAW,IAAIC,8DAASlZ,MAC7BA,KAAK6C,MAAQ,IAAIsW,wDAAiBnZ,MAClCA,KAAKoZ,MAAQ,IAAIC,yDAAarZ,MAC9BA,KAAKF,IAAM,IAAIwZ,kDAAWtZ,MAC1BA,KAAKuZ,OAAS,IAAIC,qDAAcxZ,MAChCA,KAAKyZ,SAAW,IAAIC,sDAAe1Z,MACnCA,KAAK2Z,OAAS,IAAIC,oDAAc5Z,MAChCA,KAAK6Z,SAAW,IAAIC,2DAAe9Z,MACnCA,KAAK+Z,QAAU,IAAIC,4DAAcha,MACjCA,KAAKia,MAAQ,IAAIC,4DAAgBla,MACjCA,KAAKwG,QAAU,IAAI2T,sDAAena,MAElCA,KAAKoa,aAAe,IAAIC,2DAAara,MACrCA,KAAKsa,YAAc,IAAIC,2DAAYva,MACnCA,KAAKwa,aAAe,IAAIC,4DAAaza,MACrCA,KAAK0a,UAAY,IAAIA,yDAAU1a,MAC/BA,KAAK2a,aAAe,IAAIC,2DAAa5a,MACrCA,KAAK6a,SAAW,IAAIA,uDAAS7a,MAC7BA,KAAK8a,OAAS,IAAIC,4DAAa/a,MAC/BA,KAAKgb,UAAY,IAAIC,8DAAejb,MACpCA,KAAKkb,IAAM,IAAIC,mEAAoBnb,MACnCA,KAAKob,cAAgB,IAAIC,6DAAcrb,MACvCA,KAAKsb,aAAe,IAAIC,4DAAavb,MACrCA,KAAKwb,WAAa,IAAIC,0DAAWzb,MAGrClB,QACI,sBAAAkB,KAAA,YAAmBuP,KAAKC,OACxBxP,KAAK0b,UAAY1b,KAAK8H,KAAKqF,KAAKnN,MAChC2b,sBAAsB3b,KAAK8H,KAAKqF,KAAKnN,OAGzC4b,uBAAuBC,IACnB,IAAK,IAAIja,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB5B,KAAK+Y,MAAM+C,OAAOD,IAClB,MAAME,WAAa/b,KAAKoa,aAAa0B,OAAOD,IAY5C,GAVIE,YACA/b,KAAKgc,oBAAoBH,IAG7B7b,KAAKsb,aAAaQ,OAAOD,IACzB7b,KAAKwb,WAAWM,OAAOD,IACvB7b,KAAKwa,aAAasB,OAAOD,IACzB7b,KAAKsa,YAAYwB,OAAOD,IACxB7b,KAAKob,cAAcU,OAAOD,IAEtBE,WACA,QAKZC,oBAAoBH,IAChB7b,KAAK0a,UAAUoB,OAAOD,IACtB7b,KAAK2a,aAAamB,OAAOD,IACzB7b,KAAKgb,UAAUc,OAAOD,IACtB7b,KAAK6a,SAASiB,OAAOD,IACrB7b,KAAKF,IAAIgc,OAAOD,IAChB7b,KAAKwG,QAAQyV,OAAOJ,IAGxB/T,KAAKoU,GACD,MAAM1M,IAAMD,KAAKC,MACXqM,GAAKrM,I,gOAAM,CAAAxP,KAAH,aAEdA,KAAK+Z,QAAQ+B,OAAOD,IACpB7b,KAAKkb,IAAIY,OAAOD,IAChB7b,KAAKiZ,SAASgD,SAEd,sBAAAjc,KAAA,YAAmBwP,KAEnBmM,sBAAsB3b,KAAK0b,YAI5B,MAAM9c,KAAO,IAAI2Z,M,q0BChHT,MAAMW,iBAAiBiD,8CAMlC,cACI,6BAAOnc,KAAP,UAGJ,aACI,OAAOA,KAAKoc,QAAQC,OAGxB5D,YAAY7Z,MACR0d,MAAM1d,MADQ,iCAbN,IAaM,kCAZL,IAYK,0CAXF,KAWE,qCAVP,QAaP2d,wDAAehJ,SAASiJ,cACpB,sBAAAxc,KAAA,eAAmBwc,YAAYC,MAAQD,e,4UAG3C,CAAAxc,KAAA,SAAgB,IAAI0c,8CAAQ,CACxBC,MAAO,GACPC,OAAQ,GACRC,UAAW7c,KAAK6c,UAChBC,WAAY9c,KAAK8c,cAGrBnd,SAASod,KAAKC,YAAYhd,KAAKoc,QAAQC,QAG3CY,cAAcN,MAAOC,OAAQM,MACzBld,KAAKoc,QAAQe,QAAQR,MAAOC,OAAQM,MAGxCE,KAAKpI,EAAGC,EAAGoI,KAAMC,IAAM,UAAWC,IAAM,OAAQC,IAC5C,MAAMlV,OAAS,sBAAAtI,KAAA,eAAmByd,MAAMC,UAAUL,MAElDrd,KAAKoc,QAAQgB,KAAKpI,EAAGC,EAAG3M,OAAQgV,IAAKC,IAAKC,IAG9CG,iBAAiBC,MACb,MAAqB,GAAdA,KAAK/b,OAGhBgc,SAAS7I,EAAGC,EAAG2I,KAAMN,IAAM,UAAWC,IAAM,OAAQC,IAChD,IAAK,IAAI5b,EAAI,EAAGA,EAAIgc,KAAK/b,OAAQD,IAAK,CAClC,MAAM0G,OAAS,sBAAAtI,KAAA,eAAmB8d,KAAKJ,UAAUE,KAAKG,OAAOnc,IAE7D5B,KAAKoc,QAAQgB,KAAKpI,EAAI,GAAMpT,EAAGqT,EAAG3M,OAAQgV,IAAKC,IAAKC,KAI5DQ,eAAe/I,EAAG2I,KAAMN,IAAM,UAAWC,IAAM,OAAQC,IACnD,MAAM3O,IAAM7O,KAAK2d,iBAAiBC,MAElC5d,KAAK6d,SACD1R,KAAKwG,MAAM3S,KAAKpB,KAAK2a,OAAOoD,MAAQ9N,KAAO,GAC3CoG,EACA2I,KACAN,IACAC,IACAC,IAIRS,QACIje,KAAKoc,QAAQ6B,QAGjBC,UAAUlJ,EAAGC,EAAG0H,MAAOC,QACnB5c,KAAKoc,QAAQ8B,UAAUlJ,EAAGC,EAAG0H,MAAOC,QAGxCuB,SAASC,IAAKC,KAIV,MAAO,CAAErJ,EAHC7I,KAAKmS,MAAMF,IAAMpe,KAAK6c,WAGpB5H,EAFF9I,KAAKmS,MAAMD,IAAMre,KAAK8c,aAKpCb,SACIjc,KAAKoc,QAAQH,Y,mNCtFN,MAAME,QAGjB,WACI,O,gOAAA,CAAOnc,KAAP,OAGJyY,YAAY7Z,MAAM,2C,4UACd,CAAAoB,KAAA,MAAapB,MAGjB2f,aACAC,sB,+ZCVW,MAAM9B,QAWjBjE,aAAY,oCAA0C,gLAN/C,GAM+C,0JAFzC,WAGTzY,KAAK6c,UAAYA,UACjB7c,KAAK8c,WAAaA,WAElB9c,KAAKye,MAAQ,IAAIC,iDAAa,EAAR/B,MAAWC,QAAQ,IAAM,OAC/C5c,KAAKye,MAAME,iBAAkB,EAE7B3e,KAAKqc,OAAS1c,SAASif,cAAc,UACrC5e,KAAKkB,IAAMlB,KAAKqc,OAAOwC,WAAW,KAAM,CAAEC,OAAO,IACjD9e,KAAKkB,IAAI6d,yBAA2B,mBAEpC/e,KAAKkB,IAAI4c,KAAT,UAAmB9d,KAAK8c,WAAxB,gBACA9c,KAAKkB,IAAI8d,aAAe,MAExBhf,KAAKmd,QAAQR,MAAOC,QAGxBO,QAAQR,MAAOC,OAAQM,MACnBld,KAAK2c,MAAQA,MACb3c,KAAK4c,OAASA,OACd5c,KAAKkd,KAAOA,KAEZ,MAAM+B,QAAUjf,KAAK6c,UAAY7c,KAAK2c,MAChCuC,SAAWlf,KAAK8c,WAAa9c,KAAK4c,OAExC5c,KAAKqc,OAAO8C,MAAMC,QAAlB,iBAAsCH,QAAtC,uBAA4DC,SAA5D,gCAA4Flf,KAAKkd,KAAjG,KACAld,KAAKqc,OAAOM,MAAQsC,QACpBjf,KAAKqc,OAAOO,OAASsC,SAErBlf,KAAKye,MAAMY,eAAuB,EAAR1C,MAAWC,QAGzCQ,KAAKpI,EAAGC,EAAG3M,OAAQgV,IAAKC,IAAKC,IACzBxd,KAAKye,MAAMa,IAAQ,EAAJtK,EAAOC,EAAG,CACrBhW,IAAKqJ,OAAOiX,SAASjC,IAAKC,KAC1BZ,MAAOrU,OAAOqU,MACdC,OAAQtU,OAAOsU,OACfY,GACAxI,EACAC,IAIRgJ,QACIje,KAAKkB,IAAIse,UAAYxf,KAAKyf,WAC1Bzf,KAAKkB,IAAIwe,SACL,EACA,EACA1f,KAAK6c,UAAY7c,KAAK2c,MACtB3c,KAAK8c,WAAa9c,KAAK4c,QAE3B5c,KAAKye,MAAMR,QAGfC,UAAUlJ,EAAGC,EAAG0H,MAAOC,QACnB5c,KAAKkB,IAAIse,UAAYxf,KAAKyf,WAC1Bzf,KAAKkB,IAAIwe,SACL1K,EAAIhV,KAAK6c,UACT5H,EAAIjV,KAAK8c,WACT9c,KAAK6c,UAAYF,MACjB3c,KAAK8c,WAAaF,QAGtB,MAAM+C,QAAc,EAAJ3K,EAEhB,IAAK,IAAIpT,EAAI,EAAGA,EAAI+a,MAAO/a,IACvB,IAAK,IAAIK,EAAI,EAAGA,EAAI2a,OAAQ3a,IAAK,CAC7B,MAAM2d,MAAQD,QAAc,EAAJ/d,EAClBie,MAAQ5K,EAAIhT,EAElBjC,KAAKye,MAAMa,IAAIM,MAAOC,WAAOrX,GAC7BxI,KAAKye,MAAMa,IAAIM,MAAQ,EAAGC,WAAOrX,IAK7CyT,SACIjc,KAAKye,MAAM3L,KACNgN,QAAQC,GAAMA,IACdxM,SAASyM,OACN,MAAMC,OAASD,KAAKhL,EAAIhV,KAAK6c,UACvBqD,OAASF,KAAK/K,EAAIjV,KAAK8c,WAEzBkD,KAAKxC,KACLxd,KAAKkB,IAAIse,UAAYQ,KAAKxC,GAC1Bxd,KAAKkB,IAAIwe,SAASO,OAAQC,OAAQF,KAAKrD,MAAOqD,KAAKpD,SAGnDoD,KAAK/gB,KACLe,KAAKkB,IAAIif,UAAUH,KAAK/gB,IAAKghB,OAAQC,c,qnBCtG1C,MAAMxB,KAOjB,YACI,OAAO1e,KAAKogB,OAGhB,aACI,OAAOpgB,KAAKqgB,QAGhB,WACI,OAAOrgB,KAAKogB,OAASpgB,KAAKqgB,QAG9B5H,YAAYkE,MAAOC,OAAQ0D,sBAAwB,KAAM,OAAM,8BAlBtD,GAkBsD,+BAjBrD,GAiBqD,4BAhBxD,IAgBwD,wCAf7C,GAe6C,mDAdtC,IAAM,OAe3BtgB,KAAKogB,OAASzD,MACd3c,KAAKqgB,QAAUzD,O,4UACf,CAAA5c,KAAA,uBAA8BsgB,uBAE9BtgB,KAAKie,QAGTsC,IAAIvL,EAAGC,GACH,OAAOA,EAAIjV,KAAKogB,OAASpL,EAG7BwL,MAAMD,KACF,MAAO,CACHvL,EAAG7I,KAAKmS,MAAMiC,IAAMvgB,KAAKogB,QACzBnL,EAAG9I,KAAKmS,MAAMiC,IAAMvgB,KAAKogB,SAIjCnC,QACIje,KAAK8S,KAAO,GACZ,IAAK,IAAIlR,EAAI,EAAGA,EAAI5B,KAAKygB,KAAM7e,IAAK,CAChC,MAAM,KAAW5B,KAAKwgB,MAAM5e,GAE5B5B,KAAK8S,KAAKlR,GAAV,sBAAe5B,KAAf,6BAAeA,KAA4BgV,EAAGC,IAItDqK,IAAItK,EAAGC,EAAGyL,OACN,GAAI1gB,KAAK2gB,cAAc3L,EAAGC,GAMtB,YALKjV,KAAK2e,iBACNnY,QAAQC,KAAR,mDACgDuO,EADhD,aACsDC,EADtD,sBACqEyL,SAM7E,MAAMH,IAAMvgB,KAAKugB,IAAIvL,EAAGC,GAExBjV,KAAK8S,KAAKyN,KAAOG,MAGrBE,IAAI5L,EAAGC,GACH,OAAIjV,KAAK2gB,cAAc3L,EAAGC,GACtB,sBAAOjV,KAAP,6BAAOA,MAGJA,KAAK8S,KAAK9S,KAAKugB,IAAIvL,EAAGC,IAGjC0L,cAAc3L,EAAGC,GACb,OAAOD,EAAI,GAAKC,EAAI,GAAKD,GAAKhV,KAAKogB,QAAUnL,GAAKjV,KAAK4c,OAG3DiE,aAAa7L,EAAGC,GACZ,MAAO,CACHjV,KAAK4gB,IAAI5L,EAAI,EAAGC,EAAI,GACpBjV,KAAK4gB,IAAI5L,EAAGC,EAAI,GAChBjV,KAAK4gB,IAAI5L,EAAI,EAAGC,EAAI,GACpBjV,KAAK4gB,IAAI5L,EAAI,EAAGC,GAChBjV,KAAK4gB,IAAI5L,EAAI,EAAGC,GAChBjV,KAAK4gB,IAAI5L,EAAI,EAAGC,EAAI,GACpBjV,KAAK4gB,IAAI5L,EAAGC,EAAI,GAChBjV,KAAK4gB,IAAI5L,EAAI,EAAGC,EAAI,IAI5BoK,eAAe1C,MAAOC,QAClB5c,KAAKogB,OAASzD,MACd3c,KAAKqgB,QAAUzD,OACf5c,KAAKie,W,qRCxFb,sCACI,MAAM6C,UAAYnhB,SAASohB,eAAe,qBACpCC,UAAYrhB,SAASohB,eAAe,oBAE1C,MAAO,CACH,IAAIE,kDAAY,QAASH,WACzB,IAAIG,kDAAY,OAAQD,c,ynBCLjB,MAAMC,YAKjB,WACI,6BAAOjhB,KAAP,OAGJ,YACI,OAAOA,KAAKkhB,MAAMvE,MAGtB,aACI,OAAO3c,KAAKkhB,MAAMtE,OAGtB,mBACI,OAAO,GAGX,mBACI,OAAO,GAGXnE,YAAYgE,KAAMyE,OAAO,kCAxBjB,OAwBiB,0CAvBT,MAuBS,qCAtBd,K,4UAuBP,CAAAlhB,KAAA,MAAayc,MACbzc,KAAKkhB,MAAQA,MAEblhB,KAAKmhB,YAAcnhB,KAAKkhB,MAAMvE,MAAQ3c,KAAKohB,aAC3CphB,KAAKqhB,aAAerhB,KAAKkhB,MAAMtE,OAAS5c,KAAKshB,aAE7CC,qDAAc,CAACC,IAAK5f,KAChB4f,IAAIjO,SAAQ,CAACkO,MAAOxf,KAChB,sBAAAjC,KAAA,UAAcyhB,OAAS,IAAIC,6CAAOD,MAAOzhB,KAAMiC,EAAGL,SAK9D8b,UAAU+D,OACN,OAAI,sBAAAzhB,KAAA,UAAcyhB,OACP,sBAAAzhB,KAAA,UAAcyhB,OAGlB,sBAAAzhB,KAAA,gCAAcA,KAAd,mB,gNC9Cf,kCACI,CAAC,MAAO,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC9E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC7E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,KAC7E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,I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","file":"main.851d5667118b103142c0.js","sourcesContent":["var getProto = Object.getPrototypeOf ? (obj) => Object.getPrototypeOf(obj) : (obj) => obj.__proto__;\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(key => def[key] = () => value[key]);\n\t}\n\tdef['default'] = () => value;\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","import { loadImages } from './utils/ImageLoader';\nimport { Howler } from 'howler';\n\nloadImages().then(() => {\n    const { game } = require('./core/Game');\n\n    window.game = game;\n    window.ecs = game.ecs;\n\n    game.start();\n});\n\nHowler.volume(0);\n","const loadImage = (img) =>\n    new Promise((resolve, reject) => {\n        if (img.complete) {\n            resolve();\n        }\n\n        img.addEventListener('load', () => {\n            resolve();\n        });\n\n        img.addEventListener('error', (error) => {\n            reject(error);\n        });\n    });\n\nexport const loadImages = () => {\n    const imgs = Array.from(document.querySelectorAll('img'));\n\n    return Promise.all(imgs.map(loadImage));\n};\n","/*!\n *  howler.js v2.2.1\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Handle stopping all sounds globally.\n     */\n    stop: function() {\n      var self = this || Howler;\n\n      // Loop through all Howls and stop them.\n      for (var i=0; i<self._howls.length; i++) {\n        self._howls[i].stop();\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var checkOpera = self._navigator && self._navigator.userAgent.match(/OPR\\/([0-6].)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!(audioTest.canPlayType('audio/wav; codecs=\"1\"') || audioTest.canPlayType('audio/wav')).replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        m4b: !!(audioTest.canPlayType('audio/x-m4b;') || audioTest.canPlayType('audio/m4b;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        webm: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      if (self._audioUnlocked || !self.ctx) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        while (self._html5AudioPool.length < self.html5PoolSize) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n            break;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      //.Check if the audio is locked and throw a warning.\n      var testPlay = new Audio().play();\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay.catch(function() {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n\n        // Handle updating the state of the audio context after suspending.\n        var handleSuspension = function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        };\n\n        // Either the state gets suspended or it is interrupted.\n        // Either way, we need to update the state to suspended.\n        self.ctx.suspend().then(handleSuspension, handleSuspension);\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self.ctx.state !== 'interrupted' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended' || self.state === 'running' && self.ctx.state === 'interrupted') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean' || o.preload === 'metadata') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhr = {\n        method: o.xhr && o.xhr.method ? o.xhr.method : 'GET',\n        headers: o.xhr && o.xhr.headers ? o.xhr.headers : null,\n        withCredentials: o.xhr && o.xhr.withCredentials ? o.xhr.withCredentials : false,\n      };\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload && self._preload !== 'none') {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running' && Howler.ctx.state !== 'interrupted') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n\n          var listener = function() {\n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = Math.min(Math.max(0, parseFloat(from)), 1);\n      to = Math.min(Math.max(0, parseFloat(to)), 1);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Make sure the volume is in the right bounds.\n        if (diff < 0) {\n          vol = Math.max(to, vol);\n        } else {\n          vol = Math.min(to, vol);\n        }\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return self;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (typeof seek === 'number' && (self._state !== 'loaded' || self._playLock)) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            self._emit('seek', id);\n\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n          sounds[i]._node.removeEventListener('ended', sounds[i]._endFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else if (!Howler.noAudio) {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Listen for the 'ended' event on the sound to account for edge-case where\n        // a finite sound has a duration of Infinity.\n        self._endFn = self._endListener.bind(self);\n        self._node.addEventListener('ended', self._endFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = parent._preload === true ? 'auto' : parent._preload;\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    },\n\n    /**\n     * HTML5 Audio ended listener callback.\n     */\n    _endListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Only handle the `ended`` event if the duration is Infinity.\n      if (parent._duration === Infinity) {\n        // Update the parent duration to match the real audio duration.\n        // Round up the duration to account for the lower precision in HTML5 Audio.\n        parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n        // Update the sprite that corresponds to the real duration.\n        if (parent._sprite.__default[1] === Infinity) {\n          parent._sprite.__default[1] = parent._duration * 1000;\n        }\n\n        // Run the regular ended method.\n        parent._ended(self);\n      }\n\n      // Clear the event listener since the duration is now correct.\n      self._node.removeEventListener('ended', self._endFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open(self._xhr.method, url, true);\n      xhr.withCredentials = self._xhr.withCredentials;\n      xhr.responseType = 'arraybuffer';\n\n      // Apply any custom headers to the request.\n      if (self._xhr.headers) {\n        Object.keys(self._xhr.headers).forEach(function(key) {\n          xhr.setRequestHeader(key, self._xhr.headers[key]);\n        });\n      }\n\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  }\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Add to global in Node.js (for testing, etc).\n  if (typeof global !== 'undefined') {\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  } else if (typeof window !== 'undefined') {  // Define globally in case AMD is not available or unused.\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.2.1\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n      }\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upX.setTargetAtTime(xUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upY.setTargetAtTime(yUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upZ.setTargetAtTime(zUp, Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n      }\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              if (typeof sound._panner.positionX !== 'undefined') {\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\n              } else {\n                sound._panner.setPosition(pan, 0, 0);\n              }\n            } else {\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.positionX !== 'undefined') {\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setPosition(x, y, z);\n            }\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.orientationX !== 'undefined') {\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Update the panner values or create a new panner if none exists.\n        var panner = sound._panner;\n        if (panner) {\n          panner.coneInnerAngle = pa.coneInnerAngle;\n          panner.coneOuterAngle = pa.coneOuterAngle;\n          panner.coneOuterGain = pa.coneOuterGain;\n          panner.distanceModel = pa.distanceModel;\n          panner.maxDistance = pa.maxDistance;\n          panner.refDistance = pa.refDistance;\n          panner.rolloffFactor = pa.rolloffFactor;\n          panner.panningModel = pa.panningModel;\n        } else {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      } else if (self._panner) {\n        // Disconnect the panner.\n        self._panner.disconnect(0);\n        self._panner = undefined;\n        parent._refreshBuffer(self);\n      }\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n\n      if (typeof sound._panner.positionX !== 'undefined') {\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      }\n\n      if (typeof sound._panner.orientationX !== 'undefined') {\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n      }\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id, true);\n    }\n  };\n})();\n","import Renderer from './rendering/RenderManager';\nimport InputController from './input/InputController';\nimport ActionSystem from '../systems/ActionSystem';\nimport RenderSystem from '../systems/RenderSystem';\nimport UISystem from '../systems/UISystem';\nimport MouseManager from './input/MouseManager';\nimport CommandManager from './input/CommandManager';\nimport ScreenManager from './screens/ScreenManager';\nimport PlayerManager from './PlayerManager';\nimport ECS from '../ecs';\nimport GameStateManager from './GameStateManager';\nimport ClockManager from './ClockManager';\nimport CursorSystem from '../systems/CursorSystem';\nimport MapManager from './MapManager';\nimport FOVSystem from '../systems/FOVSystem';\nimport DeathSystem from '../systems/DeathSystem';\nimport ParticleSystem from '../systems/ParticleSystem';\nimport FactionManager from './FactionManager';\nimport CameraManager from './CameraManager';\nimport FPSMonitoringSystem from '../systems/FPSMonitoringSystem';\nimport { WorldManager } from './WorldManager';\nimport ConsoleManager from './ConsoleManager';\nimport DestroySystem from '../systems/DestroySystem';\nimport MusicManager from './MusicManager';\nimport StatusSystem from '../systems/StatusSystem';\nimport LiquidSystem from '../systems/LiquidSystem';\nimport TrapSystem from '../systems/TrapSystem';\n\nexport default class Game {\n    #lastUpdate;\n\n    get ecs() {\n        return this.engine.engine;\n    }\n\n    constructor() {\n        this.engine = new ECS(this);\n        this.music = new MusicManager(this);\n        this.mouse = new MouseManager(this);\n        this.clock = new ClockManager(this);\n        this.renderer = new Renderer(this);\n        this.state = new GameStateManager(this);\n        this.world = new WorldManager(this);\n        this.map = new MapManager(this);\n        this.camera = new CameraManager(this);\n        this.factions = new FactionManager(this);\n        this.player = new PlayerManager(this);\n        this.commands = new CommandManager(this);\n        this.screens = new ScreenManager(this);\n        this.input = new InputController(this);\n        this.console = new ConsoleManager(this);\n\n        this.actionSystem = new ActionSystem(this);\n        this.deathSystem = new DeathSystem(this);\n        this.statusSystem = new StatusSystem(this);\n        this.FOVSystem = new FOVSystem(this);\n        this.renderSystem = new RenderSystem(this);\n        this.UISystem = new UISystem(this);\n        this.cursor = new CursorSystem(this);\n        this.particles = new ParticleSystem(this);\n        this.fps = new FPSMonitoringSystem(this);\n        this.destroySystem = new DestroySystem(this);\n        this.liquidSystem = new LiquidSystem(this);\n        this.trapSystem = new TrapSystem(this);\n    }\n\n    start() {\n        this.#lastUpdate = Date.now();\n        this.boundLoop = this.loop.bind(this);\n        requestAnimationFrame(this.loop.bind(this));\n    }\n\n    updateAdventureSystems(dt) {\n        for (let i = 0; i < 20; i++) {\n            this.clock.update(dt);\n            const playerTurn = this.actionSystem.update(dt);\n\n            if (playerTurn) {\n                this.updatePlayerSystems(dt);\n            }\n\n            this.liquidSystem.update(dt);\n            this.trapSystem.update(dt);\n            this.statusSystem.update(dt);\n            this.deathSystem.update(dt);\n            this.destroySystem.update(dt);\n\n            if (playerTurn) {\n                return;\n            }\n        }\n    }\n\n    updatePlayerSystems(dt) {\n        this.FOVSystem.update(dt);\n        this.renderSystem.update(dt);\n        this.particles.update(dt);\n        this.UISystem.update(dt);\n        this.map.update(dt);\n        this.console.render(dt);\n    }\n\n    loop(t) {\n        const now = Date.now();\n        const dt = now - this.#lastUpdate;\n\n        this.screens.update(dt);\n        this.fps.update(dt);\n        this.renderer.render();\n\n        this.#lastUpdate = now;\n\n        requestAnimationFrame(this.boundLoop);\n    }\n}\n\nexport const game = new Game();\n","import Manager from '../Manager';\nimport Display from './Display';\nimport spritesheets from './spritesheets';\n\nexport default class Renderer extends Manager {\n    tileWidth = 16;\n    tileHeight = 16;\n    #spritesheets = {};\n    #display = null;\n\n    get display() {\n        return this.#display;\n    }\n\n    get canvas() {\n        return this.display.canvas;\n    }\n\n    constructor(game) {\n        super(game);\n\n        spritesheets().forEach((spritesheet) => {\n            this.#spritesheets[spritesheet.name] = spritesheet;\n        });\n\n        this.#display = new Display({\n            width: 20,\n            height: 20,\n            tileWidth: this.tileWidth,\n            tileHeight: this.tileHeight,\n        });\n\n        document.body.appendChild(this.display.canvas);\n    }\n\n    resizeDisplay(width, height, zoom) {\n        this.display.setSize(width, height, zoom);\n    }\n\n    draw(x, y, char, fg1 = '#d0d6d8', fg2 = '#333', bg) {\n        const sprite = this.#spritesheets.tiles.getSprite(char);\n\n        this.display.draw(x, y, sprite, fg1, fg2, bg);\n    }\n\n    computeTextWidth(text) {\n        return text.length * 0.5;\n    }\n\n    drawText(x, y, text, fg1 = '#d0d6d8', fg2 = '#333', bg) {\n        for (let i = 0; i < text.length; i++) {\n            const sprite = this.#spritesheets.font.getSprite(text.charAt(i));\n\n            this.display.draw(x + 0.5 * i, y, sprite, fg1, fg2, bg);\n        }\n    }\n\n    drawTextCenter(y, text, fg1 = '#d0d6d8', fg2 = '#333', bg) {\n        const len = this.computeTextWidth(text);\n\n        this.drawText(\n            Math.ceil((this.game.camera.width - len) / 2),\n            y,\n            text,\n            fg1,\n            fg2,\n            bg\n        );\n    }\n\n    clear() {\n        this.display.clear();\n    }\n\n    clearArea(x, y, width, height) {\n        this.display.clearArea(x, y, width, height);\n    }\n\n    pxToTile(xPx, yPx) {\n        const x = Math.trunc(xPx / this.tileWidth);\n        const y = Math.trunc(yPx / this.tileHeight);\n\n        return { x, y };\n    }\n\n    render() {\n        this.display.render();\n    }\n}\n","export default class Manager {\n    #game;\n\n    get game() {\n        return this.#game;\n    }\n\n    constructor(game) {\n        this.#game = game;\n    }\n\n    onNewGame() {}\n    getSaveGameData() {}\n}\n","import Grid from '../../utils/Grid';\n\nexport default class Display {\n    ctx;\n    canvas;\n    width;\n    height;\n    zoom = 1;\n    tileWidth;\n    tileHeight;\n    cells;\n    clearColor = '#141a23';\n\n    constructor({ width, height, tileWidth, tileHeight }) {\n        this.tileWidth = tileWidth;\n        this.tileHeight = tileHeight;\n\n        this.cells = new Grid(width * 2, height, () => null);\n        this.cells.suppressOOBWarn = true;\n\n        this.canvas = document.createElement('canvas');\n        this.ctx = this.canvas.getContext('2d', { alpha: false });\n        this.ctx.globalCompositeOperation = 'destination-over';\n\n        this.ctx.font = `${this.tileHeight}px monospace`;\n        this.ctx.textBaseline = 'top';\n\n        this.setSize(width, height);\n    }\n\n    setSize(width, height, zoom) {\n        this.width = width;\n        this.height = height;\n        this.zoom = zoom;\n\n        const widthPx = this.tileWidth * this.width;\n        const heightPx = this.tileHeight * this.height;\n\n        this.canvas.style.cssText = `width: ${widthPx}px; height: ${heightPx}px; transform: scale(${this.zoom})`;\n        this.canvas.width = widthPx;\n        this.canvas.height = heightPx;\n\n        this.cells.clearAndResize(width * 2, height);\n    }\n\n    draw(x, y, sprite, fg1, fg2, bg) {\n        this.cells.set(x * 2, y, {\n            img: sprite.colorize(fg1, fg2),\n            width: sprite.width,\n            height: sprite.height,\n            bg,\n            x,\n            y,\n        });\n    }\n\n    clear() {\n        this.ctx.fillStyle = this.clearColor;\n        this.ctx.fillRect(\n            0,\n            0,\n            this.tileWidth * this.width,\n            this.tileHeight * this.height\n        );\n        this.cells.clear();\n    }\n\n    clearArea(x, y, width, height) {\n        this.ctx.fillStyle = this.clearColor;\n        this.ctx.fillRect(\n            x * this.tileWidth,\n            y * this.tileHeight,\n            this.tileWidth * width,\n            this.tileHeight * height\n        );\n\n        const offsetX = x * 2;\n\n        for (let i = 0; i < width; i++) {\n            for (let j = 0; j < height; j++) {\n                const cellX = offsetX + i * 2;\n                const cellY = y + j;\n\n                this.cells.set(cellX, cellY, undefined);\n                this.cells.set(cellX + 1, cellY, undefined);\n            }\n        }\n    }\n\n    render() {\n        this.cells.data\n            .filter((c) => c)\n            .forEach((cell) => {\n                const pixelX = cell.x * this.tileWidth;\n                const pixelY = cell.y * this.tileHeight;\n\n                if (cell.bg) {\n                    this.ctx.fillStyle = cell.bg;\n                    this.ctx.fillRect(pixelX, pixelY, cell.width, cell.height);\n                }\n\n                if (cell.img) {\n                    this.ctx.drawImage(cell.img, pixelX, pixelY);\n                }\n            });\n    }\n}\n","export default class Grid {\n    _width = 0;\n    _height = 0;\n    data = [];\n    suppressOOBWarn = false;\n    #defaultValueGenerator = () => null;\n\n    get width() {\n        return this._width;\n    }\n\n    get height() {\n        return this._height;\n    }\n\n    get size() {\n        return this._width * this._height;\n    }\n\n    constructor(width, height, defaultValueGenerator = () => null) {\n        this._width = width;\n        this._height = height;\n        this.#defaultValueGenerator = defaultValueGenerator;\n\n        this.clear();\n    }\n\n    idx(x, y) {\n        return y * this._width + x;\n    }\n\n    coord(idx) {\n        return {\n            x: Math.trunc(idx % this._width),\n            y: Math.trunc(idx / this._width),\n        };\n    }\n\n    clear() {\n        this.data = [];\n        for (let i = 0; i < this.size; i++) {\n            const { x, y } = this.coord(i);\n\n            this.data[i] = this.#defaultValueGenerator(x, y);\n        }\n    }\n\n    set(x, y, value) {\n        if (this.isOutOfBounds(x, y)) {\n            if (!this.suppressOOBWarn) {\n                console.warn(\n                    `Trying to set out-of-bounds coordinates (${x}, ${y}) to value ${value}`\n                );\n            }\n            return;\n        }\n\n        const idx = this.idx(x, y);\n\n        this.data[idx] = value;\n    }\n\n    get(x, y) {\n        if (this.isOutOfBounds(x, y)) {\n            return this.#defaultValueGenerator();\n        }\n\n        return this.data[this.idx(x, y)];\n    }\n\n    isOutOfBounds(x, y) {\n        return x < 0 || y < 0 || x >= this._width || y >= this.height;\n    }\n\n    getNeighbors(x, y) {\n        return [\n            this.get(x - 1, y - 1), // TOP LEFT\n            this.get(x, y - 1), // TOP\n            this.get(x + 1, y - 1), // TOP RIGHT\n            this.get(x - 1, y), // LEFT\n            this.get(x + 1, y), // RIGHT\n            this.get(x - 1, y + 1), // BOTTOM LEFT\n            this.get(x, y + 1), // BOTTOM\n            this.get(x + 1, y + 1), // BOTTOM RIGHT\n        ];\n    }\n\n    clearAndResize(width, height) {\n        this._width = width;\n        this._height = height;\n        this.clear();\n    }\n}\n","import SpriteSheet from './SpriteSheet';\n\nexport default () => {\n    const tileImage = document.getElementById('spritesheet-tiles');\n    const fontImage = document.getElementById('spritesheet-font');\n\n    return [\n        new SpriteSheet('tiles', tileImage),\n        new SpriteSheet('font', fontImage),\n    ];\n};\n","import cp437 from './cp437';\nimport Sprite from './Sprite';\n\nexport default class SpriteSheet {\n    #name = null;\n    #defaultGlyph = '?';\n    #sprites = {};\n\n    get name() {\n        return this.#name;\n    }\n\n    get width() {\n        return this.image.width;\n    }\n\n    get height() {\n        return this.image.height;\n    }\n\n    get spriteCountX() {\n        return 16;\n    }\n\n    get spriteCountY() {\n        return 16;\n    }\n\n    constructor(name, image) {\n        this.#name = name;\n        this.image = image;\n\n        this.spriteWidth = this.image.width / this.spriteCountX;\n        this.spriteHeight = this.image.height / this.spriteCountY;\n\n        cp437.forEach((row, i) => {\n            row.forEach((glyph, j) => {\n                this.#sprites[glyph] = new Sprite(glyph, this, j, i);\n            });\n        });\n    }\n\n    getSprite(glyph) {\n        if (this.#sprites[glyph]) {\n            return this.#sprites[glyph];\n        }\n\n        return this.#sprites[this.#defaultGlyph];\n    }\n}\n","// prettier-ignore\nexport default [\n    ['NUL', '☺', '☻', '♥', '♦', '♣', '♠', '•', '◘', '○', '◙', '♂', '♀', '♪', '♫', '☼'],\n    ['►', '◄', '↕', '‼', '¶', '§', '▬', '↨', '↑', '↓', '→', '←', '∟', '↔', '▲', '▼'],\n    [' ', '!', '\"', '#', '$', '%', '&', '\\'', '(', ')', '*', '+', ',', '-', '.', '/'],\n    ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', ':', ';', '<', '=', '>', '?'],\n    ['@', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O'],\n    ['P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '[', '\\\\', ']', '^', '_'],\n    ['`', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o'],\n    ['p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '{', '|', '}', '~', '⌂'],\n    ['Ç', 'ü', 'é', 'â', 'ä', 'à', 'å', 'ç', 'ê', 'ë', 'è', 'ï', 'î', 'ì', 'Ä', 'Å'],\n    ['É', 'æ', 'Æ', 'ô', 'ö', 'ò', 'û', 'ù', 'ÿ', 'Ö', 'Ü', '¢', '£', '¥', '₧', 'ƒ'],\n    ['á', 'í', 'ó', 'ú', 'ñ', 'Ñ', 'ª', 'º', '¿', '⌐', '¬', '½', '¼', '¡', '«', '»'],\n    ['░', '▒', '▓', '│', '┤', '╡', '╢', '╖', '╕', '╣', '║', '╗', '╝', '╜', '╛', '┐'],\n    ['└', '┴', '┬', '├', '─', '┼', '╞', '╟', '╚', '╔', '╩', '╦', '╠', '═', '╬', '╧'],\n    ['╨', '╤', '╥', '╙', '╘', '╒', '╓', '╫', '╪', '┘', '┌', '█', '▄', '▌', '▐', '▀'],\n    ['α', 'ß', 'Γ', 'π', 'Σ', 'σ', 'µ', 'τ', 'Φ', 'Θ', 'Ω', 'δ', '∞', 'φ', 'ε', '∩'],\n    ['≡', '±', '≥', '≤', '⌠', '⌡', '÷', '≈', '°', '∙', '·', '√', 'ⁿ', '²', '■', 'NBSP'],\n];\n","import { parseColor } from '../../utils/ColorParser';\n\nconst isWhite = (r, g, b) => r === 255 && g === 255 && b === 255;\nconst isBlack = (r, g, b) => r === 0 && g === 0 && b === 0;\n\nexport default class Sprite {\n    #ctx = null;\n    #glyph = null;\n    #sheet = null;\n    #x = null;\n    #y = null;\n    _cache = {};\n\n    get glyph() {\n        return this.#glyph;\n    }\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get sheet() {\n        return this.#sheet;\n    }\n\n    get image() {\n        return this.sheet.image;\n    }\n\n    get sourceX() {\n        return this.sheet.spriteWidth * this.x;\n    }\n\n    get sourceY() {\n        return this.sheet.spriteHeight * this.y;\n    }\n\n    get width() {\n        return this.sheet.spriteWidth;\n    }\n\n    get height() {\n        return this.sheet.spriteHeight;\n    }\n\n    constructor(glyph, sheet, x, y) {\n        this.#glyph = glyph;\n        this.#sheet = sheet;\n        this.#x = x;\n        this.#y = y;\n\n        const canvas = document.createElement('canvas');\n\n        canvas.width = this.width;\n        canvas.height = this.height;\n\n        this.#ctx = canvas.getContext('2d');\n\n        this.#ctx.drawImage(\n            this.sheet.image,\n            this.sourceX,\n            this.sourceY,\n            this.width,\n            this.height,\n            0,\n            0,\n            this.width,\n            this.height\n        );\n    }\n\n    colorize(primaryCss, secondaryCss) {\n        const primary = parseColor(primaryCss);\n        const secondary = parseColor(secondaryCss);\n\n        const key = `${primary.key}-${secondary.key}`;\n\n        if (this._cache.hasOwnProperty(key)) {\n            return this._cache[key];\n        }\n\n        const pixels = this.#ctx.getImageData(0, 0, this.width, this.height);\n\n        for (let i = 0; i < pixels.data.length; i += 4) {\n            const r = pixels.data[i];\n            const g = pixels.data[i + 1];\n            const b = pixels.data[i + 2];\n\n            if (isBlack(r, g, b)) {\n                pixels.data[i] = primary[0];\n                pixels.data[i + 1] = primary[1];\n                pixels.data[i + 2] = primary[2];\n                pixels.data[i + 4] = primary[3];\n            } else {\n                pixels.data[i] = secondary[0];\n                pixels.data[i + 1] = secondary[1];\n                pixels.data[i + 2] = secondary[2];\n                pixels.data[i + 4] = secondary[3];\n            }\n        }\n\n        const cvs = document.createElement('canvas');\n\n        cvs.width = this.width;\n        cvs.height = this.height;\n\n        cvs.getContext('2d').putImageData(pixels, 0, 0);\n\n        this._cache[key] = cvs;\n\n        return cvs;\n    }\n}\n","import colorParse from 'color-parse';\n\nconst cache = {};\n\nexport const parseColor = (colorStr) => {\n    if (!cache.hasOwnProperty(colorStr)) {\n        const parsed = colorParse(colorStr).values;\n        const data = [parsed[0], parsed[1], parsed[2], parsed.alpha];\n\n        data.key = `${data[0]},${data[1]},${data[2]},${data[3]}`;\n\n        cache[colorStr] = data;\n    }\n\n    return cache[colorStr];\n};\n","/**\r\n * @module color-parse\r\n */\r\nimport names from 'color-name'\r\n\r\nexport default parse\r\n\r\n/**\r\n * Base hues\r\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\r\n */\r\n//FIXME: use external hue detector\r\nvar baseHues = {\r\n\tred: 0,\r\n\torange: 60,\r\n\tyellow: 120,\r\n\tgreen: 180,\r\n\tblue: 240,\r\n\tpurple: 300\r\n}\r\n\r\n/**\r\n * Parse color from the string passed\r\n *\r\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\r\n */\r\nfunction parse (cstr) {\r\n\tvar m, parts = [], alpha = 1, space\r\n\r\n\tif (typeof cstr === 'string') {\r\n\t\t//keyword\r\n\t\tif (names[cstr]) {\r\n\t\t\tparts = names[cstr].slice()\r\n\t\t\tspace = 'rgb'\r\n\t\t}\r\n\r\n\t\t//reserved words\r\n\t\telse if (cstr === 'transparent') {\r\n\t\t\talpha = 0\r\n\t\t\tspace = 'rgb'\r\n\t\t\tparts = [0,0,0]\r\n\t\t}\r\n\r\n\t\t//hex\r\n\t\telse if (/^#[A-Fa-f0-9]+$/.test(cstr)) {\r\n\t\t\tvar base = cstr.slice(1)\r\n\t\t\tvar size = base.length\r\n\t\t\tvar isShort = size <= 4\r\n\t\t\talpha = 1\r\n\r\n\t\t\tif (isShort) {\r\n\t\t\t\tparts = [\r\n\t\t\t\t\tparseInt(base[0] + base[0], 16),\r\n\t\t\t\t\tparseInt(base[1] + base[1], 16),\r\n\t\t\t\t\tparseInt(base[2] + base[2], 16)\r\n\t\t\t\t]\r\n\t\t\t\tif (size === 4) {\r\n\t\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tparts = [\r\n\t\t\t\t\tparseInt(base[0] + base[1], 16),\r\n\t\t\t\t\tparseInt(base[2] + base[3], 16),\r\n\t\t\t\t\tparseInt(base[4] + base[5], 16)\r\n\t\t\t\t]\r\n\t\t\t\tif (size === 8) {\r\n\t\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!parts[0]) parts[0] = 0\r\n\t\t\tif (!parts[1]) parts[1] = 0\r\n\t\t\tif (!parts[2]) parts[2] = 0\r\n\r\n\t\t\tspace = 'rgb'\r\n\t\t}\r\n\r\n\t\t//color space\r\n\t\telse if (m = /^((?:rgb|hs[lvb]|hwb|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms)a?)\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\r\n\t\t\tvar name = m[1]\r\n\t\t\tvar isRGB = name === 'rgb'\r\n\t\t\tvar base = name.replace(/a$/, '')\r\n\t\t\tspace = base\r\n\t\t\tvar size = base === 'cmyk' ? 4 : base === 'gray' ? 1 : 3\r\n\t\t\tparts = m[2].trim()\r\n\t\t\t\t.split(/\\s*[,\\/]\\s*|\\s+/)\r\n\t\t\t\t.map(function (x, i) {\r\n\t\t\t\t\t//<percentage>\r\n\t\t\t\t\tif (/%$/.test(x)) {\r\n\t\t\t\t\t\t//alpha\r\n\t\t\t\t\t\tif (i === size)\treturn parseFloat(x) / 100\r\n\t\t\t\t\t\t//rgb\r\n\t\t\t\t\t\tif (base === 'rgb') return parseFloat(x) * 255 / 100\r\n\t\t\t\t\t\treturn parseFloat(x)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//hue\r\n\t\t\t\t\telse if (base[i] === 'h') {\r\n\t\t\t\t\t\t//<deg>\r\n\t\t\t\t\t\tif (/deg$/.test(x)) {\r\n\t\t\t\t\t\t\treturn parseFloat(x)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//<base-hue>\r\n\t\t\t\t\t\telse if (baseHues[x] !== undefined) {\r\n\t\t\t\t\t\t\treturn baseHues[x]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn parseFloat(x)\r\n\t\t\t\t})\r\n\r\n\t\t\tif (name === base) parts.push(1)\r\n\t\t\talpha = (isRGB) ? 1 : (parts[size] === undefined) ? 1 : parts[size]\r\n\t\t\tparts = parts.slice(0, size)\r\n\t\t}\r\n\r\n\t\t//named channels case\r\n\t\telse if (cstr.length > 10 && /[0-9](?:\\s|\\/)/.test(cstr)) {\r\n\t\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\r\n\t\t\t\treturn parseFloat(value)\r\n\t\t\t})\r\n\r\n\t\t\tspace = cstr.match(/([a-z])/ig).join('').toLowerCase()\r\n\t\t}\r\n\t}\r\n\r\n\t//numeric case\r\n\telse if (!isNaN(cstr)) {\r\n\t\tspace = 'rgb'\r\n\t\tparts = [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff]\r\n\t}\r\n\r\n\t//array-like\r\n\telse if (Array.isArray(cstr) || cstr.length) {\r\n\t\tparts = [cstr[0], cstr[1], cstr[2]]\r\n\t\tspace = 'rgb'\r\n\t\talpha = cstr.length === 4 ? cstr[3] : 1\r\n\t}\r\n\r\n\t//object case - detects css cases of rgb and hsl\r\n\telse if (cstr instanceof Object) {\r\n\t\tif (cstr.r != null || cstr.red != null || cstr.R != null) {\r\n\t\t\tspace = 'rgb'\r\n\t\t\tparts = [\r\n\t\t\t\tcstr.r || cstr.red || cstr.R || 0,\r\n\t\t\t\tcstr.g || cstr.green || cstr.G || 0,\r\n\t\t\t\tcstr.b || cstr.blue || cstr.B || 0\r\n\t\t\t]\r\n\t\t}\r\n\t\telse {\r\n\t\t\tspace = 'hsl'\r\n\t\t\tparts = [\r\n\t\t\t\tcstr.h || cstr.hue || cstr.H || 0,\r\n\t\t\t\tcstr.s || cstr.saturation || cstr.S || 0,\r\n\t\t\t\tcstr.l || cstr.lightness || cstr.L || cstr.b || cstr.brightness\r\n\t\t\t]\r\n\t\t}\r\n\r\n\t\talpha = cstr.a || cstr.alpha || cstr.opacity || 1\r\n\r\n\t\tif (cstr.opacity != null) alpha /= 100\r\n\t}\r\n\r\n\treturn {\r\n\t\tspace: space,\r\n\t\tvalues: parts,\r\n\t\talpha: alpha\r\n\t}\r\n}\r\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","import InputKeyboardEvent from './events/InputKeyboardEvent';\r\nimport InputMouseEvent from './events/InputMouseEvent';\r\nimport Manager from '../Manager';\r\n\r\nexport default class InputController extends Manager {\r\n    constructor(game) {\r\n        super(game);\r\n        document.addEventListener('keydown', this.onKeydown.bind(this));\r\n\r\n        const container = this.game.renderer.canvas;\r\n\r\n        container.addEventListener('click', this.onMouseClick.bind(this));\r\n        container.addEventListener('mousemove', this.onMouseMove.bind(this));\r\n        container.addEventListener('mouseenter', this.onMouseEnter.bind(this));\r\n        container.addEventListener('mouseleave', this.onMouseLeave.bind(this));\r\n    }\r\n\r\n    onKeydown(e) {\r\n        const evt = new InputKeyboardEvent({\r\n            key: e.keyCode,\r\n            shift: e.shiftKey,\r\n            ctrl: e.ctrlKey,\r\n            alt: e.altKey,\r\n            meta: e.metaKey,\r\n        });\r\n\r\n        e.preventDefault();\r\n\r\n        this.game.commands.onInputEvent(evt);\r\n    }\r\n\r\n    onMouseClick(e) {\r\n        const xPx = e.offsetX;\r\n        const yPx = e.offsetY;\r\n        const { x, y } = this.game.renderer.pxToTile(xPx, yPx);\r\n\r\n        const evt = new InputMouseEvent({\r\n            key: e.button,\r\n            x,\r\n            y,\r\n            shift: e.shiftKey,\r\n            ctrl: e.ctrlKey,\r\n            alt: e.altKey,\r\n            meta: e.metaKey,\r\n            xPx,\r\n            yPx,\r\n        });\r\n\r\n        this.game.commands.onInputEvent(evt);\r\n    }\r\n\r\n    onMouseMove(e) {\r\n        const xPx = e.offsetX;\r\n        const yPx = e.offsetY;\r\n        const { x, y } = this.game.renderer.pxToTile(xPx, yPx);\r\n\r\n        this.game.mouse.updatePosition(x, y);\r\n    }\r\n\r\n    onMouseEnter(e) {\r\n        this.game.mouse.updateMouseEnter();\r\n    }\r\n\r\n    onMouseLeave(e) {\r\n        this.game.mouse.updateMouseLeave();\r\n    }\r\n}\r\n","import InputEvent from './InputEvent';\n\nexport default class InputKeyboardEvent extends InputEvent {}\n","export default class InputEvent {\n    key = false;\n    shift = false;\n    ctrl = false;\n    alt = false;\n    meta = false;\n\n    constructor(data) {\n        this.key = data.key;\n        this.shift = data.shift;\n        this.ctrl = data.ctrl;\n        this.alt = data.alt;\n        this.meta = data.meta;\n    }\n}\n","import InputEvent from './InputEvent';\n\nexport default class InputMouseEvent extends InputEvent {\n    x = false;\n    y = false;\n    tileX = false;\n    tileY = false;\n\n    constructor(data) {\n        super(data);\n        this.x = data.x;\n        this.y = data.y;\n        this.tileX = data.tileX;\n        this.tileY = data.tileY;\n    }\n}\n","import { Actor, IsDead, IsDestroying, IsIncapacitated } from '../ecs/components';\nimport System from './System';\n\nexport default class ActionSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n\n        this.#query = game.ecs.createQuery({\n            all: [Actor],\n            none: [IsDestroying, IsDead, IsIncapacitated],\n        });\n    }\n\n    update(dt) {\n        const entities = this.#query.get();\n        const sorted = Array.from(entities);\n\n        sorted.sort((a, b) => (a.actor.energy < b.actor.energy ? 1 : -1));\n\n        let entity = sorted[0];\n\n        if (entity && !entity.actor.hasEnergy) {\n            this.game.clock.incrementTick(-1 * entity.actor.energy);\n\n            entities.forEach((entity) => {\n                entity.actor.addEnergy(this.game.clock.tickDelta);\n            });\n        }\n\n        while (entity && entity.actor.hasEnergy) {\n            if (entity.isPlayer) {\n                const action = this.game.player.getNextAction();\n\n                if (action) {\n                    action();\n                }\n\n                return true;\n            }\n\n            entity.fireEvent('take-action');\n            entity = sorted.shift();\n        }\n\n        return false;\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Actor extends Component {\n    static properties = {\n        energy: 0,\n    };\n\n    get hasEnergy() {\n        return this.energy >= 0;\n    }\n\n    onEnergyConsumed(evt) {\n        this.reduceEnergy(evt.data);\n    }\n\n    onTick(evt) {\n        this.addEnergy(1);\n    }\n\n    addEnergy(value) {\n        this.energy += value;\n\n        if (this.energy >= 0) {\n            this.energy = 0;\n        }\n    }\n\n    reduceEnergy(value) {\n        this.addEnergy(value * -1);\n    }\n}\n","'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[\\p{Lu}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[\\p{Ll}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLocaleLowerCase() === character && character.toLocaleUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toLocaleUpperCase() === character && character.toLocaleLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\t...{pascalCase: false},\n\t\t...options\n\t};\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toLocaleUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toLocaleUpperCase() : input.toLocaleLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLocaleLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLocaleLowerCase()\n\t\t.replace(/[_.\\- ]+([\\p{Alpha}\\p{N}_]|$)/gu, (_, p1) => p1.toLocaleUpperCase())\n\t\t.replace(/\\d+([\\p{Alpha}\\p{N}_]|$)/gu, m => m.toLocaleUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import camelcaseSlow from 'camelcase';\r\n\r\nconst camelCache = new Map();\r\n\r\nexport const camelString = (value) => {\r\n    if (!camelCache.has(value)) {\r\n        camelCache.set(value, camelcaseSlow(value));\r\n    }\r\n\r\n    return camelCache.get(value);\r\n};\r\n\r\nconst pascalCache = new Map();\r\n\r\nexport const pascalString = (value) => {\r\n    if (!pascalCache.has(value)) {\r\n        pascalCache.set(value, camelcaseSlow(value, { pascalCase: true }));\r\n    }\r\n\r\n    return pascalCache.get(value);\r\n};\r\n","export default class Property {\r\n    component;\r\n\r\n    constructor(component) {\r\n        this.component = component;\r\n    }\r\n\r\n    get ecs() {\r\n        return this.component.ecs;\r\n    }\r\n\r\n    get descriptor() {\r\n        return {\r\n            enumerable: true,\r\n            get: () => this.get(),\r\n            set: (v) => this.set(v),\r\n        };\r\n    }\r\n\r\n    get() {\r\n        return undefined;\r\n    }\r\n\r\n    set(value) {}\r\n\r\n    serialize() {\r\n        return undefined;\r\n    }\r\n\r\n    onDestroyed() {}\r\n\r\n    cleanupReference(entity) {}\r\n}\r\n","import Property from './Property';\r\n\r\nexport default class SimpleProperty extends Property {\r\n    value = null;\r\n\r\n    set(value) {\r\n        this.value = value;\r\n    }\r\n\r\n    get() {\r\n        return this.value;\r\n    }\r\n\r\n    serialize() {\r\n        return this.value;\r\n    }\r\n}\r\n","import Property from './Property';\r\n\r\nexport default class EntityProperty extends Property {\r\n    id;\r\n\r\n    set(value) {\r\n        if (this.id && (!value || value.id !== this.id || value !== this.id)) {\r\n            this.ecs.entities.removeRef(this.id, this);\r\n        }\r\n\r\n        if (value && value.id) {\r\n            this.ecs.entities.addRef(value.id, this);\r\n            this.id = value.id;\r\n            return;\r\n        }\r\n\r\n        if (typeof value === 'string') {\r\n            this.ecs.entities.addRef(value, this);\r\n            this.id = value;\r\n            return;\r\n        }\r\n\r\n        this.id = undefined;\r\n    }\r\n\r\n    get() {\r\n        return this.id && this.component.ecs.getEntity(this.id);\r\n    }\r\n\r\n    serialize() {\r\n        return this.id;\r\n    }\r\n\r\n    onDestroyed() {\r\n        if (this.id) {\r\n            this.ecs.entities.removeRef(this.id, this);\r\n        }\r\n    }\r\n\r\n    cleanupReference(entity) {\r\n        if (this.id === entity.id) {\r\n            this.id = undefined;\r\n        } else {\r\n            console.warn(\r\n                `Property in unclean state. A reference to an entity \"${entity.id}\" was never cleaned up.`,\r\n                entity\r\n            );\r\n        }\r\n    }\r\n}\r\n","import Property from './Property';\r\n\r\nexport default class EntityArrayProperty extends Property {\r\n    proxy = [];\r\n\r\n    constructor(component) {\r\n        super(component);\r\n        this.proxy = new Proxy([], {\r\n            get: (target, prop, receiver) => {\r\n                return Reflect.get(target, prop, receiver);\r\n            },\r\n            set: (target, prop, value, receiver) => {\r\n                if (isNaN(prop)) {\r\n                    return Reflect.set(target, prop, value, receiver);\r\n                }\r\n\r\n                const old = Reflect.get(target, prop, receiver);\r\n\r\n                if (typeof value === 'string') {\r\n                    value = this.ecs.entities.get(value);\r\n                }\r\n\r\n                if (old && old != value) {\r\n                    this.ecs.entities.removeRef(value, this);\r\n                }\r\n\r\n                if (value && value.id) {\r\n                    this.ecs.entities.addRef(value.id, this);\r\n\r\n                    return Reflect.set(target, prop, value, receiver);\r\n                }\r\n\r\n                return Reflect.set(target, prop, value, receiver);\r\n            },\r\n            deleteProperty: (target, prop) => {\r\n                if (isNaN(prop)) {\r\n                    return Reflect.deleteProperty(target, prop);\r\n                }\r\n\r\n                const value = Reflect.get(target, prop);\r\n                this.ecs.entities.removeRef(value, this);\r\n\r\n                return Reflect.deleteProperty(target, prop);\r\n            },\r\n        });\r\n    }\r\n\r\n    set(values = []) {\r\n        const len = Math.max(values.length, this.proxy.length);\r\n\r\n        for (let i = 0; i < len; i++) {\r\n            if (i in values) {\r\n                this.proxy[i] = values[i];\r\n            } else {\r\n                delete this.proxy[i];\r\n            }\r\n        }\r\n\r\n        this.proxy.length = values.length;\r\n    }\r\n\r\n    get() {\r\n        return this.proxy;\r\n    }\r\n\r\n    serialize() {\r\n        return this.proxy.map((ref) => ref.id);\r\n    }\r\n\r\n    onDestroyed() {\r\n        this.set([]);\r\n    }\r\n\r\n    cleanupReference(entity) {\r\n        this.set(this.proxy.filter((ref) => ref.id !== entity.id));\r\n    }\r\n}\r\n","import Property from './Property';\r\nimport SimpleProperty from './SimpleProperty';\r\nimport EntityProperty from './EntityProperty';\r\nimport EntityArrayProperty from './EntityArrayProperty';\r\n\r\nexport default class PropertyStrategy {\r\n    static create(component, value) {\r\n        switch (value) {\r\n            case '<Entity>':\r\n                return new EntityProperty(component);\r\n            case '<EntityArray>':\r\n                return new EntityArrayProperty(component);\r\n            default:\r\n                return new SimpleProperty(component);\r\n        }\r\n    }\r\n}\r\n","import { camelString } from './util/string-util';\r\nimport PropertyFactory from './Properties/PropertyFactory';\r\n\r\nexport default class Component {\r\n    entity = null;\r\n    ecs = null;\r\n    _props = {};\r\n    _isDestroyed = false;\r\n\r\n    static allowMultiple = false;\r\n    static keyProperty = null;\r\n    static properties = {};\r\n\r\n    static get type() {\r\n        return this.name;\r\n    }\r\n\r\n    get type() {\r\n        return this.constructor.name;\r\n    }\r\n\r\n    get isAttached() {\r\n        return Boolean(this.entity);\r\n    }\r\n\r\n    get isDestroyed() {\r\n        return this._isDestroyed;\r\n    }\r\n\r\n    get allowMultiple() {\r\n        return this.constructor.allowMultiple;\r\n    }\r\n\r\n    get keyProperty() {\r\n        return this.constructor.keyProperty;\r\n    }\r\n\r\n    get properties() {\r\n        const ob = {};\r\n\r\n        for (const [key, value] of Object.entries(this._props)) {\r\n            ob[key] = value.get();\r\n        }\r\n\r\n        return ob;\r\n    }\r\n\r\n    get key() {\r\n        return this[this.keyProperty];\r\n    }\r\n\r\n    constructor(ecs, properties = {}) {\r\n        this.ecs = ecs;\r\n        this._defineProxies(properties);\r\n    }\r\n\r\n    serialize() {\r\n        return Object.entries(this._props).reduce(\r\n            (o, [key, value]) => ({\r\n                ...o,\r\n                [key]: value.serialize(),\r\n            }),\r\n            {}\r\n        );\r\n    }\r\n\r\n    _onAttached(entity) {\r\n        this.entity = entity;\r\n        this.ecs.queries.onComponentAdded(entity, this);\r\n        this.onAttached();\r\n    }\r\n\r\n    _onDetached() {\r\n        if (this.isAttached) {\r\n            this.onDetached();\r\n            this.entity = null;\r\n        }\r\n    }\r\n\r\n    _onDestroyed() {\r\n        this._isDestroyed = true;\r\n        this.onDestroyed();\r\n\r\n        for (const prop of Object.values(this._props)) {\r\n            prop.onDestroyed();\r\n        }\r\n    }\r\n\r\n    onAttached() {}\r\n\r\n    onDetached() {}\r\n\r\n    onDestroyed() {}\r\n\r\n    remove(destroy = true) {\r\n        if (this.isAttached) {\r\n            this.entity.remove(this);\r\n        }\r\n        if (destroy) {\r\n            this._onDestroyed();\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.remove(true);\r\n    }\r\n\r\n    clone() {\r\n        return this.ecs.createComponent(this.type, this.serialize());\r\n    }\r\n\r\n    _onEvent(evt) {\r\n        this.onEvent(evt);\r\n\r\n        const handlerName = camelString(`on ${evt.name}`);\r\n\r\n        if (typeof this[handlerName] === 'function') {\r\n            this[handlerName](evt);\r\n        }\r\n    }\r\n\r\n    onEvent(evt) {}\r\n\r\n    _defaultPropertyValue(propertyName) {\r\n        const value = this.constructor.properties[propertyName];\r\n\r\n        if (value === '<EntityArray>') {\r\n            return [];\r\n        }\r\n\r\n        if (value === '<Entity>') {\r\n            return undefined;\r\n        }\r\n\r\n        return value;\r\n    }\r\n\r\n    _defineProxies(initialProperties) {\r\n        for (const key in this.constructor.properties) {\r\n            const initialValue = initialProperties.hasOwnProperty(key)\r\n                ? initialProperties[key]\r\n                : this._defaultPropertyValue(key);\r\n            const property = PropertyFactory.create(\r\n                this,\r\n                this.constructor.properties[key]\r\n            );\r\n\r\n            this._props[key] = property;\r\n            Object.defineProperty(this, key, property.descriptor);\r\n            property.set(initialValue);\r\n        }\r\n    }\r\n}\r\n","import Component from '../Component';\r\nimport { camelString } from '../util/string-util';\r\n\r\nexport default class ComponentRegistry {\r\n    _definitions = new Map();\r\n    _ecs = null;\r\n\r\n    constructor(ecs) {\r\n        this._ecs = ecs;\r\n    }\r\n\r\n    register(component) {\r\n        this._definitions.set(component.name, component);\r\n        camelString(component.name); // prime camelcase cache\r\n    }\r\n\r\n    getAccessor(type) {\r\n        return camelString(type);\r\n    }\r\n\r\n    get(typeOrClassOrComponent) {\r\n        const type = this._getType(typeOrClassOrComponent);\r\n\r\n        if (!type) {\r\n            console.warn(\r\n                `Cannot get component definition for type or class ${typeOrClassOrComponent} since it is neither a Component class or type (string)`\r\n            );\r\n            return null;\r\n        }\r\n\r\n        return this._definitions.get(type);\r\n    }\r\n\r\n    create(typeOrClass, properties = {}) {\r\n        const definition = this.get(typeOrClass);\r\n\r\n        if (definition) {\r\n            return new definition(this._ecs, properties);\r\n        }\r\n\r\n        console.warn(\r\n            `Could not create component definition for ${typeOrClass} since it is not registered`\r\n        );\r\n    }\r\n\r\n    _getType(typeOrClassOrComponent) {\r\n        if (typeof typeOrClassOrComponent === 'string') {\r\n            return typeOrClassOrComponent;\r\n        }\r\n\r\n        if (typeOrClassOrComponent instanceof Component) {\r\n            return typeOrClassOrComponent.type;\r\n        }\r\n\r\n        if (typeOrClassOrComponent.prototype instanceof Component) {\r\n            return typeOrClassOrComponent.name;\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n","'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn target.propertyIsEnumerable(symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n","import merge from 'deepmerge';\r\n\r\nexport default class PrefabComponent {\r\n    get type() {\r\n        return this.componentDef.type;\r\n    }\r\n\r\n    constructor(componentDef, properties = {}, overwrite = true) {\r\n        this.componentDef = componentDef;\r\n        this.properties = properties;\r\n        this.overwrite = overwrite;\r\n    }\r\n\r\n    applyToEntity(entity, initialProps = {}) {\r\n        if (!this.componentDef.allowMultiple && entity.has(this.componentDef)) {\r\n            if (this.overwrite) {\r\n                entity.remove(this.componentDef);\r\n            } else {\r\n                console.log(\r\n                    `Ignoring prefab component \"${this.type}\" since the entity \"${entity.id}\" already has one.`\r\n                );\r\n                return;\r\n            }\r\n        }\r\n\r\n        const props = merge(this.properties, initialProps);\r\n\r\n        entity.add(this.componentDef, props);\r\n    }\r\n}\r\n","export default class Prefab {\r\n    name = '';\r\n    inherit = [];\r\n    components = [];\r\n\r\n    constructor(ecs, name) {\r\n        this.ecs = ecs;\r\n        this.name = name;\r\n    }\r\n\r\n    addComponent(prefabComponent) {\r\n        this.components.push(prefabComponent);\r\n    }\r\n\r\n    applyToEntity(entity, initialProps = {}) {\r\n        this.inherit.forEach((parent) => {\r\n            parent.applyToEntity(entity, initialProps);\r\n        });\r\n\r\n        const arrComps = {};\r\n\r\n        this.components.forEach((component, i) => {\r\n            const definition = component.componentDef;\r\n            const accessor = this.ecs.components.getAccessor(definition.type);\r\n\r\n            let initialCompProps = {};\r\n\r\n            if (definition.allowMultiple) {\r\n                if (definition.keyProperty) {\r\n                    const key = component.properties[definition.keyProperty];\r\n\r\n                    if (initialProps[accessor] && initialProps[accessor][key]) {\r\n                        initialCompProps = initialProps[accessor][key];\r\n                    }\r\n                } else {\r\n                    if (!arrComps[accessor]) {\r\n                        arrComps[accessor] = 0;\r\n                    }\r\n\r\n                    if (\r\n                        initialProps[accessor] &&\r\n                        initialProps[accessor][arrComps[accessor]]\r\n                    ) {\r\n                        initialCompProps =\r\n                            initialProps[accessor][arrComps[accessor]];\r\n                    }\r\n\r\n                    arrComps[accessor]++;\r\n                }\r\n            } else {\r\n                initialCompProps = initialProps[accessor];\r\n            }\r\n\r\n            component.applyToEntity(entity, initialCompProps);\r\n        });\r\n\r\n        return entity;\r\n    }\r\n}\r\n","import Component from '../Component';\r\nimport PrefabComponent from '../PrefabComponent';\r\nimport Prefab from '../Prefab';\r\n\r\nexport default class PrefabRegistry {\r\n    _prefabs = {};\r\n    _ecs = null;\r\n\r\n    constructor(ecs) {\r\n        this._ecs = ecs;\r\n    }\r\n\r\n    deserialize(data) {\r\n        const registered = this.get(data.name);\r\n\r\n        if (registered) {\r\n            return registered;\r\n        }\r\n\r\n        const prefab = new Prefab(this._ecs, data.name);\r\n\r\n        let inherit;\r\n\r\n        if (Array.isArray(data.inherit)) {\r\n            inherit = data.inherit;\r\n        } else if (typeof data.inherit === 'string') {\r\n            inherit = [data.inherit];\r\n        } else {\r\n            inherit = [];\r\n        }\r\n\r\n        prefab.inherit = inherit.map((parent) => {\r\n            const ref = this.get(parent);\r\n\r\n            if (!ref) {\r\n                console.warn(\r\n                    `Prefab \"${data.name}\" cannot inherit from Prefab \"${parent}\" because is not registered yet! Prefabs must be registered in the right order.`\r\n                );\r\n                return parent;\r\n            }\r\n\r\n            return ref;\r\n        });\r\n\r\n        const comps = data.components || [];\r\n\r\n        for (const componentData of comps) {\r\n            if (\r\n                typeof componentData === 'string' ||\r\n                componentData.prototype instanceof Component\r\n            ) {\r\n                const def = this._ecs.components.get(componentData);\r\n                if (def) {\r\n                    prefab.addComponent(new PrefabComponent(def));\r\n                }\r\n            } else if (typeof componentData === 'object') {\r\n                const type = componentData.type;\r\n                const def = this._ecs.components.get(type);\r\n                if (def) {\r\n                    prefab.addComponent(\r\n                        new PrefabComponent(\r\n                            def,\r\n                            componentData.properties,\r\n                            componentData.overwrite\r\n                        )\r\n                    );\r\n                }\r\n            } else {\r\n                console.warn(\r\n                    `Unrecognized component reference \"${componentData}\" in prefab \"${data.name}\". Ensure the component is registered before the prefab.`\r\n                );\r\n            }\r\n        }\r\n\r\n        this.register(prefab);\r\n\r\n        return prefab;\r\n    }\r\n\r\n    register(prefab) {\r\n        this._prefabs[prefab.name] = prefab;\r\n    }\r\n\r\n    get(nameOrClassOrPrefab) {\r\n        const name = PrefabRegistry._getName(nameOrClassOrPrefab);\r\n\r\n        return this._prefabs[name];\r\n    }\r\n\r\n    create(nameOrClass, initialProps = {}) {\r\n        const prefab = this.get(nameOrClass);\r\n\r\n        if (!prefab) {\r\n            console.warn(\r\n                `Could not instantiate prefab for ${nameOrClass} since it is not registered`\r\n            );\r\n\r\n            return;\r\n        }\r\n\r\n        const entity = this._ecs.createEntity();\r\n        prefab.applyToEntity(entity, initialProps);\r\n\r\n        return entity;\r\n    }\r\n\r\n    static _getName(nameOrClassOrPrefab) {\r\n        if (typeof nameOrClassOrPrefab === 'string') {\r\n            return nameOrClassOrPrefab;\r\n        }\r\n\r\n        if (nameOrClassOrPrefab instanceof Prefab) {\r\n            return nameOrClassOrPrefab.name;\r\n        }\r\n\r\n        if (nameOrClassOrPrefab.prototype instanceof Prefab) {\r\n            return nameOrClassOrPrefab.name;\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n","export default class EntityEvent {\r\n    data = {};\r\n    _prevented = false;\r\n    _handled = false;\r\n\r\n    get prevented() {\r\n        return this._prevented;\r\n    }\r\n\r\n    get handled() {\r\n        return this._handled;\r\n    }\r\n\r\n    constructor(name, data = {}) {\r\n        this.name = name;\r\n        this.data = data;\r\n    }\r\n\r\n    is(name) {\r\n        return this.name === name;\r\n    }\r\n\r\n    handle() {\r\n        this._handled = true;\r\n        this._prevented = true;\r\n    }\r\n\r\n    prevent() {\r\n        this._prevented = true;\r\n    }\r\n}\r\n","import Component from './Component';\r\nimport EntityEvent from './EntityEvent';\r\n\r\nexport default class Entity {\r\n    id = null;\r\n    components = {};\r\n    ecs = null;\r\n    _isDestroyed = false;\r\n\r\n    get isDestroyed() {\r\n        return this._isDestroyed;\r\n    }\r\n\r\n    constructor(ecs, id = null) {\r\n        this.ecs = ecs;\r\n        this.id = id || ecs.generateId();\r\n    }\r\n\r\n    has(typeOrClass, key = null) {\r\n        const type = this.ecs.components._getType(typeOrClass);\r\n        const accessor = this.ecs.components.getAccessor(type);\r\n        const hasType = this.hasOwnProperty(accessor);\r\n\r\n        if (hasType && key) {\r\n            return this[accessor].hasOwnProperty(key);\r\n        }\r\n\r\n        return hasType;\r\n    }\r\n\r\n    get(typeOrClass, key = null) {\r\n        const type = this.ecs.components._getType(typeOrClass);\r\n        const accessor = this.ecs.components.getAccessor(type);\r\n        const components = this[accessor];\r\n\r\n        if (components && key) {\r\n            return components[key];\r\n        }\r\n\r\n        return components;\r\n    }\r\n\r\n    destroy() {\r\n        this._isDestroyed = true;\r\n\r\n        for (const component of Object.values(this.components)) {\r\n            if (component instanceof Component) {\r\n                component.destroy();\r\n            } else {\r\n                for (const nestedComponent of Object.values(component)) {\r\n                    nestedComponent.destroy();\r\n                }\r\n            }\r\n        }\r\n\r\n        this.ecs.entities.onEntityDestroyed(this);\r\n    }\r\n\r\n    add(typeOrClass, properties = {}) {\r\n        if (typeOrClass instanceof Component) {\r\n            if (typeOrClass.isAttached) {\r\n                console.warn(\r\n                    `\"${typeOrClass.type}\" component cannot be added, since it is already attached to an entity.`\r\n                );\r\n                return false;\r\n            }\r\n\r\n            return this.attach(typeOrClass);\r\n        }\r\n\r\n        const component = this.ecs.components.create(typeOrClass, properties);\r\n\r\n        if (!component) {\r\n            console.warn(\r\n                `\"${typeOrClass}\" component cannot be added, since it is not registered.`\r\n            );\r\n            return false;\r\n        }\r\n\r\n        return this.attach(component);\r\n    }\r\n\r\n    attach(component) {\r\n        const accessor = this.ecs.components.getAccessor(component.type);\r\n\r\n        if (!component.allowMultiple) {\r\n            if (this.has(component.type)) {\r\n                console.warn(\r\n                    `\"${component.type}\" component has allowMultiple set to ${component.allowMultiple}. Trying to add a \"${component.type}\" component to an entity which already has one.`\r\n                );\r\n                return false;\r\n            }\r\n\r\n            this.components[accessor] = component;\r\n\r\n            Object.defineProperty(this, accessor, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get() {\r\n                    return this.components[accessor];\r\n                },\r\n            });\r\n\r\n            component._onAttached(this);\r\n\r\n            return true;\r\n        }\r\n\r\n        if (!component.keyProperty) {\r\n            if (!this.components[accessor]) {\r\n                this.components[accessor] = [];\r\n                Object.defineProperty(this, accessor, {\r\n                    configurable: true,\r\n                    enumerable: true,\r\n                    get() {\r\n                        return this.components[accessor];\r\n                    },\r\n                });\r\n            }\r\n\r\n            this.components[accessor].push(component);\r\n\r\n            component._onAttached(this);\r\n\r\n            return true;\r\n        }\r\n\r\n        if (!component.key) {\r\n            console.warn(\r\n                `\"${component.type}\" component has a falsy key of \"${component.key}\". The keyProperty is set to \"${component.keyProperty}\".`\r\n            );\r\n            return false;\r\n        }\r\n\r\n        if (!this.components[accessor]) {\r\n            this.components[accessor] = {};\r\n            Object.defineProperty(this, accessor, {\r\n                configurable: true,\r\n                enumerable: true,\r\n                get() {\r\n                    return this.components[accessor];\r\n                },\r\n            });\r\n        }\r\n\r\n        this.components[accessor][component.key] = component;\r\n\r\n        component._onAttached(this);\r\n\r\n        return true;\r\n    }\r\n\r\n    owns(component) {\r\n        return component.entity === this;\r\n    }\r\n\r\n    remove(typeOrClassOrComponent, key = null) {\r\n        const isComponent = typeOrClassOrComponent instanceof Component;\r\n        key = isComponent ? typeOrClassOrComponent.key : key;\r\n\r\n        const definition = this.ecs.components.get(typeOrClassOrComponent);\r\n\r\n        const accessor = this.ecs.components.getAccessor(definition.type);\r\n\r\n        if (definition.allowMultiple) {\r\n            if (!definition.keyProperty) {\r\n                if (isComponent) {\r\n                    const all = this.components[accessor];\r\n\r\n                    if (!all) {\r\n                        console.warn(\r\n                            `Trying to remove a \"${definition.type}\" component from an entity, but it wasn't found.`\r\n                        );\r\n                        return;\r\n                    }\r\n\r\n                    const index = all.indexOf(typeOrClassOrComponent);\r\n\r\n                    if (index > -1) {\r\n                        all.splice(index, 1);\r\n                        typeOrClassOrComponent._onDetached();\r\n\r\n                        if (all.length === 0) {\r\n                            delete this[accessor];\r\n                            delete this.components[accessor];\r\n                        }\r\n\r\n                        this.ecs.queries.onComponentRemoved(this);\r\n\r\n                        return true;\r\n                    }\r\n                } else {\r\n                    for (const instance of this.components[accessor]) {\r\n                        instance._onDetached();\r\n                    }\r\n\r\n                    delete this[accessor];\r\n                    delete this.components[accessor];\r\n                    this.ecs.queries.onComponentRemoved(this);\r\n\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            if (!key) {\r\n                console.warn(\r\n                    `Trying to remove a \"${definition.type}\" component which allows multiple without specifying an key.`\r\n                );\r\n                return;\r\n            }\r\n\r\n            const all = this.components[accessor];\r\n            const component = all[key];\r\n\r\n            if (component) {\r\n                delete all[key];\r\n                component._onDetached();\r\n                if (Object.keys(all).length <= 0) {\r\n                    delete this[accessor];\r\n                    delete this.components[accessor];\r\n                }\r\n                this.ecs.queries.onComponentRemoved(this);\r\n\r\n                return component;\r\n            } else {\r\n                console.warn(\r\n                    `Trying to remove a \"${definition.type}\" component from an entity at \"${key}\", but it wasn't found.`\r\n                );\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (accessor in this) {\r\n            const component = this.components[accessor];\r\n\r\n            delete this[accessor];\r\n            delete this.components[accessor];\r\n            component._onDetached();\r\n            this.ecs.queries.onComponentRemoved(this);\r\n\r\n            return component;\r\n        }\r\n\r\n        console.warn(\r\n            `Trying to remove a \"${definition.type}\" component from an entity, but it wasn't found.`\r\n        );\r\n    }\r\n\r\n    serialize() {\r\n        return Object.entries(this.components).reduce(\r\n            (o, [key, value]) => {\r\n                if (value instanceof Component) {\r\n                    return {\r\n                        ...o,\r\n                        [key]: value.serialize(),\r\n                    };\r\n                }\r\n\r\n                if (Array.isArray(value)) {\r\n                    return {\r\n                        ...o,\r\n                        [key]: value.map((v) => v.serialize()),\r\n                    };\r\n                }\r\n\r\n                return {\r\n                    ...o,\r\n                    [key]: Object.entries(value).reduce(\r\n                        (o2, [k2, v2]) => ({\r\n                            ...o2,\r\n                            [k2]: v2.serialize(),\r\n                        }),\r\n                        {}\r\n                    ),\r\n                };\r\n            },\r\n            {\r\n                id: this.id,\r\n            }\r\n        );\r\n    }\r\n\r\n    fireEvent(name, data) {\r\n        const evt = new EntityEvent(name, data);\r\n\r\n        for (const component of Object.values(this.components)) {\r\n            if (component instanceof Component) {\r\n                component._onEvent(evt);\r\n\r\n                if (evt.prevented) {\r\n                    return evt;\r\n                }\r\n            } else {\r\n                for (const nestedComponent of Object.values(component)) {\r\n                    nestedComponent._onEvent(evt);\r\n\r\n                    if (evt.prevented) {\r\n                        return evt;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return evt;\r\n    }\r\n}\r\n","import { pascalString } from '../util/string-util';\r\nimport Entity from '../Entity';\r\n\r\nexport default class EntityRegistry {\r\n    _entities = new Map();\r\n    _ecs = null;\r\n    _refs = new Map();\r\n\r\n    constructor(ecs) {\r\n        this._ecs = ecs;\r\n    }\r\n\r\n    get all() {\r\n        return this._entities.values();\r\n    }\r\n\r\n    register(entity) {\r\n        this._entities.set(entity.id, entity);\r\n\r\n        return entity;\r\n    }\r\n\r\n    get(id) {\r\n        return this._entities.get(id);\r\n    }\r\n\r\n    createOrGetById(id) {\r\n        const entity = this.get(id);\r\n\r\n        if (entity) {\r\n            return entity;\r\n        }\r\n\r\n        return this.create(id);\r\n    }\r\n\r\n    create(id = undefined) {\r\n        const entity = new Entity(this._ecs, id);\r\n\r\n        this.register(entity);\r\n\r\n        this._ecs.queries.onEntityCreated(entity);\r\n\r\n        return entity;\r\n    }\r\n\r\n    destroy(entity) {\r\n        entity.destroy();\r\n    }\r\n\r\n    onEntityDestroyed(entity) {\r\n        this.cleanupRefs(entity);\r\n        this._entities.delete(entity.id);\r\n        this._ecs.queries.onEntityDestroyed(entity);\r\n    }\r\n\r\n    cleanupRefs(entity) {\r\n        const refs = this._refs.get(entity.id);\r\n\r\n        if (!refs) {\r\n            return;\r\n        }\r\n\r\n        for (const ref of refs) {\r\n            ref.cleanupReference(entity);\r\n        }\r\n\r\n        delete this._refs[entity.id];\r\n    }\r\n\r\n    addRef(entityId, property) {\r\n        if (!this._refs.has(entityId)) {\r\n            this._refs.set(entityId, new Set([property]));\r\n            return;\r\n        }\r\n\r\n        this._refs.get(entityId).add(property);\r\n    }\r\n\r\n    removeRef(entityId, property) {\r\n        if (this._refs.has(entityId)) {\r\n            this._refs.get(entityId).delete(property);\r\n        }\r\n    }\r\n\r\n    serialize(entities) {\r\n        const json = [];\r\n        const list = entities ? entities : this._entities;\r\n\r\n        list.forEach((entity) => {\r\n            json.push(entity.serialize());\r\n        });\r\n\r\n        return json;\r\n    }\r\n\r\n    deserialize(data) {\r\n        for (const entityData of data.entities) {\r\n            this.createOrGetById(entityData.id);\r\n        }\r\n\r\n        for (const entityData of data.entities) {\r\n            this.deserializeEntity(entityData);\r\n        }\r\n    }\r\n\r\n    deserializeEntity(data) {\r\n        const { id, ...componentData } = data;\r\n        const entity = this.createOrGetById(id);\r\n\r\n        Object.entries(componentData).forEach(([key, value]) => {\r\n            const type = pascalString(key);\r\n            const definition = this._ecs.components.get(type);\r\n\r\n            if (definition.allowMultiple) {\r\n                Object.values(value).forEach((d) => {\r\n                    entity.add(definition, d);\r\n                });\r\n            } else {\r\n                entity.add(definition, value);\r\n            }\r\n        });\r\n    }\r\n}\r\n","import merge from 'deepmerge';\r\n\r\nexport default class Query {\r\n    _ecs;\r\n    _filter;\r\n    _onEntityAddedCallbacks = [];\r\n    _onEntityRemovedCallbacks = [];\r\n    _cache = new Set();\r\n\r\n    constructor(ecs, filter = {}) {\r\n        this._ecs = ecs;\r\n        this._filter = merge({ any: [], all: [], none: [] }, filter);\r\n        this.bustCache();\r\n    }\r\n\r\n    isMatch(entity) {\r\n        const hasAny = this._filter.any.length\r\n            ? this._filter.any.some((c) => entity.has(c))\r\n            : true;\r\n        const hasAll = this._filter.all.every((c) => entity.has(c));\r\n        const hasNone = !this._filter.none.some((c) => entity.has(c));\r\n\r\n        return hasAny && hasAll && hasNone;\r\n    }\r\n\r\n    onEntityAdded(fn) {\r\n        this._onEntityAddedCallbacks.push(fn);\r\n    }\r\n\r\n    onEntityRemoved(fn) {\r\n        this._onEntityRemovedCallbacks.push(fn);\r\n    }\r\n\r\n    has(entity) {\r\n        return this._cache.has(entity);\r\n    }\r\n\r\n    candidate(entity) {\r\n        const isTracking = this.has(entity);\r\n\r\n        if (this.isMatch(entity)) {\r\n            if (!isTracking) {\r\n                this._cache.add(entity);\r\n                this._onEntityAddedCallbacks.forEach((cb) => cb(entity));\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        if (isTracking) {\r\n            this._cache.delete(entity);\r\n            this._onEntityRemovedCallbacks.forEach((cb) => cb(entity));\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    _onEntityCreated(entity) {\r\n        this.candidate(entity);\r\n    }\r\n\r\n    _onComponentAdded(entity) {\r\n        this.candidate(entity);\r\n    }\r\n\r\n    _onComponentRemoved(entity) {\r\n        this.candidate(entity);\r\n    }\r\n\r\n    _onEntityDestroyed(entity) {\r\n        if (this.has(entity)) {\r\n            this._cache.delete(entity);\r\n            this._onEntityRemovedCallbacks.forEach((cb) => cb(entity));\r\n        }\r\n    }\r\n\r\n    bustCache() {\r\n        this._cache.clear();\r\n\r\n        for (const entity of this._ecs.entities.all) {\r\n            this.candidate(entity);\r\n        }\r\n\r\n        return this._cache;\r\n    }\r\n\r\n    get() {\r\n        return this._cache;\r\n    }\r\n}\r\n","import Query from '../Query';\r\n\r\nexport default class QueryRegistry {\r\n    _ecs;\r\n    _queries = [];\r\n\r\n    constructor(ecs) {\r\n        this._ecs = ecs;\r\n    }\r\n\r\n    create(filters) {\r\n        const query = new Query(this._ecs, filters);\r\n\r\n        this._queries.push(query);\r\n\r\n        return query;\r\n    }\r\n\r\n    onComponentAdded(entity) {\r\n        this._queries.forEach((query) => query._onComponentAdded(entity));\r\n    }\r\n\r\n    onComponentRemoved(entity) {\r\n        this._queries.forEach((query) => query._onComponentRemoved(entity));\r\n    }\r\n\r\n    onEntityCreated(entity) {\r\n        this._queries.forEach((query) => query._onEntityCreated(entity));\r\n    }\r\n\r\n    onEntityDestroyed(entity) {\r\n        this._queries.forEach((query) => query._onEntityDestroyed(entity));\r\n    }\r\n}\r\n","import ComponentRegistry from './registries/ComponentRegistry';\r\nimport PrefabRegistry from './registries/PrefabRegistry';\r\nimport { nanoid } from 'nanoid/non-secure';\r\nimport EntityRegistry from './registries/EntityRegistry';\r\nimport QueryRegistry from './registries/QueryRegistry';\r\n\r\nexport default class Engine {\r\n    constructor() {\r\n        this.idGenerator = () => nanoid();\r\n        this.components = new ComponentRegistry(this);\r\n        this.prefabs = new PrefabRegistry(this);\r\n        this.entities = new EntityRegistry(this);\r\n        this.queries = new QueryRegistry(this);\r\n    }\r\n\r\n    generateId() {\r\n        return this.idGenerator();\r\n    }\r\n\r\n    createEntity(id) {\r\n        return this.entities.create(id);\r\n    }\r\n\r\n    createPrefab(nameOrClass, initialProps = {}) {\r\n        return this.prefabs.create(nameOrClass, initialProps);\r\n    }\r\n\r\n    destroyEntity(entity) {\r\n        return this.entities.destroy(entity);\r\n    }\r\n\r\n    registerPrefab(data) {\r\n        this.prefabs.deserialize(data);\r\n    }\r\n\r\n    registerComponent(component) {\r\n        this.components.register(component);\r\n    }\r\n\r\n    getEntity(id) {\r\n        return this.entities.get(id);\r\n    }\r\n\r\n    createComponent(type, properties) {\r\n        return this.components.create(type, properties);\r\n    }\r\n\r\n    createQuery(filters) {\r\n        return this.queries.create(filters);\r\n    }\r\n\r\n    serialize(entities) {\r\n        return {\r\n            entities: this.entities.serialize(entities),\r\n        };\r\n    }\r\n\r\n    deserialize(data) {\r\n        if (data.id) {\r\n            return this.entities.deserializeEntity(data);\r\n        }\r\n\r\n        return this.entities.deserialize(data);\r\n    }\r\n}\r\n","// This alphabet uses `A-Za-z0-9_-` symbols. The genetic algorithm helped\n// optimize the gzip compression for this alphabet.\nlet urlAlphabet =\n  'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW'\n\nlet customAlphabet = (alphabet, size) => {\n  return () => {\n    let id = ''\n    // A compact alternative for `for (var i = 0; i < step; i++)`.\n    let i = size\n    while (i--) {\n      // `| 0` is more compact and faster than `Math.floor()`.\n      id += alphabet[Math.random() * alphabet.length | 0]\n    }\n    return id\n  }\n}\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  let i = size\n  while (i--) {\n    // `| 0` is more compact and faster than `Math.floor()`.\n    id += urlAlphabet[Math.random() * 64 | 0]\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet }\n","import { Component } from 'geotic';\n\nexport class IsDestroying extends Component {\n    static properties = {\n        pass: 0,\n    };\n}\n","import { Component } from 'geotic';\nimport { SPWN_POOL_LIQUID } from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\nimport { drinkLiquid, liquids, LIQUID_BLOOD } from '../../enums/LiquidTypes';\nimport { IsDestroying } from './IsDestroying';\n\nexport class LiquidContainer extends Component {\n    static properties = {\n        content: LIQUID_BLOOD,\n        volume: 10,\n        maxVolume: 10,\n        overridePrimary: false,\n        overrideSecondary: false,\n        isPourable: false,\n        destroyOnEmpty: false,\n        isFreeFlowing: false\n    };\n\n    get liquid() {\n        return !this.isEmpty && liquids[this.content];\n    }\n\n    get isEmpty() {\n        return isNaN(this.content) || this.volume <= 0;\n    }\n\n    get display() {\n        if (this.isEmpty) {\n            return `[empty] ${this.volume}/${this.maxVolume}`;\n        }\n\n        return `[${liquids[this.content].name}] ${this.volume}/${\n            this.maxVolume\n        }`;\n    }\n\n    get primaryColorOverride() {\n        if (this.overridePrimary && this.liquid) {\n            return this.liquid.primary;\n        }\n\n        return null;\n    }\n\n    get secondaryColorOverride() {\n        if (this.overrideSecondary && this.liquid) {\n            return this.liquid.secondary;\n        }\n\n        return null;\n    }\n\n    _checkDestroyOnEmpty() {\n        if (this.destroyOnEmpty && this.isEmpty && !this.entity.isDestroying) {\n            this.entity.add(IsDestroying);\n        }\n    }\n\n    pour(x, y, quantity) {\n        if (!this.isPourable) {\n            console.warn('The container connot be poured.');\n            return false;\n        }\n\n        if (this.volume <= 0) {\n            console.warn('The contianer is empty and cannot be poured.');\n            return false;\n        }\n\n        if (isNaN(quantity) || quantity >= this.volume) {\n            quantity = this.volume;\n        }\n\n        this.volume -= quantity;\n\n        spawn(SPWN_POOL_LIQUID, x, y, {\n            content: this.content,\n            volume: quantity,\n        });\n\n        this._checkDestroyOnEmpty();\n\n        return true;\n    }\n\n    combineFrom(other) {\n        if (this.content !== other.content) {\n            console.warn('Cannot combine different liquid types');\n\n            return false;\n        }\n\n        const sum = this.volume + other.volume;\n\n        if (sum > this.maxVolume) {\n            console.warn('Container is not large enought to combine both liquids');\n            this.volume = this.maxVolume;\n\n            other.volume -= (sum - this.maxVolume)\n        } else {\n            this.volume += other.volume;\n\n            other.volume -= other.volume;\n        }\n\n        other._checkDestroyOnEmpty();\n\n        return true;\n    }\n\n    onTryPour(evt) {\n        if (this.isEmpty) {\n            console.warn('The container is empty.');\n            return;\n        }\n\n        const pos = evt.data.interactor.position.getPos();\n\n        this.pour(pos.x, pos.y, evt.data.volume);\n\n        evt.data.interactor.fireEvent('energy-consumed', 400);\n        evt.handle();\n    }\n\n    onTryDrink(evt) {\n        if (this.isEmpty) {\n            console.warn('The container is empty.');\n            return;\n        }\n\n        drinkLiquid(evt.data.interactor, this.content, this.volume);\n        this.volume = 0;\n        this._checkDestroyOnEmpty();\n\n        evt.data.interactor.fireEvent('energy-consumed', 700);\n        evt.handle();\n    }\n\n    onGetInteractions(evt) {\n        if (this.isEmpty) {\n            return;\n        }\n\n        evt.data.interactions.push({\n            name: 'Drink',\n            evt: 'try-drink',\n        });\n\n        if (this.isPourable) {\n            evt.data.interactions.push({\n                name: 'Pour',\n                evt: 'try-pour',\n            });\n        }\n    }\n}\n","export const SPWN_VIAL_HONEY = 'SPWN_VIAL_HONEY';\nexport const SPWN_VIAL_BLOOD = 'SPWN_VIAL_BLOOD';\nexport const SPWN_VIAL_WATER = 'SPWN_VIAL_WATER';\nexport const SPWN_STONE = 'SPWN_STONE';\nexport const SPWN_GOBLIN_GRUNT = 'SPWN_GOBLIN_GRUNT';\nexport const SPWN_HUMAN_WANDERER = 'SPWN_HUMAN_WANDERER';\nexport const SPWN_PINE_TREE = 'SPWN_PINE_TREE';\nexport const SPWN_WOOD_WALL = 'SPWN_WOOD_WALL';\nexport const SPWN_WOOD_DOOR = 'SPWN_WOOD_DOOR';\nexport const SPWN_WOOD_CHEST = 'SPWN_WOOD_CHEST';\nexport const SPWN_STONE_WALL = 'SPWN_STONE_WALL';\nexport const SPWN_DIRT_PATH = 'SPWN_DIRT_PATH';\nexport const SPWN_CORPSE = 'SPWN_CORPSE';\nexport const SPWN_POOL_LIQUID = 'SPWN_POOL_LIQUID';\nexport const SPWN_GLASS_SHARD = 'SPWN_GLASS_SHARD';\nexport const SPWN_AMULET = 'SPWN_AMULET';\nexport const SPWN_CLOTH_ARMOR = 'SPWN_CLOTH_ARMOR';\nexport const SPWN_LEATHER_BOOTS = 'SPWN_LEATHER_BOOTS';\nexport const SPWN_SHORTSWORD = 'SPWN_SHORTSWORD';\nexport const SPWN_GREATSWORD = 'SPWN_GREATSWORD';\nexport const SPWN_BATTLE_AXE = 'SPWN_BATTLE_AXE';\nexport const SPWN_HATCHET = 'SPWN_HATCHET';\nexport const SPWN_MACE = 'SPWN_MACE';\nexport const SPWN_GROUND_GRASS = 'SPWN_GROUND_GRASS';\nexport const SPWN_GROUND_STONE = 'SPWN_GROUND_STONE';\n","import { game } from '../core/Game';\n\nimport * as VialHoney from './spawnables/SpawnableVialHoney';\nimport * as VialBlood from './spawnables/SpawnableVialBlood';\nimport * as VialWater from './spawnables/SpawnableVialWater';\nimport * as GoblinGrunt from './spawnables/SpawnableGoblinGrunt';\nimport * as PineTree from './spawnables/SpawnablePineTree';\nimport * as HumanWanderer from './spawnables/SpawnableHumanWanderer';\nimport * as PoolLiquid from './spawnables/SpawnablePoolLiquid';\n\nconst simplePrefab = (prefabName) => (data) =>\n    game.ecs.createPrefab(prefabName, data);\n\nconst spawnables = {\n    SPWN_VIAL_HONEY: VialHoney.createSpawnable,\n    SPWN_VIAL_BLOOD: VialBlood.createSpawnable,\n    SPWN_VIAL_WATER: VialWater.createSpawnable,\n    SPWN_STONE: simplePrefab('Stone'),\n    SPWN_WOOD_WALL: simplePrefab('WoodWall'),\n    SPWN_WOOD_DOOR: simplePrefab('Door'),\n    SPWN_WOOD_CHEST: simplePrefab('Chest'),\n    SPWN_STONE_WALL: simplePrefab('Wall'),\n    SPWN_DIRT_PATH: simplePrefab('DirtPathway'),\n    SPWN_CORPSE: simplePrefab('Corpse'),\n    SPWN_GLASS_SHARD: simplePrefab('GlassShard'),\n    SPWN_AMULET: simplePrefab('Amulet'),\n    SPWN_CLOTH_ARMOR: simplePrefab('ClothArmor'),\n    SPWN_LEATHER_BOOTS: simplePrefab('Boots'),\n    SPWN_SHORTSWORD: simplePrefab('Shortsword'),\n    SPWN_GREATSWORD: simplePrefab('Greatsword'),\n    SPWN_BATTLE_AXE: simplePrefab('BattleAxe'),\n    SPWN_HATCHET: simplePrefab('Hatchet'),\n    SPWN_MACE: simplePrefab('Mace'),\n    SPWN_GROUND_GRASS: simplePrefab('Grass'),\n    SPWN_GROUND_STONE: simplePrefab('StoneGround'),\n    SPWN_GOBLIN_GRUNT: GoblinGrunt.createSpawnable,\n    SPWN_HUMAN_WANDERER: HumanWanderer.createSpawnable,\n    SPWN_PINE_TREE: PineTree.createSpawnable,\n    SPWN_POOL_LIQUID: PoolLiquid.createSpawnable,\n};\n\nexport const spawn = (key, x, y, data = {}) => {\n    const entity = spawnables[key](data, x, y);\n\n    if (!isNaN(x) && !isNaN(y) && entity.position) {\n        entity.position.setPos(x, y);\n    }\n\n    return entity;\n};\n","import { game } from '../../core/Game';\nimport { LIQUID_HONEY } from '../../enums/LiquidTypes';\n\nexport const createSpawnable = () => {\n    const vial = game.ecs.createPrefab('Vial');\n\n    vial.liquidContainer.content = LIQUID_HONEY;\n\n    return vial;\n};\n","import { game } from '../core/Game';\n\nexport const LIQUID_WATER = 0;\nexport const LIQUID_BLOOD = 1;\nexport const LIQUID_HONEY = 3;\nexport const LIQUID_OIL = 4;\n\nexport const liquids = {\n    [LIQUID_WATER]: {\n        name: 'water',\n        colorDesc: 'watery',\n        primary: '#66a3dc',\n        secondary: '#8bb9d5',\n        onDrink: (entity) => {\n            console.log('Mmm. earth juice. yummy');\n        },\n    },\n    [LIQUID_BLOOD]: {\n        name: 'blood',\n        colorDesc: 'bloody',\n        primary: '#ce2a36',\n        secondary: '#e0c1c2',\n        onDrink: (entity, volume) => {\n            console.log('blood. this would make a good syrup');\n            entity.fireEvent('heal', {\n                value: volume * 1,\n            });\n        },\n    },\n    [LIQUID_HONEY]: {\n        name: 'honey',\n        colorDesc: 'gooey golden',\n        primary: '#d6aa3a',\n        secondary: '#f4d260',\n        onDrink: (entity, volume) => {\n            const pos = entity.position.getPos();\n\n            game.particles.createEmitter(pos.x, pos.y - 1, {\n                direction: {\n                    x: 0,\n                    y: -1,\n                },\n                glyphs: ['.', '○'],\n                fg1s: ['#d6aa3a'],\n                speed: 0.02,\n                lifetime: 500,\n            });\n\n            entity.fireEvent('heal', {\n                value: volume * 2,\n            });\n        },\n    },\n};\n\nexport const drinkLiquid = (entity, type, volume) => {\n    liquids[type].onDrink(entity, volume);\n};\n","import { game } from '../../core/Game';\nimport { LIQUID_BLOOD } from '../../enums/LiquidTypes';\n\nexport const createSpawnable = () => {\n    const vial = game.ecs.createPrefab('Vial');\n\n    vial.liquidContainer.content = LIQUID_BLOOD;\n\n    return vial;\n};\n","import { game } from '../../core/Game';\nimport { LIQUID_WATER } from '../../enums/LiquidTypes';\n\nexport const createSpawnable = () => {\n    const vial = game.ecs.createPrefab('Vial');\n\n    vial.liquidContainer.content = LIQUID_WATER;\n\n    return vial;\n};\n","import { BoredGoalType } from '../../ai/GoalTypes';\nimport { game } from '../../core/Game';\nimport { SPWN_SHORTSWORD } from '../Spawnables';\nimport { spawn } from '../Spawner';\n\nexport const createSpawnable = () => {\n    const goblin = game.ecs.createPrefab('Goblin');\n\n    goblin.brain.pushGoal(BoredGoalType.create());\n\n    const sword = spawn(SPWN_SHORTSWORD);\n\n    goblin.equipmentSlot.handRight.equip(sword);\n\n    return goblin;\n};\n","import { GoalType } from './GoalType';\nimport { SUCCESS } from '../GoalActionResult';\nimport { KillSomethingGoalType } from './KillSomethingGoalType';\n\nexport class BoredGoalType extends GoalType {\n    static name = 'Bored';\n\n    static isFinished = (entity, goal) => {\n        return false;\n    };\n\n    static takeAction = (entity, goal) => {\n        // do i detect any hostiles?\n        const targets = new Set();\n\n        entity.fireEvent('try-detect-hostiles', {\n            targets,\n        });\n\n        if (targets.size > 0) {\n            const target = [...targets][0];\n\n            const killGoal = KillSomethingGoalType.createAsSubGoal(goal, {\n                target: target.id,\n            });\n\n            entity.brain.pushGoal(killGoal);\n\n            entity.fireEvent('take-action');\n\n            return SUCCESS;\n        }\n\n        // is there anything i want to do since i'm bored?\n        const boredomGoal = entity.fireEvent('boredom');\n\n        if (boredomGoal.data.goal) {\n            entity.brain.pushGoal(boredomGoal.data.goal);\n            entity.fireEvent('take-action');\n\n            return SUCCESS;\n        }\n\n        // nothing to do, just idle\n        entity.fireEvent('energy-consumed', 1000);\n\n        return SUCCESS;\n    };\n}\n","import { FAILURE } from '../GoalActionResult';\nimport { game } from '../../core/Game';\n\nexport class GoalType {\n    static name = 'Unknown';\n\n    static isFinished(entity, goal) {\n        return false;\n    }\n\n    static takeAction(entity, goal) {\n        return FAILURE;\n    }\n\n    static createAsSubGoal(originalIntent, properties = {}) {\n        return this.create({\n            ...properties,\n            originalIntent: originalIntent.entity.id,\n        });\n    }\n\n    static create(properties = {}) {\n        return game.ecs.createPrefab('Goal', {\n            goal: {\n                name: this.name,\n                ...properties,\n            },\n        }).goal;\n    }\n}\n","export const SUCCESS = 'SUCCESS';\nexport const FAILURE = 'FAILURE';\nexport const INVALID = 'INVALID';\n","import { GoalType } from './GoalType';\nimport { FAILURE, SUCCESS } from '../GoalActionResult';\nimport { computeAStar } from '../../utils/AStar';\nimport { game } from '../../core/Game';\nimport { diagonalDistance } from '../../utils/diagonalDistance';\nimport { MoveGoalType } from './MoveGoalType';\n\nexport class KillSomethingGoalType extends GoalType {\n    static name = 'KillSomething';\n\n    static isFinished = (entity, goal) => {\n        return !goal.target || goal.target.isDead || goal.target.isDestroyed;\n    };\n\n    static takeAction = (entity, goal) => {\n        // try melee\n        let evt = entity.fireEvent('try-melee', {\n            target: goal.target,\n        });\n\n        if (evt.handled) {\n            return SUCCESS;\n        }\n\n        const start = entity.position.getPos();\n        const targetPos = goal.target.position.getPos();\n\n        // try pathing to target\n        const result = computeAStar({\n            start,\n            goal: targetPos,\n            cost: (a, b) => {\n                if (game.map.isOutOfbounds(b.x, b.y)) {\n                    return Infinity;\n                }\n\n                if (b.x === targetPos.x && b.y === targetPos.y) {\n                    return diagonalDistance(a, b);\n                }\n\n                const entities = game.map.getEntitiesAt(b.x, b.y);\n\n                if (entities.some((e) => e.blocker)) {\n                    return Infinity;\n                }\n\n                if (entities.some((e) => e.id !== entity.id && e.body && !e.isIncapacitated)) {\n                    return Infinity;\n                }\n\n                if (entities.some((e) => e.sharpTrap)) {\n                    return 8;\n                }\n\n                return diagonalDistance(a, b);\n            },\n        });\n\n        if (result.success && result.cost < 55) {\n            const segment = result.path[1];\n            const delta = {\n                x: segment.x - start.x,\n                y: segment.y - start.y,\n            };\n            const moveGoal = MoveGoalType.createAsSubGoal(goal, {\n                data: delta,\n            });\n\n            entity.brain.pushGoal(moveGoal);\n\n            entity.fireEvent('take-action');\n\n            return SUCCESS;\n        }\n\n        // try defense\n        // try ranged\n        // try items\n        // try movement\n        // fail to intent\n\n        entity.fireEvent('energy-consumed', 1000);\n\n        return FAILURE;\n    };\n}\n","import { diagonalDistance } from './diagonalDistance';\nimport { manhattanDistance } from './ManhattanDistance';\nimport PriorityQueue from './PriorityQueue';\n\nconst getNeighbors = (x, y) => [\n    {\n        x: x,\n        y: y - 1,\n    },\n    {\n        x: x - 1,\n        y: y,\n    },\n    {\n        x: x + 1,\n        y: y,\n    },\n    {\n        x: x,\n        y: y + 1,\n    },\n    {\n        x: x - 1,\n        y: y - 1,\n    },\n    {\n        x: x + 1,\n        y: y - 1,\n    },\n    {\n        x: x - 1,\n        y: y + 1,\n    },\n    {\n        x: x + 1,\n        y: y + 1,\n    },\n];\n\nconst key = (pos) => `${pos.x},${pos.y}`;\n\nconst defaultSettings = {\n    start: {},\n    goal: {},\n    cost: () => {},\n    allowDiagonals: true,\n};\n\nexport const computeAStar = (settings = defaultSettings) => {\n    const heuristic = settings.allowDiagonals\n        ? diagonalDistance\n        : manhattanDistance;\n    const start = settings.start;\n    const goal = settings.goal;\n    const cost = settings.cost;\n\n    const open = new PriorityQueue();\n    const cameFrom = {};\n    const costSoFar = {};\n    const startKey = key(start);\n    const goalKey = key(goal);\n\n    const result = {\n        success: false,\n        path: [],\n        costs: [],\n        cost: Infinity,\n        start,\n        goal,\n    };\n\n    if (cost(start, goal) === Infinity) {\n        return result;\n    }\n\n    open.put(\n        {\n            key: startKey,\n            pos: start,\n        },\n        0\n    );\n\n    costSoFar[startKey] = 0;\n\n    while (!open.isEmpty()) {\n        const { key: currentKey, pos: current } = open.pop();\n\n        if (currentKey === goalKey) {\n            result.success = true;\n            break;\n        }\n\n        const neighbors = getNeighbors(current.x, current.y);\n\n        for (let next of neighbors) {\n            const nextKey = key(next);\n            const graphCost = nextKey === goalKey ? 0 : cost(current, next);\n\n            if (graphCost === Infinity) {\n                continue;\n            }\n\n            const newCost = costSoFar[currentKey] + graphCost;\n\n            if (!(nextKey in costSoFar) || newCost < costSoFar[nextKey]) {\n                costSoFar[nextKey] = newCost;\n\n                const priority = newCost + heuristic(next, goal);\n\n                open.put(\n                    {\n                        key: nextKey,\n                        pos: next,\n                    },\n                    priority\n                );\n\n                cameFrom[nextKey] = current;\n            }\n        }\n    }\n\n    if (!result.success) {\n        return result;\n    }\n\n    result.path = [goal];\n    result.cost = costSoFar[goalKey];\n    result.costs = [costSoFar[goalKey]];\n\n    let previous = cameFrom[key(goal)];\n\n    while (previous) {\n        const previousKey = key(previous);\n\n        result.path.unshift(previous);\n        result.costs.unshift(costSoFar[previousKey]);\n\n        previous = cameFrom[previousKey];\n    }\n\n    return result;\n};\n","export const diagonalDistance = (a, b) => {\n    const dx = Math.abs(a.x - b.x);\n    const dy = Math.abs(a.y - b.y);\n\n    return 1 * (dx + dy) + (1.41 - 2 * 1) * Math.min(dx, dy);\n};\n","export const manhattanDistance = (a, b) => {\n    return Math.abs(a.x - b.x) + Math.abs(a.y - b.y);\n};\n","const createItem = (value, priority) => ({ value, priority });\n\nexport default class PriorityQueue {\n    #items = [];\n\n    isEmpty() {\n        return this.#items.length <= 0;\n    }\n\n    pop() {\n        if (!this.isEmpty()) {\n            return this.#items.shift().value;\n        }\n    }\n\n    peek() {\n        if (!this.isEmpty()) {\n            return this.#items[0].value;\n        }\n    }\n\n    put(value, priority) {\n        const item = createItem(value, priority);\n\n        for (let i = 0; i < this.#items.length; i++) {\n            if (this.#items[i].priority > item.priority) {\n                this.#items.splice(i, 0, item);\n                return;\n            }\n        }\n\n        this.#items.push(item);\n    }\n}\n","import { GoalType } from './GoalType';\nimport { SUCCESS, FAILURE } from '../GoalActionResult';\n\nexport class MoveGoalType extends GoalType {\n    static name = 'Move';\n\n    static isFinished = (entity, goal) => {\n        return goal.complete;\n    };\n\n    static takeAction = (entity, goal) => {\n        const evt = entity.fireEvent('try-move', {\n            x: goal.data.x,\n            y: goal.data.y,\n        });\n\n        if (evt.handled) {\n            goal.complete = true;\n\n            return SUCCESS;\n        }\n\n        return FAILURE;\n    };\n}\n","import { GoalType } from './GoalType';\nimport { SUCCESS, FAILURE } from '../GoalActionResult';\n\nexport class EatFoodGoalType extends GoalType {\n    static name = 'EatFood';\n\n    static isFinished = (entity, goal) => {\n        return goal.complete;\n    };\n\n    static takeAction = (entity, goal) => {\n        const evt = entity.fireEvent('try-eat-food', {\n            food: 10000,\n        });\n\n        if (evt.handled) {\n            goal.complete = true;\n\n            return SUCCESS;\n        }\n\n        return FAILURE;\n    };\n}\n","import { game } from '../../core/Game';\nimport { pickRandom } from '../../utils/rand';\n\nexport const createSpawnable = () => {\n    const type = pickRandom(['PineTree', 'SmallPineTree']);\n    const tree = game.ecs.createPrefab(type);\n\n    return tree;\n};\n","export const pickRandom = (arr) => {\n    return arr[Math.floor(Math.random() * arr.length)];\n};\n\nexport const randomInt = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nexport const randomBool = () => {\n    return pickRandom([true, false]);\n};\n\nexport const randomWeightedBool = (weight = .5) => {\n    return Math.random() <= weight;\n};\n","import { BoredGoalType } from '../../ai/GoalTypes';\nimport { game } from '../../core/Game';\n\nexport const createSpawnable = () => {\n    const wanderer = game.ecs.createPrefab('HumanWanderer');\n\n    wanderer.brain.pushGoal(BoredGoalType.create());\n\n    return wanderer;\n};\n","import { game } from '../../core/Game';\n\nexport const createSpawnable = (data) => {\n    return game.ecs.createPrefab('Pool', {\n        liquidContainer: {\n            content: data.content,\n            volume: data.volume,\n        },\n    });\n};\n","import { Component } from 'geotic';\nimport { Blocker } from './Blocker';\nimport { Shadowcaster } from './Shadowcaster';\n\nexport class Door extends Component {\n    static properties = {\n        isOpen: false,\n        chOpen: \"'\",\n        chClosed: '+',\n    };\n\n    get ch() {\n        return this.isOpen ? this.chOpen : this.chClosed;\n    }\n\n    get display() {\n        return this.isOpen ? '[open]' : '[closed]';\n    }\n\n    openDoor() {\n        if (this.isOpen) {\n            return false;\n        }\n\n        this.isOpen = true;\n\n        const glyph = this.entity.glyph;\n\n        if (glyph) {\n            glyph.ch = this.ch;\n        }\n\n        this.entity.blocker.destroy();\n        this.entity.shadowcaster.destroy();\n\n        return true;\n    }\n\n    closeDoor() {\n        if (!this.isOpen) {\n            return false;\n        }\n        // todo: check if entity blocking door\n\n        this.isOpen = false;\n\n        const glyph = this.entity.glyph;\n\n        if (glyph) {\n            glyph.ch = this.ch;\n        }\n\n        this.entity.add(Blocker);\n        this.entity.add(Shadowcaster);\n\n        return true;\n    }\n\n    onGetInteractions(evt) {\n        if (this.isOpen) {\n            evt.data.interactions.push({\n                name: 'Close door',\n                evt: 'try-close-door',\n            });\n        } else {\n            evt.data.interactions.push({\n                name: 'Open door',\n                evt: 'try-open-door',\n            });\n        }\n    }\n\n    onTryCloseDoor(evt) {\n        if (this.closeDoor()) {\n            evt.data.interactor.fireEvent('energy-consumed', 800);\n        }\n        evt.handle();\n    }\n\n    onTryOpenDoor(evt) {\n        if (this.openDoor()) {\n            evt.data.interactor.fireEvent('energy-consumed', 800);\n        }\n        evt.handle();\n    }\n\n    onProjectileHit(evt) {\n        if (!this.isOpen) {\n            evt.data.stopProjectile = true;\n            evt.data.deflectProjectile = false;\n        }\n\n        this.openDoor();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Blocker extends Component {\n    onProjectileHit(evt) {\n        // https://github.com/ddmills/geotic/issues/22\n        if (!this.isAttached) {\n            return;\n        }\n\n        evt.data.stopProjectile = true;\n        evt.data.deflectProjectile = true;\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Shadowcaster extends Component {}\n","import { Component } from 'geotic';\n\nexport class Armor extends Component {\n    static properties = {\n        value: 4,\n    };\n\n    onQueryEquippedAbilityModifierArmor(evt) {\n        evt.data.modifiers.push({\n            source: this.entity.moniker.name,\n            mod: this.value,\n        });\n    }\n}\n","import { Component } from 'geotic';\nimport { Inventory } from './Inventory';\nimport { IsInventoried } from './IsInventoried';\n\nexport class Loot extends Component {\n    onGetInteractions(evt) {\n        const interactor = evt.data.interactor;\n        const isInventoried = this.entity.has(IsInventoried);\n\n        if (!interactor.has(Inventory)) {\n            return;\n        }\n\n        if (isInventoried) {\n            if (interactor.inventory.hasLoot(this.entity)) {\n                evt.data.interactions.push({\n                    name: 'Drop',\n                    evt: 'try-drop',\n                });\n            } else {\n                evt.data.interactions.push({\n                    name: 'Take',\n                    evt: 'try-take',\n                });\n            }\n        } else {\n            evt.data.interactions.push({\n                name: 'Pickup',\n                evt: 'try-pick-up',\n            });\n        }\n    }\n\n    onEquipped(evt) {\n        if (!evt.data.interactor.has(Inventory)) {\n            return;\n        }\n\n        if (evt.data.interactor.inventory.hasLoot(this.entity)) {\n            return;\n        }\n\n        evt.data.interactor.inventory.addLoot(this.entity);\n    }\n\n    onTryPickUp(evt) {\n        evt.data.interactor.inventory.addLoot(this.entity);\n        evt.data.interactor.fireEvent('energy-consumed', 100);\n        evt.handle();\n    }\n\n    onTryTake(evt) {\n        const owner = this.entity.isInventoried.owner;\n\n        owner.inventory.removeLoot(this.entity);\n        evt.data.interactor.inventory.addLoot(this.entity);\n        evt.data.interactor.fireEvent('energy-consumed', 100);\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { SCREEN_INVENTORY } from '../../core/screens/ScreenType';\nimport { IsInventoried } from './IsInventoried';\nimport { Stackable } from './Stackable';\n\nexport class Inventory extends Component {\n    static properties = {\n        content: '<EntityArray>',\n    };\n\n    onDestroyed() {\n        this.content.forEach((entity) => entity.destroy());\n    }\n\n    onQueryOwnership(evt) {\n        this.content.forEach((entity) => {\n            evt.data.result.add(entity);\n            entity.fireEvent('query-ownership', { result: evt.data.result });\n        });\n    }\n\n    getStackable(stackableIdentifier) {\n        return this.content.find((entity) => {\n            return (\n                entity.has(Stackable) &&\n                entity.stackable.identifier === stackableIdentifier\n            );\n        });\n    }\n\n    addLoot(loot) {\n        if (loot.has(Stackable)) {\n            const existing = this.getStackable(loot.stackable.identifier);\n\n            if (existing) {\n                existing.stackable.addOther(loot);\n\n                return;\n            }\n        }\n\n        loot.add(IsInventoried, {\n            owner: this.entity,\n        });\n\n        this.content.push(loot);\n    }\n\n    hasLoot(loot) {\n        const idx = this.content.indexOf(loot);\n\n        return idx >= 0;\n    }\n\n    removeLoot(loot, quantity) {\n        const isStackable = loot.has(Stackable);\n\n        if (isStackable && !isNaN(quantity)) {\n            loot.stackable.split(quantity);\n\n            return this.removeLoot(loot);\n        }\n\n        const idx = this.content.indexOf(loot);\n\n        if (idx >= 0) {\n            this.content.splice(idx, 1);\n            loot.isInventoried.destroy();\n        }\n\n        return loot;\n    }\n\n    dropLoot(loot, quantity) {\n        const ob = this.removeLoot(loot, quantity);\n        const pos = this.entity.position.getPos();\n\n        ob.position.setPos(pos.x, pos.y);\n\n        ob.fireEvent('dropped', {\n            dropper: this.entity,\n        });\n\n        return ob;\n    }\n\n    onTryOpen(evt) {\n        game.screens.replaceScreen(SCREEN_INVENTORY, {\n            accessible: this.entity,\n            accessor: evt.data.interactor,\n        });\n        evt.handle();\n    }\n\n    onGetInteractions(evt) {\n        evt.data.interactions.push({\n            name: 'Open',\n            evt: 'try-open',\n        });\n    }\n}\n","export const SCREEN_MAIN_MENU = 0;\nexport const SCREEN_ADVENTURE = 1;\nexport const SCREEN_DEATH = 2;\nexport const SCREEN_INVENTORY = 3;\nexport const SCREEN_INTERACT_MODAL = 4;\nexport const SCREEN_CURSOR = 5;\nexport const SCREEN_LOAD_SECTOR = 6;\nexport const SCREEN_EQUIPMENT = 7;\nexport const SCREEN_LIST_SELECT = 8;\nexport const SCREEN_CHARACTER = 9;\n","import { Component } from 'geotic';\nimport { Stackable } from './Stackable';\n\nexport class IsInventoried extends Component {\n    static properties = {\n        owner: '<Entity>',\n    };\n\n    isOwnedBy(entity) {\n        return this.owner && this.owner.id === entity.id;\n    }\n\n    onQueryOwnership(evt) {\n        evt.data.result.add(this.entity);\n    }\n\n    onTryDrop(evt) {\n        this.owner.inventory.dropLoot(this.entity);\n\n        evt.data.interactor.fireEvent('energy-consumed', 200);\n\n        evt.handle();\n    }\n\n    onThrown(evt) {\n        const isStackable = this.entity.has(Stackable);\n        const quantity = isStackable ? 1 : null;\n\n        this.owner.inventory.removeLoot(this.entity, quantity);\n    }\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { STACKABLE_DEFAULT } from '../../enums/Stackables';\nimport { IsDestroying } from './IsDestroying';\nimport { IsInventoried } from './IsInventoried';\n\nexport class Stackable extends Component {\n    static properties = {\n        identifier: STACKABLE_DEFAULT,\n        quantity: 1,\n    };\n\n    get display() {\n        return `x ${this.quantity}`;\n    }\n\n    increment(amount) {\n        this.quantity += amount;\n    }\n\n    addOther(other) {\n        this.increment(other.stackable.quantity);\n        other.stackable.quantity = 0;\n        other.add(IsDestroying);\n    }\n\n    split(quantity) {\n        if (quantity >= this.quantity) {\n            quantity = this.quantity;\n            return this.entity;\n        }\n\n        const clone = game.engine.cloneEntity(this.entity);\n        clone.stackable.quantity -= quantity;\n\n        this.quantity = quantity;\n\n        if (clone.has(IsInventoried)) {\n            // make sure inventory contents are still \"correct\"\n            clone.isInventoried.owner.inventory.content.push(clone);\n        }\n\n        return clone;\n    }\n}\n","export const STACKABLE_DEFAULT = 'STACKABLE_DEFAULT';\nexport const STACKABLE_STONE = 'STACKABLE_STONE';\nexport const STACKABLE_GLASS_SHARD = 'STACKABLE_GLASS_SHARD';\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { SCREEN_ADVENTURE, SCREEN_CURSOR } from '../../core/screens/ScreenType';\nimport { ABILITY_THROWING, getAbilityValue } from '../../data/Abilities';\nimport Attack from '../../data/Attack';\nimport { DMG_TYPE_BLUDGEONING } from '../../data/DamageTypes';\nimport { getStat, STAT_STRENGTH } from '../../data/Stats';\nimport {\n    CURSOR_SEGMENT_INVALID,\n    CURSOR_SEGMENT_INTEREST,\n    CURSOR_SEGMENT_UNKNOWN,\n    CURSOR_SEGMENT_NONE,\n} from '../../enums/CursorSegments';\nimport { bresenhamLine } from '../../utils/BresenhamLine';\nimport { randomInt } from '../../utils/rand';\nimport { Blocker } from './Blocker';\nimport { Body } from './Body';\nimport { Inventory } from './Inventory';\nimport { IsVisible } from './IsVisible';\n\nexport class Throwable extends Component {\n    static properties = {\n        die: 4,\n        modifier: 0,\n        cost: 500,\n        damageType: DMG_TYPE_BLUDGEONING,\n    };\n\n    onGetInteractions(evt) {\n        if (!evt.data.interactor.has(Inventory)) {\n            return;\n        }\n\n        if (!evt.data.interactor.inventory.hasLoot(this.entity)) {\n            return;\n        }\n\n        evt.data.interactions.push({\n            name: 'Throw',\n            evt: 'try-throw',\n        });\n    }\n\n    throw(trajectory, initiator) {\n        this.entity.fireEvent('thrown', {\n            initiator,\n            trajectory,\n        });\n\n        for (let i = 0; i < trajectory.length; i++) {\n            if (i == 0) {\n                continue;\n            }\n\n            const position = trajectory[i];\n            const entities = position.entities;\n\n            let stopped = false;\n            let deflected = false;\n\n            const hit = entities.find((entity) => {\n                const evt = entity.fireEvent('projectile-hit', {\n                    initiator,\n                    trajectory,\n                    projectile: this.entity,\n                });\n\n                stopped = evt.data.stopProjectile;\n                deflected = evt.data.deflectProjectile;\n\n                return stopped || deflected;\n            });\n\n            if (hit) {\n                if (deflected) {\n                    const prev = trajectory[i - 1];\n\n                    this.entity.position.setPos(prev.x, prev.y);\n                    this.entity.fireEvent('collide-ground', {\n                        initiator,\n                        x: prev.x,\n                        y: prev.y,\n                    });\n                } else {\n                    this.entity.position.setPos(position.x, position.y);\n                    this.entity.fireEvent('collide', {\n                        initiator,\n                        hit,\n                        x: position.x,\n                        y: position.y,\n                    });\n\n                    const str = getStat(STAT_STRENGTH, initiator);\n                    const die = randomInt(1, this.die);\n                    const damage = die + str + this.modifier;\n                    const attack = new Attack({\n                        attacker: initiator,\n                        defender: hit,\n                        weaponName: this.entity.moniker.display,\n                        damage,\n                        damageType: this.damageType,\n                        ignoreDodge: true,\n                    });\n\n                    hit.fireEvent('attacked', { attack });\n                }\n\n                break;\n            } else if (i === trajectory.length - 1) {\n                this.entity.position.setPos(position.x, position.y);\n                this.entity.fireEvent('collide-ground', {\n                    initiator,\n                    x: position.x,\n                    y: position.y,\n                });\n            }\n        }\n    }\n\n    onTryThrow(evt) {\n        const range = getAbilityValue(ABILITY_THROWING, evt.data.interactor);\n\n        game.screens.pushScreen(SCREEN_CURSOR, {\n            start: evt.data.interactor.position.getPos(),\n            drawLine: true,\n            drawTags: false,\n            onResult: (cursor) => {\n                game.screens.setScreen(SCREEN_ADVENTURE);\n\n                this.entity.position.setPos(cursor.start.x, cursor.start.y);\n\n                const line = bresenhamLine(\n                    cursor.start.x,\n                    cursor.start.y,\n                    cursor.position.x,\n                    cursor.position.y\n                );\n                const trajectory = line.slice(0, range + 1).map((pos) => ({\n                    x: pos.x,\n                    y: pos.y,\n                    entities: game.map.getEntitiesAt(pos.x, pos.y),\n                }));\n\n                evt.data.interactor.fireEvent('energy-consumed', this.cost);\n\n                this.throw(trajectory, evt.data.interactor);\n            },\n            onCancel: () => {\n                game.screens.popScreen();\n            },\n            getSegmentTypes: (line) => {\n                let lineValid = true;\n\n                const result = line.map(({ x, y }, idx) => {\n                    if (idx === 0) {\n                        return CURSOR_SEGMENT_NONE;\n                    }\n\n                    // todo: fire \"query\" event on each item in path\n                    const entities = game.map.getEntitiesAt(x, y);\n                    const blocker = entities.find(\n                        (entity) => entity.has(IsVisible) && entity.has(Blocker)\n                    );\n                    const body = entities.find(\n                        (entity) => entity.has(IsVisible) && entity.has(Body)\n                    );\n\n                    if (blocker) {\n                        lineValid = false;\n                    }\n\n                    const atMaxRange = idx === range;\n\n                    if (lineValid && (body || atMaxRange)) {\n                        lineValid = false;\n                        return CURSOR_SEGMENT_INTEREST;\n                    }\n\n                    return !lineValid\n                        ? CURSOR_SEGMENT_INVALID\n                        : CURSOR_SEGMENT_UNKNOWN;\n                });\n\n                const interestIdx = result.indexOf(CURSOR_SEGMENT_INTEREST);\n                const blockerIdx = result.indexOf(CURSOR_SEGMENT_INVALID);\n\n                if (interestIdx < blockerIdx && blockerIdx >= 1) {\n                    result[blockerIdx - 1] = CURSOR_SEGMENT_INTEREST;\n                }\n\n                return result;\n            },\n        });\n    }\n}\n","import ArmorAbility from './abilities/ArmorAbility';\nimport SpeedAbility from './abilities/SpeedAbility';\nimport ThrowingAbility from './abilities/ThrowingAbility';\nimport DodgeAbility from './abilities/DodgeAbility';\n\nexport const ABILITY_SPEED = 'ABILITY_SPEED';\nexport const ABILITY_THROWING = 'ABILITY_THROWING';\nexport const ABILITY_ARMOR = 'ABILITY_ARMOR';\nexport const ABILITY_DODGE = 'ABILITY_DODGE';\n\nconst lookup = {\n    [ABILITY_ARMOR]: new ArmorAbility(),\n    [ABILITY_SPEED]: new SpeedAbility(),\n    [ABILITY_THROWING]: new ThrowingAbility(),\n    [ABILITY_DODGE]: new DodgeAbility(),\n};\n\nexport const getAbility = (key) => lookup[key];\nexport const getAbilityName = (key) => lookup[key].name;\nexport const getAbilityValue = (key, entity) => lookup[key].compute(entity);\n","import { ABILITY_ARMOR } from '../Abilities';\nimport Ability from './Ability';\n\nexport const getArmorBlockPercent = (ability = 0) => {\n    const base = 10;\n    const unscaled = 1 - base / (ability + base);\n\n    return Math.floor(unscaled * 100);\n};\n\nexport default class ArmorAbility extends Ability {\n    constructor() {\n        super(ABILITY_ARMOR, 'armor');\n    }\n\n    compute(entity) {\n        return this.getModifierSum(entity);\n    }\n}\n","export default class Ability {\n    key = -1;\n    name = 'ability';\n    baseStat = null;\n\n    constructor(key, name, baseStat) {\n        this.key = key;\n        this.name = name;\n        this.baseStat = baseStat;\n    }\n\n    getModifiers(entity) {\n        const modifiers = [];\n\n        entity.fireEvent(`query-ability-modifier-${this.name}`, {\n            name: this.name,\n            modifiers,\n        });\n\n        return modifiers;\n    }\n\n    getModifierSum(entity) {\n        const modifiers = this.getModifiers(entity);\n\n        return modifiers.reduce((sum, cur) => sum + cur.mod, 0);\n    }\n\n    compute(entity) {\n        return 1;\n    }\n}\n","import { ABILITY_SPEED } from '../Abilities';\nimport Ability from './Ability';\n\nexport default class SpeedAbility extends Ability {\n    constructor() {\n        super(ABILITY_SPEED, 'speed');\n    }\n\n    compute(entity) {\n        return this.getModifierSum(entity);\n    }\n}\n","import { ABILITY_THROWING } from '../Abilities';\nimport { getStat, STAT_ATHLETICISM } from '../Stats';\nimport Ability from './Ability';\n\nexport default class ThrowingAbility extends Ability {\n    constructor() {\n        super(ABILITY_THROWING, 'throwing', STAT_ATHLETICISM);\n    }\n\n    compute(entity) {\n        const base = getStat(STAT_ATHLETICISM, entity);\n        const modifier = this.getModifierSum(entity);\n\n        return Math.max(0, base + modifier) + 6;\n    }\n}\n","import { randomInt } from '../utils/rand';\n\nexport const STAT_STRENGTH = 0;\nexport const STAT_FINESSE = 1;\nexport const STAT_ATHLETICISM = 2;\nexport const STAT_TRICKERY = 3;\n\nconst lookup = {\n    [STAT_STRENGTH]: {\n        name: 'strength',\n    },\n    [STAT_FINESSE]: {\n        name: 'finesse',\n    },\n    [STAT_ATHLETICISM]: {\n        name: 'athleticism',\n    },\n    [STAT_TRICKERY]: {\n        name: 'trickery',\n    },\n};\n\nexport const getStatName = (stat) => lookup[stat].name;\nexport const getStat = (stat, entity) => {\n    const name = lookup[stat].name;\n\n    return entity.stats[name]();\n};\nexport const rollStat = (stat, entity) => {\n    return randomInt(1, 20) + getStat(stat, entity);\n};\nexport const statCheck = (stat, entity, target) => {\n    return rollStat(stat, entity) >= target;\n};\n","import { ABILITY_DODGE } from '../Abilities';\nimport { getStat, STAT_FINESSE } from '../Stats';\nimport Ability from './Ability';\n\nexport const getDodgePercent = (ability = 0) => {\n    const base = 5;\n    const unscaled = 1 - base / (ability + base);\n\n    return Math.floor(unscaled * 100);\n};\n\nexport default class DodgeAbility extends Ability {\n    constructor() {\n        super(ABILITY_DODGE, 'dodge', STAT_FINESSE);\n    }\n\n    compute(entity) {\n        const stat = getStat(STAT_FINESSE, entity);\n        const modifier = this.getModifierSum(entity);\n\n        return stat + modifier;\n    }\n}\n","export default class Attack {\n    constructor(data) {\n        this.attacker = data.attacker;\n        this.defender = data.defender;\n        this.weaponName = data.weaponName;\n        this.damage = data.damage;\n        this.damageType = data.damageType;\n        this.ignoreDodge = data.ignoreDodge;\n    }\n}\n","export const DMG_TYPE_BLUDGEONING = 'DMG_TYPE_BLUDGEONING';\nexport const DMG_TYPE_PIERCING = 'DMG_TYPE_PIERCING';\nexport const DMG_TYPE_SLASHING = 'DMG_TYPE_SLASHING';\n\nconst lookup = {\n    [DMG_TYPE_BLUDGEONING]: {\n        name: 'Bludgeoning',\n        verb: 'bludgeons',\n    },\n    [DMG_TYPE_PIERCING]: {\n        name: 'Piercing',\n        verb: 'pierces',\n    },\n    [DMG_TYPE_SLASHING]: {\n        name: 'Slashing',\n        verb: 'slashes',\n    },\n};\n\nexport const getDmgTypeName = (type) => lookup[type].name;\nexport const getDmgTypeVerb = (type) => lookup[type].verb;\n","export const CURSOR_SEGMENT_UNKNOWN = 0;\nexport const CURSOR_SEGMENT_INVALID = 1;\nexport const CURSOR_SEGMENT_NONE = 2;\nexport const CURSOR_SEGMENT_INTEREST = 3;\n\nconst colorMap = {\n    [CURSOR_SEGMENT_UNKNOWN]: '#57a5ef',\n    [CURSOR_SEGMENT_INVALID]: '#ce5454',\n    [CURSOR_SEGMENT_INTEREST]: '#57a5ef',\n};\n\nconst glyphMap = {\n    [CURSOR_SEGMENT_UNKNOWN]: '·',\n    [CURSOR_SEGMENT_INVALID]: '·',\n    [CURSOR_SEGMENT_INTEREST]: '•',\n};\n\nexport const getCursorSegmentTypeColor = (type) => colorMap[type];\nexport const getCursorSegmentTypeGlyph = (type) => glyphMap[type];\n","export const bresenhamLine = (x0, y0, x1, y1) => {\n    const dx = Math.abs(x1 - x0);\n    const dy = Math.abs(y1 - y0);\n    const sx = x0 < x1 ? 1 : -1;\n    const sy = y0 < y1 ? 1 : -1;\n    const result = [];\n\n    let err = dx - dy;\n\n    while (true) {\n        result.push({\n            x: x0,\n            y: y0,\n        });\n\n        if (x0 === x1 && y0 === y1) {\n            break;\n        }\n\n        const e2 = 2 * err;\n\n        if (e2 > -dy) {\n            err -= dy;\n            x0 += sx;\n        }\n        if (e2 < dx) {\n            err += dx;\n            y0 += sy;\n        }\n    }\n\n    return result;\n};\n\nexport const bresenhamLineExclusive = (x0, y0, x1, y1) => {\n    const line = bresenhamLine(x0, y0, x1, y1);\n\n    line.shift();\n    line.pop();\n\n    return line;\n};\n","import { Component } from 'geotic';\nimport { SPWN_CORPSE } from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\n\nexport class Body extends Component {\n    static properties = {\n        corpseSpawnable: SPWN_CORPSE,\n    };\n\n    onDeath(evt) {\n        if (!this.entity.has('Position')) {\n            return;\n        }\n\n        const pos = this.entity.position.getPos();\n        const corpse = spawn(this.corpseSpawnable, pos.x, pos.y);\n\n        if (this.entity.has('Moniker')) {\n            corpse.moniker.name = `${this.entity.moniker.name} corpse`;\n        }\n    }\n\n    onProjectileHit(evt) {\n        evt.data.stopProjectile = true;\n    }\n}\n","import { Component } from 'geotic';\n\nexport class IsVisible extends Component {\n    static properties = {\n        amount: 0,\n        range: 0,\n    };\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { SPWN_GLASS_SHARD } from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\nimport { CONSOLE_EVENT_SHATTER } from '../../enums/ConsoleEvents';\nimport { IsDestroying } from './IsDestroying';\nimport { LiquidContainer } from './LiquidContainer';\n\nexport class FragileGlass extends Component {\n    shatter(x, y) {\n        spawn(SPWN_GLASS_SHARD, x, y, {\n            stackable: {\n                quantity: 3,\n            },\n        });\n\n        if (this.entity.has(LiquidContainer)) {\n            if (this.entity.liquidContainer.pour(x, y)) {\n                game.console.event(CONSOLE_EVENT_SHATTER, {\n                    target: this.entity,\n                    liquid: this.entity.liquidContainer.content,\n                });\n            }\n        } else {\n            game.console.event(CONSOLE_EVENT_SHATTER, {\n                target: this.entity,\n            });\n        }\n\n        this.entity.add(IsDestroying);\n    }\n\n    onCollideGround(evt) {\n        this.shatter(evt.data.x, evt.data.y);\n    }\n\n    onCollide(evt) {\n        this.shatter(evt.data.x, evt.data.y);\n    }\n}\n","import { getDmgTypeVerb } from '../data/DamageTypes';\nimport { IsPlayer, Moniker, IsVisible } from '../ecs/components';\nimport { liquids } from './LiquidTypes';\n\nexport const CONSOLE_EVENT_DAMAGE = 0;\nexport const CONSOLE_EVENT_DEAD = 1;\nexport const CONSOLE_EVENT_SHATTER = 2;\nexport const CONSOLE_EVENT_MISS = 3;\nexport const CONSOLE_EVENT_BLOCK = 4;\nexport const CONSOLE_EVENT_TRAP_SHARP = 5;\n\nconst getMonikerSubject = (entity) => {\n    if (entity.has(Moniker)) {\n        return `The ${entity.moniker.simpleDisplay.toLowerCase()}`;\n    }\n\n    return `The thing`;\n};\n\nconst getMonikerIndirectObject = (entity) => {\n    if (entity.has(IsPlayer)) {\n        return 'you';\n    }\n\n    if (entity.has(Moniker)) {\n        return `the ${entity.moniker.simpleDisplay.toLowerCase()}`;\n    }\n};\n\nconst mapping = {\n    [CONSOLE_EVENT_MISS]: {\n        message(data) {\n            const attacker = getMonikerIndirectObject(data.attacker);\n            const defender = getMonikerSubject(data.defender);\n\n            return `${defender} dodged an attack from ${attacker} (${data.dodgePrcnt}%)`;\n        },\n        shouldAppear(data) {\n            return data.defender.has(IsPlayer) || data.attacker.has(IsVisible);\n        },\n    },\n    [CONSOLE_EVENT_DAMAGE]: {\n        message(data) {\n            const source = getMonikerSubject(data.source);\n            const target = getMonikerIndirectObject(data.target);\n            const dmgVerb = getDmgTypeVerb(data.damageType);\n            const dmg = data.damage;\n            const blocked = data.blocked;\n\n            const blockText =\n                blocked > 0 ? `. (${blocked} damage was blocked)` : '';\n\n            return `${source} ${dmgVerb} ${target} for ${dmg} hp${blockText}`;\n        },\n        shouldAppear(data) {\n            return data.target.has(IsPlayer) || data.target.has(IsVisible);\n        },\n    },\n    [CONSOLE_EVENT_DEAD]: {\n        message(data) {\n            const source = getMonikerSubject(data.source);\n            const target = getMonikerIndirectObject(data.target);\n            const dmgVerb = getDmgTypeVerb(data.damageType);\n\n            return `${source} ${dmgVerb} ${target} to death`;\n        },\n        shouldAppear(data) {\n            return data.target.has(IsPlayer) || data.target.has(IsVisible);\n        },\n    },\n    [CONSOLE_EVENT_SHATTER]: {\n        message(data) {\n            if (isNaN(data.liquid)) {\n                return `${getMonikerSubject(data.target)} shatters!`;\n            } else {\n                return `${getMonikerSubject(\n                    data.target\n                )} shatters and spills its ${\n                    liquids[data.liquid].colorDesc\n                } content!`;\n            }\n        },\n        shouldAppear(data) {\n            return data.target.has(IsVisible);\n        },\n    },\n    [CONSOLE_EVENT_TRAP_SHARP]: {\n        message(data) {\n            return `${getMonikerSubject(\n                data.entity\n            )} cuts themselves on ${\n                getMonikerIndirectObject(data.trap)\n            } and begins bleeding`;\n        },\n        shouldAppear(data) {\n            return data.trap.has(IsVisible);\n        },\n    }\n};\n\nexport const getMessage = (evt, data) => {\n    return mapping[evt].message(data);\n};\n\nexport const shouldAppear = (evt, data) => {\n    return mapping[evt].shouldAppear(data);\n};\n","import { Component } from 'geotic';\nimport { INVALID, FAILURE } from '../../ai/GoalActionResult';\n\nexport class Brain extends Component {\n    static properties = {\n        goals: '<EntityArray>',\n    };\n\n    onDestroyed() {\n        this.goals.forEach((entity) => {\n            entity.destroy();\n        });\n    }\n\n    onTakeAction(evt) {\n        while (this.peekGoal() && this.peekGoal().isFinished()) {\n            this.popGoal().entity.destroy();\n        }\n\n        const currentGoal = this.peekGoal();\n        const result = currentGoal.takeAction();\n\n        if (result === FAILURE) {\n            this.removeGoal(currentGoal);\n        } else if (result === INVALID) {\n            this.removeGoal(currentGoal);\n            this.entity.fireEvent('take-action');\n        }\n\n        evt.handle();\n    }\n\n    removeGoal(goal) {\n        const goalsToDestroy = [];\n\n        this.goals = this.goals.filter((g) => {\n            const isSelf = Boolean(g.id === goal.entity.id);\n            const isSiblingGoal = Boolean(\n                g.goal.originalIntent &&\n                    g.goal.originalIntent.id === goal.originalIntent.id\n            );\n\n            if (isSelf || isSiblingGoal) {\n                goalsToDestroy.push(g.goal);\n                return false;\n            }\n\n            return true;\n        });\n\n        goalsToDestroy.forEach((g) => g.entity.destroy());\n    }\n\n    pushGoal(goal) {\n        if (!(goal instanceof Component)) {\n            throw new Error('Pushing non-component goal!', goal);\n        }\n\n        goal.parent = this.entity;\n\n        return this.goals.push(goal.entity);\n    }\n\n    popGoal() {\n        return this.goals.pop().goal;\n    }\n\n    peekGoal() {\n        return this.goals[this.goals.length - 1].goal;\n    }\n}\n","import { Component } from 'geotic';\nimport * as GoalEvaluator from '../../ai/GoalEvaluator';\n\nexport class Goal extends Component {\n    static properties = {\n        name: 'Bored',\n        originalIntent: '<Entity>',\n        parent: '<Entity>',\n        target: '<Entity>',\n        complete: false,\n        data: {},\n    };\n\n    isFinished() {\n        return GoalEvaluator.isFinished(this.parent, this);\n    }\n\n    takeAction() {\n        return GoalEvaluator.takeAction(this.parent, this);\n    }\n}\n","import * as GoalTypes from './GoalTypes';\n\nconst goalTypeMap = {};\n\nObject.values(GoalTypes).forEach((goalType) => {\n    goalTypeMap[goalType.name] = goalType;\n});\n\nconst getGoalType = (name) => {\n    const type = goalTypeMap[name];\n\n    if (!type) {\n        console.warn(`GoalType (${name}) not found!`);\n    }\n\n    return type;\n};\n\nexport const isFinished = (entity, goal) => {\n    const type = getGoalType(goal.name);\n\n    return type.isFinished(entity, goal);\n};\n\nexport const takeAction = (entity, goal) => {\n    const type = getGoalType(goal.name);\n\n    return type.takeAction(entity, goal);\n};\n","import { Component } from 'geotic';\nimport { Door } from './Door';\nimport { LiquidContainer } from './LiquidContainer';\nimport { Stackable } from './Stackable';\n\nexport class Moniker extends Component {\n    static properties = {\n        name: 'Unknown',\n    };\n\n    get simpleDisplay() {\n        return this.name;\n    }\n\n    get display() {\n        const hasLiquid = this.entity.has(LiquidContainer);\n\n        if (hasLiquid) {\n            const disp = this.entity.liquidContainer.display;\n\n            return `${this.name} ${disp}`;\n        }\n\n        const hasStackable = this.entity.has(Stackable);\n\n        if (hasStackable) {\n            const disp = this.entity.stackable.display;\n\n            return `${this.name} ${disp}`;\n        }\n\n        const hasDoor = this.entity.has(Door);\n\n        if (hasDoor) {\n            const disp = this.entity.door.display;\n\n            return `${this.name} ${disp}`;\n        }\n\n        return this.name;\n    }\n}\n","import { Component } from 'geotic';\nimport { Moniker } from './Moniker';\n\nexport class Logger extends Component {\n    get moniker() {\n        return this.entity.has(Moniker)\n            ? this.entity.moniker.display\n            : 'Unknown';\n    }\n\n    onLog(evt) {\n        console.log(`[${this.moniker}]`, evt.data);\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Position extends Component {\n    getPos() {\n        return window.game.map.getPosition(this.entity.id);\n    }\n\n    setPos(x, y) {\n        return window.game.map.setPosition(x, y, this.entity.id);\n    }\n\n    equals(x, y) {\n        const pos = this.getPos();\n\n        return pos.x === x && pos.y === y;\n    }\n}\n","import { Component } from 'geotic';\nimport { LiquidContainer } from './LiquidContainer';\n\nexport class Glyph extends Component {\n    static properties = {\n        fg1: '#ddd',\n        fg2: '#666',\n        bg: null,\n        ch: '?',\n        z: 1000,\n    };\n\n    get primary() {\n        if (this.entity.has(LiquidContainer)) {\n            const col = this.entity.liquidContainer.primaryColorOverride;\n\n            if (col) {\n                return col;\n            }\n        }\n\n        return this.fg1;\n    }\n\n    get secondary() {\n        if (this.entity.has(LiquidContainer)) {\n            const col = this.entity.liquidContainer.secondaryColorOverride;\n\n            if (col) {\n                return col;\n            }\n        }\n\n        return this.fg2;\n    }\n\n    get background() {\n        return this.bg;\n    }\n\n    get char() {\n        return this.ch;\n    }\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { ABILITY_SPEED, getAbilityValue } from '../../data/Abilities';\nimport { Blocker } from './Blocker';\n\nexport class Legs extends Component {\n    onTryMove(evt) {\n        const position = this.entity.position.getPos();\n        const targetX = position.x + evt.data.x;\n        const targetY = position.y + evt.data.y;\n\n        const targetTileEntities = game.map.getEntitiesAt(targetX, targetY);\n\n        if (targetTileEntities.some((entity) => entity.has(Blocker))) {\n            return;\n        }\n\n        const nonHostile = targetTileEntities.find((entity) => {\n            return (\n                entity.factionMember &&\n                !game.factions.areEntitiesHostile(entity, this.entity)\n            );\n        });\n\n        // swap locations\n        if (nonHostile) {\n            nonHostile.position.setPos(position.x, position.y);\n        }\n\n        const speed = getAbilityValue(ABILITY_SPEED, this.entity);\n        const cost = (1 / speed) * 1000;\n\n        this.entity.fireEvent('energy-consumed', cost);\n        this.entity.position.setPos(targetX, targetY);\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class IsPlayer extends Component {}\n","import { Component } from 'geotic';\nimport { MoveGoalType } from '../../ai/GoalTypes';\nimport * as Directions from '../../enums/Directions';\n\nexport class Wandering extends Component {\n    onBoredom(evt) {\n        if (Math.random() > 0.5) {\n            return;\n        }\n\n        const direction = Math.floor(Math.random() * 9);\n        const delta = Directions.delta(direction);\n\n        evt.data.goal = MoveGoalType.create({\n            data: delta,\n        });\n        evt.handle();\n    }\n}\n","const directions = [\n    {\n        key: 0,\n        shortName: 'NW',\n        fullName: 'Northwest',\n        delta: {\n            x: -1,\n            y: -1,\n        },\n    },\n    {\n        key: 1,\n        shortName: 'N',\n        fullName: 'North',\n        delta: {\n            x: 0,\n            y: -1,\n        },\n    },\n    {\n        key: 2,\n        shortName: 'NE',\n        fullName: 'Northeast',\n        delta: {\n            x: 1,\n            y: -1,\n        },\n    },\n    {\n        key: 3,\n        shortName: 'W',\n        fullName: 'West',\n        delta: {\n            x: -1,\n            y: 0,\n        },\n    },\n    {\n        key: 4,\n        shortName: 'Z',\n        fullName: 'Here',\n        delta: {\n            x: 0,\n            y: 0,\n        },\n        adjacent: [],\n    },\n    {\n        key: 5,\n        shortName: 'E',\n        fullName: 'East',\n        delta: {\n            x: 1,\n            y: 0,\n        },\n    },\n    {\n        key: 6,\n        shortName: 'SW',\n        fullName: 'Southwest',\n        delta: {\n            x: -1,\n            y: 1,\n        },\n    },\n    {\n        key: 7,\n        shortName: 'S',\n        fullName: 'South',\n        delta: {\n            x: 0,\n            y: 1,\n        },\n    },\n    {\n        key: 8,\n        shortName: 'SE',\n        fullName: 'Southeast',\n        delta: {\n            x: 1,\n            y: 1,\n        },\n    },\n];\n\nexport const DIR_NW = 0;\nexport const DIR_N = 1;\nexport const DIR_NE = 2;\nexport const DIR_W = 3;\nexport const DIR_Z = 4;\nexport const DIR_E = 5;\nexport const DIR_SW = 6;\nexport const DIR_S = 7;\nexport const DIR_SE = 8;\n\ndirections[DIR_NW].adjacent = [DIR_N, DIR_W];\ndirections[DIR_N].adjacent = [DIR_NW, DIR_NE];\ndirections[DIR_NE].adjacent = [DIR_N, DIR_E];\ndirections[DIR_W].adjacent = [DIR_NW, DIR_SW];\ndirections[DIR_E].adjacent = [DIR_NE, DIR_SE];\ndirections[DIR_SW].adjacent = [DIR_W, DIR_S];\ndirections[DIR_S].adjacent = [DIR_SW, DIR_SE];\ndirections[DIR_SE].adjacent = [DIR_S, DIR_E];\n\nexport const shortName = (direction) => directions[direction].shortName;\n\nexport const fullName = (direction) => directions[direction].fullName;\n\nexport const delta = (direction) => directions[direction].delta;\n\nexport const adjacent = (direction) => directions[direction].adjacent;\n\nexport const getAdjacentDeltas = (direction) => adjacent(direction).map(delta);\n\nexport const directionFromDelta = (x, y) => {\n    return Object.values(directions).find((dir) => {\n        return dir.delta.x === x && dir.delta.y === y;\n    });\n};\n","import { Component } from 'geotic';\n\nexport class Explorable extends Component {}\n","import { Component } from 'geotic';\n\nexport class Explored extends Component {}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport {\n    ABILITY_ARMOR,\n    ABILITY_DODGE,\n    getAbilityValue,\n} from '../../data/Abilities';\nimport { getArmorBlockPercent } from '../../data/abilities/ArmorAbility';\nimport { getDodgePercent } from '../../data/abilities/DodgeAbility';\nimport {\n    CONSOLE_EVENT_DAMAGE,\n    CONSOLE_EVENT_DEAD,\n    CONSOLE_EVENT_MISS,\n} from '../../enums/ConsoleEvents';\nimport { randomInt } from '../../utils/rand';\nimport { IsDead } from './IsDead';\n\nexport class Health extends Component {\n    static properties = {\n        value: 32,\n        max: 32,\n    };\n\n    applyDamage(damage) {\n        this.value -= damage;\n\n        if (this.value <= 0) {\n            this.value = 0;\n            this.entity.add(IsDead);\n\n            return true;\n        }\n\n        return false;\n    }\n\n    onAttacked(evt) {\n        const attack = evt.data.attack;\n        const attacker = attack.attacker;\n        const defender = attack.defender;\n        const dodge = getAbilityValue(ABILITY_DODGE, defender);\n        const dodgePrcnt = getDodgePercent(dodge);\n\n        if (!attack.ignoreDodge && randomInt(1, 100) <= dodgePrcnt) {\n            game.console.event(CONSOLE_EVENT_MISS, {\n                defender,\n                attacker,\n                dodgePrcnt,\n            });\n\n            evt.data.isDodged = true;\n            evt.data.isKilled = false;\n            evt.handle();\n\n            return;\n        }\n\n        evt.data.isDodged = false;\n\n        const armor = getAbilityValue(ABILITY_ARMOR, defender);\n        const armorPrcnt = getArmorBlockPercent(armor) / 100;\n        const blocked = Math.floor(attack.damage * armorPrcnt);\n        const damage = attack.damage - blocked;\n\n        const isKilled = this.applyDamage(damage);\n        evt.data.isKilled = isKilled;\n\n        if (isKilled) {\n            game.console.event(CONSOLE_EVENT_DEAD, {\n                target: defender,\n                source: attacker,\n                damage,\n                damageType: attack.damageType,\n            });\n\n            evt.handle();\n\n            return;\n        }\n\n        game.console.event(CONSOLE_EVENT_DAMAGE, {\n            target: defender,\n            source: attacker,\n            damage,\n            damageType: attack.damageType,\n            blocked,\n        });\n\n        const pos = this.entity.position.getPos();\n\n        game.particles.createParticle(pos.x, pos.y, {\n            lifetime: 140,\n            fg1s: ['#8d4c4f', '#730d14'],\n            glyphs: ['*'],\n        });\n\n        evt.handle();\n    }\n\n    onHeal(evt) {\n        this.value += evt.data.value;\n\n        if (this.value > this.max) {\n            this.value = this.max;\n        }\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class IsDead extends Component {}\n","import { Component } from 'geotic';\nimport { getFactionByName } from '../../enums/Factions';\n\nexport class FactionMember extends Component {\n    static properties = {\n        name: 'Neutral',\n    };\n\n    get faction() {\n        return getFactionByName(this.name);\n    }\n}\n","import Faction from '../data/Faction';\n\nexport const FACTION_PLAYER = 0;\nexport const FACTION_VILLAGER = 1;\nexport const FACTION_GOBLIN = 2;\nexport const FACTION_NATURE = 3;\n\nexport const factions = {\n    player: new Faction({\n        id: FACTION_PLAYER,\n        name: 'player',\n        display: 'Player',\n    }),\n    villager: new Faction({\n        id: FACTION_VILLAGER,\n        name: 'villager',\n        display: 'Villager',\n    }),\n    goblin: new Faction({\n        id: FACTION_GOBLIN,\n        name: 'goblin',\n        display: 'Goblin',\n    }),\n    nature: new Faction({\n        id: FACTION_NATURE,\n        name: 'nature',\n        display: 'Nature',\n    }),\n};\n\nexport const getFactionByName = (name) => factions[name];\n","export default class Faction {\n    id = 0;\n    name = 'faction';\n    display = 'Faction';\n\n    constructor(properties) {\n        this.id = properties.id;\n        this.name = properties.name;\n        this.display = properties.display;\n    }\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { bresenhamLine } from '../../utils/BresenhamLine';\nimport { Shadowcaster } from './Shadowcaster';\n\nexport class Eyes extends Component {\n    static properties = {\n        range: 5,\n    };\n\n    canSee(entity) {\n        const start = this.entity.position.getPos();\n        const end = entity.position.getPos();\n\n        const line = bresenhamLine(start.x, start.y, end.x, end.y);\n\n        if (line.length > this.range) {\n            return false;\n        }\n\n        return !line.some((segment) => {\n            return game.map\n                .getEntitiesAt(segment.x, segment.y)\n                .some((entity) => entity.has(Shadowcaster));\n        });\n    }\n\n    onTryDetectHostiles(evt) {\n        const position = game.map.getPosition(this.entity.id);\n\n        if (!position) {\n            return;\n        }\n\n        // get within square area\n        const targets = game.map\n            .getEntitiesInRange(position.x, position.y, this.range)\n            .filter((e) => {\n                if (!e.actor) {\n                    return false;\n                }\n                if (e.isDead) {\n                    return false;\n                }\n                if (!game.factions.areEntitiesHostile(this.entity, e)) {\n                    return false;\n                }\n\n                return this.canSee(e);\n            });\n\n        if (targets.length > 0) {\n            targets.forEach((e) => {\n                evt.data.targets.add(e);\n            });\n            evt.handle();\n        }\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Particle extends Component {\n    static properties = {\n        lifetime: 200,\n        fg1s: ['#8d4c4f', '#730d14'],\n        fg2s: [],\n        bgs: [],\n        glyphs: ['·'],\n        speed: 0.05,\n        age: 0,\n        x: 0,\n        y: 0,\n        startX: 0,\n        startY: 0,\n        direction: {\n            x: 0,\n            y: 0,\n        },\n    };\n\n    get isExpired() {\n        return this.age >= this.lifetime;\n    }\n\n    get percent() {\n        return this.age / this.lifetime;\n    }\n\n    frame(arr = []) {\n        const len = arr.length;\n        const chunks = 1 / len;\n\n        return Math.trunc(this.percent / chunks);\n    }\n\n    get glyph() {\n        const frame = this.frame(this.glyphs);\n\n        return this.glyphs[frame];\n    }\n\n    get fg1() {\n        const frame = this.frame(this.fg1s);\n\n        return this.fg1s[frame];\n    }\n\n    get fg2() {\n        const frame = this.frame(this.fg2s);\n\n        return this.fg2s[frame];\n    }\n\n    get bg() {\n        const frame = this.frame(this.bgs);\n\n        return this.bgs[frame];\n    }\n}\n","import { Component } from 'geotic';\nimport { Particle } from './Particle';\n\nexport class ParticleEmitter extends Component {\n    static properties = {\n        particleData: {},\n        duration: 800,\n        rate: 3,\n        age: 0,\n        x: 0,\n        y: 0,\n        count: 0,\n    };\n\n    get isExpired() {\n        return this.age >= this.duration;\n    }\n\n    get percent() {\n        return this.age / this.duration;\n    }\n\n    createParticle() {\n        const particle = this.ecs.createEntity();\n\n        particle.add(Particle, {\n            ...this.particleData,\n            x: this.x,\n            y: this.y,\n        });\n\n        this.count += 1;\n\n        return particle;\n    }\n\n    frame(arr = []) {\n        const len = arr.length;\n        const chunks = 1 / len;\n\n        return Math.trunc(this.percent / chunks);\n    }\n}\n","import { Component } from 'geotic';\nimport { spawnLoot } from '../../data/tables/LootSpawn';\n\nexport class LootDropper extends Component {\n    static properties = {\n        tables: [],\n    };\n\n    onDeath(evt) {\n        const pos = this.entity.position.getPos();\n\n        spawnLoot(this.tables, pos.x, pos.y);\n    }\n}\n","import WeightedTable from '../../utils/WeightedTable';\nimport { spawn } from '../Spawner';\nimport LootTableGoblin from './loot/LootTableGoblin';\nimport LootTableForest from './loot/LootTableForest';\n\nconst tables = {\n    TBL_LOOT_GOBLIN: LootTableGoblin,\n    TBL_LOOT_FOREST: LootTableForest,\n};\n\nexport const getTable = (tableKey) => tables[tableKey];\n\nexport const pickLoot = (tableKeys = []) => {\n    const tables = tableKeys.map(getTable);\n    const table = WeightedTable.combine(tables);\n\n    return table.pick();\n};\n\nexport const spawnLoot = (tableKeys = [], x, y) => {\n    const spawnable = pickLoot(tableKeys);\n\n    return spawn(spawnable, x, y);\n};\n","import { randomInt } from './rand';\n\nexport default class WeightedTable {\n    rows = [];\n\n    get sum() {\n        return this.rows.reduce((sum, cur) => sum + cur.weight, 0);\n    }\n\n    pick() {\n        const r = randomInt(0, this.sum);\n\n        let currentW = 0;\n        const row = this.rows.find((row) => {\n            currentW += row.weight;\n\n            return currentW >= r;\n        });\n\n        if (row) {\n            return row.value;\n        }\n    }\n\n    chance(value) {\n        const row = this.get(value);\n\n        if (!row) {\n            return 0;\n        }\n\n        return row.weight / this.sum;\n    }\n\n    get(value) {\n        return this.rows.find((row) => row.value === value);\n    }\n\n    add(weight, value) {\n        const existing = this.get(value);\n\n        if (!existing) {\n            this.rows.push({\n                weight,\n                value,\n            });\n        } else {\n            // take maximum weight\n            const maxWeight = Math.max(existing.weight, weight);\n\n            existing.weight = maxWeight;\n        }\n\n        this.rows.sort((a, b) => a.weight - b.weight);\n    }\n\n    static combine(tables = []) {\n        const table = new WeightedTable();\n\n        tables.forEach((other) => {\n            other.rows.forEach((row) => table.add(row.weight, row.value));\n        });\n\n        return table;\n    }\n}\n","import WeightedTable from '../../../utils/WeightedTable';\nimport {\n    SPWN_AMULET,\n    SPWN_CLOTH_ARMOR,\n    SPWN_SHORTSWORD,\n    SPWN_STONE,\n    SPWN_VIAL_BLOOD,\n} from '../../Spawnables';\n\nconst goblins = new WeightedTable();\n\ngoblins.add(3, SPWN_STONE);\ngoblins.add(2, SPWN_VIAL_BLOOD);\ngoblins.add(5, SPWN_AMULET);\ngoblins.add(4, SPWN_CLOTH_ARMOR);\ngoblins.add(15, SPWN_SHORTSWORD);\n\nexport default goblins;\n","import WeightedTable from '../../../utils/WeightedTable';\nimport { SPWN_STONE, SPWN_VIAL_HONEY } from '../../Spawnables';\n\nconst forest = new WeightedTable();\n\nforest.add(3, SPWN_STONE);\nforest.add(2, SPWN_VIAL_HONEY);\n\nexport default forest;\n","import { Component } from 'geotic';\n\nexport class IsEquipped extends Component {\n    static properties = {\n        slotKey: '',\n        owner: '<Entity>',\n    };\n\n    get slot() {\n        return this.owner.equipmentSlot[this.slotKey];\n    }\n\n    onDropped(evt) {\n        this.slot.unequip();\n    }\n\n    onThrown(evt) {\n        this.slot.unequip();\n    }\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { SCREEN_LIST_SELECT } from '../../core/screens/ScreenType';\nimport { EQ_SLOT_BODY } from '../../data/EquipmentSlotType';\nimport { IsEquipped } from './IsEquipped';\n\nexport class Equipment extends Component {\n    static properties = {\n        slotTypes: [EQ_SLOT_BODY],\n    };\n\n    onTryEquip(evt) {\n        const slots = Object.values(evt.data.interactor.equipmentSlot).filter(\n            (slot) => {\n                return this.slotTypes.includes(slot.slotType);\n            }\n        );\n\n        game.screens.pushScreen(SCREEN_LIST_SELECT, {\n            header: `Equip ${this.entity.moniker.display}`,\n            list: slots,\n            onRenderRow: (slot, x, y, isSelected) => {\n                let text = slot.name;\n\n                if (!slot.isEmpty) {\n                    text += ` [${slot.content.moniker.display}]`;\n                }\n\n                if (isSelected) {\n                    game.renderer.drawText(x, y, `→ ${text}`, 'yellow');\n                } else {\n                    game.renderer.drawText(x, y, `- ${text}`);\n                }\n            },\n            onSelect: (slot) => {\n                slot.unequip();\n                slot.equip(this.entity);\n                evt.data.interactor.fireEvent('energy-consumed', 200);\n                evt.handle();\n                game.screens.popScreen();\n            },\n        });\n    }\n\n    onTryUnequip(evt) {\n        const slotKey = this.entity.isEquipped.slotKey;\n        const slot = evt.data.interactor.equipmentSlot[slotKey];\n\n        if (slot) {\n            slot.content = null;\n        }\n\n        evt.data.interactor.fireEvent('energy-consumed', 200);\n\n        this.entity.isEquipped.destroy();\n        evt.handle();\n    }\n\n    onGetInteractions(evt) {\n        if (this.entity.isInventoried) {\n            if (!this.entity.isInventoried.isOwnedBy(evt.data.interactor)) {\n                return;\n            }\n        }\n\n        if (this.entity.has(IsEquipped)) {\n            evt.data.interactions.push({\n                name: `Unequip [${this.entity.isEquipped.slot.name}]`,\n                evt: 'try-unequip',\n            });\n        } else {\n            evt.data.interactions.push({\n                name: 'Equip',\n                evt: 'try-equip',\n            });\n        }\n    }\n}\n","export const EQ_SLOT_NECK = 'EQ_SLOT_NECK';\nexport const EQ_SLOT_BODY = 'EQ_SLOT_BODY';\nexport const EQ_SLOT_FEET = 'EQ_SLOT_FEET';\nexport const EQ_SLOT_ARM = 'EQ_SLOT_ARM';\nexport const EQ_SLOT_HAND = 'EQ_SLOT_HAND';\n","import { Component } from 'geotic';\nimport { EQ_SLOT_BODY } from '../../data/EquipmentSlotType';\nimport { getWeaponType, WPN_TYPE_UNARMED } from '../../data/WeaponTypes';\nimport { IsEquipped } from './IsEquipped';\n\nexport class EquipmentSlot extends Component {\n    static allowMultiple = true;\n    static keyProperty = 'key';\n    static properties = {\n        name: 'Body',\n        key: 'body',\n        slotType: EQ_SLOT_BODY,\n        content: '<Entity>',\n        isPrimary: false,\n        isOffhand: false,\n    };\n\n    get isEmpty() {\n        return !this.content;\n    }\n\n    onDestroyed() {\n        if (!this.isEmpty) {\n            this.content.destroy();\n        }\n    }\n\n    unequip() {\n        if (this.isEmpty) {\n            return false;\n        }\n\n        const content = this.content;\n\n        this.content = null;\n\n        content.isEquipped.destroy();\n        content.fireEvent('unequipped', {\n            interactor: this.entity,\n        });\n    }\n\n    equip(equipment) {\n        equipment.add(IsEquipped, {\n            slotKey: this.key,\n            owner: this.entity,\n        });\n\n        this.content = equipment;\n\n        equipment.fireEvent('equipped', {\n            interactor: this.entity,\n        });\n    }\n\n    onTryMelee(evt) {\n        if (!this.isPrimary) {\n            return;\n        }\n\n        const map = window.game.map;\n        const targetPos = evt.data.target.position.getPos();\n        const selfPos = this.entity.position.getPos();\n        const isAdjacent = map.isAdjacent(\n            selfPos.x,\n            selfPos.y,\n            targetPos.x,\n            targetPos.y\n        );\n\n        if (!isAdjacent) {\n            return;\n        }\n\n        if (this.isEmpty) {\n            const weaponType = getWeaponType(WPN_TYPE_UNARMED);\n\n            weaponType.attack(this.entity, evt.data.target);\n\n            this.entity.fireEvent('energy-consumed', 600);\n\n            evt.handle();\n            return;\n        }\n\n        this.content.fireEvent('try-use-melee', {\n            interactor: this.entity,\n            target: evt.data.target,\n        });\n\n        evt.handle();\n    }\n\n    onQueryAbilityModifierArmor(evt) {\n        if (this.isEmpty) {\n            return;\n        }\n\n        this.content.fireEvent(\n            `query-equipped-ability-modifier-${evt.data.name}`,\n            {\n                name: evt.data.name,\n                modifiers: evt.data.modifiers,\n            }\n        );\n    }\n}\n","import {\n    DMG_TYPE_BLUDGEONING,\n    DMG_TYPE_PIERCING,\n    DMG_TYPE_SLASHING,\n} from './DamageTypes';\nimport {\n    WPN_FAMILY_AXE,\n    WPN_FAMILY_BLADE,\n    WPN_FAMILY_HAMMER,\n    WPN_FAMILY_POLEARM,\n} from './WeaponFamilies';\nimport WpnTypeBattleAxe from './weapons/WpnTypeBattleAxe';\nimport WpnTypeGreatsword from './weapons/WpnTypeGreatsword';\nimport WpnTypeMace from './weapons/WpnTypeMace';\nimport WpnTypeShortsword from './weapons/WpnTypeShortsword';\nimport WpnTypeUnarmed from './weapons/WpnTypeUnarmed';\n\n// hammer family\nexport const WPN_TYPE_WAR_HAMMER = 'WPN_TYPE_WAR_HAMMER';\nexport const WPN_TYPE_SLEDGE_HAMMER = 'WPN_TYPE_SLEDGE_HAMMER';\n// cudgel family\nexport const WPN_TYPE_CLUB = 'WPN_TYPE_CLUB';\nexport const WPN_TYPE_MACE = 'WPN_TYPE_MACE';\n// axe family\nexport const WPN_TYPE_HEAVY_AXE = 'WPN_TYPE_HEAVY_AXE';\nexport const WPN_TYPE_BATTLE_AXE = 'WPN_TYPE_BATTLE_AXE';\n// blade family\nexport const WPN_TYPE_GREATSWORD = 'WPN_TYPE_GREATSWORD';\nexport const WPN_TYPE_SHORTSWORD = 'WPN_TYPE_SHORTSWORD';\nexport const WPN_TYPE_DAGGER = 'WPN_TYPE_DAGGER';\n// polearm family\nexport const WPN_TYPE_STAFF = 'WPN_TYPE_STAFF';\nexport const WPN_TYPE_HALBERD = 'WPN_TYPE_HALBERD';\nexport const WPN_TYPE_JAVELIN = 'WPN_TYPE_JAVELIN';\n// unarmed family\nexport const WPN_TYPE_UNARMED = 'WPN_TYPE_UNARMED';\n\nconst lookup = {\n    [WPN_TYPE_UNARMED]: new WpnTypeUnarmed(),\n    [WPN_TYPE_WAR_HAMMER]: {\n        name: 'War hammer',\n        family: WPN_FAMILY_HAMMER,\n        key: WPN_TYPE_WAR_HAMMER,\n        damageType: DMG_TYPE_BLUDGEONING,\n    },\n    [WPN_TYPE_SLEDGE_HAMMER]: {\n        name: 'Sledge hammer',\n        family: WPN_FAMILY_HAMMER,\n        key: WPN_TYPE_SLEDGE_HAMMER,\n        damageType: DMG_TYPE_BLUDGEONING,\n    },\n    [WPN_TYPE_CLUB]: {\n        name: 'Club',\n        family: WPN_FAMILY_HAMMER,\n        key: WPN_TYPE_CLUB,\n        damageType: DMG_TYPE_BLUDGEONING,\n    },\n    [WPN_TYPE_MACE]: {\n        name: 'Mace',\n        family: WPN_FAMILY_HAMMER,\n        key: WPN_TYPE_MACE,\n        damageType: DMG_TYPE_BLUDGEONING,\n    },\n    [WPN_TYPE_HEAVY_AXE]: {\n        name: 'Heavy axe',\n        family: WPN_FAMILY_AXE,\n        key: WPN_TYPE_HEAVY_AXE,\n        damageType: DMG_TYPE_SLASHING,\n    },\n    [WPN_TYPE_BATTLE_AXE]: new WpnTypeBattleAxe(),\n    [WPN_TYPE_GREATSWORD]: new WpnTypeGreatsword(),\n    [WPN_TYPE_SHORTSWORD]: new WpnTypeShortsword(),\n    [WPN_TYPE_MACE]: new WpnTypeMace(),\n    [WPN_TYPE_DAGGER]: {\n        name: 'Dagger',\n        family: WPN_FAMILY_BLADE,\n        key: WPN_TYPE_DAGGER,\n        damageType: DMG_TYPE_SLASHING,\n    },\n    [WPN_TYPE_STAFF]: {\n        name: 'Staff',\n        family: WPN_FAMILY_POLEARM,\n        key: WPN_TYPE_STAFF,\n        damageType: DMG_TYPE_BLUDGEONING,\n    },\n    [WPN_TYPE_HALBERD]: {\n        name: 'Halberd',\n        family: WPN_FAMILY_POLEARM,\n        key: WPN_TYPE_HALBERD,\n        damageType: DMG_TYPE_PIERCING,\n    },\n    [WPN_TYPE_JAVELIN]: {\n        name: 'Javelin',\n        family: WPN_FAMILY_POLEARM,\n        key: WPN_TYPE_JAVELIN,\n        damageType: DMG_TYPE_PIERCING,\n    },\n};\n\nexport const getWeaponType = (type) => lookup[type];\nexport const getWeaponTypeName = (type) => lookup[type].name;\nexport const getWeaponTypeFamily = (type) => lookup[type].family;\nexport const getWeaponTypeDmgType = (type) => lookup[type].damageType;\n","export const WPN_FAMILY_HAMMER = 'WPN_FAMILY_HAMMER';\nexport const WPN_FAMILY_AXE = 'WPN_FAMILY_AXE';\nexport const WPN_FAMILY_BLADE = 'WPN_FAMILY_BLADE';\nexport const WPN_FAMILY_ARCHERY = 'WPN_FAMILY_ARCHERY';\nexport const WPN_FAMILY_POLEARM = 'WPN_FAMILY_POLEARM';\nexport const WPN_FAMILY_UNARMED = 'WPN_FAMILY_UNARMED';\nexport const WPN_FAMILY_CUDGEL = 'WPN_FAMILY_CUDGEL';\n\nconst lookup = {\n    [WPN_FAMILY_HAMMER]: {\n        name: 'Hammer',\n    },\n    [WPN_FAMILY_AXE]: {\n        name: 'Axe',\n    },\n    [WPN_FAMILY_BLADE]: {\n        name: 'Blade',\n    },\n    [WPN_FAMILY_ARCHERY]: {\n        name: 'Archery',\n    },\n    [WPN_FAMILY_POLEARM]: {\n        name: 'Polearm',\n    },\n    [WPN_FAMILY_UNARMED]: {\n        name: 'Unarmed',\n    },\n    [WPN_FAMILY_CUDGEL]: {\n        name: 'Cudgel',\n    },\n};\n\nexport const getWeaponFamilyName = (family) => lookup[family].name;\n","import { randomBool } from '../../utils/rand';\nimport Attack from '../Attack';\nimport { DMG_TYPE_SLASHING } from '../DamageTypes';\nimport { getStat, STAT_STRENGTH } from '../Stats';\nimport { WPN_FAMILY_AXE } from '../WeaponFamilies';\nimport { WPN_TYPE_BATTLE_AXE } from '../WeaponTypes';\nimport WeaponType from './WeaponType';\n\nexport default class WpnTypeBattleAxe extends WeaponType {\n    constructor() {\n        super({\n            key: WPN_TYPE_BATTLE_AXE,\n            name: 'Battle axe',\n            family: WPN_FAMILY_AXE,\n            damageType: DMG_TYPE_SLASHING,\n        });\n    }\n\n    _createAttack(attacker, defender, weapon) {\n        const str = getStat(STAT_STRENGTH, attacker);\n        const die = weapon.roll();\n        const damage = die + str;\n\n        return new Attack({\n            attacker,\n            defender,\n            weaponName: weapon.name,\n            damage,\n            damageType: this.damageType,\n        });\n    }\n\n    attack(attacker, defender, weapon) {\n        const attack = this._createAttack(attacker, defender, weapon);\n        const result = defender.fireEvent('attacked', { attack });\n        const attacks = [attack];\n\n        if (!result.data.isDodged && !result.data.isKilled && randomBool()) {\n            const secondAttack = this._createAttack(attacker, defender, weapon);\n\n            attacks.push(secondAttack);\n\n            defender.fireEvent('attacked', { attack });\n        }\n\n        return attacks;\n    }\n}\n","import { getDmgTypeName } from '../DamageTypes';\nimport { getStat, STAT_STRENGTH } from '../Stats';\nimport { getWeaponFamilyName } from '../WeaponFamilies';\n\nexport default class WeaponType {\n    constructor(data) {\n        this.name = data.name;\n        this.family = data.family;\n        this.key = data.key;\n        this.damageType = data.damageType;\n    }\n\n    weaponDamageText(user, weapon) {\n        let text = `1d${weapon.die}`;\n        const str = getStat(STAT_STRENGTH, user);\n        const mod = weapon.modifier + str;\n\n        if (mod) {\n            if (mod > 0) {\n                text += ` + ${mod}`;\n            } else {\n                text += ` - ${Math.abs(mod)}`;\n            }\n        }\n\n        return text;\n    }\n\n    getShortDescription(user, weapon) {\n        const fam = getWeaponFamilyName(this.family);\n\n        return `${fam}, ${this.weaponDamageText(user, weapon)}`;\n    }\n\n    getAttacks(attacker, defender, weapon) {\n        return [];\n    }\n\n    attack(attacker, defender, weapon) {\n        const attacks = this.getAttacks(attacker, defender, weapon);\n\n        return attacks.map((attack) => {\n            attack.defender.fireEvent('attacked', { attack });\n        });\n    }\n}\n","import { game } from '../../core/Game';\nimport { getAdjacentDeltas, directionFromDelta } from '../../enums/Directions';\nimport Attack from '../Attack';\nimport { DMG_TYPE_SLASHING } from '../DamageTypes';\nimport { getStat, STAT_STRENGTH } from '../Stats';\nimport { WPN_FAMILY_BLADE } from '../WeaponFamilies';\nimport { WPN_TYPE_GREATSWORD } from '../WeaponTypes';\nimport WeaponType from './WeaponType';\n\nexport default class WpnTypeGreatsword extends WeaponType {\n    constructor() {\n        super({\n            key: WPN_TYPE_GREATSWORD,\n            name: 'Greatsword',\n            family: WPN_FAMILY_BLADE,\n            damageType: DMG_TYPE_SLASHING,\n        });\n    }\n\n    _getNeighborAttacks(attacker, defender, weapon, damage) {\n        const attackerPos = attacker.position.getPos();\n        const defenderPos = defender.position.getPos();\n        const deltaX = defenderPos.x - attackerPos.x;\n        const deltaY = defenderPos.y - attackerPos.y;\n        const direction = directionFromDelta(deltaX, deltaY);\n        const adjacentDeltas = getAdjacentDeltas(direction.key);\n\n        return adjacentDeltas\n            .map((delta) =>\n                game.map.getEntitiesAt(\n                    attackerPos.x + delta.x,\n                    attackerPos.y + delta.y\n                )\n            )\n            .flat()\n            .filter((e) => game.factions.areEntitiesHostile(e, attacker))\n            .map((hostile) => {\n                return new Attack({\n                    attacker,\n                    ignoreDodge: true,\n                    defender: hostile,\n                    weaponName: weapon.name,\n                    damage: Math.floor(damage / 2),\n                    damageType: this.damageType,\n                });\n            });\n    }\n\n    _tryAttackDefender(attacker, defender, weapon, damage) {\n        const attack = new Attack({\n            attacker,\n            defender,\n            weaponName: weapon.name,\n            damage,\n            damageType: this.damageType,\n        });\n\n        return defender.fireEvent('attacked', { attack });\n    }\n\n    attack(attacker, defender, weapon) {\n        const str = getStat(STAT_STRENGTH, attacker);\n        const die = weapon.roll();\n        const damage = die + str;\n        const result = this._tryAttackDefender(\n            attacker,\n            defender,\n            weapon,\n            damage\n        );\n\n        const attacks = [result];\n\n        if (!result.data.isDodged) {\n            const neighborAttacks = this._getNeighborAttacks(\n                attacker,\n                defender,\n                weapon,\n                damage\n            );\n\n            neighborAttacks.forEach((attack) => {\n                attacks.push(attack);\n                attack.defender.fireEvent('attacked', { attack });\n            });\n        }\n\n        return attacks;\n    }\n}\n","import { randomBool, randomWeightedBool } from '../../utils/rand';\nimport Attack from '../Attack';\nimport { DMG_TYPE_BLUDGEONING } from '../DamageTypes';\nimport { getStat, STAT_STRENGTH } from '../Stats';\nimport { addStatus, STATUS_STUNNED } from '../Statuses';\nimport { WPN_FAMILY_CUDGEL } from '../WeaponFamilies';\nimport { WPN_TYPE_MACE } from '../WeaponTypes';\nimport WeaponType from './WeaponType';\n\nexport default class WpnTypeMace extends WeaponType {\n    constructor() {\n        super({\n            key: WPN_TYPE_MACE,\n            name: 'Mace',\n            family: WPN_FAMILY_CUDGEL,\n            damageType: DMG_TYPE_BLUDGEONING,\n        });\n    }\n\n    _createAttack(attacker, defender, weapon) {\n        const str = getStat(STAT_STRENGTH, attacker);\n        const die = weapon.roll();\n        const damage = die + str;\n\n        return new Attack({\n            attacker,\n            defender,\n            weaponName: weapon.name,\n            damage,\n            damageType: this.damageType,\n        });\n    }\n\n    attack(attacker, defender, weapon) {\n        const attack = this._createAttack(attacker, defender, weapon);\n        const result = defender.fireEvent('attacked', { attack });\n        const attacks = [attack];\n\n        if (!result.data.isDodged && !result.data.isKilled && randomWeightedBool(0.5)) {\n            addStatus(STATUS_STUNNED, defender);\n        }\n\n        return attacks;\n    }\n}\n","import { Status } from '../ecs/components';\nimport StatusBleeding from './statuses/StatusBleeding';\nimport StatusStunned from './statuses/StatusStunned';\n\nexport const STATUS_BLEEDING = 'STATUS_BLEEDING';\nexport const STATUS_STUNNED = 'STATUS_STUNNED';\n\nconst lookup = {\n    STATUS_BLEEDING: new StatusBleeding(),\n    STATUS_STUNNED: new StatusStunned(),\n};\n\nexport const getStatus = (key) => lookup[key];\nexport const addStatus = (key, entity) => {\n    return entity.add(Status, {\n        key\n    });\n};\n","import { game } from '../../core/Game';\nimport { LIQUID_BLOOD } from '../../enums/LiquidTypes';\nimport { STATUS_TYPE_CONDITION } from '../../enums/StatusTypes';\nimport { SPWN_POOL_LIQUID } from '../Spawnables';\nimport { spawn } from '../Spawner';\nimport { STATUS_BLEEDING } from '../Statuses';\nimport Status from './Status';\n\nexport default class StatusBleeding extends Status {\n    constructor() {\n        super(STATUS_BLEEDING, 'Bleeding', STATUS_TYPE_CONDITION);\n    }\n\n    getDmgPerTurn(potency) {\n        return 3 * potency + .5;\n    }\n\n    update(ticks, entity, status) {\n        const tick = Math.min(ticks, status.remainingLifetime());\n        const dmgPerTurn = this.getDmgPerTurn(status.potency);\n        const damage = dmgPerTurn * (tick / 1000);\n\n        entity.health.applyDamage(damage);\n\n        const position = entity.position.getPos();\n\n        spawn(SPWN_POOL_LIQUID, position.x, position.y, {\n            content: LIQUID_BLOOD,\n            volume: Math.ceil(damage * 6),\n        });\n\n        status.lifetime += tick;\n    }\n}\n","export const STATUS_TYPE_CONDITION = 'STATUS_TYPE_CONDITION';\n","export default class Status {\n    constructor(key, name, type) {\n        this.key = key;\n        this.name = name;\n        this.type = type;\n    }\n}\n","import { game } from '../../core/Game';\nimport { IsIncapacitated } from '../../ecs/components';\nimport { STATUS_TYPE_CONDITION } from '../../enums/StatusTypes';\nimport { STATUS_STUNNED } from '../Statuses';\nimport Status from './Status';\n\nexport default class StatusStunned extends Status {\n    constructor() {\n        super(STATUS_STUNNED, 'Stunned', STATUS_TYPE_CONDITION);\n    }\n\n    update(ticks, entity, status) {\n        status.lifetime += ticks;\n\n        if (!entity.isIncapacitated) {\n            entity.add(IsIncapacitated);\n\n            const pos = entity.position.getPos();\n\n            game.particles.createParticle(pos.x, pos.y, {\n                lifetime: 140,\n                fg1s: ['yellow'],\n                glyphs: ['*'],\n            });\n        }\n\n        if (status.isCompleted()) {\n            entity.remove(IsIncapacitated);\n        }\n    }\n}\n","import Attack from '../Attack';\nimport { DMG_TYPE_SLASHING } from '../DamageTypes';\nimport { getStat, STAT_STRENGTH } from '../Stats';\nimport { WPN_FAMILY_BLADE } from '../WeaponFamilies';\nimport { WPN_TYPE_SHORTSWORD } from '../WeaponTypes';\nimport WeaponType from './WeaponType';\n\nexport default class WpnTypeShortsword extends WeaponType {\n    constructor() {\n        super({\n            key: WPN_TYPE_SHORTSWORD,\n            name: 'Shortsword',\n            family: WPN_FAMILY_BLADE,\n            damageType: DMG_TYPE_SLASHING,\n        });\n    }\n\n    getAttacks(attacker, defender, weapon) {\n        const str = getStat(STAT_STRENGTH, attacker);\n        const die = weapon.roll();\n        const damage = die + str;\n\n        return [\n            new Attack({\n                attacker,\n                defender,\n                weaponName: weapon.name,\n                damage,\n                damageType: this.damageType,\n            }),\n        ];\n    }\n}\n","import { pickRandom, randomInt } from '../../utils/rand';\nimport Attack from '../Attack';\nimport { DMG_TYPE_BLUDGEONING } from '../DamageTypes';\nimport { getStat, STAT_STRENGTH } from '../Stats';\nimport { WPN_FAMILY_UNARMED } from '../WeaponFamilies';\nimport { WPN_TYPE_UNARMED } from '../WeaponTypes';\nimport WeaponType from './WeaponType';\n\nexport default class WpnTypeUnarmed extends WeaponType {\n    constructor() {\n        super({\n            key: WPN_TYPE_UNARMED,\n            name: 'Unarmed',\n            family: WPN_FAMILY_UNARMED,\n            damageType: DMG_TYPE_BLUDGEONING,\n        });\n    }\n\n    getAttacks(attacker, defender, weapon) {\n        const str = getStat(STAT_STRENGTH, attacker);\n        const die = randomInt(1, 4);\n        const damage = die + str;\n\n        return [\n            new Attack({\n                attacker,\n                defender,\n                weaponName: pickRandom(['punch', 'kick']),\n                damage,\n                damageType: this.damageType,\n            }),\n        ];\n    }\n}\n","import { Component } from 'geotic';\nimport { capitalize } from 'rot-js/lib/util';\nimport {\n    getStatName,\n    STAT_ATHLETICISM,\n    STAT_FINESSE,\n    STAT_STRENGTH,\n    STAT_TRICKERY,\n} from '../../data/Stats';\n\nexport class Stats extends Component {\n    static properties = {\n        baseStrength: 0,\n        baseFinesse: 0,\n        baseAthleticism: 0,\n        baseTrickery: 0,\n    };\n\n    _sumMods(modifiers) {\n        return modifiers.reduce((sum, cur) => sum + cur.mod, 0);\n    }\n\n    getStatModifiers(stat) {\n        const name = getStatName(stat);\n        const modifiers = [];\n\n        this.entity.fireEvent(`query-stat-modifier-${name}`, {\n            modifiers,\n        });\n\n        return modifiers;\n    }\n\n    getStatModifierSum(stat) {\n        const mods = this.getStatModifiers(stat);\n\n        return this._sumMods(mods);\n    }\n\n    data(stat) {\n        const name = getStatName(stat);\n        const modifiers = this.getStatModifiers(stat);\n        const base = this[`base${capitalize(name)}`];\n        const modSum = this._sumMods(modifiers);\n        const sum = base + modSum;\n\n        return {\n            stat,\n            name,\n            modifiers,\n            base,\n            sum,\n            modSum,\n        };\n    }\n\n    all() {\n        return {\n            strength: this.data(STAT_STRENGTH),\n            finesse: this.data(STAT_FINESSE),\n            athleticism: this.data(STAT_ATHLETICISM),\n            trickery: this.data(STAT_TRICKERY),\n        };\n    }\n\n    strength() {\n        const mod = this.getStatModifierSum(STAT_STRENGTH);\n\n        return this.baseStrength + mod;\n    }\n\n    finesse() {\n        const mod = this.getStatModifierSum(STAT_FINESSE);\n\n        return this.baseFinesse + mod;\n    }\n\n    athleticism() {\n        const mod = this.getStatModifierSum(STAT_ATHLETICISM);\n\n        return this.baseAthleticism + mod;\n    }\n\n    trickery() {\n        const mod = this.getStatModifierSum(STAT_TRICKERY);\n\n        return this.baseTrickery + mod;\n    }\n}\n","/**\n * Always positive modulus\n * @param x Operand\n * @param n Modulus\n * @returns x modulo n\n */\nexport function mod(x, n) {\n    return (x % n + n) % n;\n}\nexport function clamp(val, min = 0, max = 1) {\n    if (val < min)\n        return min;\n    if (val > max)\n        return max;\n    return val;\n}\nexport function capitalize(string) {\n    return string.charAt(0).toUpperCase() + string.substring(1);\n}\n/**\n * Format a string in a flexible way. Scans for %s strings and replaces them with arguments. List of patterns is modifiable via String.format.map.\n * @param {string} template\n * @param {any} [argv]\n */\nexport function format(template, ...args) {\n    let map = format.map;\n    let replacer = function (match, group1, group2, index) {\n        if (template.charAt(index - 1) == \"%\") {\n            return match.substring(1);\n        }\n        if (!args.length) {\n            return match;\n        }\n        let obj = args[0];\n        let group = group1 || group2;\n        let parts = group.split(\",\");\n        let name = parts.shift() || \"\";\n        let method = map[name.toLowerCase()];\n        if (!method) {\n            return match;\n        }\n        obj = args.shift();\n        let replaced = obj[method].apply(obj, parts);\n        let first = name.charAt(0);\n        if (first != first.toLowerCase()) {\n            replaced = capitalize(replaced);\n        }\n        return replaced;\n    };\n    return template.replace(/%(?:([a-z]+)|(?:{([^}]+)}))/gi, replacer);\n}\nformat.map = {\n    \"s\": \"toString\"\n};\n","import { Component } from 'geotic';\nimport { getRaceData, RACE_HUMAN } from '../../data/Races';\n\nexport class Race extends Component {\n    static properties = {\n        key: RACE_HUMAN,\n    };\n\n    data() {\n        return getRaceData(this.key);\n    }\n\n    get name() {\n        return this.data().name;\n    }\n\n    get speed() {\n        return this.data().speed;\n    }\n\n    get strengthMod() {\n        return this.data().modStrength;\n    }\n\n    get finesseMod() {\n        return this.data().modFinesse;\n    }\n\n    get athleticismMod() {\n        return this.data().modAthleticism;\n    }\n\n    get trickeryMod() {\n        return this.data().modTrickery;\n    }\n\n    onQueryStatModifierStrength(evt) {\n        const mod = this.strengthMod;\n\n        if (mod !== 0) {\n            evt.data.modifiers.push({\n                source: this.name,\n                mod,\n            });\n        }\n    }\n\n    onQueryStatModifierFinesse(evt) {\n        const mod = this.finesseMod;\n\n        if (mod !== 0) {\n            evt.data.modifiers.push({\n                source: this.name,\n                mod,\n            });\n        }\n    }\n\n    onQueryStatModifierAthleticism(evt) {\n        const mod = this.athleticismMod;\n\n        if (mod !== 0) {\n            evt.data.modifiers.push({\n                source: this.name,\n                mod,\n            });\n        }\n    }\n\n    onQueryStatModifierTrickery(evt) {\n        const mod = this.trickeryMod;\n\n        if (mod !== 0) {\n            evt.data.modifiers.push({\n                source: this.name,\n                mod,\n            });\n        }\n    }\n\n    onQueryAbilityModifierSpeed(evt) {\n        evt.data.modifiers.push({\n            source: this.name,\n            mod: this.speed,\n        });\n    }\n}\n","import RaceData from './RaceData';\n\nexport const RACE_HUMAN = 'RACE_HUMAN';\nexport const RACE_GOBLIN = 'RACE_GOBLIN';\n\nconst lookup = {\n    [RACE_HUMAN]: new RaceData({\n        name: 'Human',\n        key: RACE_HUMAN,\n        speed: 1.2,\n        modStrength: 1,\n        modFinesse: 1,\n        modAthleticism: 1,\n        modTrickery: 1,\n    }),\n    [RACE_GOBLIN]: new RaceData({\n        name: 'Goblin',\n        key: RACE_GOBLIN,\n        speed: 1,\n        modStrength: -1,\n        modFinesse: 2,\n        modAthleticism: 1,\n        modTrickery: 2,\n    }),\n};\n\nexport const getRaceData = (name) => lookup[name];\n","export default class RaceData {\n    name = '';\n    speed = 1;\n    key = 1;\n    modStrength = 0;\n    modFinesse = 0;\n    modAthleticism = 0;\n    modTrickery = 0;\n\n    constructor(data) {\n        this.name = data.name || '';\n        this.speed = data.speed || 1;\n        this.key = data.key;\n\n        this.modStrength = data.modStrength || 0;\n        this.modFinesse = data.modFinesse || 0;\n        this.modAthleticism = data.modAthleticism || 0;\n        this.modTrickery = data.modTrickery || 0;\n    }\n}\n","import { Component } from 'geotic';\nimport {\n    getWeaponType,\n    getWeaponTypeDmgType,\n    getWeaponTypeFamily,\n    getWeaponTypeName,\n} from '../../data/WeaponTypes';\nimport { randomInt } from '../../utils/rand';\n\nexport class Weapon extends Component {\n    static properties = {\n        weaponType: 'WPN_TYPE_DAGGER',\n        die: 6,\n        modifier: 0,\n        cost: 600,\n    };\n\n    get name() {\n        return getWeaponTypeName(this.weaponType);\n    }\n\n    get family() {\n        return getWeaponTypeFamily(this.weaponType);\n    }\n\n    get damageType() {\n        return getWeaponTypeDmgType(this.weaponType);\n    }\n\n    getShortDescription(user) {\n        return getWeaponType(this.weaponType).getShortDescription(user, this);\n    }\n\n    roll() {\n        const r = randomInt(1, this.die);\n\n        return r + this.modifier;\n    }\n\n    onTryUseMelee(evt) {\n        const weaponType = getWeaponType(this.weaponType);\n\n        weaponType.attack(evt.data.interactor, evt.data.target, this);\n\n        evt.data.interactor.fireEvent('energy-consumed', this.cost);\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\nimport { STATUS_BLEEDING } from '../../data/Statuses';\n\nexport class Status extends Component {\n    static allowMultiple = true;\n    static properties = {\n        key: STATUS_BLEEDING,\n        duration: 4000,\n        lifetime: 0,\n        potency: .5,\n    };\n\n    remainingLifetime() {\n        return this.duration - this.lifetime;\n    }\n\n    isCompleted() {\n        return this.lifetime >= this.duration;\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Ground extends Component {\n}\n","import { Component } from 'geotic';\n\nexport class IsIncapacitated extends Component {};\n","import { Component } from 'geotic';\nimport { statCheck, STAT_FINESSE } from '../../data/Stats';\n\nexport class SharpTrap extends Component {\n    static properties = {\n        challenge: 15,\n    };\n\n    test(entity) {\n        return statCheck(STAT_FINESSE, entity, this.challenge);\n    }\n}\n","export default class System {\n    #game = null;\n\n    get game() {\n        return this.#game;\n    }\n\n    constructor(game) {\n        this.#game = game;\n    }\n\n    update(dt) {}\n}\n","import {\n    IsInventoried,\n    Explored,\n    Glyph,\n    Position,\n    IsVisible,\n    IsDestroying,\n} from '../ecs/components';\nimport System from './System';\n\nexport default class RenderSystem extends System {\n    renderTile(x, y) {\n        const world = this.game.camera.screenToWorld(x, y);\n\n        if (!this.game.camera.isInView(world.x, world.y)) {\n            return;\n        }\n\n        const entities = this.game.map\n            .getEntitiesAt(world.x, world.y, true)\n            .filter((e) => e.glyph && !e.isInventoried && !e.isDestroying);\n\n        if (entities.length <= 0) {\n            return;\n        }\n\n        let renderableZ = -1;\n        let renderable = null;\n\n        entities.forEach((e) => {\n            if (e.glyph.z >= renderableZ) {\n                renderable = e;\n                renderableZ = e.glyph.z;\n            }\n        });\n\n        if (renderable.isVisible) {\n            this.game.renderer.draw(\n                x,\n                y,\n                renderable.glyph.char,\n                renderable.glyph.primary,\n                renderable.glyph.secondary,\n                renderable.glyph.background,\n            );\n        } else if (renderable.explored) {\n            this.game.renderer.draw(\n                x,\n                y,\n                renderable.glyph.char,\n                '#2c3538',\n                '#2c3538',\n            );\n        }\n    }\n\n    render(dt) {\n        this.game.renderer.clear();\n\n        for (let x = 0; x < this.game.camera.width; x++) {\n            for (let y = 0; y < this.game.camera.height; y++) {\n                this.renderTile(x, y);\n            }\n        }\n    }\n\n    update(dt) {\n        this.render();\n    }\n}\n","import { Moniker, Actor } from '../ecs/components';\nimport System from './System';\n\nexport default class UISystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = this.game.ecs.createQuery({\n            all: [Moniker, Actor],\n        });\n    }\n\n    update(dt) {\n        const turn = this.game.clock.turn;\n        const subTurn = `${this.game.clock.subTurn.toFixed(0)}`.padEnd(3, '0');\n\n        const str = `${turn}.${subTurn}`;\n        const len = Math.ceil(this.game.renderer.computeTextWidth(str));\n\n        this.game.renderer.drawText(this.game.camera.width - 1 - len, 1, str);\n\n        const hp = this.game.player.entity.health;\n\n        this.game.renderer.drawText(1, 1, `${Math.round(hp.value)}/${hp.max}`, '#ce5454');\n    }\n}\n","import Manager from '../Manager';\n\nexport default class MouseManager extends Manager {\n    #x = 0;\n    #y = 0;\n    #hasMouse = false;\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get hasMouse() {\n        return this.#hasMouse;\n    }\n\n    updatePosition(x, y) {\n        this.#x = Math.max(0, x);\n        this.#y = Math.max(0, y);\n    }\n\n    updateMouseEnter() {\n        this.#hasMouse = true;\n    }\n\n    updateMouseLeave() {\n        this.#hasMouse = false;\n    }\n}\n","import { INPUT_DOMAIN_DEFAULT } from './InputDomainType';\r\nimport commands from './commands';\r\nimport Manager from '../Manager';\r\n\r\nexport default class CommandManager extends Manager {\r\n    _commands = {};\r\n    _domainStack = [INPUT_DOMAIN_DEFAULT];\r\n    _inputStack = [];\r\n\r\n    constructor(game) {\r\n        super(game);\r\n        commands.forEach((cmd) => this.registerCommand(cmd));\r\n    }\r\n\r\n    onInputEvent(evt) {\r\n        this._inputStack.push(evt);\r\n    }\r\n\r\n    getNextCommand() {\r\n        const evt = this._inputStack.shift();\r\n\r\n        if (evt) {\r\n            return this.getCommandForInputEvent(evt);\r\n        }\r\n    }\r\n\r\n    pushDomain(domain) {\r\n        this._domainStack.push(domain);\r\n    }\r\n\r\n    popDomain(domain) {\r\n        const index = this._domainStack.lastIndexOf(domain);\r\n\r\n        if (index > -1) {\r\n            this._domainStack.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    getDomainCommands(domain) {\r\n        return this._commands[domain] || [];\r\n    }\r\n\r\n    getCommandForInputEvent(evt) {\r\n        for (let i = this._domainStack.length - 1; i >= 0; i--) {\r\n            const domain = this._domainStack[i];\r\n            const cmds = this.getDomainCommands(domain);\r\n            const cmd = cmds.find((cmd) => cmd.matches(evt));\r\n\r\n            if (cmd) {\r\n                return cmd;\r\n            }\r\n        }\r\n    }\r\n\r\n    registerCommand(command) {\r\n        if (!this._commands[command.domain]) {\r\n            this._commands[command.domain] = [];\r\n        }\r\n\r\n        this._commands[command.domain].push(command);\r\n    }\r\n}\r\n","export const INPUT_DOMAIN_DEFAULT = 0;\nexport const INPUT_DOMAIN_MAIN_MENU = 1;\nexport const INPUT_DOMAIN_ADVENTURE = 2;\nexport const INPUT_DOMAIN_LOOK = 3;\nexport const INPUT_DOMAIN_LIST = 4;\n","import {\n    INPUT_DOMAIN_MAIN_MENU,\n    INPUT_DOMAIN_DEFAULT,\n    INPUT_DOMAIN_ADVENTURE,\n} from './InputDomainType';\nimport InputCommand from './InputCommand';\nimport {\n    INPUT_CMD_WAIT,\n    INPUT_CMD_MOVE_NW,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_NE,\n    INPUT_CMD_MOVE_W,\n    INPUT_CMD_MOVE_E,\n    INPUT_CMD_MOVE_SW,\n    INPUT_CMD_MOVE_S,\n    INPUT_CMD_MOVE_SE,\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_SAVE,\n    INPUT_CMD_LOAD,\n    INPUT_CMD_LOOK,\n    INPUT_CMD_INTERACT,\n    INPUT_CMD_PICK_UP,\n    INPUT_CMD_INVENTORY,\n    INPUT_CMD_EQUIPMENT,\n    INPUT_CMD_CHARACTER,\n    INPUT_CMD_SELECT_NW,\n    INPUT_CMD_SELECT_N,\n    INPUT_CMD_SELECT_NE,\n    INPUT_CMD_SELECT_W,\n    INPUT_CMD_SELECT_E,\n    INPUT_CMD_SELECT_SW,\n    INPUT_CMD_SELECT_S,\n    INPUT_CMD_SELECT_SE,\n    INPUT_CMD_NEW_GAME,\n} from './InputCommandType';\nimport {\n    KEY_S,\n    KEY_Q,\n    KEY_W,\n    KEY_E,\n    KEY_A,\n    KEY_D,\n    KEY_Z,\n    KEY_X,\n    KEY_C,\n    KEY_ENTER,\n    KEY_ESCAPE,\n    KEY_UP,\n    KEY_LEFT,\n    KEY_RIGHT,\n    KEY_DOWN,\n    KEY_SPACE,\n    KEY_L,\n    KEY_I,\n    KEY_G,\n    KEY_J,\n    KEY_N,\n    KEY_P,\n    KEY_Y,\n} from './KeyCodes';\n\nconst cmd = (domain, type, name, isKeyboard, key, shift, ctrl, alt, meta) =>\n    new InputCommand({\n        domain,\n        type,\n        name,\n        isKeyboard,\n        key,\n        shift,\n        ctrl,\n        alt,\n        meta,\n    });\n\n// prettier-ignore\nexport default [\n    // DOMAIN                   CMD                             NAME                      KB    KEY           SHIFT  CTRL   ALT    META\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CONFIRM,              'confirm',                true, KEY_ENTER,    false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CONFIRM,              'confirm2',               true, KEY_SPACE,    false, true,  false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CANCEL,               'cancel',                 true, KEY_ESCAPE,   false, false, false, false),\n    cmd(INPUT_DOMAIN_MAIN_MENU, INPUT_CMD_SAVE,                 'save',                   true, KEY_S,        false, true,  false, false),\n    cmd(INPUT_DOMAIN_MAIN_MENU, INPUT_CMD_LOAD,                 'load',                   true, KEY_L,        false, true,  false, false),\n    cmd(INPUT_DOMAIN_MAIN_MENU, INPUT_CMD_NEW_GAME,             'new game',               true, KEY_N,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_WAIT,                 'wait',                   true, KEY_S,        false, false, false, false),\n\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_NW,              'move nw',                true, KEY_Q,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_N,               'move n',                 true, KEY_W,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_N,               'move n2',                true, KEY_UP,       false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_NE,              'move ne',                true, KEY_E,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_W,               'move w',                 true, KEY_A,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_W,               'move w2',                true, KEY_LEFT,     false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_E,               'move e',                 true, KEY_D,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_E,               'move e2',                true, KEY_RIGHT,    false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_SW,              'move sw',                true, KEY_Z,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_S,               'move s',                 true, KEY_X,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_S,               'move s2',                true, KEY_DOWN,     false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_SE,              'move se',                true, KEY_C,        false, false, false, false),\n\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_NW,            'select nw',              true, KEY_Q,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_N,             'select n',               true, KEY_W,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_N,             'select n2',              true, KEY_UP,       true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_NE,            'select ne',              true, KEY_E,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_W,             'select w',               true, KEY_A,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_W,             'select w2',              true, KEY_LEFT,     true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_E,             'select e',               true, KEY_D,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_E,             'select e2',              true, KEY_RIGHT,    true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_SW,            'select sw',              true, KEY_Z,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_S,             'select s',               true, KEY_X,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_S,             'select s2',              true, KEY_DOWN,     true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_SE,            'select se',              true, KEY_C,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_INTERACT,             'select',                 true, KEY_S,        true,  false, false, false),\n\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_LOOK,                 'look',                   true, KEY_L,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_PICK_UP,              'pick up',                true, KEY_G,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_INTERACT,             'interact',               true, KEY_J,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_INVENTORY,            'inventory',              true, KEY_I,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_EQUIPMENT,            'equipment',              true, KEY_P,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_CHARACTER,            'character',              true, KEY_Y,        false, false, false, false),\n];\n","import InputKeyboardEvent from './events/InputEvent';\n\nexport default class InputCommand {\n    constructor(data) {\n        this.domain = data.domain;\n        this.type = data.type;\n        this.name = data.name;\n        this.isKeyboard = data.isKeyboard;\n        this.key = data.key;\n        this.shift = data.shift;\n        this.ctrl = data.ctrl;\n        this.alt = data.alt;\n        this.meta = data.meta;\n    }\n\n    matches(inputEvent) {\n        const isKeyboard = inputEvent instanceof InputKeyboardEvent;\n\n        return (\n            this.isKeyboard == isKeyboard &&\n            this.key == inputEvent.key &&\n            this.shift == inputEvent.shift &&\n            this.ctrl == inputEvent.ctrl &&\n            this.alt == inputEvent.alt &&\n            this.meta == inputEvent.meta\n        );\n    }\n}\n","export const INPUT_CMD_MOVE_NW = 0;\nexport const INPUT_CMD_MOVE_N = 1;\nexport const INPUT_CMD_MOVE_NE = 2;\nexport const INPUT_CMD_MOVE_W = 3;\nexport const INPUT_CMD_MOVE_E = 4;\nexport const INPUT_CMD_MOVE_SW = 5;\nexport const INPUT_CMD_MOVE_S = 6;\nexport const INPUT_CMD_MOVE_SE = 7;\n\nexport const INPUT_CMD_WAIT = 8;\nexport const INPUT_CMD_CONFIRM = 9;\nexport const INPUT_CMD_CANCEL = 10;\nexport const INPUT_CMD_SAVE = 11;\nexport const INPUT_CMD_LOAD = 12;\nexport const INPUT_CMD_LOOK = 13;\n\nexport const INPUT_CMD_PICK_UP = 16;\nexport const INPUT_CMD_INTERACT = 17;\nexport const INPUT_CMD_INVENTORY = 19;\n\nexport const INPUT_CMD_SELECT_NW = 20;\nexport const INPUT_CMD_SELECT_N = 21;\nexport const INPUT_CMD_SELECT_NE = 22;\nexport const INPUT_CMD_SELECT_W = 23;\nexport const INPUT_CMD_SELECT_E = 24;\nexport const INPUT_CMD_SELECT_SW = 25;\nexport const INPUT_CMD_SELECT_S = 26;\nexport const INPUT_CMD_SELECT_SE = 27;\nexport const INPUT_CMD_NEW_GAME = 28;\n\nexport const INPUT_CMD_EQUIPMENT = 29;\nexport const INPUT_CMD_CHARACTER = 30;\n","export const KEY_CANCEL = 3;\nexport const KEY_HELP = 6;\nexport const KEY_BACK_SPACE = 8;\nexport const KEY_TAB = 9;\nexport const KEY_CLEAR = 12;\nexport const KEY_ENTER = 13;\nexport const KEY_ENTER_SPECIAL = 14;\nexport const KEY_SHIFT = 16;\nexport const KEY_CONTROL = 17;\nexport const KEY_ALT = 18;\nexport const KEY_PAUSE = 19;\nexport const KEY_CAPS_LOCK = 20;\nexport const KEY_KANA = 21;\nexport const KEY_EISU = 22;\nexport const KEY_JUNJA = 23;\nexport const KEY_FINAL = 24;\nexport const KEY_HANJA = 25;\nexport const KEY_ESCAPE = 27;\nexport const KEY_CONVERT = 28;\nexport const KEY_NONCONVERT = 29;\nexport const KEY_ACCEPT = 30;\nexport const KEY_MODECHANGE = 31;\nexport const KEY_SPACE = 32;\nexport const KEY_PAGE_UP = 33;\nexport const KEY_PAGE_DOWN = 34;\nexport const KEY_END = 35;\nexport const KEY_HOME = 36;\nexport const KEY_LEFT = 37;\nexport const KEY_UP = 38;\nexport const KEY_RIGHT = 39;\nexport const KEY_DOWN = 40;\nexport const KEY_SELECT = 41;\nexport const KEY_PRINT = 42;\nexport const KEY_EXECUTE = 43;\nexport const KEY_PRINTSCREEN = 44;\nexport const KEY_INSERT = 45;\nexport const KEY_DELETE = 46;\nexport const KEY_NUM_0 = 48;\nexport const KEY_NUM_1 = 49;\nexport const KEY_NUM_2 = 50;\nexport const KEY_NUM_3 = 51;\nexport const KEY_NUM_4 = 52;\nexport const KEY_NUM_5 = 53;\nexport const KEY_NUM_6 = 54;\nexport const KEY_NUM_7 = 55;\nexport const KEY_NUM_8 = 56;\nexport const KEY_NUM_9 = 57;\nexport const KEY_COLON = 58;\nexport const KEY_SEMICOLON = 59;\nexport const KEY_LESS_THAN = 60;\nexport const KEY_EQUALS = 61;\nexport const KEY_GREATER_THAN = 62;\nexport const KEY_QUESTION_MARK = 63;\nexport const KEY_AT = 64;\nexport const KEY_A = 65;\nexport const KEY_B = 66;\nexport const KEY_C = 67;\nexport const KEY_D = 68;\nexport const KEY_E = 69;\nexport const KEY_F = 70;\nexport const KEY_G = 71;\nexport const KEY_H = 72;\nexport const KEY_I = 73;\nexport const KEY_J = 74;\nexport const KEY_K = 75;\nexport const KEY_L = 76;\nexport const KEY_M = 77;\nexport const KEY_N = 78;\nexport const KEY_O = 79;\nexport const KEY_P = 80;\nexport const KEY_Q = 81;\nexport const KEY_R = 82;\nexport const KEY_S = 83;\nexport const KEY_T = 84;\nexport const KEY_U = 85;\nexport const KEY_V = 86;\nexport const KEY_W = 87;\nexport const KEY_X = 88;\nexport const KEY_Y = 89;\nexport const KEY_Z = 90;\nexport const KEY_META = 91; // windows key (windows) or command key (mac)\nexport const KEY_CONTEXT_MENU = 93;\nexport const KEY_SLEEP = 95;\nexport const KEY_NUMPAD_0 = 96;\nexport const KEY_NUMPAD_1 = 97;\nexport const KEY_NUMPAD_2 = 98;\nexport const KEY_NUMPAD_3 = 99;\nexport const KEY_NUMPAD_4 = 100;\nexport const KEY_NUMPAD_5 = 101;\nexport const KEY_NUMPAD_6 = 102;\nexport const KEY_NUMPAD_7 = 103;\nexport const KEY_NUMPAD_8 = 104;\nexport const KEY_NUMPAD_9 = 105;\nexport const KEY_MULTIPLY = 106;\nexport const KEY_ADD = 107;\nexport const KEY_SEPARATOR = 108;\nexport const KEY_SUBTRACT = 109;\nexport const KEY_DECIMAL = 110;\nexport const KEY_DIVIDE = 111;\nexport const KEY_F1 = 112;\nexport const KEY_F2 = 113;\nexport const KEY_F3 = 114;\nexport const KEY_F4 = 115;\nexport const KEY_F5 = 116;\nexport const KEY_F6 = 117;\nexport const KEY_F7 = 118;\nexport const KEY_F8 = 119;\nexport const KEY_F9 = 120;\nexport const KEY_F10 = 121;\nexport const KEY_F11 = 122;\nexport const KEY_F12 = 123;\nexport const KEY_F13 = 124;\nexport const KEY_F14 = 125;\nexport const KEY_F15 = 126;\nexport const KEY_F16 = 127;\nexport const KEY_F17 = 128;\nexport const KEY_F18 = 129;\nexport const KEY_F19 = 130;\nexport const KEY_F20 = 131;\nexport const KEY_F21 = 132;\nexport const KEY_F22 = 133;\nexport const KEY_F23 = 134;\nexport const KEY_F24 = 135;\nexport const KEY_NUM_LOCK = 144;\nexport const KEY_SCROLL_LOCK = 145;\nexport const KEY_WIN_OEM_FJ_JISHO = 146;\nexport const KEY_WIN_OEM_FJ_MASSHOU = 147;\nexport const KEY_WIN_OEM_FJ_TOUROKU = 148;\nexport const KEY_WIN_OEM_FJ_LOYA = 149;\nexport const KEY_WIN_OEM_FJ_ROYA = 150;\nexport const KEY_CIRCUMFLEX = 160;\nexport const KEY_EXCLAMATION = 161;\nexport const KEY_DOUBLE_QUOTE = 162;\nexport const KEY_HASH = 163;\nexport const KEY_DOLLAR = 164;\nexport const KEY_PERCENT = 165;\nexport const KEY_AMPERSAND = 166;\nexport const KEY_UNDERSCORE = 167;\nexport const KEY_OPEN_PAREN = 168;\nexport const KEY_CLOSE_PAREN = 169;\nexport const KEY_ASTERISK = 170;\nexport const KEY_PLUS = 171;\nexport const KEY_PIPE = 172;\nexport const KEY_HYPHEN_MINUS = 173;\nexport const KEY_OPEN_CURLY_BRACKET = 174;\nexport const KEY_CLOSE_CURLY_BRACKET = 175;\nexport const KEY_TILDE = 176;\nexport const KEY_VOLUME_MUTE = 181;\nexport const KEY_VOLUME_DOWN = 182;\nexport const KEY_VOLUME_UP = 183;\nexport const KEY_SEMICOLON_2 = 186;\nexport const KEY_EQUALS_2 = 187;\nexport const KEY_COMMA = 188;\nexport const KEY_MINUS = 189;\nexport const KEY_PERIOD = 190;\nexport const KEY_SLASH = 191;\nexport const KEY_BACK_QUOTE = 192;\nexport const KEY_OPEN_BRACKET = 219;\nexport const KEY_BACK_SLASH = 220;\nexport const KEY_CLOSE_BRACKET = 221;\nexport const KEY_QUOTE = 222;\nexport const KEY_META_2 = 224;\nexport const KEY_ALTGR = 225;\nexport const KEY_WIN_ICO_HELP = 227;\nexport const KEY_WIN_ICO_00 = 228;\nexport const KEY_WIN_ICO_CLEAR = 230;\nexport const KEY_WIN_OEM_RESET = 233;\nexport const KEY_WIN_OEM_JUMP = 234;\nexport const KEY_WIN_OEM_PA1 = 235;\nexport const KEY_WIN_OEM_PA2 = 236;\nexport const KEY_WIN_OEM_PA3 = 237;\nexport const KEY_WIN_OEM_WSCTRL = 238;\nexport const KEY_WIN_OEM_CUSEL = 239;\nexport const KEY_WIN_OEM_ATTN = 240;\nexport const KEY_WIN_OEM_FINISH = 241;\nexport const KEY_WIN_OEM_COPY = 242;\nexport const KEY_WIN_OEM_AUTO = 243;\nexport const KEY_WIN_OEM_ENLW = 244;\nexport const KEY_WIN_OEM_BACKTAB = 245;\nexport const KEY_ATTN = 246;\nexport const KEY_CRSEL = 247;\nexport const KEY_EXSEL = 248;\nexport const KEY_EREOF = 249;\nexport const KEY_PLAY = 250;\nexport const KEY_ZOOM = 251;\nexport const KEY_PA1 = 253;\nexport const KEY_WIN_OEM_CLEAR = 254;\n","import {\n    SCREEN_MAIN_MENU,\n    SCREEN_ADVENTURE,\n    SCREEN_DEATH,\n    SCREEN_INVENTORY,\n    SCREEN_INTERACT_MODAL,\n    SCREEN_CURSOR,\n    SCREEN_LOAD_SECTOR,\n    SCREEN_EQUIPMENT,\n    SCREEN_LIST_SELECT,\n    SCREEN_CHARACTER,\n} from './ScreenType';\nimport AdventureScreen from './screens/AdventureScreen';\nimport MainMenuScreen from './screens/MainMenuScreen';\nimport DeathScreen from './screens/DeathScreen';\nimport Manager from '../Manager';\nimport InventoryScreen from './screens/InventoryScreen';\nimport InteractModalScreen from './screens/InteractModalScreen';\nimport CursorScreen from './screens/CursorScreen';\nimport LoadSectorScreen from './screens/LoadSectorScreen';\nimport EquipmentScreen from './screens/EquipmentScreen';\nimport ListSelectionScreen from './screens/ListSelectionScreen';\nimport CharacterScreen from './screens/CharacterScreen';\n\nexport default class ScreenManager extends Manager {\n    #screens = {};\n    #screenStack = [];\n\n    constructor(game) {\n        super(game);\n        this.#screens = {\n            [SCREEN_MAIN_MENU]: new MainMenuScreen(game),\n            [SCREEN_ADVENTURE]: new AdventureScreen(game),\n            [SCREEN_DEATH]: new DeathScreen(game),\n            [SCREEN_INVENTORY]: new InventoryScreen(game),\n            [SCREEN_INTERACT_MODAL]: new InteractModalScreen(game),\n            [SCREEN_CURSOR]: new CursorScreen(game),\n            [SCREEN_LOAD_SECTOR]: new LoadSectorScreen(game),\n            [SCREEN_EQUIPMENT]: new EquipmentScreen(game),\n            [SCREEN_LIST_SELECT]: new ListSelectionScreen(game),\n            [SCREEN_CHARACTER]: new CharacterScreen(game),\n        };\n        this.setScreen(SCREEN_MAIN_MENU);\n    }\n\n    get screenType() {\n        return this.#screenStack[this.#screenStack.length - 1].type;\n    }\n\n    get screenCtx() {\n        return this.#screenStack[this.#screenStack.length - 1].ctx;\n    }\n\n    get screen() {\n        return this.#screens[this.screenType];\n    }\n\n    setScreen(screenType, ctx = {}) {\n        while (this.#screenStack.length > 0) {\n            this.screen.onLeave(ctx);\n            this.#screenStack.pop();\n        }\n\n        this.#screenStack.push({\n            type: screenType,\n            ctx,\n        });\n        this.screen.onEnter(this.screenCtx);\n    }\n\n    replaceScreen(screenType, ctx = {}) {\n        this.screen.onLeave(ctx);\n        this.#screenStack.pop();\n        this.#screenStack.push({\n            type: screenType,\n            ctx,\n        });\n        this.screen.onEnter(this.screenCtx);\n    }\n\n    pushScreen(screenType, ctx = {}) {\n        this.screen.onLeave(ctx);\n        this.#screenStack.push({\n            type: screenType,\n            ctx,\n        });\n        this.screen.onEnter(this.screenCtx);\n    }\n\n    popScreen(ctx = {}) {\n        this.screen.onLeave(ctx);\n        this.#screenStack.pop();\n        this.screen.onEnter(this.screenCtx);\n    }\n\n    update(dt) {\n        this.screen.onUpdate(dt);\n    }\n}\n","import Screen from './Screen';\r\nimport {\r\n    INPUT_CMD_MOVE_N,\r\n    INPUT_CMD_MOVE_NE,\r\n    INPUT_CMD_MOVE_W,\r\n    INPUT_CMD_WAIT,\r\n    INPUT_CMD_MOVE_E,\r\n    INPUT_CMD_MOVE_SW,\r\n    INPUT_CMD_MOVE_S,\r\n    INPUT_CMD_MOVE_SE,\r\n    INPUT_CMD_MOVE_NW,\r\n    INPUT_CMD_CANCEL,\r\n    INPUT_CMD_SAVE,\r\n    INPUT_CMD_LOAD,\r\n    INPUT_CMD_LOOK,\r\n    INPUT_CMD_INTERACT,\r\n    INPUT_CMD_PICK_UP,\r\n    INPUT_CMD_INVENTORY,\r\n    INPUT_CMD_SELECT_NW,\r\n    INPUT_CMD_SELECT_N,\r\n    INPUT_CMD_SELECT_NE,\r\n    INPUT_CMD_SELECT_W,\r\n    INPUT_CMD_SELECT_E,\r\n    INPUT_CMD_SELECT_SW,\r\n    INPUT_CMD_SELECT_S,\r\n    INPUT_CMD_SELECT_SE,\r\n    INPUT_CMD_EQUIPMENT,\r\n    INPUT_CMD_CHARACTER,\r\n} from '../../input/InputCommandType';\r\nimport { INPUT_DOMAIN_ADVENTURE } from '../../input/InputDomainType';\r\nimport {\r\n    DIR_N,\r\n    DIR_W,\r\n    DIR_E,\r\n    DIR_S,\r\n    DIR_NW,\r\n    DIR_SW,\r\n    DIR_SE,\r\n    DIR_NE,\r\n    delta as directionDelta,\r\n} from '../../../enums/Directions';\r\nimport {\r\n    SCREEN_CURSOR,\r\n    SCREEN_EQUIPMENT,\r\n    SCREEN_INTERACT_MODAL,\r\n    SCREEN_INVENTORY,\r\n    SCREEN_CHARACTER,\r\n    SCREEN_LIST_SELECT,\r\n    SCREEN_MAIN_MENU,\r\n} from '../ScreenType';\r\nimport { Door, Loot } from '../../../ecs/components';\r\n\r\nexport default class AdventureScreen extends Screen {\r\n    onEnter() {\r\n        this.game.renderer.clear();\r\n        this.game.commands.pushDomain(INPUT_DOMAIN_ADVENTURE);\r\n        this.game.FOVSystem.computeFOV();\r\n\r\n        const position = this.game.player.position;\r\n\r\n        this.game.camera.setFocus(position.x, position.y);\r\n    }\r\n\r\n    onLeave() {\r\n        this.game.commands.popDomain(INPUT_DOMAIN_ADVENTURE);\r\n    }\r\n\r\n    onDirectionInput(dir) {\r\n        const delta = directionDelta(dir);\r\n        const playerPosition = this.game.player.position;\r\n        const targetPosition = {\r\n            x: playerPosition.x + delta.x,\r\n            y: playerPosition.y + delta.y,\r\n        };\r\n        const entities = this.game.map.getEntitiesAt(\r\n            targetPosition.x,\r\n            targetPosition.y\r\n        );\r\n\r\n        const hostileEntities = entities.filter((e) =>\r\n            this.game.factions.areEntitiesHostile(e, this.game.player.entity)\r\n        );\r\n\r\n        if (hostileEntities.length > 0) {\r\n            this.game.player.melee(hostileEntities[0]);\r\n        } else {\r\n            const doorEntity = entities.find((e) => e.has(Door));\r\n\r\n            if (doorEntity && !doorEntity.door.isOpen) {\r\n                doorEntity.fireEvent('try-open-door', {\r\n                    interactor: this.game.player.entity,\r\n                });\r\n            } else {\r\n                this.game.player.move(dir);\r\n            }\r\n        }\r\n    }\r\n\r\n    onPickUpCommand() {\r\n        const position = this.game.player.position;\r\n        const entities = this.game.map.getEntitiesAt(position.x, position.y);\r\n\r\n        const lootable = entities.find((entity) => entity.has(Loot));\r\n\r\n        if (lootable) {\r\n            lootable.fireEvent('try-pick-up', {\r\n                interactor: this.game.player.entity,\r\n            });\r\n        } else {\r\n            console.log('there is nothing here to pick up.');\r\n        }\r\n    }\r\n\r\n    onInteract(x, y) {\r\n        const entities = this.game.map\r\n            .getEntitiesAt(x, y)\r\n            .filter((e) => !e.isPlayer);\r\n\r\n        const items = entities.filter((entity) => {\r\n            const evt = entity.fireEvent('get-interactions', {\r\n                interactor: this.game.player.entity,\r\n                interactions: [],\r\n            });\r\n\r\n            return evt.data.interactions.length > 0;\r\n        });\r\n\r\n        if (items.length <= 0) {\r\n            return;\r\n        }\r\n\r\n        if (items.length == 1) {\r\n            this.game.screens.pushScreen(SCREEN_INTERACT_MODAL, {\r\n                interactor: this.game.player.entity,\r\n                interactable: items[0],\r\n            });\r\n            return;\r\n        }\r\n\r\n        game.screens.pushScreen(SCREEN_LIST_SELECT, {\r\n            header: `Choose`,\r\n            list: items,\r\n            onGetRowName: (item) => item.moniker.display,\r\n            onSelect: (item) => {\r\n                this.game.screens.replaceScreen(SCREEN_INTERACT_MODAL, {\r\n                    interactor: this.game.player.entity,\r\n                    interactable: item,\r\n                });\r\n            },\r\n        });\r\n    }\r\n\r\n    onInteractDirection(dir) {\r\n        const delta = directionDelta(dir);\r\n        const playerPosition = this.game.player.position;\r\n        const targetPosition = {\r\n            x: playerPosition.x + delta.x,\r\n            y: playerPosition.y + delta.y,\r\n        };\r\n\r\n        this.onInteract(targetPosition.x, targetPosition.y);\r\n    }\r\n\r\n    handleInput() {\r\n        const cmd = this.game.commands.getNextCommand();\r\n\r\n        if (!cmd) {\r\n            return;\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_SAVE) {\r\n            this.game.state.saveGame();\r\n        }\r\n        if (cmd.type === INPUT_CMD_LOAD) {\r\n            this.game.state.loadGame();\r\n        }\r\n        if (cmd.type === INPUT_CMD_LOOK) {\r\n            game.screens.pushScreen(SCREEN_CURSOR, {\r\n                drawTags: true,\r\n                onResult: () => game.screens.popScreen(),\r\n                onCancel: () => game.screens.popScreen(),\r\n            });\r\n        }\r\n        if (cmd.type === INPUT_CMD_PICK_UP) {\r\n            this.onPickUpCommand();\r\n        }\r\n        if (cmd.type === INPUT_CMD_INTERACT) {\r\n            const pos = this.game.player.position;\r\n\r\n            this.onInteract(pos.x, pos.y);\r\n        }\r\n        if (cmd.type === INPUT_CMD_INVENTORY) {\r\n            this.game.screens.pushScreen(SCREEN_INVENTORY, {\r\n                accessible: this.game.player.entity,\r\n                accessor: this.game.player.entity,\r\n            });\r\n        }\r\n        if (cmd.type === INPUT_CMD_EQUIPMENT) {\r\n            this.game.screens.pushScreen(SCREEN_EQUIPMENT, {\r\n                accessor: this.game.player.entity,\r\n            });\r\n        }\r\n        if (cmd.type === INPUT_CMD_CHARACTER) {\r\n            this.game.screens.pushScreen(SCREEN_CHARACTER, {\r\n                character: this.game.player.entity,\r\n            });\r\n        }\r\n        if (cmd.type === INPUT_CMD_CANCEL) {\r\n            this.game.screens.setScreen(SCREEN_MAIN_MENU);\r\n        }\r\n        if (cmd.type === INPUT_CMD_WAIT) {\r\n            this.game.player.wait();\r\n        }\r\n        if (cmd.type === INPUT_CMD_MOVE_NW) {\r\n            this.onDirectionInput(DIR_NW);\r\n        }\r\n        if (cmd.type === INPUT_CMD_MOVE_N) {\r\n            this.onDirectionInput(DIR_N);\r\n        }\r\n        if (cmd.type === INPUT_CMD_MOVE_NE) {\r\n            this.onDirectionInput(DIR_NE);\r\n        }\r\n        if (cmd.type === INPUT_CMD_MOVE_W) {\r\n            this.onDirectionInput(DIR_W);\r\n        }\r\n        if (cmd.type === INPUT_CMD_MOVE_E) {\r\n            this.onDirectionInput(DIR_E);\r\n        }\r\n        if (cmd.type === INPUT_CMD_MOVE_SW) {\r\n            this.onDirectionInput(DIR_SW);\r\n        }\r\n        if (cmd.type === INPUT_CMD_MOVE_S) {\r\n            this.onDirectionInput(DIR_S);\r\n        }\r\n        if (cmd.type === INPUT_CMD_MOVE_SE) {\r\n            this.onDirectionInput(DIR_SE);\r\n        }\r\n        if (cmd.type === INPUT_CMD_SELECT_NW) {\r\n            this.onInteractDirection(DIR_NW);\r\n        }\r\n        if (cmd.type === INPUT_CMD_SELECT_N) {\r\n            this.onInteractDirection(DIR_N);\r\n        }\r\n        if (cmd.type === INPUT_CMD_SELECT_NE) {\r\n            this.onInteractDirection(DIR_NE);\r\n        }\r\n        if (cmd.type === INPUT_CMD_SELECT_W) {\r\n            this.onInteractDirection(DIR_W);\r\n        }\r\n        if (cmd.type === INPUT_CMD_SELECT_E) {\r\n            this.onInteractDirection(DIR_E);\r\n        }\r\n        if (cmd.type === INPUT_CMD_SELECT_SW) {\r\n            this.onInteractDirection(DIR_SW);\r\n        }\r\n        if (cmd.type === INPUT_CMD_SELECT_S) {\r\n            this.onInteractDirection(DIR_S);\r\n        }\r\n        if (cmd.type === INPUT_CMD_SELECT_SE) {\r\n            this.onInteractDirection(DIR_SE);\r\n        }\r\n    }\r\n\r\n    onUpdate(dt) {\r\n        this.handleInput();\r\n        this.game.updateAdventureSystems(dt);\r\n    }\r\n}\r\n","export default class Screen {\n    #game;\n\n    get game() {\n        return this.#game;\n    }\n\n    constructor(game) {\n        this.#game = game;\n    }\n\n    onEnter() {}\n\n    onLeave() {}\n\n    onUpdate(dt) {}\n}\n","import Screen from './Screen';\r\nimport {\r\n    INPUT_CMD_CONFIRM,\r\n    INPUT_CMD_SAVE,\r\n    INPUT_CMD_LOAD,\r\n    INPUT_CMD_NEW_GAME,\r\n} from '../../input/InputCommandType';\r\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\r\nimport { SCREEN_ADVENTURE } from '../ScreenType';\r\n\r\nexport default class MainMenuScreen extends Screen {\r\n    onEnter() {\r\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\r\n\r\n        if (!this.game.state.isStarted) {\r\n            this.game.music.play('BARDS_TALE');\r\n        }\r\n    }\r\n\r\n    onLeave() {\r\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\r\n    }\r\n\r\n    onConfirm() {\r\n        if (this.game.state.isStarted) {\r\n            this.game.screens.setScreen(SCREEN_ADVENTURE);\r\n        } else {\r\n            this.game.state.newGame();\r\n        }\r\n    }\r\n\r\n    inputCommand() {\r\n        const cmd = this.game.commands.getNextCommand();\r\n\r\n        if (!cmd) {\r\n            return;\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_CONFIRM) {\r\n            this.onConfirm();\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_SAVE) {\r\n            this.game.state.saveGame();\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_LOAD) {\r\n            this.game.state.loadGame();\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_NEW_GAME) {\r\n            this.game.state.newGame();\r\n        }\r\n    }\r\n\r\n    onUpdate(dt) {\r\n        this.inputCommand();\r\n        this.game.renderer.clear();\r\n        this.game.renderer.drawText(1, 1, `sleepy crawler`, 'cyan');\r\n\r\n        this.game.renderer.drawText(\r\n            1,\r\n            4,\r\n            `move       [q, w, e, a, d, z, x, c]`\r\n        );\r\n        this.game.renderer.drawText(1, 5, `look       [l]`);\r\n        this.game.renderer.drawText(1, 6, `interact   [shift+direction]`);\r\n        this.game.renderer.drawText(1, 7, `interact   [j]`);\r\n        this.game.renderer.drawText(1, 8, `pick up    [g]`);\r\n        this.game.renderer.drawText(1, 9, `save       [ctrl+s]`);\r\n        this.game.renderer.drawText(1, 10, `load       [ctrl+l]`);\r\n        this.game.renderer.drawText(1, 11, `confirm    [enter]`);\r\n        this.game.renderer.drawText(1, 12, `cancel     [esc]`);\r\n\r\n        this.game.renderer.drawTextCenter(14, `set out into the forest...`);\r\n        this.game.renderer.drawTextCenter(16, `press [enter]`);\r\n    }\r\n}\r\n","import Screen from './Screen';\r\nimport { INPUT_CMD_CONFIRM } from '../../input/InputCommandType';\r\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\r\nimport { SCREEN_MAIN_MENU } from '../ScreenType';\r\n\r\nexport default class DeathScreen extends Screen {\r\n    onEnter() {\r\n        this.game.state.gameOver();\r\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\r\n    }\r\n\r\n    onLeave() {\r\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\r\n    }\r\n\r\n    handleInput() {\r\n        const cmd = this.game.commands.getNextCommand();\r\n\r\n        if (!cmd) {\r\n            return;\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_CONFIRM) {\r\n            this.game.screens.setScreen(SCREEN_MAIN_MENU);\r\n        }\r\n    }\r\n\r\n    onUpdate(dt) {\r\n        this.handleInput();\r\n\r\n        const text = 'you have succumbed to the forest';\r\n\r\n        this.game.renderer.drawTextCenter(10, text, '#ce5454');\r\n    }\r\n}\r\n","import Screen from './Screen';\r\nimport {\r\n    INPUT_CMD_CONFIRM,\r\n    INPUT_CMD_CANCEL,\r\n    INPUT_CMD_MOVE_N,\r\n    INPUT_CMD_MOVE_S,\r\n} from '../../input/InputCommandType';\r\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\r\nimport { SCREEN_INTERACT_MODAL } from '../ScreenType';\r\nimport SelectableList from '../../../utils/SelectableList';\r\n\r\nexport default class InventoryScreen extends Screen {\r\n    #accessible;\r\n    #accessor;\r\n    list = new SelectableList();\r\n\r\n    onEnter(ctx) {\r\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\r\n        this.#accessible = ctx.accessible;\r\n        this.#accessor = ctx.accessor;\r\n        this.list.setItems(this.#accessible.inventory.content);\r\n    }\r\n\r\n    onLeave() {\r\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\r\n    }\r\n\r\n    selectItem() {\r\n        const interactable = this.list.selected;\r\n\r\n        if (interactable) {\r\n            this.game.screens.pushScreen(SCREEN_INTERACT_MODAL, {\r\n                interactable,\r\n                interactor: this.#accessor,\r\n            });\r\n        }\r\n    }\r\n\r\n    handleInput() {\r\n        const cmd = this.game.commands.getNextCommand();\r\n\r\n        if (!cmd) {\r\n            return;\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_CANCEL) {\r\n            this.game.screens.popScreen();\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_MOVE_N) {\r\n            this.list.up();\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_MOVE_S) {\r\n            this.list.down();\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_CONFIRM) {\r\n            this.selectItem();\r\n        }\r\n    }\r\n\r\n    onUpdate(dt) {\r\n        this.handleInput();\r\n        this.game.renderer.clear();\r\n        this.game.renderer.drawTextCenter(\r\n            3,\r\n            `~ ${this.#accessible.moniker.display} Inventory ~`,\r\n            'yellow'\r\n        );\r\n\r\n        if (this.list.items.length === 0) {\r\n            this.game.renderer.drawTextCenter(6, 'There is nothing here.');\r\n        }\r\n\r\n        this.list.data.forEach(({ item, idx, isSelected }) => {\r\n            const ypos = idx + 5;\r\n\r\n            if (isSelected) {\r\n                this.game.renderer.drawText(1, ypos, '→', 'yellow');\r\n            } else {\r\n                this.game.renderer.drawText(1, ypos, '-');\r\n            }\r\n\r\n            this.game.renderer.draw(\r\n                2,\r\n                ypos,\r\n                item.glyph.char,\r\n                item.glyph.primary,\r\n                item.glyph.secondary,\r\n                item.glyph.background\r\n            );\r\n\r\n            const textLen = this.game.renderer.computeTextWidth(\r\n                item.moniker.display\r\n            );\r\n\r\n            this.game.renderer.drawText(4, ypos, item.moniker.display);\r\n\r\n            if (item.isEquipped) {\r\n                const slot = item.isEquipped.slot.name;\r\n\r\n                this.game.renderer.drawText(\r\n                    4 + textLen + 0.5,\r\n                    ypos,\r\n                    `[${slot}]`,\r\n                    '#2c3538'\r\n                );\r\n            }\r\n        });\r\n\r\n        this.game.renderer.drawText(1, 1, '← back [esc]');\r\n    }\r\n}\r\n","export default class SelectableList {\n    _items = [];\n    _idx = 0;\n\n    get selected() {\n        return this._items[this._idx];\n    }\n\n    get items() {\n        return this._items;\n    }\n\n    get data() {\n        return this._items.map((item, idx) => ({\n            item,\n            idx,\n            isSelected: idx === this._idx,\n        }));\n    }\n\n    get isEmpty() {\n        return this._items.length <= 0;\n    }\n\n    get length() {\n        return this._items.length;\n    }\n\n    constructor(items = [], idx = 0) {\n        this._idx = idx;\n        this.setItems(items);\n    }\n\n    setItems(items = []) {\n        this._items = items;\n        this._idx = Math.min(Math.max(this._idx, 0), this._items.length - 1);\n    }\n\n    up() {\n        this._idx--;\n\n        if (this._idx < 0) {\n            this._idx = this._items.length - 1;\n        }\n    }\n\n    down() {\n        this._idx++;\n\n        if (this._idx >= this._items.length) {\n            this._idx = 0;\n        }\n    }\n}\n","import Screen from './Screen';\r\nimport {\r\n    INPUT_CMD_CONFIRM,\r\n    INPUT_CMD_CANCEL,\r\n    INPUT_CMD_MOVE_N,\r\n    INPUT_CMD_MOVE_S,\r\n} from '../../input/InputCommandType';\r\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\r\nimport SelectableList from '../../../utils/SelectableList';\r\n\r\nexport default class InteractModalScreen extends Screen {\r\n    #width = 16;\r\n    #height = 12;\r\n    #interactable;\r\n    #interactor;\r\n    list = new SelectableList();\r\n\r\n    get left() {\r\n        return Math.floor((this.game.camera.width - this.#width) / 2);\r\n    }\r\n\r\n    get top() {\r\n        return Math.floor((this.game.camera.height - this.#height) / 2);\r\n    }\r\n\r\n    onEnter(ctx) {\r\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\r\n        this.#interactable = ctx.interactable;\r\n        this.#interactor = ctx.interactor;\r\n\r\n        this.refreshList();\r\n    }\r\n\r\n    refreshList() {\r\n        const evt = this.#interactable.fireEvent('get-interactions', {\r\n            interactor: this.#interactor,\r\n            interactions: [],\r\n        });\r\n\r\n        this.list.setItems([\r\n            ...evt.data.interactions,\r\n            {\r\n                name: 'Back',\r\n                isBack: true,\r\n            },\r\n        ]);\r\n    }\r\n\r\n    onLeave() {\r\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\r\n    }\r\n\r\n    selectItem() {\r\n        const interaction = this.list.selected;\r\n\r\n        if (interaction.isBack) {\r\n            this.game.screens.popScreen();\r\n            return;\r\n        }\r\n\r\n        this.#interactable.fireEvent(interaction.evt, {\r\n            interactor: this.#interactor,\r\n        });\r\n\r\n        if (this.#interactable.isDestroyed) {\r\n            this.game.screens.popScreen();\r\n\r\n            return;\r\n        }\r\n\r\n        this.refreshList();\r\n    }\r\n\r\n    handleInput() {\r\n        const cmd = this.game.commands.getNextCommand();\r\n\r\n        if (!cmd) {\r\n            return;\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_CANCEL) {\r\n            this.game.screens.popScreen();\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_MOVE_N) {\r\n            this.list.up();\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_MOVE_S) {\r\n            this.list.down();\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_CONFIRM) {\r\n            this.selectItem();\r\n        }\r\n    }\r\n\r\n    onUpdate(dt) {\r\n        this.handleInput();\r\n\r\n        this.game.renderer.clearArea(\r\n            this.left,\r\n            this.top,\r\n            this.#width + 1,\r\n            this.#height + 1\r\n        );\r\n\r\n        this.game.renderer.draw(\r\n            this.left + 2,\r\n            this.top + 2,\r\n            this.#interactable.glyph.char,\r\n            this.#interactable.glyph.primary,\r\n            this.#interactable.glyph.secondary,\r\n            this.#interactable.glyph.background\r\n        );\r\n\r\n        this.game.renderer.drawTextCenter(\r\n            this.top + 2,\r\n            `${this.#interactable.moniker.display}`\r\n        );\r\n\r\n        for (let i = this.left; i < this.left + this.#width; i++) {\r\n            this.game.renderer.draw(i, this.top, '─');\r\n            this.game.renderer.draw(i, this.top + this.#height, '─');\r\n        }\r\n\r\n        for (let i = this.top; i < this.top + this.#height; i++) {\r\n            this.game.renderer.draw(this.left, i, '│');\r\n            this.game.renderer.draw(this.left + this.#width, i, '│');\r\n        }\r\n\r\n        this.game.renderer.draw(this.left, this.top, '┌');\r\n        this.game.renderer.draw(this.left + this.#width, this.top, '┐');\r\n        this.game.renderer.draw(this.left, this.top + this.#height, '└');\r\n        this.game.renderer.draw(\r\n            this.left + this.#width,\r\n            this.top + this.#height,\r\n            '┘'\r\n        );\r\n\r\n        let listPadding = 4;\r\n        const xpos = this.left + 2;\r\n\r\n        if (this.#interactable.weapon) {\r\n            const weaponDmg = this.#interactable.weapon.getShortDescription(\r\n                this.#interactor\r\n            );\r\n\r\n            this.game.renderer.drawText(\r\n                xpos,\r\n                this.top + listPadding,\r\n                weaponDmg\r\n            );\r\n\r\n            listPadding += 2;\r\n        }\r\n\r\n        this.list.data.forEach(({ item, idx, isSelected }) => {\r\n            const ypos = idx + this.top + listPadding;\r\n\r\n            if (isSelected) {\r\n                this.game.renderer.drawText(\r\n                    xpos,\r\n                    ypos,\r\n                    `→ ${item.name}`,\r\n                    'yellow'\r\n                );\r\n            } else {\r\n                this.game.renderer.drawText(xpos, ypos, `- ${item.name}`);\r\n            }\r\n        });\r\n    }\r\n}\r\n","import Screen from './Screen';\r\nimport {\r\n    INPUT_CMD_MOVE_N,\r\n    INPUT_CMD_MOVE_NE,\r\n    INPUT_CMD_MOVE_W,\r\n    INPUT_CMD_WAIT,\r\n    INPUT_CMD_MOVE_E,\r\n    INPUT_CMD_MOVE_SW,\r\n    INPUT_CMD_MOVE_S,\r\n    INPUT_CMD_MOVE_SE,\r\n    INPUT_CMD_MOVE_NW,\r\n    INPUT_CMD_CANCEL,\r\n    INPUT_CMD_CONFIRM,\r\n} from '../../input/InputCommandType';\r\nimport {\r\n    DIR_N,\r\n    DIR_W,\r\n    DIR_Z,\r\n    DIR_E,\r\n    DIR_S,\r\n    DIR_NW,\r\n    DIR_SW,\r\n    DIR_SE,\r\n    DIR_NE,\r\n} from '../../../enums/Directions';\r\nimport { bresenhamLine } from '../../../utils/BresenhamLine';\r\nimport {\r\n    CURSOR_SEGMENT_INTEREST,\r\n    CURSOR_SEGMENT_NONE,\r\n    getCursorSegmentTypeColor,\r\n    getCursorSegmentTypeGlyph,\r\n} from '../../../enums/CursorSegments';\r\nimport { FactionMember } from '../../../ecs/components';\r\n\r\nconst NOOP = () => {};\r\n\r\nexport default class CursorScreen extends Screen {\r\n    #start = {};\r\n    #onResult = NOOP;\r\n    #onCancel = NOOP;\r\n    #getSegmentTypes = NOOP;\r\n    #drawLine = false;\r\n    #drawTags = false;\r\n\r\n    onEnter(ctx) {\r\n        this.game.renderer.clear();\r\n        this.game.FOVSystem.computeFOV();\r\n        this.game.cursor.enable();\r\n        this.#start = ctx.start || this.game.player.position;\r\n        this.#onResult = ctx.onResult || NOOP;\r\n        this.#onCancel = ctx.onCancel || NOOP;\r\n        this.#getSegmentTypes = ctx.getSegmentTypes || NOOP;\r\n        this.#drawLine = Boolean(ctx.drawLine);\r\n        this.#drawTags = Boolean(ctx.drawTags);\r\n    }\r\n\r\n    onLeave() {\r\n        this.game.cursor.disable();\r\n    }\r\n\r\n    onDirectionInput(dir) {\r\n        this.game.cursor.move(dir);\r\n    }\r\n\r\n    onConfirm() {\r\n        this.#onResult({\r\n            start: this.#start,\r\n            position: {\r\n                x: this.game.cursor.x,\r\n                y: this.game.cursor.y,\r\n            },\r\n        });\r\n    }\r\n\r\n    onCancel() {\r\n        this.#onCancel();\r\n    }\r\n\r\n    handleInput() {\r\n        const cmd = this.game.commands.getNextCommand();\r\n\r\n        if (!cmd) {\r\n            return;\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_CONFIRM) {\r\n            this.onConfirm();\r\n        }\r\n        if (cmd.type === INPUT_CMD_CANCEL) {\r\n            this.onCancel();\r\n        }\r\n        if (cmd.type === INPUT_CMD_MOVE_NW) {\r\n            this.onDirectionInput(DIR_NW);\r\n        }\r\n        if (cmd.type === INPUT_CMD_MOVE_N) {\r\n            this.onDirectionInput(DIR_N);\r\n        }\r\n        if (cmd.type === INPUT_CMD_MOVE_NE) {\r\n            this.onDirectionInput(DIR_NE);\r\n        }\r\n        if (cmd.type === INPUT_CMD_MOVE_W) {\r\n            this.onDirectionInput(DIR_W);\r\n        }\r\n        if (cmd.type === INPUT_CMD_MOVE_E) {\r\n            this.onDirectionInput(DIR_E);\r\n        }\r\n        if (cmd.type === INPUT_CMD_MOVE_SW) {\r\n            this.onDirectionInput(DIR_SW);\r\n        }\r\n        if (cmd.type === INPUT_CMD_MOVE_S) {\r\n            this.onDirectionInput(DIR_S);\r\n        }\r\n        if (cmd.type === INPUT_CMD_MOVE_SE) {\r\n            this.onDirectionInput(DIR_SE);\r\n        }\r\n    }\r\n\r\n    onUpdate(dt) {\r\n        this.handleInput();\r\n        this.game.updateAdventureSystems(dt);\r\n\r\n        const line = bresenhamLine(\r\n            this.#start.x,\r\n            this.#start.y,\r\n            this.game.cursor.x,\r\n            this.game.cursor.y\r\n        );\r\n\r\n        let cursorColor = getCursorSegmentTypeColor(CURSOR_SEGMENT_INTEREST);\r\n\r\n        if (this.#drawLine) {\r\n            const types = this.#getSegmentTypes(line);\r\n\r\n            line.forEach((segment, idx) => {\r\n                const type = types[idx];\r\n\r\n                if (type === CURSOR_SEGMENT_NONE || isNaN(type)) {\r\n                    return;\r\n                }\r\n\r\n                const color = getCursorSegmentTypeColor(type);\r\n                const glyph = getCursorSegmentTypeGlyph(type);\r\n\r\n                const screen = this.game.camera.worldToScreen(\r\n                    segment.x,\r\n                    segment.y\r\n                );\r\n                this.game.renderer.draw(screen.x, screen.y, glyph, color);\r\n\r\n                if (idx === line.length - 1) {\r\n                    cursorColor = color;\r\n                }\r\n            });\r\n        }\r\n\r\n        if (this.#drawTags) {\r\n            this.game.cursor.drawTags();\r\n        }\r\n\r\n        const target = this.game.cursor\r\n            .getEntities()\r\n            .filter((e) => e.has(FactionMember))\r\n            .pop();\r\n\r\n        const player = this.game.player.entity;\r\n\r\n        if (target) {\r\n            const faction = target.factionMember.faction;\r\n            const relation = this.game.factions.getEntityRelation(\r\n                player,\r\n                target\r\n            );\r\n\r\n            let disp = this.game.factions.getDisplay(relation);\r\n\r\n            this.game.renderer.drawTextCenter(\r\n                1,\r\n                `${faction.display} Faction [${disp}]`\r\n            );\r\n        }\r\n\r\n        this.game.cursor.drawCursor(cursorColor);\r\n    }\r\n}\r\n","import { SCREEN_ADVENTURE } from '../ScreenType';\nimport Screen from './Screen';\n\nexport default class LoadSectorScreen extends Screen {\n    #prevousSector;\n    #nextSector;\n\n    onEnter(ctx) {\n        this.#prevousSector = ctx.prevousSector;\n        this.#nextSector = ctx.nextSector;\n\n        this.renderLoadingText();\n\n        if (ctx.prevousSector) {\n            const data = this.game.state.saveGame();\n\n            data.world.sectorId = ctx.nextSector.id;\n            data.map.playerPosition = ctx.entry;\n\n            this.game.state.loadGameData(data);\n\n            return;\n        }\n\n        this.game.world.onSectorLoaded(ctx.nextSector, ctx.entry);\n        this.game.map.onSectorLoaded(ctx.nextSector, ctx.entry);\n        this.game.music.onSectorLoaded(ctx.nextSector, ctx.entry);\n\n        this.game.screens.setScreen(SCREEN_ADVENTURE);\n    }\n\n    renderLoadingText() {\n        this.game.renderer.clear();\n        if (this.#prevousSector) {\n            const prevText = `You are leaving sector ${this.#prevousSector.id}`;\n            this.game.renderer.drawTextCenter(11, prevText, '#ce5454');\n        } else {\n            const nextText = `You are entering sector ${this.#nextSector.id}`;\n            this.game.renderer.drawTextCenter(11, nextText, '#ce5454');\n        }\n    }\n\n    onUpdate(dt) {\n        this.renderLoadingText();\n    }\n}\n","import Screen from './Screen';\r\nimport {\r\n    INPUT_CMD_CONFIRM,\r\n    INPUT_CMD_CANCEL,\r\n    INPUT_CMD_MOVE_N,\r\n    INPUT_CMD_MOVE_S,\r\n} from '../../input/InputCommandType';\r\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\r\nimport { SCREEN_INTERACT_MODAL } from '../ScreenType';\r\nimport SelectableList from '../../../utils/SelectableList';\r\n\r\nexport default class EquipmentScreen extends Screen {\r\n    #accessor;\r\n    list = new SelectableList();\r\n\r\n    onEnter(ctx) {\r\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\r\n        this.#accessor = ctx.accessor;\r\n        this.list.setItems(Object.values(this.#accessor.equipmentSlot));\r\n    }\r\n\r\n    onLeave() {\r\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\r\n    }\r\n\r\n    selectSlot() {\r\n        const interactable = this.list.selected.content;\r\n\r\n        if (interactable) {\r\n            this.game.screens.pushScreen(SCREEN_INTERACT_MODAL, {\r\n                interactable,\r\n                interactor: this.#accessor,\r\n            });\r\n        }\r\n    }\r\n\r\n    handleInput() {\r\n        const cmd = this.game.commands.getNextCommand();\r\n\r\n        if (!cmd) {\r\n            return;\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_CANCEL) {\r\n            this.game.screens.popScreen();\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_MOVE_N) {\r\n            this.list.up();\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_MOVE_S) {\r\n            this.list.down();\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_CONFIRM) {\r\n            this.selectSlot();\r\n        }\r\n    }\r\n\r\n    onUpdate(dt) {\r\n        this.handleInput();\r\n        this.game.renderer.clear();\r\n        this.game.renderer.drawTextCenter(\r\n            3,\r\n            `~ ${this.#accessor.moniker.display} Equipment ~`,\r\n            'purple'\r\n        );\r\n\r\n        if (this.list.isEmpty) {\r\n            this.game.renderer.drawTextCenter(6, 'There is nothing here.');\r\n        }\r\n\r\n        this.list.data.forEach(({ item, idx, isSelected }) => {\r\n            const slot = item;\r\n            const ypos = idx + 5;\r\n            const selectedColor = 'yellow';\r\n\r\n            if (isSelected) {\r\n                this.game.renderer.drawText(\r\n                    1,\r\n                    ypos,\r\n                    `→ ${slot.name}`,\r\n                    selectedColor\r\n                );\r\n                this.game.renderer.drawText(14, ypos, '→', selectedColor);\r\n            } else {\r\n                this.game.renderer.drawText(1, ypos, `- ${slot.name}`);\r\n                this.game.renderer.drawText(14, ypos, '-', '#2c3538');\r\n            }\r\n\r\n            if (slot.isEmpty) {\r\n                this.game.renderer.drawText(15, ypos, '[empty]', '#2c3538');\r\n            } else {\r\n                const content = slot.content;\r\n                this.game.renderer.draw(\r\n                    15,\r\n                    ypos,\r\n                    content.glyph.char,\r\n                    content.glyph.primary,\r\n                    content.glyph.secondary,\r\n                    content.glyph.background\r\n                );\r\n                this.game.renderer.drawText(\r\n                    16,\r\n                    ypos,\r\n                    ` ${content.moniker.display}`\r\n                );\r\n            }\r\n        });\r\n\r\n        this.game.renderer.drawText(1, 1, '← back [esc]');\r\n    }\r\n}\r\n","import Screen from './Screen';\r\nimport {\r\n    INPUT_CMD_CONFIRM,\r\n    INPUT_CMD_CANCEL,\r\n    INPUT_CMD_MOVE_N,\r\n    INPUT_CMD_MOVE_S,\r\n} from '../../input/InputCommandType';\r\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\r\nimport SelectableList from '../../../utils/SelectableList';\r\nimport Simple from 'rot-js/lib/scheduler/simple';\r\n\r\nconst NOOP = () => {};\r\n\r\nexport default class ListSelectionScreen extends Screen {\r\n    width = 16;\r\n    height = 12;\r\n    list = new SelectableList();\r\n    header = '';\r\n\r\n    get left() {\r\n        return Math.floor((this.game.camera.width - this.width) / 2);\r\n    }\r\n\r\n    get top() {\r\n        return Math.floor((this.game.camera.height - this.height) / 2);\r\n    }\r\n\r\n    onEnter(ctx) {\r\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\r\n        this.list.setItems(ctx.list || []);\r\n        this.header = ctx.header || 'Select';\r\n        this.onSelect = ctx.onSelect || NOOP;\r\n        this.onCancel = ctx.onCancel || NOOP;\r\n        this.onGetRowName = ctx.onGetRowName || NOOP;\r\n        this.onRenderRow = ctx.onRenderRow || this.defaultRowRender.bind(this);\r\n    }\r\n\r\n    onLeave() {\r\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\r\n    }\r\n\r\n    selectItem() {\r\n        this.onSelect(this.list.selected);\r\n    }\r\n\r\n    cancel() {\r\n        this.onCancel();\r\n        this.game.screens.popScreen();\r\n    }\r\n\r\n    handleInput() {\r\n        const cmd = this.game.commands.getNextCommand();\r\n\r\n        if (!cmd) {\r\n            return;\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_CANCEL) {\r\n            this.cancel();\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_MOVE_N) {\r\n            this.list.up();\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_MOVE_S) {\r\n            this.list.down();\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_CONFIRM) {\r\n            this.selectItem();\r\n        }\r\n    }\r\n\r\n    defaultRowRender(row, x, y, isSelected) {\r\n        const text = this.onGetRowName(row, x, y, isSelected);\r\n\r\n        if (isSelected) {\r\n            this.game.renderer.drawText(x, y, `→ ${text}`, 'yellow');\r\n        } else {\r\n            this.game.renderer.drawText(x, y, `- ${text}`);\r\n        }\r\n    }\r\n\r\n    onUpdate(dt) {\r\n        this.handleInput();\r\n\r\n        this.game.renderer.clearArea(\r\n            this.left,\r\n            this.top,\r\n            this.width + 1,\r\n            this.height + 1\r\n        );\r\n\r\n        this.game.renderer.drawTextCenter(this.top + 2, this.header);\r\n\r\n        for (let i = this.left; i < this.left + this.width; i++) {\r\n            this.game.renderer.draw(i, this.top, '─');\r\n            this.game.renderer.draw(i, this.top + this.height, '─');\r\n        }\r\n\r\n        for (let i = this.top; i < this.top + this.height; i++) {\r\n            this.game.renderer.draw(this.left, i, '│');\r\n            this.game.renderer.draw(this.left + this.width, i, '│');\r\n        }\r\n\r\n        this.game.renderer.draw(this.left, this.top, '┌');\r\n        this.game.renderer.draw(this.left + this.width, this.top, '┐');\r\n        this.game.renderer.draw(this.left, this.top + this.height, '└');\r\n        this.game.renderer.draw(\r\n            this.left + this.width,\r\n            this.top + this.height,\r\n            '┘'\r\n        );\r\n\r\n        const xpos = this.left + 2;\r\n\r\n        this.list.data.forEach(({ item, idx, isSelected }) => {\r\n            const ypos = idx + this.top + 4;\r\n\r\n            this.onRenderRow(item, xpos, ypos, isSelected, idx);\r\n        });\r\n    }\r\n}\r\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Simple fair scheduler (round-robin style)\n */\nexport default class Simple extends Scheduler {\n    add(item, repeat) {\n        this._queue.add(item, 0);\n        return super.add(item, repeat);\n    }\n    next() {\n        if (this._current !== null && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, 0);\n        }\n        return super.next();\n    }\n}\n","import EventQueue from \"../eventqueue.js\";\nexport default class Scheduler {\n    /**\n     * @class Abstract scheduler\n     */\n    constructor() {\n        this._queue = new EventQueue();\n        this._repeat = [];\n        this._current = null;\n    }\n    /**\n     * @see ROT.EventQueue#getTime\n     */\n    getTime() { return this._queue.getTime(); }\n    /**\n     * @param {?} item\n     * @param {bool} repeat\n     */\n    add(item, repeat) {\n        if (repeat) {\n            this._repeat.push(item);\n        }\n        return this;\n    }\n    /**\n     * Get the time the given item is scheduled for\n     * @param {?} item\n     * @returns {number} time\n     */\n    getTimeOf(item) {\n        return this._queue.getEventTime(item);\n    }\n    /**\n     * Clear all items\n     */\n    clear() {\n        this._queue.clear();\n        this._repeat = [];\n        this._current = null;\n        return this;\n    }\n    /**\n     * Remove a previously added item\n     * @param {?} item\n     * @returns {bool} successful?\n     */\n    remove(item) {\n        let result = this._queue.remove(item);\n        let index = this._repeat.indexOf(item);\n        if (index != -1) {\n            this._repeat.splice(index, 1);\n        }\n        if (this._current == item) {\n            this._current = null;\n        }\n        return result;\n    }\n    /**\n     * Schedule next item\n     * @returns {?}\n     */\n    next() {\n        this._current = this._queue.get();\n        return this._current;\n    }\n}\n","import { MinHeap } from \"./MinHeap\";\nexport default class EventQueue {\n    /**\n     * @class Generic event queue: stores events and retrieves them based on their time\n     */\n    constructor() {\n        this._time = 0;\n        this._events = new MinHeap();\n    }\n    /**\n     * @returns {number} Elapsed time\n     */\n    getTime() { return this._time; }\n    /**\n     * Clear all scheduled events\n     */\n    clear() {\n        this._events = new MinHeap();\n        return this;\n    }\n    /**\n     * @param {?} event\n     * @param {number} time\n     */\n    add(event, time) {\n        this._events.push(event, time);\n    }\n    /**\n     * Locates the nearest event, advances time if necessary. Returns that event and removes it from the queue.\n     * @returns {? || null} The event previously added by addEvent, null if no event available\n     */\n    get() {\n        if (!this._events.len()) {\n            return null;\n        }\n        let { key: time, value: event } = this._events.pop();\n        if (time > 0) { /* advance */\n            this._time += time;\n            this._events.shift(-time);\n        }\n        return event;\n    }\n    /**\n     * Get the time associated with the given event\n     * @param {?} event\n     * @returns {number} time\n     */\n    getEventTime(event) {\n        const r = this._events.find(event);\n        if (r) {\n            const { key } = r;\n            return key;\n        }\n        return undefined;\n    }\n    /**\n     * Remove an event from the queue\n     * @param {?} event\n     * @returns {bool} success?\n     */\n    remove(event) {\n        return this._events.remove(event);\n    }\n    ;\n}\n","export class MinHeap {\n    constructor() {\n        this.heap = [];\n        this.timestamp = 0;\n    }\n    lessThan(a, b) {\n        return a.key == b.key ? a.timestamp < b.timestamp : a.key < b.key;\n    }\n    shift(v) {\n        this.heap = this.heap.map(({ key, value, timestamp }) => ({ key: key + v, value, timestamp }));\n    }\n    len() {\n        return this.heap.length;\n    }\n    push(value, key) {\n        this.timestamp += 1;\n        const loc = this.len();\n        this.heap.push({ value, timestamp: this.timestamp, key });\n        this.updateUp(loc);\n    }\n    pop() {\n        if (this.len() == 0) {\n            throw new Error(\"no element to pop\");\n        }\n        const top = this.heap[0];\n        if (this.len() > 1) {\n            this.heap[0] = this.heap.pop();\n            this.updateDown(0);\n        }\n        else {\n            this.heap.pop();\n        }\n        return top;\n    }\n    find(v) {\n        for (let i = 0; i < this.len(); i++) {\n            if (v == this.heap[i].value) {\n                return this.heap[i];\n            }\n        }\n        return null;\n    }\n    remove(v) {\n        let index = null;\n        for (let i = 0; i < this.len(); i++) {\n            if (v == this.heap[i].value) {\n                index = i;\n            }\n        }\n        if (index === null) {\n            return false;\n        }\n        if (this.len() > 1) {\n            let last = this.heap.pop();\n            if (last.value != v) { // if the last one is being removed, do nothing\n                this.heap[index] = last;\n                this.updateDown(index);\n            }\n            return true;\n        }\n        else {\n            this.heap.pop();\n        }\n        return true;\n    }\n    parentNode(x) {\n        return Math.floor((x - 1) / 2);\n    }\n    leftChildNode(x) {\n        return 2 * x + 1;\n    }\n    rightChildNode(x) {\n        return 2 * x + 2;\n    }\n    existNode(x) {\n        return x >= 0 && x < this.heap.length;\n    }\n    swap(x, y) {\n        const t = this.heap[x];\n        this.heap[x] = this.heap[y];\n        this.heap[y] = t;\n    }\n    minNode(numbers) {\n        const validnumbers = numbers.filter(this.existNode.bind(this));\n        let minimal = validnumbers[0];\n        for (const i of validnumbers) {\n            if (this.lessThan(this.heap[i], this.heap[minimal])) {\n                minimal = i;\n            }\n        }\n        return minimal;\n    }\n    updateUp(x) {\n        if (x == 0) {\n            return;\n        }\n        const parent = this.parentNode(x);\n        if (this.existNode(parent) && this.lessThan(this.heap[x], this.heap[parent])) {\n            this.swap(x, parent);\n            this.updateUp(parent);\n        }\n    }\n    updateDown(x) {\n        const leftChild = this.leftChildNode(x);\n        const rightChild = this.rightChildNode(x);\n        if (!this.existNode(leftChild)) {\n            return;\n        }\n        const m = this.minNode([x, leftChild, rightChild]);\n        if (m != x) {\n            this.swap(x, m);\n            this.updateDown(m);\n        }\n    }\n    debugPrint() {\n        console.log(this.heap);\n    }\n}\n","import Screen from './Screen';\r\nimport {\r\n    INPUT_CMD_CANCEL,\r\n    INPUT_CMD_MOVE_N,\r\n    INPUT_CMD_MOVE_S,\r\n} from '../../input/InputCommandType';\r\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\r\nimport SelectableList from '../../../utils/SelectableList';\r\nimport {\r\n    ABILITY_ARMOR,\r\n    ABILITY_DODGE,\r\n    ABILITY_SPEED,\r\n    getAbilityValue,\r\n} from '../../../data/Abilities';\r\nimport { getArmorBlockPercent } from '../../../data/abilities/ArmorAbility';\r\nimport { getDodgePercent } from '../../../data/abilities/DodgeAbility';\r\n\r\nexport default class CharacterScreen extends Screen {\r\n    character;\r\n\r\n    onEnter(ctx) {\r\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\r\n        this.character = ctx.character;\r\n\r\n        const stats = this.character.stats.all();\r\n\r\n        this.list = new SelectableList(Object.values(stats));\r\n    }\r\n\r\n    onLeave() {\r\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\r\n    }\r\n\r\n    handleInput() {\r\n        const cmd = this.game.commands.getNextCommand();\r\n\r\n        if (!cmd) {\r\n            return;\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_CANCEL) {\r\n            this.game.screens.popScreen();\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_MOVE_N) {\r\n            this.list.up();\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_MOVE_S) {\r\n            this.list.down();\r\n        }\r\n\r\n        // if (cmd.type === INPUT_CMD_CONFIRM) {\r\n        //     this.selectItem();\r\n        // }\r\n    }\r\n\r\n    onUpdate(dt) {\r\n        this.handleInput();\r\n\r\n        this.game.renderer.clear();\r\n        this.game.renderer.drawTextCenter(\r\n            3,\r\n            `~ ${this.character.moniker.display} Character ~`,\r\n            'orange'\r\n        );\r\n\r\n        const health = this.character.health.value;\r\n        const healthMax = this.character.health.max;\r\n\r\n        this.game.renderer.drawText(2, 5, 'health');\r\n        this.game.renderer.drawText(10, 5, `${health}/${healthMax}`);\r\n\r\n        const speed = getAbilityValue(ABILITY_SPEED, this.character);\r\n\r\n        this.game.renderer.drawText(2, 6, 'speed');\r\n        this.game.renderer.drawText(10, 6, `+${speed}`);\r\n\r\n        const armor = getAbilityValue(ABILITY_ARMOR, this.character);\r\n        const armorPrcnt = getArmorBlockPercent(armor);\r\n\r\n        this.game.renderer.drawText(2, 7, 'armor');\r\n        this.game.renderer.drawText(\r\n            10,\r\n            7,\r\n            `+${armor} (${armorPrcnt}% less melee damage taken)`\r\n        );\r\n\r\n        const dodge = getAbilityValue(ABILITY_DODGE, this.character);\r\n        const dodgePrcnt = getDodgePercent(dodge);\r\n\r\n        this.game.renderer.drawText(2, 8, 'dodge');\r\n        this.game.renderer.drawText(\r\n            10,\r\n            8,\r\n            `+${dodge} (${dodgePrcnt}% chance to avoid a melee attack)`\r\n        );\r\n\r\n        let pad = 0;\r\n\r\n        this.list.data.forEach(({ item, idx, isSelected }) => {\r\n            const stat = item;\r\n            const ypos = idx + 13 + pad;\r\n            const modDir = stat.modSum > 0 ? '+' : '-';\r\n\r\n            if (isSelected) {\r\n                this.game.renderer.drawText(\r\n                    1,\r\n                    ypos,\r\n                    `→ ${stat.name}`,\r\n                    'yellow'\r\n                );\r\n                this.game.renderer.drawText(\r\n                    10,\r\n                    ypos,\r\n                    `${modDir}${stat.sum}`,\r\n                    'yellow'\r\n                );\r\n\r\n                stat.modifiers.forEach((mod, i) => {\r\n                    if (mod.mod > 0) {\r\n                        this.game.renderer.drawText(\r\n                            3,\r\n                            ypos + i + 1,\r\n                            `+${mod.mod} (${mod.source})`,\r\n                            'green'\r\n                        );\r\n                    } else {\r\n                        this.game.renderer.drawText(\r\n                            3,\r\n                            ypos + i + 1,\r\n                            `-${Math.abs(mod.mod)} (${mod.source})`,\r\n                            'red'\r\n                        );\r\n                    }\r\n                });\r\n\r\n                pad += stat.modifiers.length;\r\n            } else {\r\n                this.game.renderer.drawText(1, ypos, `- ${stat.name}`);\r\n                this.game.renderer.drawText(10, ypos, `${modDir}${stat.sum}`);\r\n            }\r\n        });\r\n\r\n        this.game.renderer.drawText(1, 1, '← back [esc]');\r\n    }\r\n}\r\n","import Manager from './Manager';\nimport * as Directions from '../enums/Directions';\n\nexport default class PlayerManager extends Manager {\n    #entityId = null;\n    actionQueue = [];\n\n    get entity() {\n        return this.game.ecs.getEntity(this.#entityId);\n    }\n\n    get id() {\n        return this.#entityId;\n    }\n\n    get isTurn() {\n        return this.entity.actor.hasEnergy;\n    }\n\n    get position() {\n        return this.entity.position.getPos();\n    }\n\n    getSetupData() {\n        // TODO\n        // player.fireEvent('query-owned-entities', { ids });\n        // player.fireEvent('dereference-unowned-entities');\n        // serialize all \"owned\"\n        const entity = this.game.ecs.createPrefab('Player');\n        const entityId = entity.id;\n        const serialized = entity.serialize();\n\n        entity.destroy();\n\n        return {\n            entityId,\n            entity: serialized, // TODO inventory\n        };\n    }\n\n    setup(data) {\n        this.#entityId = data.entityId;\n        this.game.ecs.deserialize(data.entity);\n    }\n\n    getSaveGameData() {\n        const entityId = this.entity.id;\n\n        // gather all entities for player\n        const evt = this.entity.fireEvent('query-ownership', {\n            result: new Set([this.entity]),\n        });\n        const serialized = this.game.ecs.serialize(Array.from(evt.data.result));\n\n        console.log(serialized);\n\n        return {\n            entityId,\n            entity: serialized, // TODO inventory\n        };\n    }\n\n    teardown() {\n        if (this.entity) {\n            this.entity.destroy();\n        }\n        this.#entityId = null; // TODO does this need to destroy()?\n    }\n\n    getNextAction() {\n        return this.actionQueue.shift();\n    }\n\n    move(direction) {\n        this.actionQueue.push(() => {\n            const delta = Directions.delta(direction);\n\n            this.entity.fireEvent('try-move', delta);\n        });\n    }\n\n    melee(target) {\n        this.actionQueue.push(() => {\n            if (target.isDestroyed || target.isDead) {\n                console.warn(`Melee action on destroyed target ${target}`);\n\n                return;\n            }\n\n            this.entity.fireEvent('try-melee', {\n                target,\n            });\n        });\n    }\n\n    wait(turns = 1) {\n        this.actionQueue.push(() => {\n            this.entity.fireEvent('energy-consumed', turns * 1000);\n        });\n    }\n}\n","import { Engine } from 'geotic';\n\nimport * as components from './components';\nimport * as prefabs from './prefabs';\nimport Manager from '../core/Manager';\n\nexport default class ECS extends Manager {\n    #engine;\n\n    get engine() {\n        return this.#engine;\n    }\n\n    constructor(game) {\n        super(game);\n        this.#engine = new Engine();\n\n        Object.values(components).forEach((component) => {\n            this.#engine.registerComponent(component);\n        });\n\n        Object.values(prefabs).forEach((prefab) => {\n            this.#engine.registerPrefab(prefab);\n        });\n    }\n\n    teardown() {\n        this.destroyEntities();\n    }\n\n    destroyEntities() {\n        for (let entity of this.#engine.entities.all) {\n            entity.destroy();\n        }\n    }\n\n    cloneEntity(entity) {\n        const data = entity.serialize();\n\n        data.id = this.engine.generateId();\n\n        this.engine.deserialize(data);\n\n        return this.engine.getEntity(data.id);\n    }\n}\n","import Manager from './Manager';\n\nexport default class GameStateManager extends Manager {\n    #isStarted = false;\n    #filename = 'test';\n\n    get filename() {\n        return this.#filename;\n    }\n\n    get isStarted() {\n        return this.#isStarted;\n    }\n\n    gameOver() {\n        this.#isStarted = false;\n    }\n\n    initiateTeardown() {\n        console.log('STATE - teardown');\n        this.#isStarted = false;\n\n        this.game.player.teardown();\n        this.game.map.teardown();\n        this.game.engine.teardown();\n        this.game.world.teardown();\n    }\n\n    initiateSetup(data) {\n        console.log('STATE - setup');\n        this.#isStarted = true;\n\n        this.game.clock.setup(data.clock);\n        this.game.player.setup(data.player);\n        this.game.world.setup(data.world);\n        this.game.map.setup(data.map);\n    }\n\n    newGame() {\n        this.#filename = prompt('Enter save name', 'test');\n        this.deleteFile(this.filename);\n        this.initiateTeardown();\n\n        const data = {\n            filename: this.filename,\n            clock: this.game.clock.getSetupData(),\n            player: this.game.player.getSetupData(),\n            world: this.game.world.getSetupData(),\n            map: this.game.map.getSetupData(),\n        };\n\n        this.initiateSetup(data);\n    }\n\n    saveGame() {\n        if (!this.isStarted) {\n            console.warn(\"cannot save game since it's not started\");\n            return;\n        }\n\n        const data = {\n            filename: this.filename,\n            clock: this.game.clock.getSaveGameData(),\n            map: this.game.map.getSaveGameData(),\n            player: this.game.player.getSaveGameData(),\n            world: this.game.world.getSaveGameData(),\n        };\n\n        console.log('save data', data);\n\n        localStorage.setItem(this.filename, JSON.stringify(data));\n\n        return data;\n    }\n\n    deleteFile(filename) {\n        const files = Object.keys(localStorage);\n\n        files.forEach((file) => {\n            if (file.startsWith(`${filename}-`)) {\n                localStorage.removeItem(file);\n            }\n        });\n    }\n\n    saveSectorPositionData(sectorId, positionData) {\n        localStorage.setItem(\n            `${this.filename}-${sectorId}-positions`,\n            JSON.stringify(positionData)\n        );\n    }\n\n    saveSectorEntityData(sectorId, entityData) {\n        localStorage.setItem(\n            `${this.filename}-${sectorId}-entities`,\n            JSON.stringify(entityData)\n        );\n    }\n\n    loadSectorEntityData(sectorId) {\n        const json = localStorage.getItem(\n            `${this.filename}-${sectorId}-entities`\n        );\n\n        return json && JSON.parse(json);\n    }\n\n    loadSectorPositionData(sectorId) {\n        const json = localStorage.getItem(\n            `${this.filename}-${sectorId}-positions`\n        );\n\n        return json && JSON.parse(json);\n    }\n\n    loadSavefileData(filename) {\n        const json = localStorage.getItem(filename);\n\n        return json && JSON.parse(json);\n    }\n\n    loadGame() {\n        const filename = prompt('Enter save filename to load', 'test');\n\n        const data = this.loadSavefileData(filename);\n\n        if (!data) {\n            console.warn(`save file ${filename} not found`);\n        }\n\n        this.#filename = filename;\n\n        console.log('Loading game', data);\n\n        this.initiateTeardown();\n        this.initiateSetup(data);\n    }\n\n    loadGameData(data) {\n        this.initiateTeardown();\n        this.initiateSetup(data);\n    }\n}\n","import Manager from './Manager';\n\nexport default class ClockManager extends Manager {\n    #tick = 0;\n    #tickDelta = 0;\n    #turnDelta = 0;\n\n    get tick() {\n        return this.#tick;\n    }\n\n    get tickDelta() {\n        return this.#tickDelta;\n    }\n\n    get turnDelta() {\n        return this.#turnDelta;\n    }\n\n    get turn() {\n        return Math.floor(this.#tick / 1000);\n    }\n\n    get subTurn() {\n        return this.#tick - this.turn * 1000;\n    }\n\n    getSetupData() {\n        return {\n            tick: 0,\n            tickDelta: 0,\n        };\n    }\n\n    getSaveGameData() {\n        return {\n            tick: this.tick,\n            tickDelta: this.tickDelta,\n        };\n    }\n\n    setup(data) {\n        this.#tick = data.tick;\n        this.#tickDelta = data.tickDelta;\n    }\n\n    incrementTick(delta) {\n        const prevTurn = this.turn;\n\n        this.#tickDelta = delta;\n        this.#tick += delta;\n\n        const curTurn = this.turn;\n\n        this.#turnDelta = curTurn - prevTurn;\n    }\n\n    update(dt) {\n        this.#tickDelta = 0;\n        this.#turnDelta = 0;\n    }\n}\n","import { Moniker, IsVisible } from '../ecs/components';\nimport * as Directions from '../enums/Directions';\nimport System from './System';\n\nexport default class CursorSystem extends System {\n    #isEnabled = false;\n    #x = 1;\n    #y = 1;\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get isEnabled() {\n        return this.#isEnabled;\n    }\n\n    enable() {\n        const player = this.game.player.position;\n\n        this.#x = player.x;\n        this.#y = player.y;\n\n        this.#isEnabled = true;\n    }\n\n    disable() {\n        this.#isEnabled = false;\n    }\n\n    toggle() {\n        if (this.isEnabled) {\n            this.disable();\n        } else {\n            this.enable();\n        }\n    }\n\n    move(direction) {\n        const delta = Directions.delta(direction);\n        this.#x += delta.x;\n        this.#y += delta.y;\n    }\n\n    getEntities() {\n        return this.game.map\n            .getEntitiesAt(this.x, this.y)\n            .filter((e) => e.has(IsVisible));\n    }\n\n    drawCursor(color = 'yellow') {\n        const screen = this.game.camera.worldToScreen(this.x, this.y);\n\n        this.game.renderer.draw(screen.x, screen.y, 'X', color);\n    }\n\n    drawTags() {\n        const entities = this.getEntities().filter((e) => e.has(Moniker));\n        const screen = this.game.camera.worldToScreen(this.x, this.y);\n\n        if (screen.x < this.game.camera.width / 2) {\n            entities.forEach((entity, i) => {\n                const c = i === 0 ? '◄' : ' ';\n                this.game.renderer.drawText(\n                    screen.x + 1,\n                    screen.y + i,\n                    `${c}█`,\n                    '#ddd'\n                );\n                this.game.renderer.drawText(\n                    screen.x + 2,\n                    screen.y + i,\n                    entity.moniker.display + ' ',\n                    '#111133',\n                    'white',\n                    '#ddd'\n                );\n            });\n        } else {\n            entities.forEach((entity, i) => {\n                const c = i === 0 ? '►' : ' ';\n                this.game.renderer.drawText(\n                    screen.x - 1,\n                    screen.y + i,\n                    `█${c}`,\n                    '#ddd'\n                );\n                const len = this.game.renderer.computeTextWidth(\n                    entity.moniker.display\n                );\n                this.game.renderer.drawText(\n                    screen.x - len - 1.5,\n                    screen.y + i,\n                    ' ' + entity.moniker.display,\n                    '#111133',\n                    'white',\n                    '#ddd'\n                );\n            });\n        }\n    }\n}\n","import Manager from './Manager';\nimport FastMap from '../utils/FastMap';\nimport { IsInventoried, Position } from '../ecs/components';\n\nexport default class MapManager extends Manager {\n    #playerOutOfBounds = null;\n    #lookup;\n    #width = 32;\n    #height = 32;\n\n    get width() {\n        return this.#width;\n    }\n\n    get height() {\n        return this.#height;\n    }\n\n    constructor(game) {\n        super(game);\n\n        this.query = this.game.ecs.createQuery({\n            all: [Position],\n        });\n\n        this.#lookup = new FastMap(this.width, this.height);\n\n        this.query.onEntityAdded((e) => {\n            this.#lookup.set(0, 0, e.id);\n        });\n\n        this.query.onEntityRemoved((e) => {\n            this.#lookup.remove(e.id);\n        });\n    }\n\n    getSetupData() {\n        return {};\n    }\n\n    teardown() {\n        this.#playerOutOfBounds = false;\n        this.#lookup.clear();\n    }\n\n    setup(data) {\n        if (data.playerPosition) {\n            this.game.player.entity.position.setPos(\n                data.playerPosition.x,\n                data.playerPosition.y\n            );\n        } else {\n            const position = this.getRandomEmptyPosition();\n            this.game.player.entity.position.setPos(position.x, position.y);\n        }\n\n        this.game.FOVSystem.computeFOV();\n    }\n\n    getSaveGameData() {\n        const data = this.#lookup.serialize();\n\n        this.game.state.saveSectorPositionData(this.game.world.sectorId, data);\n\n        return {\n            playerPosition: this.game.player.position,\n        };\n    }\n\n    onSectorLoaded(sector) {\n        this.#playerOutOfBounds = false;\n\n        const data = this.game.state.loadSectorPositionData(sector.id);\n\n        if (data) {\n            this.#lookup.deserialize(data);\n        }\n    }\n\n    getPosition(entityId) {\n        return this.#lookup.getPosition(entityId);\n    }\n\n    setPosition(x, y, entityId) {\n        if (this.#lookup.isOutOfBounds(x, y)) {\n            if (this.game.player.id === entityId) {\n                this.#playerOutOfBounds = { x, y };\n            }\n\n            return;\n        }\n\n        this.#lookup.set(x, y, entityId);\n\n        if (entityId === this.game.player.id) {\n            this.game.camera.setFocus(x, y);\n        }\n    }\n\n    getEntitiesAt(x, y, includeGround = false) {\n        return this.#lookup\n            .get(x, y)\n            .map((id) => this.game.ecs.getEntity(id))\n            .filter((e) => !e.isInventoried && (includeGround ? true : !e.ground));\n    }\n\n    isAdjacent(x1, y1, x2, y2) {\n        return Math.abs(x1 - x2) <= 1 && Math.abs(y1 - y2) <= 1;\n    }\n\n    getEntitiesInRect(x, y, width, height) {\n        const entities = [];\n\n        for (let i = x; i < x + width + 1; i++) {\n            for (let j = y; j < y + height + 1; j++) {\n                entities.push(...this.getEntitiesAt(i, j));\n            }\n        }\n\n        return entities;\n    }\n\n    getEntitiesInRange(x, y, range) {\n        const diameter = range * 2;\n\n        return this.getEntitiesInRect(x - range, y - range, diameter, diameter);\n    }\n\n    getNeighborEntities(x, y) {\n        return [\n            this.getEntitiesAt(x - 1, y - 1), // TOP LEFT\n            this.getEntitiesAt(x, y - 1), // TOP\n            this.getEntitiesAt(x + 1, y - 1), // TOP RIGHT\n            this.getEntitiesAt(x - 1, y), // LEFT\n            this.getEntitiesAt(x + 1, y), // RIGHT\n            this.getEntitiesAt(x - 1, y + 1), // BOTTOM LEFT\n            this.getEntitiesAt(x, y + 1), // BOTTOM\n            this.getEntitiesAt(x + 1, y + 1), // BOTTOM RIGHT\n        ];\n    }\n\n    getRandomEmptyPosition() {\n        let x, y;\n        do {\n            x = Math.trunc(Math.random() * this.width);\n            y = Math.trunc(Math.random() * this.height);\n        } while (this.getEntitiesAt(x, y, false).length > 0);\n\n        return { x, y };\n    }\n\n    isOutOfbounds(x, y) {\n        return x < 0 || y < 0 || x >= this.width || y >= this.height;\n    }\n\n    onPlayerOutOfBounds(x, y) {\n        if (y < 0) {\n            this.game.world.enterSector(this.game.world.sector.northSector, {\n                x,\n                y: this.height - 1,\n            });\n        }\n        if (y >= this.height) {\n            this.game.world.enterSector(this.game.world.sector.southSector, {\n                x,\n                y: 0,\n            });\n        }\n        if (x >= this.width) {\n            this.game.world.enterSector(this.game.world.sector.eastSector, {\n                x: 0,\n                y,\n            });\n        }\n        if (x < 0) {\n            this.game.world.enterSector(this.game.world.sector.westSector, {\n                x: this.width - 1,\n                y,\n            });\n        }\n    }\n\n    update(dt) {\n        if (this.#playerOutOfBounds) {\n            this.onPlayerOutOfBounds(\n                this.#playerOutOfBounds.x,\n                this.#playerOutOfBounds.y\n            );\n        }\n    }\n}\n","export default class FastMap {\n    _width = 0;\n    _height = 0;\n    _data = [];\n    _idHash = new Map();\n\n    get width() {\n        return this._width;\n    }\n\n    get height() {\n        return this._height;\n    }\n\n    get size() {\n        return this._width * this._height;\n    }\n\n    constructor(width, height) {\n        this._width = width;\n        this._height = height;\n\n        for (let i = 0; i < this.size; i++) {\n            this._data[i] = new Set();\n        }\n    }\n\n    idx(x, y) {\n        return y * this.width + x;\n    }\n\n    coord(idx) {\n        return {\n            x: Math.trunc(idx % this.width),\n            y: Math.trunc(idx / this.width),\n        };\n    }\n\n    clear() {\n        this._idHash.clear();\n\n        for (let i = 0; i < this.size; i++) {\n            this._data[i].clear();\n        }\n    }\n\n    serialize() {\n        const entries = this._data.map((d) => Array.from(d));\n\n        return {\n            width: this.width,\n            height: this.height,\n            entries,\n        };\n    }\n\n    deserialize(data) {\n        this._width = data.width;\n        this._height = data.height;\n        this._idHash = new Map();\n\n        for (let i = 0; i < data.entries.length; i++) {\n            const coord = this.coord(i);\n            this._data[i] = new Set(data.entries[i]);\n\n            data.entries[i].forEach((id) => {\n                this._idHash.set(id, coord);\n            });\n        }\n    }\n\n    set(x, y, id) {\n        if (this.isOutOfBounds(x, y)) {\n            console.warn(\n                `Trying to set an entity ${id} position out-of-bounds ${x}, ${y}`\n            );\n            return;\n        }\n\n        const idx = this.idx(x, y);\n\n        this.remove(id);\n\n        this._idHash.set(id, { x, y });\n        this._data[idx].add(id);\n    }\n\n    get(x, y) {\n        if (this.isOutOfBounds(x, y)) {\n            return [];\n        }\n\n        return Array.from(this._data[this.idx(x, y)]);\n    }\n\n    has(id) {\n        return this._idHash.has(id);\n    }\n\n    getPosition(id) {\n        const pos = this._idHash.get(id);\n\n        if (!pos) {\n            console.warn('Cannot get position', id);\n        }\n\n        return pos;\n    }\n\n    remove(id) {\n        if (!this.has(id)) {\n            return;\n        }\n\n        const pos = this.getPosition(id);\n        const idx = this.idx(pos.x, pos.y);\n\n        this._idHash.delete(id);\n        this._data[idx].delete(id);\n    }\n\n    isOutOfBounds(x, y) {\n        return x < 0 || y < 0 || x >= this.width || y >= this.height;\n    }\n}\n","import { FOV } from 'rot-js';\nimport {\n    Explorable,\n    Explored,\n    Shadowcaster,\n    IsVisible,\n} from '../ecs/components';\nimport System from './System';\n\nexport default class FOVSystem extends System {\n    constructor(game) {\n        super(game);\n\n        this.fov = new FOV.PreciseShadowcasting((x, y) =>\n            this.isSquareVisible(x, y)\n        );\n\n        this.query = this.game.ecs.createQuery({\n            all: [IsVisible],\n        });\n    }\n\n    isSquareVisible(x, y) {\n        return !this.game.map\n            .getEntitiesAt(x, y)\n            .some((e) => e.has(Shadowcaster));\n    }\n\n    setVisible(x, y, amount, range) {\n        this.game.map.getEntitiesAt(x, y, true).forEach((e) => {\n            e.add(IsVisible, {\n                range,\n                amount,\n            });\n            if (e.explorable && !e.explored) {\n                e.add(Explored);\n            }\n        });\n    }\n\n    computeFOV() {\n        this.query.get().forEach((e) => e.isVisible.destroy());\n\n        const pos = this.game.player.position;\n\n        this.fov.compute(pos.x, pos.y, 8, (x, y, r, visibility) => {\n            this.setVisible(x, y, visibility, r);\n        });\n    }\n\n    update(dt) {\n        if (this.game.clock.tickDelta) {\n            this.computeFOV();\n        }\n    }\n}\n","export { default as RNG } from \"./rng.js\";\nexport { default as Display } from \"./display/display.js\";\nexport { default as StringGenerator } from \"./stringgenerator.js\";\nexport { default as EventQueue } from \"./eventqueue.js\";\nexport { default as Scheduler } from \"./scheduler/index.js\";\nexport { default as FOV } from \"./fov/index.js\";\nexport { default as Map } from \"./map/index.js\";\nexport { default as Noise } from \"./noise/index.js\";\nexport { default as Path } from \"./path/index.js\";\nexport { default as Engine } from \"./engine.js\";\nexport { default as Lighting } from \"./lighting.js\";\nexport { DEFAULT_WIDTH, DEFAULT_HEIGHT, DIRS, KEYS } from \"./constants.js\";\nimport * as util from \"./util.js\";\nexport const Util = util;\nimport * as color from \"./color.js\";\nexport const Color = color;\nimport * as text from \"./text.js\";\nexport const Text = text;\n","/**\n * This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\n * Alea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.\n */\nconst FRAC = 2.3283064365386963e-10; /* 2^-32 */\nclass RNG {\n    constructor() {\n        this._seed = 0;\n        this._s0 = 0;\n        this._s1 = 0;\n        this._s2 = 0;\n        this._c = 0;\n    }\n    getSeed() { return this._seed; }\n    /**\n     * Seed the number generator\n     */\n    setSeed(seed) {\n        seed = (seed < 1 ? 1 / seed : seed);\n        this._seed = seed;\n        this._s0 = (seed >>> 0) * FRAC;\n        seed = (seed * 69069 + 1) >>> 0;\n        this._s1 = seed * FRAC;\n        seed = (seed * 69069 + 1) >>> 0;\n        this._s2 = seed * FRAC;\n        this._c = 1;\n        return this;\n    }\n    /**\n     * @returns Pseudorandom value [0,1), uniformly distributed\n     */\n    getUniform() {\n        let t = 2091639 * this._s0 + this._c * FRAC;\n        this._s0 = this._s1;\n        this._s1 = this._s2;\n        this._c = t | 0;\n        this._s2 = t - this._c;\n        return this._s2;\n    }\n    /**\n     * @param lowerBound The lower end of the range to return a value from, inclusive\n     * @param upperBound The upper end of the range to return a value from, inclusive\n     * @returns Pseudorandom value [lowerBound, upperBound], using ROT.RNG.getUniform() to distribute the value\n     */\n    getUniformInt(lowerBound, upperBound) {\n        let max = Math.max(lowerBound, upperBound);\n        let min = Math.min(lowerBound, upperBound);\n        return Math.floor(this.getUniform() * (max - min + 1)) + min;\n    }\n    /**\n     * @param mean Mean value\n     * @param stddev Standard deviation. ~95% of the absolute values will be lower than 2*stddev.\n     * @returns A normally distributed pseudorandom value\n     */\n    getNormal(mean = 0, stddev = 1) {\n        let u, v, r;\n        do {\n            u = 2 * this.getUniform() - 1;\n            v = 2 * this.getUniform() - 1;\n            r = u * u + v * v;\n        } while (r > 1 || r == 0);\n        let gauss = u * Math.sqrt(-2 * Math.log(r) / r);\n        return mean + gauss * stddev;\n    }\n    /**\n     * @returns Pseudorandom value [1,100] inclusive, uniformly distributed\n     */\n    getPercentage() {\n        return 1 + Math.floor(this.getUniform() * 100);\n    }\n    /**\n     * @returns Randomly picked item, null when length=0\n     */\n    getItem(array) {\n        if (!array.length) {\n            return null;\n        }\n        return array[Math.floor(this.getUniform() * array.length)];\n    }\n    /**\n     * @returns New array with randomized items\n     */\n    shuffle(array) {\n        let result = [];\n        let clone = array.slice();\n        while (clone.length) {\n            let index = clone.indexOf(this.getItem(clone));\n            result.push(clone.splice(index, 1)[0]);\n        }\n        return result;\n    }\n    /**\n     * @param data key=whatever, value=weight (relative probability)\n     * @returns whatever\n     */\n    getWeightedValue(data) {\n        let total = 0;\n        for (let id in data) {\n            total += data[id];\n        }\n        let random = this.getUniform() * total;\n        let id, part = 0;\n        for (id in data) {\n            part += data[id];\n            if (random < part) {\n                return id;\n            }\n        }\n        // If by some floating-point annoyance we have\n        // random >= total, just return the last id.\n        return id;\n    }\n    /**\n     * Get RNG state. Useful for storing the state and re-setting it via setState.\n     * @returns Internal state\n     */\n    getState() { return [this._s0, this._s1, this._s2, this._c]; }\n    /**\n     * Set a previously retrieved state.\n     */\n    setState(state) {\n        this._s0 = state[0];\n        this._s1 = state[1];\n        this._s2 = state[2];\n        this._c = state[3];\n        return this;\n    }\n    /**\n     * Returns a cloned RNG\n     */\n    clone() {\n        let clone = new RNG();\n        return clone.setState(this.getState());\n    }\n}\nexport default new RNG().setSeed(Date.now());\n","import Hex from \"./hex.js\";\nimport Rect from \"./rect.js\";\nimport Tile from \"./tile.js\";\nimport TileGL from \"./tile-gl.js\";\nimport Term from \"./term.js\";\nimport * as Text from \"../text.js\";\nimport { DEFAULT_WIDTH, DEFAULT_HEIGHT } from \"../constants.js\";\nconst BACKENDS = {\n    \"hex\": Hex,\n    \"rect\": Rect,\n    \"tile\": Tile,\n    \"tile-gl\": TileGL,\n    \"term\": Term\n};\nconst DEFAULT_OPTIONS = {\n    width: DEFAULT_WIDTH,\n    height: DEFAULT_HEIGHT,\n    transpose: false,\n    layout: \"rect\",\n    fontSize: 15,\n    spacing: 1,\n    border: 0,\n    forceSquareRatio: false,\n    fontFamily: \"monospace\",\n    fontStyle: \"\",\n    fg: \"#ccc\",\n    bg: \"#000\",\n    tileWidth: 32,\n    tileHeight: 32,\n    tileMap: {},\n    tileSet: null,\n    tileColorize: false\n};\n/**\n * @class Visual map display\n */\nlet Display = /** @class */ (() => {\n    class Display {\n        constructor(options = {}) {\n            this._data = {};\n            this._dirty = false; // false = nothing, true = all, object = dirty cells\n            this._options = {};\n            options = Object.assign({}, DEFAULT_OPTIONS, options);\n            this.setOptions(options);\n            this.DEBUG = this.DEBUG.bind(this);\n            this._tick = this._tick.bind(this);\n            this._backend.schedule(this._tick);\n        }\n        /**\n         * Debug helper, ideal as a map generator callback. Always bound to this.\n         * @param {int} x\n         * @param {int} y\n         * @param {int} what\n         */\n        DEBUG(x, y, what) {\n            let colors = [this._options.bg, this._options.fg];\n            this.draw(x, y, null, null, colors[what % colors.length]);\n        }\n        /**\n         * Clear the whole display (cover it with background color)\n         */\n        clear() {\n            this._data = {};\n            this._dirty = true;\n        }\n        /**\n         * @see ROT.Display\n         */\n        setOptions(options) {\n            Object.assign(this._options, options);\n            if (options.width || options.height || options.fontSize || options.fontFamily || options.spacing || options.layout) {\n                if (options.layout) {\n                    let ctor = BACKENDS[options.layout];\n                    this._backend = new ctor();\n                }\n                this._backend.setOptions(this._options);\n                this._dirty = true;\n            }\n            return this;\n        }\n        /**\n         * Returns currently set options\n         */\n        getOptions() { return this._options; }\n        /**\n         * Returns the DOM node of this display\n         */\n        getContainer() { return this._backend.getContainer(); }\n        /**\n         * Compute the maximum width/height to fit into a set of given constraints\n         * @param {int} availWidth Maximum allowed pixel width\n         * @param {int} availHeight Maximum allowed pixel height\n         * @returns {int[2]} cellWidth,cellHeight\n         */\n        computeSize(availWidth, availHeight) {\n            return this._backend.computeSize(availWidth, availHeight);\n        }\n        /**\n         * Compute the maximum font size to fit into a set of given constraints\n         * @param {int} availWidth Maximum allowed pixel width\n         * @param {int} availHeight Maximum allowed pixel height\n         * @returns {int} fontSize\n         */\n        computeFontSize(availWidth, availHeight) {\n            return this._backend.computeFontSize(availWidth, availHeight);\n        }\n        computeTileSize(availWidth, availHeight) {\n            let width = Math.floor(availWidth / this._options.width);\n            let height = Math.floor(availHeight / this._options.height);\n            return [width, height];\n        }\n        /**\n         * Convert a DOM event (mouse or touch) to map coordinates. Uses first touch for multi-touch.\n         * @param {Event} e event\n         * @returns {int[2]} -1 for values outside of the canvas\n         */\n        eventToPosition(e) {\n            let x, y;\n            if (\"touches\" in e) {\n                x = e.touches[0].clientX;\n                y = e.touches[0].clientY;\n            }\n            else {\n                x = e.clientX;\n                y = e.clientY;\n            }\n            return this._backend.eventToPosition(x, y);\n        }\n        /**\n         * @param {int} x\n         * @param {int} y\n         * @param {string || string[]} ch One or more chars (will be overlapping themselves)\n         * @param {string} [fg] foreground color\n         * @param {string} [bg] background color\n         */\n        draw(x, y, ch, fg, bg) {\n            if (!fg) {\n                fg = this._options.fg;\n            }\n            if (!bg) {\n                bg = this._options.bg;\n            }\n            let key = `${x},${y}`;\n            this._data[key] = [x, y, ch, fg, bg];\n            if (this._dirty === true) {\n                return;\n            } // will already redraw everything \n            if (!this._dirty) {\n                this._dirty = {};\n            } // first!\n            this._dirty[key] = true;\n        }\n        /**\n         * Draws a text at given position. Optionally wraps at a maximum length. Currently does not work with hex layout.\n         * @param {int} x\n         * @param {int} y\n         * @param {string} text May contain color/background format specifiers, %c{name}/%b{name}, both optional. %c{}/%b{} resets to default.\n         * @param {int} [maxWidth] wrap at what width?\n         * @returns {int} lines drawn\n         */\n        drawText(x, y, text, maxWidth) {\n            let fg = null;\n            let bg = null;\n            let cx = x;\n            let cy = y;\n            let lines = 1;\n            if (!maxWidth) {\n                maxWidth = this._options.width - x;\n            }\n            let tokens = Text.tokenize(text, maxWidth);\n            while (tokens.length) { // interpret tokenized opcode stream\n                let token = tokens.shift();\n                switch (token.type) {\n                    case Text.TYPE_TEXT:\n                        let isSpace = false, isPrevSpace = false, isFullWidth = false, isPrevFullWidth = false;\n                        for (let i = 0; i < token.value.length; i++) {\n                            let cc = token.value.charCodeAt(i);\n                            let c = token.value.charAt(i);\n                            if (this._options.layout === \"term\") {\n                                let cch = cc >> 8;\n                                let isCJK = cch === 0x11 || (cch >= 0x2e && cch <= 0x9f) || (cch >= 0xac && cch <= 0xd7) || (cc >= 0xA960 && cc <= 0xA97F);\n                                if (isCJK) {\n                                    this.draw(cx + 0, cy, c, fg, bg);\n                                    this.draw(cx + 1, cy, \"\\t\", fg, bg);\n                                    cx += 2;\n                                    continue;\n                                }\n                            }\n                            // Assign to `true` when the current char is full-width.\n                            isFullWidth = (cc > 0xff00 && cc < 0xff61) || (cc > 0xffdc && cc < 0xffe8) || cc > 0xffee;\n                            // Current char is space, whatever full-width or half-width both are OK.\n                            isSpace = (c.charCodeAt(0) == 0x20 || c.charCodeAt(0) == 0x3000);\n                            // The previous char is full-width and\n                            // current char is nether half-width nor a space.\n                            if (isPrevFullWidth && !isFullWidth && !isSpace) {\n                                cx++;\n                            } // add an extra position\n                            // The current char is full-width and\n                            // the previous char is not a space.\n                            if (isFullWidth && !isPrevSpace) {\n                                cx++;\n                            } // add an extra position\n                            this.draw(cx++, cy, c, fg, bg);\n                            isPrevSpace = isSpace;\n                            isPrevFullWidth = isFullWidth;\n                        }\n                        break;\n                    case Text.TYPE_FG:\n                        fg = token.value || null;\n                        break;\n                    case Text.TYPE_BG:\n                        bg = token.value || null;\n                        break;\n                    case Text.TYPE_NEWLINE:\n                        cx = x;\n                        cy++;\n                        lines++;\n                        break;\n                }\n            }\n            return lines;\n        }\n        /**\n         * Timer tick: update dirty parts\n         */\n        _tick() {\n            this._backend.schedule(this._tick);\n            if (!this._dirty) {\n                return;\n            }\n            if (this._dirty === true) { // draw all\n                this._backend.clear();\n                for (let id in this._data) {\n                    this._draw(id, false);\n                } // redraw cached data \n            }\n            else { // draw only dirty \n                for (let key in this._dirty) {\n                    this._draw(key, true);\n                }\n            }\n            this._dirty = false;\n        }\n        /**\n         * @param {string} key What to draw\n         * @param {bool} clearBefore Is it necessary to clean before?\n         */\n        _draw(key, clearBefore) {\n            let data = this._data[key];\n            if (data[4] != this._options.bg) {\n                clearBefore = true;\n            }\n            this._backend.draw(data, clearBefore);\n        }\n    }\n    Display.Rect = Rect;\n    Display.Hex = Hex;\n    Display.Tile = Tile;\n    Display.TileGL = TileGL;\n    Display.Term = Term;\n    return Display;\n})();\nexport default Display;\n","import Canvas from \"./canvas.js\";\nimport { mod } from \"../util.js\";\n/**\n * @class Hexagonal backend\n * @private\n */\nexport default class Hex extends Canvas {\n    constructor() {\n        super();\n        this._spacingX = 0;\n        this._spacingY = 0;\n        this._hexSize = 0;\n    }\n    draw(data, clearBefore) {\n        let [x, y, ch, fg, bg] = data;\n        let px = [\n            (x + 1) * this._spacingX,\n            y * this._spacingY + this._hexSize\n        ];\n        if (this._options.transpose) {\n            px.reverse();\n        }\n        if (clearBefore) {\n            this._ctx.fillStyle = bg;\n            this._fill(px[0], px[1]);\n        }\n        if (!ch) {\n            return;\n        }\n        this._ctx.fillStyle = fg;\n        let chars = [].concat(ch);\n        for (let i = 0; i < chars.length; i++) {\n            this._ctx.fillText(chars[i], px[0], Math.ceil(px[1]));\n        }\n    }\n    computeSize(availWidth, availHeight) {\n        if (this._options.transpose) {\n            availWidth += availHeight;\n            availHeight = availWidth - availHeight;\n            availWidth -= availHeight;\n        }\n        let width = Math.floor(availWidth / this._spacingX) - 1;\n        let height = Math.floor((availHeight - 2 * this._hexSize) / this._spacingY + 1);\n        return [width, height];\n    }\n    computeFontSize(availWidth, availHeight) {\n        if (this._options.transpose) {\n            availWidth += availHeight;\n            availHeight = availWidth - availHeight;\n            availWidth -= availHeight;\n        }\n        let hexSizeWidth = 2 * availWidth / ((this._options.width + 1) * Math.sqrt(3)) - 1;\n        let hexSizeHeight = availHeight / (2 + 1.5 * (this._options.height - 1));\n        let hexSize = Math.min(hexSizeWidth, hexSizeHeight);\n        // compute char ratio\n        let oldFont = this._ctx.font;\n        this._ctx.font = \"100px \" + this._options.fontFamily;\n        let width = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._ctx.font = oldFont;\n        let ratio = width / 100;\n        hexSize = Math.floor(hexSize) + 1; // closest larger hexSize\n        // FIXME char size computation does not respect transposed hexes\n        let fontSize = 2 * hexSize / (this._options.spacing * (1 + ratio / Math.sqrt(3)));\n        // closest smaller fontSize\n        return Math.ceil(fontSize) - 1;\n    }\n    _normalizedEventToPosition(x, y) {\n        let nodeSize;\n        if (this._options.transpose) {\n            x += y;\n            y = x - y;\n            x -= y;\n            nodeSize = this._ctx.canvas.width;\n        }\n        else {\n            nodeSize = this._ctx.canvas.height;\n        }\n        let size = nodeSize / this._options.height;\n        y = Math.floor(y / size);\n        if (mod(y, 2)) { /* odd row */\n            x -= this._spacingX;\n            x = 1 + 2 * Math.floor(x / (2 * this._spacingX));\n        }\n        else {\n            x = 2 * Math.floor(x / (2 * this._spacingX));\n        }\n        return [x, y];\n    }\n    /**\n     * Arguments are pixel values. If \"transposed\" mode is enabled, then these two are already swapped.\n     */\n    _fill(cx, cy) {\n        let a = this._hexSize;\n        let b = this._options.border;\n        const ctx = this._ctx;\n        ctx.beginPath();\n        if (this._options.transpose) {\n            ctx.moveTo(cx - a + b, cy);\n            ctx.lineTo(cx - a / 2 + b, cy + this._spacingX - b);\n            ctx.lineTo(cx + a / 2 - b, cy + this._spacingX - b);\n            ctx.lineTo(cx + a - b, cy);\n            ctx.lineTo(cx + a / 2 - b, cy - this._spacingX + b);\n            ctx.lineTo(cx - a / 2 + b, cy - this._spacingX + b);\n            ctx.lineTo(cx - a + b, cy);\n        }\n        else {\n            ctx.moveTo(cx, cy - a + b);\n            ctx.lineTo(cx + this._spacingX - b, cy - a / 2 + b);\n            ctx.lineTo(cx + this._spacingX - b, cy + a / 2 - b);\n            ctx.lineTo(cx, cy + a - b);\n            ctx.lineTo(cx - this._spacingX + b, cy + a / 2 - b);\n            ctx.lineTo(cx - this._spacingX + b, cy - a / 2 + b);\n            ctx.lineTo(cx, cy - a + b);\n        }\n        ctx.fill();\n    }\n    _updateSize() {\n        const opts = this._options;\n        const charWidth = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._hexSize = Math.floor(opts.spacing * (opts.fontSize + charWidth / Math.sqrt(3)) / 2);\n        this._spacingX = this._hexSize * Math.sqrt(3) / 2;\n        this._spacingY = this._hexSize * 1.5;\n        let xprop;\n        let yprop;\n        if (opts.transpose) {\n            xprop = \"height\";\n            yprop = \"width\";\n        }\n        else {\n            xprop = \"width\";\n            yprop = \"height\";\n        }\n        this._ctx.canvas[xprop] = Math.ceil((opts.width + 1) * this._spacingX);\n        this._ctx.canvas[yprop] = Math.ceil((opts.height - 1) * this._spacingY + 2 * this._hexSize);\n    }\n}\n","import Backend from \"./backend.js\";\nexport default class Canvas extends Backend {\n    constructor() {\n        super();\n        this._ctx = document.createElement(\"canvas\").getContext(\"2d\");\n    }\n    schedule(cb) { requestAnimationFrame(cb); }\n    getContainer() { return this._ctx.canvas; }\n    setOptions(opts) {\n        super.setOptions(opts);\n        const style = (opts.fontStyle ? `${opts.fontStyle} ` : ``);\n        const font = `${style} ${opts.fontSize}px ${opts.fontFamily}`;\n        this._ctx.font = font;\n        this._updateSize();\n        this._ctx.font = font;\n        this._ctx.textAlign = \"center\";\n        this._ctx.textBaseline = \"middle\";\n    }\n    clear() {\n        this._ctx.fillStyle = this._options.bg;\n        this._ctx.fillRect(0, 0, this._ctx.canvas.width, this._ctx.canvas.height);\n    }\n    eventToPosition(x, y) {\n        let canvas = this._ctx.canvas;\n        let rect = canvas.getBoundingClientRect();\n        x -= rect.left;\n        y -= rect.top;\n        x *= canvas.width / rect.width;\n        y *= canvas.height / rect.height;\n        if (x < 0 || y < 0 || x >= canvas.width || y >= canvas.height) {\n            return [-1, -1];\n        }\n        return this._normalizedEventToPosition(x, y);\n    }\n}\n","/**\n * @class Abstract display backend module\n * @private\n */\nexport default class Backend {\n    getContainer() { return null; }\n    setOptions(options) { this._options = options; }\n}\n","import Canvas from \"./canvas.js\";\n/**\n * @class Rectangular backend\n * @private\n */\nlet Rect = /** @class */ (() => {\n    class Rect extends Canvas {\n        constructor() {\n            super();\n            this._spacingX = 0;\n            this._spacingY = 0;\n            this._canvasCache = {};\n        }\n        setOptions(options) {\n            super.setOptions(options);\n            this._canvasCache = {};\n        }\n        draw(data, clearBefore) {\n            if (Rect.cache) {\n                this._drawWithCache(data);\n            }\n            else {\n                this._drawNoCache(data, clearBefore);\n            }\n        }\n        _drawWithCache(data) {\n            let [x, y, ch, fg, bg] = data;\n            let hash = \"\" + ch + fg + bg;\n            let canvas;\n            if (hash in this._canvasCache) {\n                canvas = this._canvasCache[hash];\n            }\n            else {\n                let b = this._options.border;\n                canvas = document.createElement(\"canvas\");\n                let ctx = canvas.getContext(\"2d\");\n                canvas.width = this._spacingX;\n                canvas.height = this._spacingY;\n                ctx.fillStyle = bg;\n                ctx.fillRect(b, b, canvas.width - b, canvas.height - b);\n                if (ch) {\n                    ctx.fillStyle = fg;\n                    ctx.font = this._ctx.font;\n                    ctx.textAlign = \"center\";\n                    ctx.textBaseline = \"middle\";\n                    let chars = [].concat(ch);\n                    for (let i = 0; i < chars.length; i++) {\n                        ctx.fillText(chars[i], this._spacingX / 2, Math.ceil(this._spacingY / 2));\n                    }\n                }\n                this._canvasCache[hash] = canvas;\n            }\n            this._ctx.drawImage(canvas, x * this._spacingX, y * this._spacingY);\n        }\n        _drawNoCache(data, clearBefore) {\n            let [x, y, ch, fg, bg] = data;\n            if (clearBefore) {\n                let b = this._options.border;\n                this._ctx.fillStyle = bg;\n                this._ctx.fillRect(x * this._spacingX + b, y * this._spacingY + b, this._spacingX - b, this._spacingY - b);\n            }\n            if (!ch) {\n                return;\n            }\n            this._ctx.fillStyle = fg;\n            let chars = [].concat(ch);\n            for (let i = 0; i < chars.length; i++) {\n                this._ctx.fillText(chars[i], (x + 0.5) * this._spacingX, Math.ceil((y + 0.5) * this._spacingY));\n            }\n        }\n        computeSize(availWidth, availHeight) {\n            let width = Math.floor(availWidth / this._spacingX);\n            let height = Math.floor(availHeight / this._spacingY);\n            return [width, height];\n        }\n        computeFontSize(availWidth, availHeight) {\n            let boxWidth = Math.floor(availWidth / this._options.width);\n            let boxHeight = Math.floor(availHeight / this._options.height);\n            /* compute char ratio */\n            let oldFont = this._ctx.font;\n            this._ctx.font = \"100px \" + this._options.fontFamily;\n            let width = Math.ceil(this._ctx.measureText(\"W\").width);\n            this._ctx.font = oldFont;\n            let ratio = width / 100;\n            let widthFraction = ratio * boxHeight / boxWidth;\n            if (widthFraction > 1) { /* too wide with current aspect ratio */\n                boxHeight = Math.floor(boxHeight / widthFraction);\n            }\n            return Math.floor(boxHeight / this._options.spacing);\n        }\n        _normalizedEventToPosition(x, y) {\n            return [Math.floor(x / this._spacingX), Math.floor(y / this._spacingY)];\n        }\n        _updateSize() {\n            const opts = this._options;\n            const charWidth = Math.ceil(this._ctx.measureText(\"W\").width);\n            this._spacingX = Math.ceil(opts.spacing * charWidth);\n            this._spacingY = Math.ceil(opts.spacing * opts.fontSize);\n            if (opts.forceSquareRatio) {\n                this._spacingX = this._spacingY = Math.max(this._spacingX, this._spacingY);\n            }\n            this._ctx.canvas.width = opts.width * this._spacingX;\n            this._ctx.canvas.height = opts.height * this._spacingY;\n        }\n    }\n    Rect.cache = false;\n    return Rect;\n})();\nexport default Rect;\n","import Canvas from \"./canvas.js\";\n/**\n * @class Tile backend\n * @private\n */\nexport default class Tile extends Canvas {\n    constructor() {\n        super();\n        this._colorCanvas = document.createElement(\"canvas\");\n    }\n    draw(data, clearBefore) {\n        let [x, y, ch, fg, bg] = data;\n        let tileWidth = this._options.tileWidth;\n        let tileHeight = this._options.tileHeight;\n        if (clearBefore) {\n            if (this._options.tileColorize) {\n                this._ctx.clearRect(x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n            else {\n                this._ctx.fillStyle = bg;\n                this._ctx.fillRect(x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n        }\n        if (!ch) {\n            return;\n        }\n        let chars = [].concat(ch);\n        let fgs = [].concat(fg);\n        let bgs = [].concat(bg);\n        for (let i = 0; i < chars.length; i++) {\n            let tile = this._options.tileMap[chars[i]];\n            if (!tile) {\n                throw new Error(`Char \"${chars[i]}\" not found in tileMap`);\n            }\n            if (this._options.tileColorize) { // apply colorization\n                let canvas = this._colorCanvas;\n                let context = canvas.getContext(\"2d\");\n                context.globalCompositeOperation = \"source-over\";\n                context.clearRect(0, 0, tileWidth, tileHeight);\n                let fg = fgs[i];\n                let bg = bgs[i];\n                context.drawImage(this._options.tileSet, tile[0], tile[1], tileWidth, tileHeight, 0, 0, tileWidth, tileHeight);\n                if (fg != \"transparent\") {\n                    context.fillStyle = fg;\n                    context.globalCompositeOperation = \"source-atop\";\n                    context.fillRect(0, 0, tileWidth, tileHeight);\n                }\n                if (bg != \"transparent\") {\n                    context.fillStyle = bg;\n                    context.globalCompositeOperation = \"destination-over\";\n                    context.fillRect(0, 0, tileWidth, tileHeight);\n                }\n                this._ctx.drawImage(canvas, x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n            else { // no colorizing, easy\n                this._ctx.drawImage(this._options.tileSet, tile[0], tile[1], tileWidth, tileHeight, x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n        }\n    }\n    computeSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._options.tileWidth);\n        let height = Math.floor(availHeight / this._options.tileHeight);\n        return [width, height];\n    }\n    computeFontSize() {\n        throw new Error(\"Tile backend does not understand font size\");\n    }\n    _normalizedEventToPosition(x, y) {\n        return [Math.floor(x / this._options.tileWidth), Math.floor(y / this._options.tileHeight)];\n    }\n    _updateSize() {\n        const opts = this._options;\n        this._ctx.canvas.width = opts.width * opts.tileWidth;\n        this._ctx.canvas.height = opts.height * opts.tileHeight;\n        this._colorCanvas.width = opts.tileWidth;\n        this._colorCanvas.height = opts.tileHeight;\n    }\n}\n","import Backend from \"./backend.js\";\nimport * as Color from \"../color.js\";\n/**\n * @class Tile backend\n * @private\n */\nexport default class TileGL extends Backend {\n    constructor() {\n        super();\n        this._uniforms = {};\n        try {\n            this._gl = this._initWebGL();\n        }\n        catch (e) {\n            alert(e.message);\n        }\n    }\n    static isSupported() {\n        return !!document.createElement(\"canvas\").getContext(\"webgl2\", { preserveDrawingBuffer: true });\n    }\n    schedule(cb) { requestAnimationFrame(cb); }\n    getContainer() { return this._gl.canvas; }\n    setOptions(opts) {\n        super.setOptions(opts);\n        this._updateSize();\n        let tileSet = this._options.tileSet;\n        if (tileSet && \"complete\" in tileSet && !tileSet.complete) {\n            tileSet.addEventListener(\"load\", () => this._updateTexture(tileSet));\n        }\n        else {\n            this._updateTexture(tileSet);\n        }\n    }\n    draw(data, clearBefore) {\n        const gl = this._gl;\n        const opts = this._options;\n        let [x, y, ch, fg, bg] = data;\n        let scissorY = gl.canvas.height - (y + 1) * opts.tileHeight;\n        gl.scissor(x * opts.tileWidth, scissorY, opts.tileWidth, opts.tileHeight);\n        if (clearBefore) {\n            if (opts.tileColorize) {\n                gl.clearColor(0, 0, 0, 0);\n            }\n            else {\n                gl.clearColor(...parseColor(bg));\n            }\n            gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n        if (!ch) {\n            return;\n        }\n        let chars = [].concat(ch);\n        let bgs = [].concat(bg);\n        let fgs = [].concat(fg);\n        gl.uniform2fv(this._uniforms[\"targetPosRel\"], [x, y]);\n        for (let i = 0; i < chars.length; i++) {\n            let tile = this._options.tileMap[chars[i]];\n            if (!tile) {\n                throw new Error(`Char \"${chars[i]}\" not found in tileMap`);\n            }\n            gl.uniform1f(this._uniforms[\"colorize\"], opts.tileColorize ? 1 : 0);\n            gl.uniform2fv(this._uniforms[\"tilesetPosAbs\"], tile);\n            if (opts.tileColorize) {\n                gl.uniform4fv(this._uniforms[\"tint\"], parseColor(fgs[i]));\n                gl.uniform4fv(this._uniforms[\"bg\"], parseColor(bgs[i]));\n            }\n            gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n        }\n        /*\n        \n        \n                for (let i=0;i<chars.length;i++) {\n        \n                    if (this._options.tileColorize) { // apply colorization\n                        let canvas = this._colorCanvas;\n                        let context = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n                        context.globalCompositeOperation = \"source-over\";\n                        context.clearRect(0, 0, tileWidth, tileHeight);\n        \n                        let fg = fgs[i];\n                        let bg = bgs[i];\n        \n                        context.drawImage(\n                            this._options.tileSet!,\n                            tile[0], tile[1], tileWidth, tileHeight,\n                            0, 0, tileWidth, tileHeight\n                        );\n        \n                        if (fg != \"transparent\") {\n                            context.fillStyle = fg;\n                            context.globalCompositeOperation = \"source-atop\";\n                            context.fillRect(0, 0, tileWidth, tileHeight);\n                        }\n        \n                        if (bg != \"transparent\") {\n                            context.fillStyle = bg;\n                            context.globalCompositeOperation = \"destination-over\";\n                            context.fillRect(0, 0, tileWidth, tileHeight);\n                        }\n        \n                        this._ctx.drawImage(canvas, x*tileWidth, y*tileHeight, tileWidth, tileHeight);\n                    } else { // no colorizing, easy\n                        this._ctx.drawImage(\n                            this._options.tileSet!,\n                            tile[0], tile[1], tileWidth, tileHeight,\n                            x*tileWidth, y*tileHeight, tileWidth, tileHeight\n                        );\n                    }\n                }\n        \n        */\n    }\n    clear() {\n        const gl = this._gl;\n        gl.clearColor(...parseColor(this._options.bg));\n        gl.scissor(0, 0, gl.canvas.width, gl.canvas.height);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n    }\n    computeSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._options.tileWidth);\n        let height = Math.floor(availHeight / this._options.tileHeight);\n        return [width, height];\n    }\n    computeFontSize() {\n        throw new Error(\"Tile backend does not understand font size\");\n    }\n    eventToPosition(x, y) {\n        let canvas = this._gl.canvas;\n        let rect = canvas.getBoundingClientRect();\n        x -= rect.left;\n        y -= rect.top;\n        x *= canvas.width / rect.width;\n        y *= canvas.height / rect.height;\n        if (x < 0 || y < 0 || x >= canvas.width || y >= canvas.height) {\n            return [-1, -1];\n        }\n        return this._normalizedEventToPosition(x, y);\n    }\n    _initWebGL() {\n        let gl = document.createElement(\"canvas\").getContext(\"webgl2\", { preserveDrawingBuffer: true });\n        window.gl = gl;\n        let program = createProgram(gl, VS, FS);\n        gl.useProgram(program);\n        createQuad(gl);\n        UNIFORMS.forEach(name => this._uniforms[name] = gl.getUniformLocation(program, name));\n        this._program = program;\n        gl.enable(gl.BLEND);\n        gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.enable(gl.SCISSOR_TEST);\n        return gl;\n    }\n    _normalizedEventToPosition(x, y) {\n        return [Math.floor(x / this._options.tileWidth), Math.floor(y / this._options.tileHeight)];\n    }\n    _updateSize() {\n        const gl = this._gl;\n        const opts = this._options;\n        const canvasSize = [opts.width * opts.tileWidth, opts.height * opts.tileHeight];\n        gl.canvas.width = canvasSize[0];\n        gl.canvas.height = canvasSize[1];\n        gl.viewport(0, 0, canvasSize[0], canvasSize[1]);\n        gl.uniform2fv(this._uniforms[\"tileSize\"], [opts.tileWidth, opts.tileHeight]);\n        gl.uniform2fv(this._uniforms[\"targetSize\"], canvasSize);\n    }\n    _updateTexture(tileSet) {\n        createTexture(this._gl, tileSet);\n    }\n}\nconst UNIFORMS = [\"targetPosRel\", \"tilesetPosAbs\", \"tileSize\", \"targetSize\", \"colorize\", \"bg\", \"tint\"];\nconst VS = `\n#version 300 es\n\nin vec2 tilePosRel;\nout vec2 tilesetPosPx;\n\nuniform vec2 tilesetPosAbs;\nuniform vec2 tileSize;\nuniform vec2 targetSize;\nuniform vec2 targetPosRel;\n\nvoid main() {\n\tvec2 targetPosPx = (targetPosRel + tilePosRel) * tileSize;\n\tvec2 targetPosNdc = ((targetPosPx / targetSize)-0.5)*2.0;\n\ttargetPosNdc.y *= -1.0;\n\n\tgl_Position = vec4(targetPosNdc, 0.0, 1.0);\n\ttilesetPosPx = tilesetPosAbs + tilePosRel * tileSize;\n}`.trim();\nconst FS = `\n#version 300 es\nprecision highp float;\n\nin vec2 tilesetPosPx;\nout vec4 fragColor;\nuniform sampler2D image;\nuniform bool colorize;\nuniform vec4 bg;\nuniform vec4 tint;\n\nvoid main() {\n\tfragColor = vec4(0, 0, 0, 1);\n\n\tvec4 texel = texelFetch(image, ivec2(tilesetPosPx), 0);\n\n\tif (colorize) {\n\t\ttexel.rgb = tint.a * tint.rgb + (1.0-tint.a) * texel.rgb;\n\t\tfragColor.rgb = texel.a*texel.rgb + (1.0-texel.a)*bg.rgb;\n\t\tfragColor.a = texel.a + (1.0-texel.a)*bg.a;\n\t} else {\n\t\tfragColor = texel;\n\t}\n}`.trim();\nfunction createProgram(gl, vss, fss) {\n    const vs = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vs, vss);\n    gl.compileShader(vs);\n    if (!gl.getShaderParameter(vs, gl.COMPILE_STATUS)) {\n        throw new Error(gl.getShaderInfoLog(vs) || \"\");\n    }\n    const fs = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fs, fss);\n    gl.compileShader(fs);\n    if (!gl.getShaderParameter(fs, gl.COMPILE_STATUS)) {\n        throw new Error(gl.getShaderInfoLog(fs) || \"\");\n    }\n    const p = gl.createProgram();\n    gl.attachShader(p, vs);\n    gl.attachShader(p, fs);\n    gl.linkProgram(p);\n    if (!gl.getProgramParameter(p, gl.LINK_STATUS)) {\n        throw new Error(gl.getProgramInfoLog(p) || \"\");\n    }\n    return p;\n}\nfunction createQuad(gl) {\n    const pos = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]);\n    const buf = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buf);\n    gl.bufferData(gl.ARRAY_BUFFER, pos, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(0);\n    gl.vertexAttribPointer(0, 2, gl.FLOAT, false, 0, 0);\n}\nfunction createTexture(gl, data) {\n    let t = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, t);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 0);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\n    return t;\n}\nlet colorCache = {};\nfunction parseColor(color) {\n    if (!(color in colorCache)) {\n        let parsed;\n        if (color == \"transparent\") {\n            parsed = [0, 0, 0, 0];\n        }\n        else if (color.indexOf(\"rgba\") > -1) {\n            parsed = (color.match(/[\\d.]+/g) || []).map(Number);\n            for (let i = 0; i < 3; i++) {\n                parsed[i] = parsed[i] / 255;\n            }\n        }\n        else {\n            parsed = Color.fromString(color).map($ => $ / 255);\n            parsed.push(1);\n        }\n        colorCache[color] = parsed;\n    }\n    return colorCache[color];\n}\n","import { clamp } from \"./util.js\";\nimport RNG from \"./rng.js\";\nexport function fromString(str) {\n    let cached, r;\n    if (str in CACHE) {\n        cached = CACHE[str];\n    }\n    else {\n        if (str.charAt(0) == \"#\") { // hex rgb\n            let matched = str.match(/[0-9a-f]/gi) || [];\n            let values = matched.map((x) => parseInt(x, 16));\n            if (values.length == 3) {\n                cached = values.map((x) => x * 17);\n            }\n            else {\n                for (let i = 0; i < 3; i++) {\n                    values[i + 1] += 16 * values[i];\n                    values.splice(i, 1);\n                }\n                cached = values;\n            }\n        }\n        else if ((r = str.match(/rgb\\(([0-9, ]+)\\)/i))) { // decimal rgb\n            cached = r[1].split(/\\s*,\\s*/).map((x) => parseInt(x));\n        }\n        else { // html name\n            cached = [0, 0, 0];\n        }\n        CACHE[str] = cached;\n    }\n    return cached.slice();\n}\n/**\n * Add two or more colors\n */\nexport function add(color1, ...colors) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            result[i] += colors[j][i];\n        }\n    }\n    return result;\n}\n/**\n * Add two or more colors, MODIFIES FIRST ARGUMENT\n */\nexport function add_(color1, ...colors) {\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            color1[i] += colors[j][i];\n        }\n    }\n    return color1;\n}\n/**\n * Multiply (mix) two or more colors\n */\nexport function multiply(color1, ...colors) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            result[i] *= colors[j][i] / 255;\n        }\n        result[i] = Math.round(result[i]);\n    }\n    return result;\n}\n/**\n * Multiply (mix) two or more colors, MODIFIES FIRST ARGUMENT\n */\nexport function multiply_(color1, ...colors) {\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            color1[i] *= colors[j][i] / 255;\n        }\n        color1[i] = Math.round(color1[i]);\n    }\n    return color1;\n}\n/**\n * Interpolate (blend) two colors with a given factor\n */\nexport function interpolate(color1, color2, factor = 0.5) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        result[i] = Math.round(result[i] + factor * (color2[i] - color1[i]));\n    }\n    return result;\n}\nexport const lerp = interpolate;\n/**\n * Interpolate (blend) two colors with a given factor in HSL mode\n */\nexport function interpolateHSL(color1, color2, factor = 0.5) {\n    let hsl1 = rgb2hsl(color1);\n    let hsl2 = rgb2hsl(color2);\n    for (let i = 0; i < 3; i++) {\n        hsl1[i] += factor * (hsl2[i] - hsl1[i]);\n    }\n    return hsl2rgb(hsl1);\n}\nexport const lerpHSL = interpolateHSL;\n/**\n * Create a new random color based on this one\n * @param color\n * @param diff Set of standard deviations\n */\nexport function randomize(color, diff) {\n    if (!(diff instanceof Array)) {\n        diff = Math.round(RNG.getNormal(0, diff));\n    }\n    let result = color.slice();\n    for (let i = 0; i < 3; i++) {\n        result[i] += (diff instanceof Array ? Math.round(RNG.getNormal(0, diff[i])) : diff);\n    }\n    return result;\n}\n/**\n * Converts an RGB color value to HSL. Expects 0..255 inputs, produces 0..1 outputs.\n */\nexport function rgb2hsl(color) {\n    let r = color[0] / 255;\n    let g = color[1] / 255;\n    let b = color[2] / 255;\n    let max = Math.max(r, g, b), min = Math.min(r, g, b);\n    let h = 0, s, l = (max + min) / 2;\n    if (max == min) {\n        s = 0; // achromatic\n    }\n    else {\n        let d = max - min;\n        s = (l > 0.5 ? d / (2 - max - min) : d / (max + min));\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n        }\n        h /= 6;\n    }\n    return [h, s, l];\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n/**\n * Converts an HSL color value to RGB. Expects 0..1 inputs, produces 0..255 outputs.\n */\nexport function hsl2rgb(color) {\n    let l = color[2];\n    if (color[1] == 0) {\n        l = Math.round(l * 255);\n        return [l, l, l];\n    }\n    else {\n        let s = color[1];\n        let q = (l < 0.5 ? l * (1 + s) : l + s - l * s);\n        let p = 2 * l - q;\n        let r = hue2rgb(p, q, color[0] + 1 / 3);\n        let g = hue2rgb(p, q, color[0]);\n        let b = hue2rgb(p, q, color[0] - 1 / 3);\n        return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n    }\n}\nexport function toRGB(color) {\n    let clamped = color.map(x => clamp(x, 0, 255));\n    return `rgb(${clamped.join(\",\")})`;\n}\nexport function toHex(color) {\n    let clamped = color.map(x => clamp(x, 0, 255).toString(16).padStart(2, \"0\"));\n    return `#${clamped.join(\"\")}`;\n}\nconst CACHE = {\n    \"black\": [0, 0, 0],\n    \"navy\": [0, 0, 128],\n    \"darkblue\": [0, 0, 139],\n    \"mediumblue\": [0, 0, 205],\n    \"blue\": [0, 0, 255],\n    \"darkgreen\": [0, 100, 0],\n    \"green\": [0, 128, 0],\n    \"teal\": [0, 128, 128],\n    \"darkcyan\": [0, 139, 139],\n    \"deepskyblue\": [0, 191, 255],\n    \"darkturquoise\": [0, 206, 209],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"lime\": [0, 255, 0],\n    \"springgreen\": [0, 255, 127],\n    \"aqua\": [0, 255, 255],\n    \"cyan\": [0, 255, 255],\n    \"midnightblue\": [25, 25, 112],\n    \"dodgerblue\": [30, 144, 255],\n    \"forestgreen\": [34, 139, 34],\n    \"seagreen\": [46, 139, 87],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"limegreen\": [50, 205, 50],\n    \"mediumseagreen\": [60, 179, 113],\n    \"turquoise\": [64, 224, 208],\n    \"royalblue\": [65, 105, 225],\n    \"steelblue\": [70, 130, 180],\n    \"darkslateblue\": [72, 61, 139],\n    \"mediumturquoise\": [72, 209, 204],\n    \"indigo\": [75, 0, 130],\n    \"darkolivegreen\": [85, 107, 47],\n    \"cadetblue\": [95, 158, 160],\n    \"cornflowerblue\": [100, 149, 237],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"slateblue\": [106, 90, 205],\n    \"olivedrab\": [107, 142, 35],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"mediumslateblue\": [123, 104, 238],\n    \"lawngreen\": [124, 252, 0],\n    \"chartreuse\": [127, 255, 0],\n    \"aquamarine\": [127, 255, 212],\n    \"maroon\": [128, 0, 0],\n    \"purple\": [128, 0, 128],\n    \"olive\": [128, 128, 0],\n    \"gray\": [128, 128, 128],\n    \"grey\": [128, 128, 128],\n    \"skyblue\": [135, 206, 235],\n    \"lightskyblue\": [135, 206, 250],\n    \"blueviolet\": [138, 43, 226],\n    \"darkred\": [139, 0, 0],\n    \"darkmagenta\": [139, 0, 139],\n    \"saddlebrown\": [139, 69, 19],\n    \"darkseagreen\": [143, 188, 143],\n    \"lightgreen\": [144, 238, 144],\n    \"mediumpurple\": [147, 112, 216],\n    \"darkviolet\": [148, 0, 211],\n    \"palegreen\": [152, 251, 152],\n    \"darkorchid\": [153, 50, 204],\n    \"yellowgreen\": [154, 205, 50],\n    \"sienna\": [160, 82, 45],\n    \"brown\": [165, 42, 42],\n    \"darkgray\": [169, 169, 169],\n    \"darkgrey\": [169, 169, 169],\n    \"lightblue\": [173, 216, 230],\n    \"greenyellow\": [173, 255, 47],\n    \"paleturquoise\": [175, 238, 238],\n    \"lightsteelblue\": [176, 196, 222],\n    \"powderblue\": [176, 224, 230],\n    \"firebrick\": [178, 34, 34],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"mediumorchid\": [186, 85, 211],\n    \"rosybrown\": [188, 143, 143],\n    \"darkkhaki\": [189, 183, 107],\n    \"silver\": [192, 192, 192],\n    \"mediumvioletred\": [199, 21, 133],\n    \"indianred\": [205, 92, 92],\n    \"peru\": [205, 133, 63],\n    \"chocolate\": [210, 105, 30],\n    \"tan\": [210, 180, 140],\n    \"lightgray\": [211, 211, 211],\n    \"lightgrey\": [211, 211, 211],\n    \"palevioletred\": [216, 112, 147],\n    \"thistle\": [216, 191, 216],\n    \"orchid\": [218, 112, 214],\n    \"goldenrod\": [218, 165, 32],\n    \"crimson\": [220, 20, 60],\n    \"gainsboro\": [220, 220, 220],\n    \"plum\": [221, 160, 221],\n    \"burlywood\": [222, 184, 135],\n    \"lightcyan\": [224, 255, 255],\n    \"lavender\": [230, 230, 250],\n    \"darksalmon\": [233, 150, 122],\n    \"violet\": [238, 130, 238],\n    \"palegoldenrod\": [238, 232, 170],\n    \"lightcoral\": [240, 128, 128],\n    \"khaki\": [240, 230, 140],\n    \"aliceblue\": [240, 248, 255],\n    \"honeydew\": [240, 255, 240],\n    \"azure\": [240, 255, 255],\n    \"sandybrown\": [244, 164, 96],\n    \"wheat\": [245, 222, 179],\n    \"beige\": [245, 245, 220],\n    \"whitesmoke\": [245, 245, 245],\n    \"mintcream\": [245, 255, 250],\n    \"ghostwhite\": [248, 248, 255],\n    \"salmon\": [250, 128, 114],\n    \"antiquewhite\": [250, 235, 215],\n    \"linen\": [250, 240, 230],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"oldlace\": [253, 245, 230],\n    \"red\": [255, 0, 0],\n    \"fuchsia\": [255, 0, 255],\n    \"magenta\": [255, 0, 255],\n    \"deeppink\": [255, 20, 147],\n    \"orangered\": [255, 69, 0],\n    \"tomato\": [255, 99, 71],\n    \"hotpink\": [255, 105, 180],\n    \"coral\": [255, 127, 80],\n    \"darkorange\": [255, 140, 0],\n    \"lightsalmon\": [255, 160, 122],\n    \"orange\": [255, 165, 0],\n    \"lightpink\": [255, 182, 193],\n    \"pink\": [255, 192, 203],\n    \"gold\": [255, 215, 0],\n    \"peachpuff\": [255, 218, 185],\n    \"navajowhite\": [255, 222, 173],\n    \"moccasin\": [255, 228, 181],\n    \"bisque\": [255, 228, 196],\n    \"mistyrose\": [255, 228, 225],\n    \"blanchedalmond\": [255, 235, 205],\n    \"papayawhip\": [255, 239, 213],\n    \"lavenderblush\": [255, 240, 245],\n    \"seashell\": [255, 245, 238],\n    \"cornsilk\": [255, 248, 220],\n    \"lemonchiffon\": [255, 250, 205],\n    \"floralwhite\": [255, 250, 240],\n    \"snow\": [255, 250, 250],\n    \"yellow\": [255, 255, 0],\n    \"lightyellow\": [255, 255, 224],\n    \"ivory\": [255, 255, 240],\n    \"white\": [255, 255, 255]\n};\n","import Backend from \"./backend.js\";\nimport * as Color from \"../color.js\";\nfunction clearToAnsi(bg) {\n    return `\\x1b[0;48;5;${termcolor(bg)}m\\x1b[2J`;\n}\nfunction colorToAnsi(fg, bg) {\n    return `\\x1b[0;38;5;${termcolor(fg)};48;5;${termcolor(bg)}m`;\n}\nfunction positionToAnsi(x, y) {\n    return `\\x1b[${y + 1};${x + 1}H`;\n}\nfunction termcolor(color) {\n    const SRC_COLORS = 256.0;\n    const DST_COLORS = 6.0;\n    const COLOR_RATIO = DST_COLORS / SRC_COLORS;\n    let rgb = Color.fromString(color);\n    let r = Math.floor(rgb[0] * COLOR_RATIO);\n    let g = Math.floor(rgb[1] * COLOR_RATIO);\n    let b = Math.floor(rgb[2] * COLOR_RATIO);\n    return r * 36 + g * 6 + b * 1 + 16;\n}\nexport default class Term extends Backend {\n    constructor() {\n        super();\n        this._offset = [0, 0];\n        this._cursor = [-1, -1];\n        this._lastColor = \"\";\n    }\n    schedule(cb) { setTimeout(cb, 1000 / 60); }\n    setOptions(options) {\n        super.setOptions(options);\n        let size = [options.width, options.height];\n        let avail = this.computeSize();\n        this._offset = avail.map((val, index) => Math.floor((val - size[index]) / 2));\n    }\n    clear() {\n        process.stdout.write(clearToAnsi(this._options.bg));\n    }\n    draw(data, clearBefore) {\n        // determine where to draw what with what colors\n        let [x, y, ch, fg, bg] = data;\n        // determine if we need to move the terminal cursor\n        let dx = this._offset[0] + x;\n        let dy = this._offset[1] + y;\n        let size = this.computeSize();\n        if (dx < 0 || dx >= size[0]) {\n            return;\n        }\n        if (dy < 0 || dy >= size[1]) {\n            return;\n        }\n        if (dx !== this._cursor[0] || dy !== this._cursor[1]) {\n            process.stdout.write(positionToAnsi(dx, dy));\n            this._cursor[0] = dx;\n            this._cursor[1] = dy;\n        }\n        // terminals automatically clear, but if we're clearing when we're\n        // not otherwise provided with a character, just use a space instead\n        if (clearBefore) {\n            if (!ch) {\n                ch = \" \";\n            }\n        }\n        // if we're not clearing and not provided with a character, do nothing\n        if (!ch) {\n            return;\n        }\n        // determine if we need to change colors\n        let newColor = colorToAnsi(fg, bg);\n        if (newColor !== this._lastColor) {\n            process.stdout.write(newColor);\n            this._lastColor = newColor;\n        }\n        if (ch != '\\t') {\n            // write the provided symbol to the display\n            let chars = [].concat(ch);\n            process.stdout.write(chars[0]);\n        }\n        // update our position, given that we wrote a character\n        this._cursor[0]++;\n        if (this._cursor[0] >= size[0]) {\n            this._cursor[0] = 0;\n            this._cursor[1]++;\n        }\n    }\n    computeFontSize() { throw new Error(\"Terminal backend has no notion of font size\"); }\n    eventToPosition(x, y) { return [x, y]; }\n    computeSize() { return [process.stdout.columns, process.stdout.rows]; }\n}\n","/**\n * @namespace\n * Contains text tokenization and breaking routines\n */\nconst RE_COLORS = /%([bc]){([^}]*)}/g;\n// token types\nexport const TYPE_TEXT = 0;\nexport const TYPE_NEWLINE = 1;\nexport const TYPE_FG = 2;\nexport const TYPE_BG = 3;\n/**\n * Measure size of a resulting text block\n */\nexport function measure(str, maxWidth) {\n    let result = { width: 0, height: 1 };\n    let tokens = tokenize(str, maxWidth);\n    let lineWidth = 0;\n    for (let i = 0; i < tokens.length; i++) {\n        let token = tokens[i];\n        switch (token.type) {\n            case TYPE_TEXT:\n                lineWidth += token.value.length;\n                break;\n            case TYPE_NEWLINE:\n                result.height++;\n                result.width = Math.max(result.width, lineWidth);\n                lineWidth = 0;\n                break;\n        }\n    }\n    result.width = Math.max(result.width, lineWidth);\n    return result;\n}\n/**\n * Convert string to a series of a formatting commands\n */\nexport function tokenize(str, maxWidth) {\n    let result = [];\n    /* first tokenization pass - split texts and color formatting commands */\n    let offset = 0;\n    str.replace(RE_COLORS, function (match, type, name, index) {\n        /* string before */\n        let part = str.substring(offset, index);\n        if (part.length) {\n            result.push({\n                type: TYPE_TEXT,\n                value: part\n            });\n        }\n        /* color command */\n        result.push({\n            type: (type == \"c\" ? TYPE_FG : TYPE_BG),\n            value: name.trim()\n        });\n        offset = index + match.length;\n        return \"\";\n    });\n    /* last remaining part */\n    let part = str.substring(offset);\n    if (part.length) {\n        result.push({\n            type: TYPE_TEXT,\n            value: part\n        });\n    }\n    return breakLines(result, maxWidth);\n}\n/* insert line breaks into first-pass tokenized data */\nfunction breakLines(tokens, maxWidth) {\n    if (!maxWidth) {\n        maxWidth = Infinity;\n    }\n    let i = 0;\n    let lineLength = 0;\n    let lastTokenWithSpace = -1;\n    while (i < tokens.length) { /* take all text tokens, remove space, apply linebreaks */\n        let token = tokens[i];\n        if (token.type == TYPE_NEWLINE) { /* reset */\n            lineLength = 0;\n            lastTokenWithSpace = -1;\n        }\n        if (token.type != TYPE_TEXT) { /* skip non-text tokens */\n            i++;\n            continue;\n        }\n        /* remove spaces at the beginning of line */\n        while (lineLength == 0 && token.value.charAt(0) == \" \") {\n            token.value = token.value.substring(1);\n        }\n        /* forced newline? insert two new tokens after this one */\n        let index = token.value.indexOf(\"\\n\");\n        if (index != -1) {\n            token.value = breakInsideToken(tokens, i, index, true);\n            /* if there are spaces at the end, we must remove them (we do not want the line too long) */\n            let arr = token.value.split(\"\");\n            while (arr.length && arr[arr.length - 1] == \" \") {\n                arr.pop();\n            }\n            token.value = arr.join(\"\");\n        }\n        /* token degenerated? */\n        if (!token.value.length) {\n            tokens.splice(i, 1);\n            continue;\n        }\n        if (lineLength + token.value.length > maxWidth) { /* line too long, find a suitable breaking spot */\n            /* is it possible to break within this token? */\n            let index = -1;\n            while (1) {\n                let nextIndex = token.value.indexOf(\" \", index + 1);\n                if (nextIndex == -1) {\n                    break;\n                }\n                if (lineLength + nextIndex > maxWidth) {\n                    break;\n                }\n                index = nextIndex;\n            }\n            if (index != -1) { /* break at space within this one */\n                token.value = breakInsideToken(tokens, i, index, true);\n            }\n            else if (lastTokenWithSpace != -1) { /* is there a previous token where a break can occur? */\n                let token = tokens[lastTokenWithSpace];\n                let breakIndex = token.value.lastIndexOf(\" \");\n                token.value = breakInsideToken(tokens, lastTokenWithSpace, breakIndex, true);\n                i = lastTokenWithSpace;\n            }\n            else { /* force break in this token */\n                token.value = breakInsideToken(tokens, i, maxWidth - lineLength, false);\n            }\n        }\n        else { /* line not long, continue */\n            lineLength += token.value.length;\n            if (token.value.indexOf(\" \") != -1) {\n                lastTokenWithSpace = i;\n            }\n        }\n        i++; /* advance to next token */\n    }\n    tokens.push({ type: TYPE_NEWLINE }); /* insert fake newline to fix the last text line */\n    /* remove trailing space from text tokens before newlines */\n    let lastTextToken = null;\n    for (let i = 0; i < tokens.length; i++) {\n        let token = tokens[i];\n        switch (token.type) {\n            case TYPE_TEXT:\n                lastTextToken = token;\n                break;\n            case TYPE_NEWLINE:\n                if (lastTextToken) { /* remove trailing space */\n                    let arr = lastTextToken.value.split(\"\");\n                    while (arr.length && arr[arr.length - 1] == \" \") {\n                        arr.pop();\n                    }\n                    lastTextToken.value = arr.join(\"\");\n                }\n                lastTextToken = null;\n                break;\n        }\n    }\n    tokens.pop(); /* remove fake token */\n    return tokens;\n}\n/**\n * Create new tokens and insert them into the stream\n * @param {object[]} tokens\n * @param {int} tokenIndex Token being processed\n * @param {int} breakIndex Index within current token's value\n * @param {bool} removeBreakChar Do we want to remove the breaking character?\n * @returns {string} remaining unbroken token value\n */\nfunction breakInsideToken(tokens, tokenIndex, breakIndex, removeBreakChar) {\n    let newBreakToken = {\n        type: TYPE_NEWLINE\n    };\n    let newTextToken = {\n        type: TYPE_TEXT,\n        value: tokens[tokenIndex].value.substring(breakIndex + (removeBreakChar ? 1 : 0))\n    };\n    tokens.splice(tokenIndex + 1, 0, newBreakToken, newTextToken);\n    return tokens[tokenIndex].value.substring(0, breakIndex);\n}\n","/** Default with for display and map generators */\nexport let DEFAULT_WIDTH = 80;\n/** Default height for display and map generators */\nexport let DEFAULT_HEIGHT = 25;\nexport const DIRS = {\n    4: [[0, -1], [1, 0], [0, 1], [-1, 0]],\n    8: [[0, -1], [1, -1], [1, 0], [1, 1], [0, 1], [-1, 1], [-1, 0], [-1, -1]],\n    6: [[-1, -1], [1, -1], [2, 0], [1, 1], [-1, 1], [-2, 0]]\n};\nexport const KEYS = {\n    /** Cancel key. */\n    VK_CANCEL: 3,\n    /** Help key. */\n    VK_HELP: 6,\n    /** Backspace key. */\n    VK_BACK_SPACE: 8,\n    /** Tab key. */\n    VK_TAB: 9,\n    /** 5 key on Numpad when NumLock is unlocked. Or on Mac, clear key which is positioned at NumLock key. */\n    VK_CLEAR: 12,\n    /** Return/enter key on the main keyboard. */\n    VK_RETURN: 13,\n    /** Reserved, but not used. */\n    VK_ENTER: 14,\n    /** Shift key. */\n    VK_SHIFT: 16,\n    /** Control key. */\n    VK_CONTROL: 17,\n    /** Alt (Option on Mac) key. */\n    VK_ALT: 18,\n    /** Pause key. */\n    VK_PAUSE: 19,\n    /** Caps lock. */\n    VK_CAPS_LOCK: 20,\n    /** Escape key. */\n    VK_ESCAPE: 27,\n    /** Space bar. */\n    VK_SPACE: 32,\n    /** Page Up key. */\n    VK_PAGE_UP: 33,\n    /** Page Down key. */\n    VK_PAGE_DOWN: 34,\n    /** End key. */\n    VK_END: 35,\n    /** Home key. */\n    VK_HOME: 36,\n    /** Left arrow. */\n    VK_LEFT: 37,\n    /** Up arrow. */\n    VK_UP: 38,\n    /** Right arrow. */\n    VK_RIGHT: 39,\n    /** Down arrow. */\n    VK_DOWN: 40,\n    /** Print Screen key. */\n    VK_PRINTSCREEN: 44,\n    /** Ins(ert) key. */\n    VK_INSERT: 45,\n    /** Del(ete) key. */\n    VK_DELETE: 46,\n    /***/\n    VK_0: 48,\n    /***/\n    VK_1: 49,\n    /***/\n    VK_2: 50,\n    /***/\n    VK_3: 51,\n    /***/\n    VK_4: 52,\n    /***/\n    VK_5: 53,\n    /***/\n    VK_6: 54,\n    /***/\n    VK_7: 55,\n    /***/\n    VK_8: 56,\n    /***/\n    VK_9: 57,\n    /** Colon (:) key. Requires Gecko 15.0 */\n    VK_COLON: 58,\n    /** Semicolon (;) key. */\n    VK_SEMICOLON: 59,\n    /** Less-than (<) key. Requires Gecko 15.0 */\n    VK_LESS_THAN: 60,\n    /** Equals (=) key. */\n    VK_EQUALS: 61,\n    /** Greater-than (>) key. Requires Gecko 15.0 */\n    VK_GREATER_THAN: 62,\n    /** Question mark (?) key. Requires Gecko 15.0 */\n    VK_QUESTION_MARK: 63,\n    /** Atmark (@) key. Requires Gecko 15.0 */\n    VK_AT: 64,\n    /***/\n    VK_A: 65,\n    /***/\n    VK_B: 66,\n    /***/\n    VK_C: 67,\n    /***/\n    VK_D: 68,\n    /***/\n    VK_E: 69,\n    /***/\n    VK_F: 70,\n    /***/\n    VK_G: 71,\n    /***/\n    VK_H: 72,\n    /***/\n    VK_I: 73,\n    /***/\n    VK_J: 74,\n    /***/\n    VK_K: 75,\n    /***/\n    VK_L: 76,\n    /***/\n    VK_M: 77,\n    /***/\n    VK_N: 78,\n    /***/\n    VK_O: 79,\n    /***/\n    VK_P: 80,\n    /***/\n    VK_Q: 81,\n    /***/\n    VK_R: 82,\n    /***/\n    VK_S: 83,\n    /***/\n    VK_T: 84,\n    /***/\n    VK_U: 85,\n    /***/\n    VK_V: 86,\n    /***/\n    VK_W: 87,\n    /***/\n    VK_X: 88,\n    /***/\n    VK_Y: 89,\n    /***/\n    VK_Z: 90,\n    /***/\n    VK_CONTEXT_MENU: 93,\n    /** 0 on the numeric keypad. */\n    VK_NUMPAD0: 96,\n    /** 1 on the numeric keypad. */\n    VK_NUMPAD1: 97,\n    /** 2 on the numeric keypad. */\n    VK_NUMPAD2: 98,\n    /** 3 on the numeric keypad. */\n    VK_NUMPAD3: 99,\n    /** 4 on the numeric keypad. */\n    VK_NUMPAD4: 100,\n    /** 5 on the numeric keypad. */\n    VK_NUMPAD5: 101,\n    /** 6 on the numeric keypad. */\n    VK_NUMPAD6: 102,\n    /** 7 on the numeric keypad. */\n    VK_NUMPAD7: 103,\n    /** 8 on the numeric keypad. */\n    VK_NUMPAD8: 104,\n    /** 9 on the numeric keypad. */\n    VK_NUMPAD9: 105,\n    /** * on the numeric keypad. */\n    VK_MULTIPLY: 106,\n    /** + on the numeric keypad. */\n    VK_ADD: 107,\n    /***/\n    VK_SEPARATOR: 108,\n    /** - on the numeric keypad. */\n    VK_SUBTRACT: 109,\n    /** Decimal point on the numeric keypad. */\n    VK_DECIMAL: 110,\n    /** / on the numeric keypad. */\n    VK_DIVIDE: 111,\n    /** F1 key. */\n    VK_F1: 112,\n    /** F2 key. */\n    VK_F2: 113,\n    /** F3 key. */\n    VK_F3: 114,\n    /** F4 key. */\n    VK_F4: 115,\n    /** F5 key. */\n    VK_F5: 116,\n    /** F6 key. */\n    VK_F6: 117,\n    /** F7 key. */\n    VK_F7: 118,\n    /** F8 key. */\n    VK_F8: 119,\n    /** F9 key. */\n    VK_F9: 120,\n    /** F10 key. */\n    VK_F10: 121,\n    /** F11 key. */\n    VK_F11: 122,\n    /** F12 key. */\n    VK_F12: 123,\n    /** F13 key. */\n    VK_F13: 124,\n    /** F14 key. */\n    VK_F14: 125,\n    /** F15 key. */\n    VK_F15: 126,\n    /** F16 key. */\n    VK_F16: 127,\n    /** F17 key. */\n    VK_F17: 128,\n    /** F18 key. */\n    VK_F18: 129,\n    /** F19 key. */\n    VK_F19: 130,\n    /** F20 key. */\n    VK_F20: 131,\n    /** F21 key. */\n    VK_F21: 132,\n    /** F22 key. */\n    VK_F22: 133,\n    /** F23 key. */\n    VK_F23: 134,\n    /** F24 key. */\n    VK_F24: 135,\n    /** Num Lock key. */\n    VK_NUM_LOCK: 144,\n    /** Scroll Lock key. */\n    VK_SCROLL_LOCK: 145,\n    /** Circumflex (^) key. Requires Gecko 15.0 */\n    VK_CIRCUMFLEX: 160,\n    /** Exclamation (!) key. Requires Gecko 15.0 */\n    VK_EXCLAMATION: 161,\n    /** Double quote () key. Requires Gecko 15.0 */\n    VK_DOUBLE_QUOTE: 162,\n    /** Hash (#) key. Requires Gecko 15.0 */\n    VK_HASH: 163,\n    /** Dollar sign ($) key. Requires Gecko 15.0 */\n    VK_DOLLAR: 164,\n    /** Percent (%) key. Requires Gecko 15.0 */\n    VK_PERCENT: 165,\n    /** Ampersand (&) key. Requires Gecko 15.0 */\n    VK_AMPERSAND: 166,\n    /** Underscore (_) key. Requires Gecko 15.0 */\n    VK_UNDERSCORE: 167,\n    /** Open parenthesis (() key. Requires Gecko 15.0 */\n    VK_OPEN_PAREN: 168,\n    /** Close parenthesis ()) key. Requires Gecko 15.0 */\n    VK_CLOSE_PAREN: 169,\n    /* Asterisk (*) key. Requires Gecko 15.0 */\n    VK_ASTERISK: 170,\n    /** Plus (+) key. Requires Gecko 15.0 */\n    VK_PLUS: 171,\n    /** Pipe (|) key. Requires Gecko 15.0 */\n    VK_PIPE: 172,\n    /** Hyphen-US/docs/Minus (-) key. Requires Gecko 15.0 */\n    VK_HYPHEN_MINUS: 173,\n    /** Open curly bracket ({) key. Requires Gecko 15.0 */\n    VK_OPEN_CURLY_BRACKET: 174,\n    /** Close curly bracket (}) key. Requires Gecko 15.0 */\n    VK_CLOSE_CURLY_BRACKET: 175,\n    /** Tilde (~) key. Requires Gecko 15.0 */\n    VK_TILDE: 176,\n    /** Comma (,) key. */\n    VK_COMMA: 188,\n    /** Period (.) key. */\n    VK_PERIOD: 190,\n    /** Slash (/) key. */\n    VK_SLASH: 191,\n    /** Back tick (`) key. */\n    VK_BACK_QUOTE: 192,\n    /** Open square bracket ([) key. */\n    VK_OPEN_BRACKET: 219,\n    /** Back slash (\\) key. */\n    VK_BACK_SLASH: 220,\n    /** Close square bracket (]) key. */\n    VK_CLOSE_BRACKET: 221,\n    /** Quote (''') key. */\n    VK_QUOTE: 222,\n    /** Meta key on Linux, Command key on Mac. */\n    VK_META: 224,\n    /** AltGr key on Linux. Requires Gecko 15.0 */\n    VK_ALTGR: 225,\n    /** Windows logo key on Windows. Or Super or Hyper key on Linux. Requires Gecko 15.0 */\n    VK_WIN: 91,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_KANA: 21,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_HANGUL: 21,\n    /** 英数 key on Japanese Mac keyboard. Requires Gecko 15.0 */\n    VK_EISU: 22,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_JUNJA: 23,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_FINAL: 24,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_HANJA: 25,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_KANJI: 25,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_CONVERT: 28,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_NONCONVERT: 29,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_ACCEPT: 30,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_MODECHANGE: 31,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_SELECT: 41,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_PRINT: 42,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_EXECUTE: 43,\n    /** Linux support for this keycode was added in Gecko 4.0.\t */\n    VK_SLEEP: 95\n};\n","import RNG from \"./rng.js\";\n/**\n * @class (Markov process)-based string generator.\n * Copied from a <a href=\"http://www.roguebasin.roguelikedevelopment.org/index.php?title=Names_from_a_high_order_Markov_Process_and_a_simplified_Katz_back-off_scheme\">RogueBasin article</a>.\n * Offers configurable order and prior.\n */\nexport default class StringGenerator {\n    constructor(options) {\n        this._options = {\n            words: false,\n            order: 3,\n            prior: 0.001\n        };\n        Object.assign(this._options, options);\n        this._boundary = String.fromCharCode(0);\n        this._suffix = this._boundary;\n        this._prefix = [];\n        for (let i = 0; i < this._options.order; i++) {\n            this._prefix.push(this._boundary);\n        }\n        this._priorValues = {};\n        this._priorValues[this._boundary] = this._options.prior;\n        this._data = {};\n    }\n    /**\n     * Remove all learning data\n     */\n    clear() {\n        this._data = {};\n        this._priorValues = {};\n    }\n    /**\n     * @returns {string} Generated string\n     */\n    generate() {\n        let result = [this._sample(this._prefix)];\n        while (result[result.length - 1] != this._boundary) {\n            result.push(this._sample(result));\n        }\n        return this._join(result.slice(0, -1));\n    }\n    /**\n     * Observe (learn) a string from a training set\n     */\n    observe(string) {\n        let tokens = this._split(string);\n        for (let i = 0; i < tokens.length; i++) {\n            this._priorValues[tokens[i]] = this._options.prior;\n        }\n        tokens = this._prefix.concat(tokens).concat(this._suffix); /* add boundary symbols */\n        for (let i = this._options.order; i < tokens.length; i++) {\n            let context = tokens.slice(i - this._options.order, i);\n            let event = tokens[i];\n            for (let j = 0; j < context.length; j++) {\n                let subcontext = context.slice(j);\n                this._observeEvent(subcontext, event);\n            }\n        }\n    }\n    getStats() {\n        let parts = [];\n        let priorCount = Object.keys(this._priorValues).length;\n        priorCount--; // boundary\n        parts.push(\"distinct samples: \" + priorCount);\n        let dataCount = Object.keys(this._data).length;\n        let eventCount = 0;\n        for (let p in this._data) {\n            eventCount += Object.keys(this._data[p]).length;\n        }\n        parts.push(\"dictionary size (contexts): \" + dataCount);\n        parts.push(\"dictionary size (events): \" + eventCount);\n        return parts.join(\", \");\n    }\n    /**\n     * @param {string}\n     * @returns {string[]}\n     */\n    _split(str) {\n        return str.split(this._options.words ? /\\s+/ : \"\");\n    }\n    /**\n     * @param {string[]}\n     * @returns {string}\n     */\n    _join(arr) {\n        return arr.join(this._options.words ? \" \" : \"\");\n    }\n    /**\n     * @param {string[]} context\n     * @param {string} event\n     */\n    _observeEvent(context, event) {\n        let key = this._join(context);\n        if (!(key in this._data)) {\n            this._data[key] = {};\n        }\n        let data = this._data[key];\n        if (!(event in data)) {\n            data[event] = 0;\n        }\n        data[event]++;\n    }\n    /**\n     * @param {string[]}\n     * @returns {string}\n     */\n    _sample(context) {\n        context = this._backoff(context);\n        let key = this._join(context);\n        let data = this._data[key];\n        let available = {};\n        if (this._options.prior) {\n            for (let event in this._priorValues) {\n                available[event] = this._priorValues[event];\n            }\n            for (let event in data) {\n                available[event] += data[event];\n            }\n        }\n        else {\n            available = data;\n        }\n        return RNG.getWeightedValue(available);\n    }\n    /**\n     * @param {string[]}\n     * @returns {string[]}\n     */\n    _backoff(context) {\n        if (context.length > this._options.order) {\n            context = context.slice(-this._options.order);\n        }\n        else if (context.length < this._options.order) {\n            context = this._prefix.slice(0, this._options.order - context.length).concat(context);\n        }\n        while (!(this._join(context) in this._data) && context.length > 0) {\n            context = context.slice(1);\n        }\n        return context;\n    }\n}\n","import Simple from \"./simple.js\";\nimport Speed from \"./speed.js\";\nimport Action from \"./action.js\";\nexport default { Simple, Speed, Action };\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Speed-based scheduler\n */\nexport default class Speed extends Scheduler {\n    /**\n     * @param {object} item anything with \"getSpeed\" method\n     * @param {bool} repeat\n     * @param {number} [time=1/item.getSpeed()]\n     * @see ROT.Scheduler#add\n     */\n    add(item, repeat, time) {\n        this._queue.add(item, time !== undefined ? time : 1 / item.getSpeed());\n        return super.add(item, repeat);\n    }\n    /**\n     * @see ROT.Scheduler#next\n     */\n    next() {\n        if (this._current && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, 1 / this._current.getSpeed());\n        }\n        return super.next();\n    }\n}\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Action-based scheduler\n * @augments ROT.Scheduler\n */\nexport default class Action extends Scheduler {\n    constructor() {\n        super();\n        this._defaultDuration = 1; /* for newly added */\n        this._duration = this._defaultDuration; /* for this._current */\n    }\n    /**\n     * @param {object} item\n     * @param {bool} repeat\n     * @param {number} [time=1]\n     * @see ROT.Scheduler#add\n     */\n    add(item, repeat, time) {\n        this._queue.add(item, time || this._defaultDuration);\n        return super.add(item, repeat);\n    }\n    clear() {\n        this._duration = this._defaultDuration;\n        return super.clear();\n    }\n    remove(item) {\n        if (item == this._current) {\n            this._duration = this._defaultDuration;\n        }\n        return super.remove(item);\n    }\n    /**\n     * @see ROT.Scheduler#next\n     */\n    next() {\n        if (this._current !== null && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, this._duration || this._defaultDuration);\n            this._duration = this._defaultDuration;\n        }\n        return super.next();\n    }\n    /**\n     * Set duration for the active item\n     */\n    setDuration(time) {\n        if (this._current) {\n            this._duration = time;\n        }\n        return this;\n    }\n}\n","import DiscreteShadowcasting from \"./discrete-shadowcasting.js\";\nimport PreciseShadowcasting from \"./precise-shadowcasting.js\";\nimport RecursiveShadowcasting from \"./recursive-shadowcasting.js\";\nexport default { DiscreteShadowcasting, PreciseShadowcasting, RecursiveShadowcasting };\n","import FOV from \"./fov.js\";\n/**\n * @class Discrete shadowcasting algorithm. Obsoleted by Precise shadowcasting.\n * @augments ROT.FOV\n */\nexport default class DiscreteShadowcasting extends FOV {\n    compute(x, y, R, callback) {\n        /* this place is always visible */\n        callback(x, y, 0, 1);\n        /* standing in a dark place. FIXME is this a good idea?  */\n        if (!this._lightPasses(x, y)) {\n            return;\n        }\n        /* start and end angles */\n        let DATA = [];\n        let A, B, cx, cy, blocks;\n        /* analyze surrounding cells in concentric rings, starting from the center */\n        for (let r = 1; r <= R; r++) {\n            let neighbors = this._getCircle(x, y, r);\n            let angle = 360 / neighbors.length;\n            for (let i = 0; i < neighbors.length; i++) {\n                cx = neighbors[i][0];\n                cy = neighbors[i][1];\n                A = angle * (i - 0.5);\n                B = A + angle;\n                blocks = !this._lightPasses(cx, cy);\n                if (this._visibleCoords(Math.floor(A), Math.ceil(B), blocks, DATA)) {\n                    callback(cx, cy, r, 1);\n                }\n                if (DATA.length == 2 && DATA[0] == 0 && DATA[1] == 360) {\n                    return;\n                } /* cutoff? */\n            } /* for all cells in this ring */\n        } /* for all rings */\n    }\n    /**\n     * @param {int} A start angle\n     * @param {int} B end angle\n     * @param {bool} blocks Does current cell block visibility?\n     * @param {int[][]} DATA shadowed angle pairs\n     */\n    _visibleCoords(A, B, blocks, DATA) {\n        if (A < 0) {\n            let v1 = this._visibleCoords(0, B, blocks, DATA);\n            let v2 = this._visibleCoords(360 + A, 360, blocks, DATA);\n            return v1 || v2;\n        }\n        let index = 0;\n        while (index < DATA.length && DATA[index] < A) {\n            index++;\n        }\n        if (index == DATA.length) { /* completely new shadow */\n            if (blocks) {\n                DATA.push(A, B);\n            }\n            return true;\n        }\n        let count = 0;\n        if (index % 2) { /* this shadow starts in an existing shadow, or within its ending boundary */\n            while (index < DATA.length && DATA[index] < B) {\n                index++;\n                count++;\n            }\n            if (count == 0) {\n                return false;\n            }\n            if (blocks) {\n                if (count % 2) {\n                    DATA.splice(index - count, count, B);\n                }\n                else {\n                    DATA.splice(index - count, count);\n                }\n            }\n            return true;\n        }\n        else { /* this shadow starts outside an existing shadow, or within a starting boundary */\n            while (index < DATA.length && DATA[index] < B) {\n                index++;\n                count++;\n            }\n            /* visible when outside an existing shadow, or when overlapping */\n            if (A == DATA[index - count] && count == 1) {\n                return false;\n            }\n            if (blocks) {\n                if (count % 2) {\n                    DATA.splice(index - count, count, A);\n                }\n                else {\n                    DATA.splice(index - count, count, A, B);\n                }\n            }\n            return true;\n        }\n    }\n}\n","import { DIRS } from \"../constants.js\";\n;\n;\nexport default class FOV {\n    /**\n     * @class Abstract FOV algorithm\n     * @param {function} lightPassesCallback Does the light pass through x,y?\n     * @param {object} [options]\n     * @param {int} [options.topology=8] 4/6/8\n     */\n    constructor(lightPassesCallback, options = {}) {\n        this._lightPasses = lightPassesCallback;\n        this._options = Object.assign({ topology: 8 }, options);\n    }\n    /**\n     * Return all neighbors in a concentric ring\n     * @param {int} cx center-x\n     * @param {int} cy center-y\n     * @param {int} r range\n     */\n    _getCircle(cx, cy, r) {\n        let result = [];\n        let dirs, countFactor, startOffset;\n        switch (this._options.topology) {\n            case 4:\n                countFactor = 1;\n                startOffset = [0, 1];\n                dirs = [\n                    DIRS[8][7],\n                    DIRS[8][1],\n                    DIRS[8][3],\n                    DIRS[8][5]\n                ];\n                break;\n            case 6:\n                dirs = DIRS[6];\n                countFactor = 1;\n                startOffset = [-1, 1];\n                break;\n            case 8:\n                dirs = DIRS[4];\n                countFactor = 2;\n                startOffset = [-1, 1];\n                break;\n            default:\n                throw new Error(\"Incorrect topology for FOV computation\");\n                break;\n        }\n        /* starting neighbor */\n        let x = cx + startOffset[0] * r;\n        let y = cy + startOffset[1] * r;\n        /* circle */\n        for (let i = 0; i < dirs.length; i++) {\n            for (let j = 0; j < r * countFactor; j++) {\n                result.push([x, y]);\n                x += dirs[i][0];\n                y += dirs[i][1];\n            }\n        }\n        return result;\n    }\n}\n","import FOV from \"./fov.js\";\n/**\n * @class Precise shadowcasting algorithm\n * @augments ROT.FOV\n */\nexport default class PreciseShadowcasting extends FOV {\n    compute(x, y, R, callback) {\n        /* this place is always visible */\n        callback(x, y, 0, 1);\n        /* standing in a dark place. FIXME is this a good idea?  */\n        if (!this._lightPasses(x, y)) {\n            return;\n        }\n        /* list of all shadows */\n        let SHADOWS = [];\n        let cx, cy, blocks, A1, A2, visibility;\n        /* analyze surrounding cells in concentric rings, starting from the center */\n        for (let r = 1; r <= R; r++) {\n            let neighbors = this._getCircle(x, y, r);\n            let neighborCount = neighbors.length;\n            for (let i = 0; i < neighborCount; i++) {\n                cx = neighbors[i][0];\n                cy = neighbors[i][1];\n                /* shift half-an-angle backwards to maintain consistency of 0-th cells */\n                A1 = [i ? 2 * i - 1 : 2 * neighborCount - 1, 2 * neighborCount];\n                A2 = [2 * i + 1, 2 * neighborCount];\n                blocks = !this._lightPasses(cx, cy);\n                visibility = this._checkVisibility(A1, A2, blocks, SHADOWS);\n                if (visibility) {\n                    callback(cx, cy, r, visibility);\n                }\n                if (SHADOWS.length == 2 && SHADOWS[0][0] == 0 && SHADOWS[1][0] == SHADOWS[1][1]) {\n                    return;\n                } /* cutoff? */\n            } /* for all cells in this ring */\n        } /* for all rings */\n    }\n    /**\n     * @param {int[2]} A1 arc start\n     * @param {int[2]} A2 arc end\n     * @param {bool} blocks Does current arc block visibility?\n     * @param {int[][]} SHADOWS list of active shadows\n     */\n    _checkVisibility(A1, A2, blocks, SHADOWS) {\n        if (A1[0] > A2[0]) { /* split into two sub-arcs */\n            let v1 = this._checkVisibility(A1, [A1[1], A1[1]], blocks, SHADOWS);\n            let v2 = this._checkVisibility([0, 1], A2, blocks, SHADOWS);\n            return (v1 + v2) / 2;\n        }\n        /* index1: first shadow >= A1 */\n        let index1 = 0, edge1 = false;\n        while (index1 < SHADOWS.length) {\n            let old = SHADOWS[index1];\n            let diff = old[0] * A1[1] - A1[0] * old[1];\n            if (diff >= 0) { /* old >= A1 */\n                if (diff == 0 && !(index1 % 2)) {\n                    edge1 = true;\n                }\n                break;\n            }\n            index1++;\n        }\n        /* index2: last shadow <= A2 */\n        let index2 = SHADOWS.length, edge2 = false;\n        while (index2--) {\n            let old = SHADOWS[index2];\n            let diff = A2[0] * old[1] - old[0] * A2[1];\n            if (diff >= 0) { /* old <= A2 */\n                if (diff == 0 && (index2 % 2)) {\n                    edge2 = true;\n                }\n                break;\n            }\n        }\n        let visible = true;\n        if (index1 == index2 && (edge1 || edge2)) { /* subset of existing shadow, one of the edges match */\n            visible = false;\n        }\n        else if (edge1 && edge2 && index1 + 1 == index2 && (index2 % 2)) { /* completely equivalent with existing shadow */\n            visible = false;\n        }\n        else if (index1 > index2 && (index1 % 2)) { /* subset of existing shadow, not touching */\n            visible = false;\n        }\n        if (!visible) {\n            return 0;\n        } /* fast case: not visible */\n        let visibleLength;\n        /* compute the length of visible arc, adjust list of shadows (if blocking) */\n        let remove = index2 - index1 + 1;\n        if (remove % 2) {\n            if (index1 % 2) { /* first edge within existing shadow, second outside */\n                let P = SHADOWS[index1];\n                visibleLength = (A2[0] * P[1] - P[0] * A2[1]) / (P[1] * A2[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A2);\n                }\n            }\n            else { /* second edge within existing shadow, first outside */\n                let P = SHADOWS[index2];\n                visibleLength = (P[0] * A1[1] - A1[0] * P[1]) / (A1[1] * P[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A1);\n                }\n            }\n        }\n        else {\n            if (index1 % 2) { /* both edges within existing shadows */\n                let P1 = SHADOWS[index1];\n                let P2 = SHADOWS[index2];\n                visibleLength = (P2[0] * P1[1] - P1[0] * P2[1]) / (P1[1] * P2[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove);\n                }\n            }\n            else { /* both edges outside existing shadows */\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A1, A2);\n                }\n                return 1; /* whole arc visible! */\n            }\n        }\n        let arcLength = (A2[0] * A1[1] - A1[0] * A2[1]) / (A1[1] * A2[1]);\n        return visibleLength / arcLength;\n    }\n}\n","import FOV from \"./fov.js\";\n/** Octants used for translating recursive shadowcasting offsets */\nconst OCTANTS = [\n    [-1, 0, 0, 1],\n    [0, -1, 1, 0],\n    [0, -1, -1, 0],\n    [-1, 0, 0, -1],\n    [1, 0, 0, -1],\n    [0, 1, -1, 0],\n    [0, 1, 1, 0],\n    [1, 0, 0, 1]\n];\n/**\n * @class Recursive shadowcasting algorithm\n * Currently only supports 4/8 topologies, not hexagonal.\n * Based on Peter Harkins' implementation of Björn Bergström's algorithm described here: http://www.roguebasin.com/index.php?title=FOV_using_recursive_shadowcasting\n * @augments ROT.FOV\n */\nexport default class RecursiveShadowcasting extends FOV {\n    /**\n     * Compute visibility for a 360-degree circle\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {function} callback\n     */\n    compute(x, y, R, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        for (let i = 0; i < OCTANTS.length; i++) {\n            this._renderOctant(x, y, OCTANTS[i], R, callback);\n        }\n    }\n    /**\n     * Compute visibility for a 180-degree arc\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n     * @param {function} callback\n     */\n    compute180(x, y, R, dir, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        let previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 180 degrees\n        let nextPreviousOctant = (dir - 2 + 8) % 8; //Need to retrieve the previous two octants to render a full 180 degrees\n        let nextOctant = (dir + 1 + 8) % 8; //Need to grab to next octant to render a full 180 degrees\n        this._renderOctant(x, y, OCTANTS[nextPreviousOctant], R, callback);\n        this._renderOctant(x, y, OCTANTS[previousOctant], R, callback);\n        this._renderOctant(x, y, OCTANTS[dir], R, callback);\n        this._renderOctant(x, y, OCTANTS[nextOctant], R, callback);\n    }\n    ;\n    /**\n     * Compute visibility for a 90-degree arc\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n     * @param {function} callback\n     */\n    compute90(x, y, R, dir, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        let previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 90 degrees\n        this._renderOctant(x, y, OCTANTS[dir], R, callback);\n        this._renderOctant(x, y, OCTANTS[previousOctant], R, callback);\n    }\n    /**\n     * Render one octant (45-degree arc) of the viewshed\n     * @param {int} x\n     * @param {int} y\n     * @param {int} octant Octant to be rendered\n     * @param {int} R Maximum visibility radius\n     * @param {function} callback\n     */\n    _renderOctant(x, y, octant, R, callback) {\n        //Radius incremented by 1 to provide same coverage area as other shadowcasting radiuses\n        this._castVisibility(x, y, 1, 1.0, 0.0, R + 1, octant[0], octant[1], octant[2], octant[3], callback);\n    }\n    /**\n     * Actually calculates the visibility\n     * @param {int} startX The starting X coordinate\n     * @param {int} startY The starting Y coordinate\n     * @param {int} row The row to render\n     * @param {float} visSlopeStart The slope to start at\n     * @param {float} visSlopeEnd The slope to end at\n     * @param {int} radius The radius to reach out to\n     * @param {int} xx\n     * @param {int} xy\n     * @param {int} yx\n     * @param {int} yy\n     * @param {function} callback The callback to use when we hit a block that is visible\n     */\n    _castVisibility(startX, startY, row, visSlopeStart, visSlopeEnd, radius, xx, xy, yx, yy, callback) {\n        if (visSlopeStart < visSlopeEnd) {\n            return;\n        }\n        for (let i = row; i <= radius; i++) {\n            let dx = -i - 1;\n            let dy = -i;\n            let blocked = false;\n            let newStart = 0;\n            //'Row' could be column, names here assume octant 0 and would be flipped for half the octants\n            while (dx <= 0) {\n                dx += 1;\n                //Translate from relative coordinates to map coordinates\n                let mapX = startX + dx * xx + dy * xy;\n                let mapY = startY + dx * yx + dy * yy;\n                //Range of the row\n                let slopeStart = (dx - 0.5) / (dy + 0.5);\n                let slopeEnd = (dx + 0.5) / (dy - 0.5);\n                //Ignore if not yet at left edge of Octant\n                if (slopeEnd > visSlopeStart) {\n                    continue;\n                }\n                //Done if past right edge\n                if (slopeStart < visSlopeEnd) {\n                    break;\n                }\n                //If it's in range, it's visible\n                if ((dx * dx + dy * dy) < (radius * radius)) {\n                    callback(mapX, mapY, i, 1);\n                }\n                if (!blocked) {\n                    //If tile is a blocking tile, cast around it\n                    if (!this._lightPasses(mapX, mapY) && i < radius) {\n                        blocked = true;\n                        this._castVisibility(startX, startY, i + 1, visSlopeStart, slopeStart, radius, xx, xy, yx, yy, callback);\n                        newStart = slopeEnd;\n                    }\n                }\n                else {\n                    //Keep narrowing if scanning across a block\n                    if (!this._lightPasses(mapX, mapY)) {\n                        newStart = slopeEnd;\n                        continue;\n                    }\n                    //Block has ended\n                    blocked = false;\n                    visSlopeStart = newStart;\n                }\n            }\n            if (blocked) {\n                break;\n            }\n        }\n    }\n}\n","import Arena from \"./arena.js\";\nimport Uniform from \"./uniform.js\";\nimport Cellular from \"./cellular.js\";\nimport Digger from \"./digger.js\";\nimport EllerMaze from \"./ellermaze.js\";\nimport DividedMaze from \"./dividedmaze.js\";\nimport IceyMaze from \"./iceymaze.js\";\nimport Rogue from \"./rogue.js\";\nexport default { Arena, Uniform, Cellular, Digger, EllerMaze, DividedMaze, IceyMaze, Rogue };\n","import Map from \"./map.js\";\n/**\n * @class Simple empty rectangular room\n * @augments ROT.Map\n */\nexport default class Arena extends Map {\n    create(callback) {\n        let w = this._width - 1;\n        let h = this._height - 1;\n        for (let i = 0; i <= w; i++) {\n            for (let j = 0; j <= h; j++) {\n                let empty = (i && j && i < w && j < h);\n                callback(i, j, empty ? 0 : 1);\n            }\n        }\n        return this;\n    }\n}\n","import { DEFAULT_WIDTH, DEFAULT_HEIGHT } from \"../constants.js\";\n;\nexport default class Map {\n    /**\n     * @class Base map generator\n     * @param {int} [width=ROT.DEFAULT_WIDTH]\n     * @param {int} [height=ROT.DEFAULT_HEIGHT]\n     */\n    constructor(width = DEFAULT_WIDTH, height = DEFAULT_HEIGHT) {\n        this._width = width;\n        this._height = height;\n    }\n    ;\n    _fillMap(value) {\n        let map = [];\n        for (let i = 0; i < this._width; i++) {\n            map.push([]);\n            for (let j = 0; j < this._height; j++) {\n                map[i].push(value);\n            }\n        }\n        return map;\n    }\n}\n","import Dungeon from \"./dungeon.js\";\nimport { Room, Corridor } from \"./features.js\";\nimport RNG from \"../rng.js\";\n;\n/**\n * @class Dungeon generator which tries to fill the space evenly. Generates independent rooms and tries to connect them.\n * @augments ROT.Map.Dungeon\n */\nexport default class Uniform extends Dungeon {\n    constructor(width, height, options) {\n        super(width, height);\n        this._options = {\n            roomWidth: [3, 9],\n            roomHeight: [3, 5],\n            roomDugPercentage: 0.1,\n            timeLimit: 1000 /* we stop after this much time has passed (msec) */\n        };\n        Object.assign(this._options, options);\n        this._map = [];\n        this._dug = 0;\n        this._roomAttempts = 20; /* new room is created N-times until is considered as impossible to generate */\n        this._corridorAttempts = 20; /* corridors are tried N-times until the level is considered as impossible to connect */\n        this._connected = []; /* list of already connected rooms */\n        this._unconnected = []; /* list of remaining unconnected rooms */\n        this._digCallback = this._digCallback.bind(this);\n        this._canBeDugCallback = this._canBeDugCallback.bind(this);\n        this._isWallCallback = this._isWallCallback.bind(this);\n    }\n    /**\n     * Create a map. If the time limit has been hit, returns null.\n     * @see ROT.Map#create\n     */\n    create(callback) {\n        let t1 = Date.now();\n        while (1) {\n            let t2 = Date.now();\n            if (t2 - t1 > this._options.timeLimit) {\n                return null;\n            } /* time limit! */\n            this._map = this._fillMap(1);\n            this._dug = 0;\n            this._rooms = [];\n            this._unconnected = [];\n            this._generateRooms();\n            if (this._rooms.length < 2) {\n                continue;\n            }\n            if (this._generateCorridors()) {\n                break;\n            }\n        }\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this._map[i][j]);\n                }\n            }\n        }\n        return this;\n    }\n    /**\n     * Generates a suitable amount of rooms\n     */\n    _generateRooms() {\n        let w = this._width - 2;\n        let h = this._height - 2;\n        let room;\n        do {\n            room = this._generateRoom();\n            if (this._dug / (w * h) > this._options.roomDugPercentage) {\n                break;\n            } /* achieved requested amount of free space */\n        } while (room);\n        /* either enough rooms, or not able to generate more of them :) */\n    }\n    /**\n     * Try to generate one room\n     */\n    _generateRoom() {\n        let count = 0;\n        while (count < this._roomAttempts) {\n            count++;\n            let room = Room.createRandom(this._width, this._height, this._options);\n            if (!room.isValid(this._isWallCallback, this._canBeDugCallback)) {\n                continue;\n            }\n            room.create(this._digCallback);\n            this._rooms.push(room);\n            return room;\n        }\n        /* no room was generated in a given number of attempts */\n        return null;\n    }\n    /**\n     * Generates connectors beween rooms\n     * @returns {bool} success Was this attempt successfull?\n     */\n    _generateCorridors() {\n        let cnt = 0;\n        while (cnt < this._corridorAttempts) {\n            cnt++;\n            this._corridors = [];\n            /* dig rooms into a clear map */\n            this._map = this._fillMap(1);\n            for (let i = 0; i < this._rooms.length; i++) {\n                let room = this._rooms[i];\n                room.clearDoors();\n                room.create(this._digCallback);\n            }\n            this._unconnected = RNG.shuffle(this._rooms.slice());\n            this._connected = [];\n            if (this._unconnected.length) {\n                this._connected.push(this._unconnected.pop());\n            } /* first one is always connected */\n            while (1) {\n                /* 1. pick random connected room */\n                let connected = RNG.getItem(this._connected);\n                if (!connected) {\n                    break;\n                }\n                /* 2. find closest unconnected */\n                let room1 = this._closestRoom(this._unconnected, connected);\n                if (!room1) {\n                    break;\n                }\n                /* 3. connect it to closest connected */\n                let room2 = this._closestRoom(this._connected, room1);\n                if (!room2) {\n                    break;\n                }\n                let ok = this._connectRooms(room1, room2);\n                if (!ok) {\n                    break;\n                } /* stop connecting, re-shuffle */\n                if (!this._unconnected.length) {\n                    return true;\n                } /* done; no rooms remain */\n            }\n        }\n        return false;\n    }\n    ;\n    /**\n     * For a given room, find the closest one from the list\n     */\n    _closestRoom(rooms, room) {\n        let dist = Infinity;\n        let center = room.getCenter();\n        let result = null;\n        for (let i = 0; i < rooms.length; i++) {\n            let r = rooms[i];\n            let c = r.getCenter();\n            let dx = c[0] - center[0];\n            let dy = c[1] - center[1];\n            let d = dx * dx + dy * dy;\n            if (d < dist) {\n                dist = d;\n                result = r;\n            }\n        }\n        return result;\n    }\n    _connectRooms(room1, room2) {\n        /*\n            room1.debug();\n            room2.debug();\n        */\n        let center1 = room1.getCenter();\n        let center2 = room2.getCenter();\n        let diffX = center2[0] - center1[0];\n        let diffY = center2[1] - center1[1];\n        let start;\n        let end;\n        let dirIndex1, dirIndex2, min, max, index;\n        if (Math.abs(diffX) < Math.abs(diffY)) { /* first try connecting north-south walls */\n            dirIndex1 = (diffY > 0 ? 2 : 0);\n            dirIndex2 = (dirIndex1 + 2) % 4;\n            min = room2.getLeft();\n            max = room2.getRight();\n            index = 0;\n        }\n        else { /* first try connecting east-west walls */\n            dirIndex1 = (diffX > 0 ? 1 : 3);\n            dirIndex2 = (dirIndex1 + 2) % 4;\n            min = room2.getTop();\n            max = room2.getBottom();\n            index = 1;\n        }\n        start = this._placeInWall(room1, dirIndex1); /* corridor will start here */\n        if (!start) {\n            return false;\n        }\n        if (start[index] >= min && start[index] <= max) { /* possible to connect with straight line (I-like) */\n            end = start.slice();\n            let value = 0;\n            switch (dirIndex2) {\n                case 0:\n                    value = room2.getTop() - 1;\n                    break;\n                case 1:\n                    value = room2.getRight() + 1;\n                    break;\n                case 2:\n                    value = room2.getBottom() + 1;\n                    break;\n                case 3:\n                    value = room2.getLeft() - 1;\n                    break;\n            }\n            end[(index + 1) % 2] = value;\n            this._digLine([start, end]);\n        }\n        else if (start[index] < min - 1 || start[index] > max + 1) { /* need to switch target wall (L-like) */\n            let diff = start[index] - center2[index];\n            let rotation = 0;\n            switch (dirIndex2) {\n                case 0:\n                case 1:\n                    rotation = (diff < 0 ? 3 : 1);\n                    break;\n                case 2:\n                case 3:\n                    rotation = (diff < 0 ? 1 : 3);\n                    break;\n            }\n            dirIndex2 = (dirIndex2 + rotation) % 4;\n            end = this._placeInWall(room2, dirIndex2);\n            if (!end) {\n                return false;\n            }\n            let mid = [0, 0];\n            mid[index] = start[index];\n            let index2 = (index + 1) % 2;\n            mid[index2] = end[index2];\n            this._digLine([start, mid, end]);\n        }\n        else { /* use current wall pair, but adjust the line in the middle (S-like) */\n            let index2 = (index + 1) % 2;\n            end = this._placeInWall(room2, dirIndex2);\n            if (!end) {\n                return false;\n            }\n            let mid = Math.round((end[index2] + start[index2]) / 2);\n            let mid1 = [0, 0];\n            let mid2 = [0, 0];\n            mid1[index] = start[index];\n            mid1[index2] = mid;\n            mid2[index] = end[index];\n            mid2[index2] = mid;\n            this._digLine([start, mid1, mid2, end]);\n        }\n        room1.addDoor(start[0], start[1]);\n        room2.addDoor(end[0], end[1]);\n        index = this._unconnected.indexOf(room1);\n        if (index != -1) {\n            this._unconnected.splice(index, 1);\n            this._connected.push(room1);\n        }\n        index = this._unconnected.indexOf(room2);\n        if (index != -1) {\n            this._unconnected.splice(index, 1);\n            this._connected.push(room2);\n        }\n        return true;\n    }\n    _placeInWall(room, dirIndex) {\n        let start = [0, 0];\n        let dir = [0, 0];\n        let length = 0;\n        switch (dirIndex) {\n            case 0:\n                dir = [1, 0];\n                start = [room.getLeft(), room.getTop() - 1];\n                length = room.getRight() - room.getLeft() + 1;\n                break;\n            case 1:\n                dir = [0, 1];\n                start = [room.getRight() + 1, room.getTop()];\n                length = room.getBottom() - room.getTop() + 1;\n                break;\n            case 2:\n                dir = [1, 0];\n                start = [room.getLeft(), room.getBottom() + 1];\n                length = room.getRight() - room.getLeft() + 1;\n                break;\n            case 3:\n                dir = [0, 1];\n                start = [room.getLeft() - 1, room.getTop()];\n                length = room.getBottom() - room.getTop() + 1;\n                break;\n        }\n        let avail = [];\n        let lastBadIndex = -2;\n        for (let i = 0; i < length; i++) {\n            let x = start[0] + i * dir[0];\n            let y = start[1] + i * dir[1];\n            avail.push(null);\n            let isWall = (this._map[x][y] == 1);\n            if (isWall) {\n                if (lastBadIndex != i - 1) {\n                    avail[i] = [x, y];\n                }\n            }\n            else {\n                lastBadIndex = i;\n                if (i) {\n                    avail[i - 1] = null;\n                }\n            }\n        }\n        for (let i = avail.length - 1; i >= 0; i--) {\n            if (!avail[i]) {\n                avail.splice(i, 1);\n            }\n        }\n        return (avail.length ? RNG.getItem(avail) : null);\n    }\n    /**\n     * Dig a polyline.\n     */\n    _digLine(points) {\n        for (let i = 1; i < points.length; i++) {\n            let start = points[i - 1];\n            let end = points[i];\n            let corridor = new Corridor(start[0], start[1], end[0], end[1]);\n            corridor.create(this._digCallback);\n            this._corridors.push(corridor);\n        }\n    }\n    _digCallback(x, y, value) {\n        this._map[x][y] = value;\n        if (value == 0) {\n            this._dug++;\n        }\n    }\n    _isWallCallback(x, y) {\n        if (x < 0 || y < 0 || x >= this._width || y >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _canBeDugCallback(x, y) {\n        if (x < 1 || y < 1 || x + 1 >= this._width || y + 1 >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n}\n","import Map from \"./map.js\";\n/**\n * @class Dungeon map: has rooms and corridors\n * @augments ROT.Map\n */\nexport default class Dungeon extends Map {\n    constructor(width, height) {\n        super(width, height);\n        this._rooms = [];\n        this._corridors = [];\n    }\n    /**\n     * Get all generated rooms\n     * @returns {ROT.Map.Feature.Room[]}\n     */\n    getRooms() { return this._rooms; }\n    /**\n     * Get all generated corridors\n     * @returns {ROT.Map.Feature.Corridor[]}\n     */\n    getCorridors() { return this._corridors; }\n}\n","import RNG from \"../rng.js\";\n;\n/**\n * @class Dungeon feature; has own .create() method\n */\nclass Feature {\n}\n/**\n * @class Room\n * @augments ROT.Map.Feature\n * @param {int} x1\n * @param {int} y1\n * @param {int} x2\n * @param {int} y2\n * @param {int} [doorX]\n * @param {int} [doorY]\n */\nexport class Room extends Feature {\n    constructor(x1, y1, x2, y2, doorX, doorY) {\n        super();\n        this._x1 = x1;\n        this._y1 = y1;\n        this._x2 = x2;\n        this._y2 = y2;\n        this._doors = {};\n        if (doorX !== undefined && doorY !== undefined) {\n            this.addDoor(doorX, doorY);\n        }\n    }\n    ;\n    /**\n     * Room of random size, with a given doors and direction\n     */\n    static createRandomAt(x, y, dx, dy, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        if (dx == 1) { /* to the right */\n            let y2 = y - Math.floor(RNG.getUniform() * height);\n            return new this(x + 1, y2, x + width, y2 + height - 1, x, y);\n        }\n        if (dx == -1) { /* to the left */\n            let y2 = y - Math.floor(RNG.getUniform() * height);\n            return new this(x - width, y2, x - 1, y2 + height - 1, x, y);\n        }\n        if (dy == 1) { /* to the bottom */\n            let x2 = x - Math.floor(RNG.getUniform() * width);\n            return new this(x2, y + 1, x2 + width - 1, y + height, x, y);\n        }\n        if (dy == -1) { /* to the top */\n            let x2 = x - Math.floor(RNG.getUniform() * width);\n            return new this(x2, y - height, x2 + width - 1, y - 1, x, y);\n        }\n        throw new Error(\"dx or dy must be 1 or -1\");\n    }\n    /**\n     * Room of random size, positioned around center coords\n     */\n    static createRandomCenter(cx, cy, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        let x1 = cx - Math.floor(RNG.getUniform() * width);\n        let y1 = cy - Math.floor(RNG.getUniform() * height);\n        let x2 = x1 + width - 1;\n        let y2 = y1 + height - 1;\n        return new this(x1, y1, x2, y2);\n    }\n    /**\n     * Room of random size within a given dimensions\n     */\n    static createRandom(availWidth, availHeight, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        let left = availWidth - width - 1;\n        let top = availHeight - height - 1;\n        let x1 = 1 + Math.floor(RNG.getUniform() * left);\n        let y1 = 1 + Math.floor(RNG.getUniform() * top);\n        let x2 = x1 + width - 1;\n        let y2 = y1 + height - 1;\n        return new this(x1, y1, x2, y2);\n    }\n    addDoor(x, y) {\n        this._doors[x + \",\" + y] = 1;\n        return this;\n    }\n    /**\n     * @param {function}\n     */\n    getDoors(cb) {\n        for (let key in this._doors) {\n            let parts = key.split(\",\");\n            cb(parseInt(parts[0]), parseInt(parts[1]));\n        }\n        return this;\n    }\n    clearDoors() {\n        this._doors = {};\n        return this;\n    }\n    addDoors(isWallCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x != left && x != right && y != top && y != bottom) {\n                    continue;\n                }\n                if (isWallCallback(x, y)) {\n                    continue;\n                }\n                this.addDoor(x, y);\n            }\n        }\n        return this;\n    }\n    debug() {\n        console.log(\"room\", this._x1, this._y1, this._x2, this._y2);\n    }\n    isValid(isWallCallback, canBeDugCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x == left || x == right || y == top || y == bottom) {\n                    if (!isWallCallback(x, y)) {\n                        return false;\n                    }\n                }\n                else {\n                    if (!canBeDugCallback(x, y)) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n    /**\n     * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty, 1 = wall, 2 = door. Multiple doors are allowed.\n     */\n    create(digCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        let value = 0;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x + \",\" + y in this._doors) {\n                    value = 2;\n                }\n                else if (x == left || x == right || y == top || y == bottom) {\n                    value = 1;\n                }\n                else {\n                    value = 0;\n                }\n                digCallback(x, y, value);\n            }\n        }\n    }\n    getCenter() {\n        return [Math.round((this._x1 + this._x2) / 2), Math.round((this._y1 + this._y2) / 2)];\n    }\n    getLeft() { return this._x1; }\n    getRight() { return this._x2; }\n    getTop() { return this._y1; }\n    getBottom() { return this._y2; }\n}\n/**\n * @class Corridor\n * @augments ROT.Map.Feature\n * @param {int} startX\n * @param {int} startY\n * @param {int} endX\n * @param {int} endY\n */\nexport class Corridor extends Feature {\n    constructor(startX, startY, endX, endY) {\n        super();\n        this._startX = startX;\n        this._startY = startY;\n        this._endX = endX;\n        this._endY = endY;\n        this._endsWithAWall = true;\n    }\n    static createRandomAt(x, y, dx, dy, options) {\n        let min = options.corridorLength[0];\n        let max = options.corridorLength[1];\n        let length = RNG.getUniformInt(min, max);\n        return new this(x, y, x + dx * length, y + dy * length);\n    }\n    debug() {\n        console.log(\"corridor\", this._startX, this._startY, this._endX, this._endY);\n    }\n    isValid(isWallCallback, canBeDugCallback) {\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        let length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        let nx = dy;\n        let ny = -dx;\n        let ok = true;\n        for (let i = 0; i < length; i++) {\n            let x = sx + i * dx;\n            let y = sy + i * dy;\n            if (!canBeDugCallback(x, y)) {\n                ok = false;\n            }\n            if (!isWallCallback(x + nx, y + ny)) {\n                ok = false;\n            }\n            if (!isWallCallback(x - nx, y - ny)) {\n                ok = false;\n            }\n            if (!ok) {\n                length = i;\n                this._endX = x - dx;\n                this._endY = y - dy;\n                break;\n            }\n        }\n        /**\n         * If the length degenerated, this corridor might be invalid\n         */\n        /* not supported */\n        if (length == 0) {\n            return false;\n        }\n        /* length 1 allowed only if the next space is empty */\n        if (length == 1 && isWallCallback(this._endX + dx, this._endY + dy)) {\n            return false;\n        }\n        /**\n         * We do not want the corridor to crash into a corner of a room;\n         * if any of the ending corners is empty, the N+1th cell of this corridor must be empty too.\n         *\n         * Situation:\n         * #######1\n         * .......?\n         * #######2\n         *\n         * The corridor was dug from left to right.\n         * 1, 2 - problematic corners, ? = N+1th cell (not dug)\n         */\n        let firstCornerBad = !isWallCallback(this._endX + dx + nx, this._endY + dy + ny);\n        let secondCornerBad = !isWallCallback(this._endX + dx - nx, this._endY + dy - ny);\n        this._endsWithAWall = isWallCallback(this._endX + dx, this._endY + dy);\n        if ((firstCornerBad || secondCornerBad) && this._endsWithAWall) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty.\n     */\n    create(digCallback) {\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        let length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        for (let i = 0; i < length; i++) {\n            let x = sx + i * dx;\n            let y = sy + i * dy;\n            digCallback(x, y, 0);\n        }\n        return true;\n    }\n    createPriorityWalls(priorityWallCallback) {\n        if (!this._endsWithAWall) {\n            return;\n        }\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        let nx = dy;\n        let ny = -dx;\n        priorityWallCallback(this._endX + dx, this._endY + dy);\n        priorityWallCallback(this._endX + nx, this._endY + ny);\n        priorityWallCallback(this._endX - nx, this._endY - ny);\n    }\n}\n","import Map from \"./map.js\";\nimport { DIRS } from \"../constants.js\";\nimport RNG from \"../rng.js\";\n;\n/**\n * @class Cellular automaton map generator\n * @augments ROT.Map\n * @param {int} [width=ROT.DEFAULT_WIDTH]\n * @param {int} [height=ROT.DEFAULT_HEIGHT]\n * @param {object} [options] Options\n * @param {int[]} [options.born] List of neighbor counts for a new cell to be born in empty space\n * @param {int[]} [options.survive] List of neighbor counts for an existing  cell to survive\n * @param {int} [options.topology] Topology 4 or 6 or 8\n */\nexport default class Cellular extends Map {\n    constructor(width, height, options = {}) {\n        super(width, height);\n        this._options = {\n            born: [5, 6, 7, 8],\n            survive: [4, 5, 6, 7, 8],\n            topology: 8\n        };\n        this.setOptions(options);\n        this._dirs = DIRS[this._options.topology];\n        this._map = this._fillMap(0);\n    }\n    /**\n     * Fill the map with random values\n     * @param {float} probability Probability for a cell to become alive; 0 = all empty, 1 = all full\n     */\n    randomize(probability) {\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                this._map[i][j] = (RNG.getUniform() < probability ? 1 : 0);\n            }\n        }\n        return this;\n    }\n    /**\n     * Change options.\n     * @see ROT.Map.Cellular\n     */\n    setOptions(options) { Object.assign(this._options, options); }\n    set(x, y, value) { this._map[x][y] = value; }\n    create(callback) {\n        let newMap = this._fillMap(0);\n        let born = this._options.born;\n        let survive = this._options.survive;\n        for (let j = 0; j < this._height; j++) {\n            let widthStep = 1;\n            let widthStart = 0;\n            if (this._options.topology == 6) {\n                widthStep = 2;\n                widthStart = j % 2;\n            }\n            for (let i = widthStart; i < this._width; i += widthStep) {\n                let cur = this._map[i][j];\n                let ncount = this._getNeighbors(i, j);\n                if (cur && survive.indexOf(ncount) != -1) { /* survive */\n                    newMap[i][j] = 1;\n                }\n                else if (!cur && born.indexOf(ncount) != -1) { /* born */\n                    newMap[i][j] = 1;\n                }\n            }\n        }\n        this._map = newMap;\n        callback && this._serviceCallback(callback);\n    }\n    _serviceCallback(callback) {\n        for (let j = 0; j < this._height; j++) {\n            let widthStep = 1;\n            let widthStart = 0;\n            if (this._options.topology == 6) {\n                widthStep = 2;\n                widthStart = j % 2;\n            }\n            for (let i = widthStart; i < this._width; i += widthStep) {\n                callback(i, j, this._map[i][j]);\n            }\n        }\n    }\n    /**\n     * Get neighbor count at [i,j] in this._map\n     */\n    _getNeighbors(cx, cy) {\n        let result = 0;\n        for (let i = 0; i < this._dirs.length; i++) {\n            let dir = this._dirs[i];\n            let x = cx + dir[0];\n            let y = cy + dir[1];\n            if (x < 0 || x >= this._width || y < 0 || y >= this._height) {\n                continue;\n            }\n            result += (this._map[x][y] == 1 ? 1 : 0);\n        }\n        return result;\n    }\n    /**\n     * Make sure every non-wall space is accessible.\n     * @param {function} callback to call to display map when do\n     * @param {int} value to consider empty space - defaults to 0\n     * @param {function} callback to call when a new connection is made\n     */\n    connect(callback, value, connectionCallback) {\n        if (!value)\n            value = 0;\n        let allFreeSpace = [];\n        let notConnected = {};\n        // find all free space\n        let widthStep = 1;\n        let widthStarts = [0, 0];\n        if (this._options.topology == 6) {\n            widthStep = 2;\n            widthStarts = [0, 1];\n        }\n        for (let y = 0; y < this._height; y++) {\n            for (let x = widthStarts[y % 2]; x < this._width; x += widthStep) {\n                if (this._freeSpace(x, y, value)) {\n                    let p = [x, y];\n                    notConnected[this._pointKey(p)] = p;\n                    allFreeSpace.push([x, y]);\n                }\n            }\n        }\n        let start = allFreeSpace[RNG.getUniformInt(0, allFreeSpace.length - 1)];\n        let key = this._pointKey(start);\n        let connected = {};\n        connected[key] = start;\n        delete notConnected[key];\n        // find what's connected to the starting point\n        this._findConnected(connected, notConnected, [start], false, value);\n        while (Object.keys(notConnected).length > 0) {\n            // find two points from notConnected to connected\n            let p = this._getFromTo(connected, notConnected);\n            let from = p[0]; // notConnected\n            let to = p[1]; // connected\n            // find everything connected to the starting point\n            let local = {};\n            local[this._pointKey(from)] = from;\n            this._findConnected(local, notConnected, [from], true, value);\n            // connect to a connected cell\n            let tunnelFn = (this._options.topology == 6 ? this._tunnelToConnected6 : this._tunnelToConnected);\n            tunnelFn.call(this, to, from, connected, notConnected, value, connectionCallback);\n            // now all of local is connected\n            for (let k in local) {\n                let pp = local[k];\n                this._map[pp[0]][pp[1]] = value;\n                connected[k] = pp;\n                delete notConnected[k];\n            }\n        }\n        callback && this._serviceCallback(callback);\n    }\n    /**\n     * Find random points to connect. Search for the closest point in the larger space.\n     * This is to minimize the length of the passage while maintaining good performance.\n     */\n    _getFromTo(connected, notConnected) {\n        let from = [0, 0], to = [0, 0], d;\n        let connectedKeys = Object.keys(connected);\n        let notConnectedKeys = Object.keys(notConnected);\n        for (let i = 0; i < 5; i++) {\n            if (connectedKeys.length < notConnectedKeys.length) {\n                let keys = connectedKeys;\n                to = connected[keys[RNG.getUniformInt(0, keys.length - 1)]];\n                from = this._getClosest(to, notConnected);\n            }\n            else {\n                let keys = notConnectedKeys;\n                from = notConnected[keys[RNG.getUniformInt(0, keys.length - 1)]];\n                to = this._getClosest(from, connected);\n            }\n            d = (from[0] - to[0]) * (from[0] - to[0]) + (from[1] - to[1]) * (from[1] - to[1]);\n            if (d < 64) {\n                break;\n            }\n        }\n        // console.log(\">>> connected=\" + to + \" notConnected=\" + from + \" dist=\" + d);\n        return [from, to];\n    }\n    _getClosest(point, space) {\n        let minPoint = null;\n        let minDist = null;\n        for (let k in space) {\n            let p = space[k];\n            let d = (p[0] - point[0]) * (p[0] - point[0]) + (p[1] - point[1]) * (p[1] - point[1]);\n            if (minDist == null || d < minDist) {\n                minDist = d;\n                minPoint = p;\n            }\n        }\n        return minPoint;\n    }\n    _findConnected(connected, notConnected, stack, keepNotConnected, value) {\n        while (stack.length > 0) {\n            let p = stack.splice(0, 1)[0];\n            let tests;\n            if (this._options.topology == 6) {\n                tests = [\n                    [p[0] + 2, p[1]],\n                    [p[0] + 1, p[1] - 1],\n                    [p[0] - 1, p[1] - 1],\n                    [p[0] - 2, p[1]],\n                    [p[0] - 1, p[1] + 1],\n                    [p[0] + 1, p[1] + 1],\n                ];\n            }\n            else {\n                tests = [\n                    [p[0] + 1, p[1]],\n                    [p[0] - 1, p[1]],\n                    [p[0], p[1] + 1],\n                    [p[0], p[1] - 1]\n                ];\n            }\n            for (let i = 0; i < tests.length; i++) {\n                let key = this._pointKey(tests[i]);\n                if (connected[key] == null && this._freeSpace(tests[i][0], tests[i][1], value)) {\n                    connected[key] = tests[i];\n                    if (!keepNotConnected) {\n                        delete notConnected[key];\n                    }\n                    stack.push(tests[i]);\n                }\n            }\n        }\n    }\n    _tunnelToConnected(to, from, connected, notConnected, value, connectionCallback) {\n        let a, b;\n        if (from[0] < to[0]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        for (let xx = a[0]; xx <= b[0]; xx++) {\n            this._map[xx][a[1]] = value;\n            let p = [xx, a[1]];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback && a[0] < b[0]) {\n            connectionCallback(a, [b[0], a[1]]);\n        }\n        // x is now fixed\n        let x = b[0];\n        if (from[1] < to[1]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        for (let yy = a[1]; yy < b[1]; yy++) {\n            this._map[x][yy] = value;\n            let p = [x, yy];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback && a[1] < b[1]) {\n            connectionCallback([b[0], a[1]], [b[0], b[1]]);\n        }\n    }\n    _tunnelToConnected6(to, from, connected, notConnected, value, connectionCallback) {\n        let a, b;\n        if (from[0] < to[0]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        // tunnel diagonally until horizontally level\n        let xx = a[0];\n        let yy = a[1];\n        while (!(xx == b[0] && yy == b[1])) {\n            let stepWidth = 2;\n            if (yy < b[1]) {\n                yy++;\n                stepWidth = 1;\n            }\n            else if (yy > b[1]) {\n                yy--;\n                stepWidth = 1;\n            }\n            if (xx < b[0]) {\n                xx += stepWidth;\n            }\n            else if (xx > b[0]) {\n                xx -= stepWidth;\n            }\n            else if (b[1] % 2) {\n                // Won't step outside map if destination on is map's right edge\n                xx -= stepWidth;\n            }\n            else {\n                // ditto for left edge\n                xx += stepWidth;\n            }\n            this._map[xx][yy] = value;\n            let p = [xx, yy];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback) {\n            connectionCallback(from, to);\n        }\n    }\n    _freeSpace(x, y, value) {\n        return x >= 0 && x < this._width && y >= 0 && y < this._height && this._map[x][y] == value;\n    }\n    _pointKey(p) { return p[0] + \".\" + p[1]; }\n}\n","import Dungeon from \"./dungeon.js\";\nimport { Room, Corridor } from \"./features.js\";\nimport RNG from \"../rng.js\";\nimport { DIRS } from \"../constants.js\";\nconst FEATURES = {\n    \"room\": Room,\n    \"corridor\": Corridor\n};\n/**\n * Random dungeon generator using human-like digging patterns.\n * Heavily based on Mike Anderson's ideas from the \"Tyrant\" algo, mentioned at\n * http://www.roguebasin.roguelikedevelopment.org/index.php?title=Dungeon-Building_Algorithm.\n */\nexport default class Digger extends Dungeon {\n    constructor(width, height, options = {}) {\n        super(width, height);\n        this._options = Object.assign({\n            roomWidth: [3, 9],\n            roomHeight: [3, 5],\n            corridorLength: [3, 10],\n            dugPercentage: 0.2,\n            timeLimit: 1000 /* we stop after this much time has passed (msec) */\n        }, options);\n        this._features = {\n            \"room\": 4,\n            \"corridor\": 4\n        };\n        this._map = [];\n        this._featureAttempts = 20; /* how many times do we try to create a feature on a suitable wall */\n        this._walls = {}; /* these are available for digging */\n        this._dug = 0;\n        this._digCallback = this._digCallback.bind(this);\n        this._canBeDugCallback = this._canBeDugCallback.bind(this);\n        this._isWallCallback = this._isWallCallback.bind(this);\n        this._priorityWallCallback = this._priorityWallCallback.bind(this);\n    }\n    create(callback) {\n        this._rooms = [];\n        this._corridors = [];\n        this._map = this._fillMap(1);\n        this._walls = {};\n        this._dug = 0;\n        let area = (this._width - 2) * (this._height - 2);\n        this._firstRoom();\n        let t1 = Date.now();\n        let priorityWalls;\n        do {\n            priorityWalls = 0;\n            let t2 = Date.now();\n            if (t2 - t1 > this._options.timeLimit) {\n                break;\n            }\n            /* find a good wall */\n            let wall = this._findWall();\n            if (!wall) {\n                break;\n            } /* no more walls */\n            let parts = wall.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            let dir = this._getDiggingDirection(x, y);\n            if (!dir) {\n                continue;\n            } /* this wall is not suitable */\n            //\t\tconsole.log(\"wall\", x, y);\n            /* try adding a feature */\n            let featureAttempts = 0;\n            do {\n                featureAttempts++;\n                if (this._tryFeature(x, y, dir[0], dir[1])) { /* feature added */\n                    //if (this._rooms.length + this._corridors.length == 2) { this._rooms[0].addDoor(x, y); } /* first room oficially has doors */\n                    this._removeSurroundingWalls(x, y);\n                    this._removeSurroundingWalls(x - dir[0], y - dir[1]);\n                    break;\n                }\n            } while (featureAttempts < this._featureAttempts);\n            for (let id in this._walls) {\n                if (this._walls[id] > 1) {\n                    priorityWalls++;\n                }\n            }\n        } while (this._dug / area < this._options.dugPercentage || priorityWalls); /* fixme number of priority walls */\n        this._addDoors();\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this._map[i][j]);\n                }\n            }\n        }\n        this._walls = {};\n        this._map = [];\n        return this;\n    }\n    _digCallback(x, y, value) {\n        if (value == 0 || value == 2) { /* empty */\n            this._map[x][y] = 0;\n            this._dug++;\n        }\n        else { /* wall */\n            this._walls[x + \",\" + y] = 1;\n        }\n    }\n    _isWallCallback(x, y) {\n        if (x < 0 || y < 0 || x >= this._width || y >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _canBeDugCallback(x, y) {\n        if (x < 1 || y < 1 || x + 1 >= this._width || y + 1 >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _priorityWallCallback(x, y) { this._walls[x + \",\" + y] = 2; }\n    ;\n    _firstRoom() {\n        let cx = Math.floor(this._width / 2);\n        let cy = Math.floor(this._height / 2);\n        let room = Room.createRandomCenter(cx, cy, this._options);\n        this._rooms.push(room);\n        room.create(this._digCallback);\n    }\n    /**\n     * Get a suitable wall\n     */\n    _findWall() {\n        let prio1 = [];\n        let prio2 = [];\n        for (let id in this._walls) {\n            let prio = this._walls[id];\n            if (prio == 2) {\n                prio2.push(id);\n            }\n            else {\n                prio1.push(id);\n            }\n        }\n        let arr = (prio2.length ? prio2 : prio1);\n        if (!arr.length) {\n            return null;\n        } /* no walls :/ */\n        let id = RNG.getItem(arr.sort()); // sort to make the order deterministic\n        delete this._walls[id];\n        return id;\n    }\n    /**\n     * Tries adding a feature\n     * @returns {bool} was this a successful try?\n     */\n    _tryFeature(x, y, dx, dy) {\n        let featureName = RNG.getWeightedValue(this._features);\n        let ctor = FEATURES[featureName];\n        let feature = ctor.createRandomAt(x, y, dx, dy, this._options);\n        if (!feature.isValid(this._isWallCallback, this._canBeDugCallback)) {\n            //\t\tconsole.log(\"not valid\");\n            //\t\tfeature.debug();\n            return false;\n        }\n        feature.create(this._digCallback);\n        //\tfeature.debug();\n        if (feature instanceof Room) {\n            this._rooms.push(feature);\n        }\n        if (feature instanceof Corridor) {\n            feature.createPriorityWalls(this._priorityWallCallback);\n            this._corridors.push(feature);\n        }\n        return true;\n    }\n    _removeSurroundingWalls(cx, cy) {\n        let deltas = DIRS[4];\n        for (let i = 0; i < deltas.length; i++) {\n            let delta = deltas[i];\n            let x = cx + delta[0];\n            let y = cy + delta[1];\n            delete this._walls[x + \",\" + y];\n            x = cx + 2 * delta[0];\n            y = cy + 2 * delta[1];\n            delete this._walls[x + \",\" + y];\n        }\n    }\n    /**\n     * Returns vector in \"digging\" direction, or false, if this does not exist (or is not unique)\n     */\n    _getDiggingDirection(cx, cy) {\n        if (cx <= 0 || cy <= 0 || cx >= this._width - 1 || cy >= this._height - 1) {\n            return null;\n        }\n        let result = null;\n        let deltas = DIRS[4];\n        for (let i = 0; i < deltas.length; i++) {\n            let delta = deltas[i];\n            let x = cx + delta[0];\n            let y = cy + delta[1];\n            if (!this._map[x][y]) { /* there already is another empty neighbor! */\n                if (result) {\n                    return null;\n                }\n                result = delta;\n            }\n        }\n        /* no empty neighbor */\n        if (!result) {\n            return null;\n        }\n        return [-result[0], -result[1]];\n    }\n    /**\n     * Find empty spaces surrounding rooms, and apply doors.\n     */\n    _addDoors() {\n        let data = this._map;\n        function isWallCallback(x, y) {\n            return (data[x][y] == 1);\n        }\n        ;\n        for (let i = 0; i < this._rooms.length; i++) {\n            let room = this._rooms[i];\n            room.clearDoors();\n            room.addDoors(isWallCallback);\n        }\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * Join lists with \"i\" and \"i+1\"\n */\nfunction addToList(i, L, R) {\n    R[L[i + 1]] = R[i];\n    L[R[i]] = L[i + 1];\n    R[i] = i + 1;\n    L[i + 1] = i;\n}\n/**\n * Remove \"i\" from its list\n */\nfunction removeFromList(i, L, R) {\n    R[L[i]] = R[i];\n    L[R[i]] = L[i];\n    R[i] = i;\n    L[i] = i;\n}\n/**\n * Maze generator - Eller's algorithm\n * See http://homepages.cwi.nl/~tromp/maze.html for explanation\n */\nexport default class EllerMaze extends Map {\n    create(callback) {\n        let map = this._fillMap(1);\n        let w = Math.ceil((this._width - 2) / 2);\n        let rand = 9 / 24;\n        let L = [];\n        let R = [];\n        for (let i = 0; i < w; i++) {\n            L.push(i);\n            R.push(i);\n        }\n        L.push(w - 1); /* fake stop-block at the right side */\n        let j;\n        for (j = 1; j + 3 < this._height; j += 2) {\n            /* one row */\n            for (let i = 0; i < w; i++) {\n                /* cell coords (will be always empty) */\n                let x = 2 * i + 1;\n                let y = j;\n                map[x][y] = 0;\n                /* right connection */\n                if (i != L[i + 1] && RNG.getUniform() > rand) {\n                    addToList(i, L, R);\n                    map[x + 1][y] = 0;\n                }\n                /* bottom connection */\n                if (i != L[i] && RNG.getUniform() > rand) {\n                    /* remove connection */\n                    removeFromList(i, L, R);\n                }\n                else {\n                    /* create connection */\n                    map[x][y + 1] = 0;\n                }\n            }\n        }\n        /* last row */\n        for (let i = 0; i < w; i++) {\n            /* cell coords (will be always empty) */\n            let x = 2 * i + 1;\n            let y = j;\n            map[x][y] = 0;\n            /* right connection */\n            if (i != L[i + 1] && (i == L[i] || RNG.getUniform() > rand)) {\n                /* dig right also if the cell is separated, so it gets connected to the rest of maze */\n                addToList(i, L, R);\n                map[x + 1][y] = 0;\n            }\n            removeFromList(i, L, R);\n        }\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                callback(i, j, map[i][j]);\n            }\n        }\n        return this;\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * @class Recursively divided maze, http://en.wikipedia.org/wiki/Maze_generation_algorithm#Recursive_division_method\n * @augments ROT.Map\n */\nexport default class DividedMaze extends Map {\n    constructor() {\n        super(...arguments);\n        this._stack = [];\n        this._map = [];\n    }\n    create(callback) {\n        let w = this._width;\n        let h = this._height;\n        this._map = [];\n        for (let i = 0; i < w; i++) {\n            this._map.push([]);\n            for (let j = 0; j < h; j++) {\n                let border = (i == 0 || j == 0 || i + 1 == w || j + 1 == h);\n                this._map[i].push(border ? 1 : 0);\n            }\n        }\n        this._stack = [\n            [1, 1, w - 2, h - 2]\n        ];\n        this._process();\n        for (let i = 0; i < w; i++) {\n            for (let j = 0; j < h; j++) {\n                callback(i, j, this._map[i][j]);\n            }\n        }\n        this._map = [];\n        return this;\n    }\n    _process() {\n        while (this._stack.length) {\n            let room = this._stack.shift(); /* [left, top, right, bottom] */\n            this._partitionRoom(room);\n        }\n    }\n    _partitionRoom(room) {\n        let availX = [];\n        let availY = [];\n        for (let i = room[0] + 1; i < room[2]; i++) {\n            let top = this._map[i][room[1] - 1];\n            let bottom = this._map[i][room[3] + 1];\n            if (top && bottom && !(i % 2)) {\n                availX.push(i);\n            }\n        }\n        for (let j = room[1] + 1; j < room[3]; j++) {\n            let left = this._map[room[0] - 1][j];\n            let right = this._map[room[2] + 1][j];\n            if (left && right && !(j % 2)) {\n                availY.push(j);\n            }\n        }\n        if (!availX.length || !availY.length) {\n            return;\n        }\n        let x = RNG.getItem(availX);\n        let y = RNG.getItem(availY);\n        this._map[x][y] = 1;\n        let walls = [];\n        let w = [];\n        walls.push(w); /* left part */\n        for (let i = room[0]; i < x; i++) {\n            this._map[i][y] = 1;\n            if (i % 2)\n                w.push([i, y]);\n        }\n        w = [];\n        walls.push(w); /* right part */\n        for (let i = x + 1; i <= room[2]; i++) {\n            this._map[i][y] = 1;\n            if (i % 2)\n                w.push([i, y]);\n        }\n        w = [];\n        walls.push(w); /* top part */\n        for (let j = room[1]; j < y; j++) {\n            this._map[x][j] = 1;\n            if (j % 2)\n                w.push([x, j]);\n        }\n        w = [];\n        walls.push(w); /* bottom part */\n        for (let j = y + 1; j <= room[3]; j++) {\n            this._map[x][j] = 1;\n            if (j % 2)\n                w.push([x, j]);\n        }\n        let solid = RNG.getItem(walls);\n        for (let i = 0; i < walls.length; i++) {\n            let w = walls[i];\n            if (w == solid) {\n                continue;\n            }\n            let hole = RNG.getItem(w);\n            this._map[hole[0]][hole[1]] = 0;\n        }\n        this._stack.push([room[0], room[1], x - 1, y - 1]); /* left top */\n        this._stack.push([x + 1, room[1], room[2], y - 1]); /* right top */\n        this._stack.push([room[0], y + 1, x - 1, room[3]]); /* left bottom */\n        this._stack.push([x + 1, y + 1, room[2], room[3]]); /* right bottom */\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * Icey's Maze generator\n * See http://www.roguebasin.roguelikedevelopment.org/index.php?title=Simple_maze for explanation\n */\nexport default class IceyMaze extends Map {\n    constructor(width, height, regularity = 0) {\n        super(width, height);\n        this._regularity = regularity;\n        this._map = [];\n    }\n    create(callback) {\n        let width = this._width;\n        let height = this._height;\n        let map = this._fillMap(1);\n        width -= (width % 2 ? 1 : 2);\n        height -= (height % 2 ? 1 : 2);\n        let cx = 0;\n        let cy = 0;\n        let nx = 0;\n        let ny = 0;\n        let done = 0;\n        let blocked = false;\n        let dirs = [\n            [0, 0],\n            [0, 0],\n            [0, 0],\n            [0, 0]\n        ];\n        do {\n            cx = 1 + 2 * Math.floor(RNG.getUniform() * (width - 1) / 2);\n            cy = 1 + 2 * Math.floor(RNG.getUniform() * (height - 1) / 2);\n            if (!done) {\n                map[cx][cy] = 0;\n            }\n            if (!map[cx][cy]) {\n                this._randomize(dirs);\n                do {\n                    if (Math.floor(RNG.getUniform() * (this._regularity + 1)) == 0) {\n                        this._randomize(dirs);\n                    }\n                    blocked = true;\n                    for (let i = 0; i < 4; i++) {\n                        nx = cx + dirs[i][0] * 2;\n                        ny = cy + dirs[i][1] * 2;\n                        if (this._isFree(map, nx, ny, width, height)) {\n                            map[nx][ny] = 0;\n                            map[cx + dirs[i][0]][cy + dirs[i][1]] = 0;\n                            cx = nx;\n                            cy = ny;\n                            blocked = false;\n                            done++;\n                            break;\n                        }\n                    }\n                } while (!blocked);\n            }\n        } while (done + 1 < width * height / 4);\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                callback(i, j, map[i][j]);\n            }\n        }\n        this._map = [];\n        return this;\n    }\n    _randomize(dirs) {\n        for (let i = 0; i < 4; i++) {\n            dirs[i][0] = 0;\n            dirs[i][1] = 0;\n        }\n        switch (Math.floor(RNG.getUniform() * 4)) {\n            case 0:\n                dirs[0][0] = -1;\n                dirs[1][0] = 1;\n                dirs[2][1] = -1;\n                dirs[3][1] = 1;\n                break;\n            case 1:\n                dirs[3][0] = -1;\n                dirs[2][0] = 1;\n                dirs[1][1] = -1;\n                dirs[0][1] = 1;\n                break;\n            case 2:\n                dirs[2][0] = -1;\n                dirs[3][0] = 1;\n                dirs[0][1] = -1;\n                dirs[1][1] = 1;\n                break;\n            case 3:\n                dirs[1][0] = -1;\n                dirs[0][0] = 1;\n                dirs[3][1] = -1;\n                dirs[2][1] = 1;\n                break;\n        }\n    }\n    _isFree(map, x, y, width, height) {\n        if (x < 1 || y < 1 || x >= width || y >= height) {\n            return false;\n        }\n        return map[x][y];\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\nimport { DIRS } from \"../constants.js\";\n/**\n * Dungeon generator which uses the \"orginal\" Rogue dungeon generation algorithm. See http://kuoi.com/~kamikaze/GameDesign/art07_rogue_dungeon.php\n * @author hyakugei\n */\nexport default class Rogue extends Map {\n    constructor(width, height, options) {\n        super(width, height);\n        this.map = [];\n        this.rooms = [];\n        this.connectedCells = [];\n        options = Object.assign({\n            cellWidth: 3,\n            cellHeight: 3 //     ie. as an array with min-max values for each direction....\n        }, options);\n        /*\n        Set the room sizes according to the over-all width of the map,\n        and the cell sizes.\n        */\n        if (!options.hasOwnProperty(\"roomWidth\")) {\n            options[\"roomWidth\"] = this._calculateRoomSize(this._width, options[\"cellWidth\"]);\n        }\n        if (!options.hasOwnProperty(\"roomHeight\")) {\n            options[\"roomHeight\"] = this._calculateRoomSize(this._height, options[\"cellHeight\"]);\n        }\n        this._options = options;\n    }\n    create(callback) {\n        this.map = this._fillMap(1);\n        this.rooms = [];\n        this.connectedCells = [];\n        this._initRooms();\n        this._connectRooms();\n        this._connectUnconnectedRooms();\n        this._createRandomRoomConnections();\n        this._createRooms();\n        this._createCorridors();\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this.map[i][j]);\n                }\n            }\n        }\n        return this;\n    }\n    _calculateRoomSize(size, cell) {\n        let max = Math.floor((size / cell) * 0.8);\n        let min = Math.floor((size / cell) * 0.25);\n        if (min < 2) {\n            min = 2;\n        }\n        if (max < 2) {\n            max = 2;\n        }\n        return [min, max];\n    }\n    _initRooms() {\n        // create rooms array. This is the \"grid\" list from the algo.\n        for (let i = 0; i < this._options.cellWidth; i++) {\n            this.rooms.push([]);\n            for (let j = 0; j < this._options.cellHeight; j++) {\n                this.rooms[i].push({ \"x\": 0, \"y\": 0, \"width\": 0, \"height\": 0, \"connections\": [], \"cellx\": i, \"celly\": j });\n            }\n        }\n    }\n    _connectRooms() {\n        //pick random starting grid\n        let cgx = RNG.getUniformInt(0, this._options.cellWidth - 1);\n        let cgy = RNG.getUniformInt(0, this._options.cellHeight - 1);\n        let idx;\n        let ncgx;\n        let ncgy;\n        let found = false;\n        let room;\n        let otherRoom;\n        let dirToCheck;\n        // find  unconnected neighbour cells\n        do {\n            //dirToCheck = [0, 1, 2, 3, 4, 5, 6, 7];\n            dirToCheck = [0, 2, 4, 6];\n            dirToCheck = RNG.shuffle(dirToCheck);\n            do {\n                found = false;\n                idx = dirToCheck.pop();\n                ncgx = cgx + DIRS[8][idx][0];\n                ncgy = cgy + DIRS[8][idx][1];\n                if (ncgx < 0 || ncgx >= this._options.cellWidth) {\n                    continue;\n                }\n                if (ncgy < 0 || ncgy >= this._options.cellHeight) {\n                    continue;\n                }\n                room = this.rooms[cgx][cgy];\n                if (room[\"connections\"].length > 0) {\n                    // as long as this room doesn't already coonect to me, we are ok with it.\n                    if (room[\"connections\"][0][0] == ncgx && room[\"connections\"][0][1] == ncgy) {\n                        break;\n                    }\n                }\n                otherRoom = this.rooms[ncgx][ncgy];\n                if (otherRoom[\"connections\"].length == 0) {\n                    otherRoom[\"connections\"].push([cgx, cgy]);\n                    this.connectedCells.push([ncgx, ncgy]);\n                    cgx = ncgx;\n                    cgy = ncgy;\n                    found = true;\n                }\n            } while (dirToCheck.length > 0 && found == false);\n        } while (dirToCheck.length > 0);\n    }\n    _connectUnconnectedRooms() {\n        //While there are unconnected rooms, try to connect them to a random connected neighbor\n        //(if a room has no connected neighbors yet, just keep cycling, you'll fill out to it eventually).\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        this.connectedCells = RNG.shuffle(this.connectedCells);\n        let room;\n        let otherRoom;\n        let validRoom;\n        for (let i = 0; i < this._options.cellWidth; i++) {\n            for (let j = 0; j < this._options.cellHeight; j++) {\n                room = this.rooms[i][j];\n                if (room[\"connections\"].length == 0) {\n                    let directions = [0, 2, 4, 6];\n                    directions = RNG.shuffle(directions);\n                    validRoom = false;\n                    do {\n                        let dirIdx = directions.pop();\n                        let newI = i + DIRS[8][dirIdx][0];\n                        let newJ = j + DIRS[8][dirIdx][1];\n                        if (newI < 0 || newI >= cw || newJ < 0 || newJ >= ch) {\n                            continue;\n                        }\n                        otherRoom = this.rooms[newI][newJ];\n                        validRoom = true;\n                        if (otherRoom[\"connections\"].length == 0) {\n                            break;\n                        }\n                        for (let k = 0; k < otherRoom[\"connections\"].length; k++) {\n                            if (otherRoom[\"connections\"][k][0] == i && otherRoom[\"connections\"][k][1] == j) {\n                                validRoom = false;\n                                break;\n                            }\n                        }\n                        if (validRoom) {\n                            break;\n                        }\n                    } while (directions.length);\n                    if (validRoom) {\n                        room[\"connections\"].push([otherRoom[\"cellx\"], otherRoom[\"celly\"]]);\n                    }\n                    else {\n                        console.log(\"-- Unable to connect room.\");\n                    }\n                }\n            }\n        }\n    }\n    _createRandomRoomConnections() {\n        // Empty for now.\n    }\n    _createRooms() {\n        let w = this._width;\n        let h = this._height;\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        let cwp = Math.floor(this._width / cw);\n        let chp = Math.floor(this._height / ch);\n        let roomw;\n        let roomh;\n        let roomWidth = this._options[\"roomWidth\"];\n        let roomHeight = this._options[\"roomHeight\"];\n        let sx;\n        let sy;\n        let otherRoom;\n        for (let i = 0; i < cw; i++) {\n            for (let j = 0; j < ch; j++) {\n                sx = cwp * i;\n                sy = chp * j;\n                if (sx == 0) {\n                    sx = 1;\n                }\n                if (sy == 0) {\n                    sy = 1;\n                }\n                roomw = RNG.getUniformInt(roomWidth[0], roomWidth[1]);\n                roomh = RNG.getUniformInt(roomHeight[0], roomHeight[1]);\n                if (j > 0) {\n                    otherRoom = this.rooms[i][j - 1];\n                    while (sy - (otherRoom[\"y\"] + otherRoom[\"height\"]) < 3) {\n                        sy++;\n                    }\n                }\n                if (i > 0) {\n                    otherRoom = this.rooms[i - 1][j];\n                    while (sx - (otherRoom[\"x\"] + otherRoom[\"width\"]) < 3) {\n                        sx++;\n                    }\n                }\n                let sxOffset = Math.round(RNG.getUniformInt(0, cwp - roomw) / 2);\n                let syOffset = Math.round(RNG.getUniformInt(0, chp - roomh) / 2);\n                while (sx + sxOffset + roomw >= w) {\n                    if (sxOffset) {\n                        sxOffset--;\n                    }\n                    else {\n                        roomw--;\n                    }\n                }\n                while (sy + syOffset + roomh >= h) {\n                    if (syOffset) {\n                        syOffset--;\n                    }\n                    else {\n                        roomh--;\n                    }\n                }\n                sx = sx + sxOffset;\n                sy = sy + syOffset;\n                this.rooms[i][j][\"x\"] = sx;\n                this.rooms[i][j][\"y\"] = sy;\n                this.rooms[i][j][\"width\"] = roomw;\n                this.rooms[i][j][\"height\"] = roomh;\n                for (let ii = sx; ii < sx + roomw; ii++) {\n                    for (let jj = sy; jj < sy + roomh; jj++) {\n                        this.map[ii][jj] = 0;\n                    }\n                }\n            }\n        }\n    }\n    _getWallPosition(aRoom, aDirection) {\n        let rx;\n        let ry;\n        let door;\n        if (aDirection == 1 || aDirection == 3) {\n            rx = RNG.getUniformInt(aRoom[\"x\"] + 1, aRoom[\"x\"] + aRoom[\"width\"] - 2);\n            if (aDirection == 1) {\n                ry = aRoom[\"y\"] - 2;\n                door = ry + 1;\n            }\n            else {\n                ry = aRoom[\"y\"] + aRoom[\"height\"] + 1;\n                door = ry - 1;\n            }\n            this.map[rx][door] = 0; // i'm not setting a specific 'door' tile value right now, just empty space.\n        }\n        else {\n            ry = RNG.getUniformInt(aRoom[\"y\"] + 1, aRoom[\"y\"] + aRoom[\"height\"] - 2);\n            if (aDirection == 2) {\n                rx = aRoom[\"x\"] + aRoom[\"width\"] + 1;\n                door = rx - 1;\n            }\n            else {\n                rx = aRoom[\"x\"] - 2;\n                door = rx + 1;\n            }\n            this.map[door][ry] = 0; // i'm not setting a specific 'door' tile value right now, just empty space.\n        }\n        return [rx, ry];\n    }\n    _drawCorridor(startPosition, endPosition) {\n        let xOffset = endPosition[0] - startPosition[0];\n        let yOffset = endPosition[1] - startPosition[1];\n        let xpos = startPosition[0];\n        let ypos = startPosition[1];\n        let tempDist;\n        let xDir;\n        let yDir;\n        let move; // 2 element array, element 0 is the direction, element 1 is the total value to move.\n        let moves = []; // a list of 2 element arrays\n        let xAbs = Math.abs(xOffset);\n        let yAbs = Math.abs(yOffset);\n        let percent = RNG.getUniform(); // used to split the move at different places along the long axis\n        let firstHalf = percent;\n        let secondHalf = 1 - percent;\n        xDir = xOffset > 0 ? 2 : 6;\n        yDir = yOffset > 0 ? 4 : 0;\n        if (xAbs < yAbs) {\n            // move firstHalf of the y offset\n            tempDist = Math.ceil(yAbs * firstHalf);\n            moves.push([yDir, tempDist]);\n            // move all the x offset\n            moves.push([xDir, xAbs]);\n            // move sendHalf of the  y offset\n            tempDist = Math.floor(yAbs * secondHalf);\n            moves.push([yDir, tempDist]);\n        }\n        else {\n            //  move firstHalf of the x offset\n            tempDist = Math.ceil(xAbs * firstHalf);\n            moves.push([xDir, tempDist]);\n            // move all the y offset\n            moves.push([yDir, yAbs]);\n            // move secondHalf of the x offset.\n            tempDist = Math.floor(xAbs * secondHalf);\n            moves.push([xDir, tempDist]);\n        }\n        this.map[xpos][ypos] = 0;\n        while (moves.length > 0) {\n            move = moves.pop();\n            while (move[1] > 0) {\n                xpos += DIRS[8][move[0]][0];\n                ypos += DIRS[8][move[0]][1];\n                this.map[xpos][ypos] = 0;\n                move[1] = move[1] - 1;\n            }\n        }\n    }\n    _createCorridors() {\n        // Draw Corridors between connected rooms\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        let room;\n        let connection;\n        let otherRoom;\n        let wall;\n        let otherWall;\n        for (let i = 0; i < cw; i++) {\n            for (let j = 0; j < ch; j++) {\n                room = this.rooms[i][j];\n                for (let k = 0; k < room[\"connections\"].length; k++) {\n                    connection = room[\"connections\"][k];\n                    otherRoom = this.rooms[connection[0]][connection[1]];\n                    // figure out what wall our corridor will start one.\n                    // figure out what wall our corridor will end on.\n                    if (otherRoom[\"cellx\"] > room[\"cellx\"]) {\n                        wall = 2;\n                        otherWall = 4;\n                    }\n                    else if (otherRoom[\"cellx\"] < room[\"cellx\"]) {\n                        wall = 4;\n                        otherWall = 2;\n                    }\n                    else if (otherRoom[\"celly\"] > room[\"celly\"]) {\n                        wall = 3;\n                        otherWall = 1;\n                    }\n                    else {\n                        wall = 1;\n                        otherWall = 3;\n                    }\n                    this._drawCorridor(this._getWallPosition(room, wall), this._getWallPosition(otherRoom, otherWall));\n                }\n            }\n        }\n    }\n}\n","import Simplex from \"./simplex.js\";\nexport default { Simplex };\n","import Noise from \"./noise.js\";\nimport RNG from \"../rng.js\";\nimport { mod } from \"../util.js\";\nconst F2 = 0.5 * (Math.sqrt(3) - 1);\nconst G2 = (3 - Math.sqrt(3)) / 6;\n/**\n * A simple 2d implementation of simplex noise by Ondrej Zara\n *\n * Based on a speed-improved simplex noise algorithm for 2D, 3D and 4D in Java.\n * Which is based on example code by Stefan Gustavson (stegu@itn.liu.se).\n * With Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\n * Better rank ordering method by Stefan Gustavson in 2012.\n */\nexport default class Simplex extends Noise {\n    /**\n     * @param gradients Random gradients\n     */\n    constructor(gradients = 256) {\n        super();\n        this._gradients = [\n            [0, -1],\n            [1, -1],\n            [1, 0],\n            [1, 1],\n            [0, 1],\n            [-1, 1],\n            [-1, 0],\n            [-1, -1]\n        ];\n        let permutations = [];\n        for (let i = 0; i < gradients; i++) {\n            permutations.push(i);\n        }\n        permutations = RNG.shuffle(permutations);\n        this._perms = [];\n        this._indexes = [];\n        for (let i = 0; i < 2 * gradients; i++) {\n            this._perms.push(permutations[i % gradients]);\n            this._indexes.push(this._perms[i] % this._gradients.length);\n        }\n    }\n    get(xin, yin) {\n        let perms = this._perms;\n        let indexes = this._indexes;\n        let count = perms.length / 2;\n        let n0 = 0, n1 = 0, n2 = 0, gi; // Noise contributions from the three corners\n        // Skew the input space to determine which simplex cell we're in\n        let s = (xin + yin) * F2; // Hairy factor for 2D\n        let i = Math.floor(xin + s);\n        let j = Math.floor(yin + s);\n        let t = (i + j) * G2;\n        let X0 = i - t; // Unskew the cell origin back to (x,y) space\n        let Y0 = j - t;\n        let x0 = xin - X0; // The x,y distances from the cell origin\n        let y0 = yin - Y0;\n        // For the 2D case, the simplex shape is an equilateral triangle.\n        // Determine which simplex we are in.\n        let i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n        if (x0 > y0) {\n            i1 = 1;\n            j1 = 0;\n        }\n        else { // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n            i1 = 0;\n            j1 = 1;\n        } // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n        // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n        // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n        // c = (3-sqrt(3))/6\n        let x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n        let y1 = y0 - j1 + G2;\n        let x2 = x0 - 1 + 2 * G2; // Offsets for last corner in (x,y) unskewed coords\n        let y2 = y0 - 1 + 2 * G2;\n        // Work out the hashed gradient indices of the three simplex corners\n        let ii = mod(i, count);\n        let jj = mod(j, count);\n        // Calculate the contribution from the three corners\n        let t0 = 0.5 - x0 * x0 - y0 * y0;\n        if (t0 >= 0) {\n            t0 *= t0;\n            gi = indexes[ii + perms[jj]];\n            let grad = this._gradients[gi];\n            n0 = t0 * t0 * (grad[0] * x0 + grad[1] * y0);\n        }\n        let t1 = 0.5 - x1 * x1 - y1 * y1;\n        if (t1 >= 0) {\n            t1 *= t1;\n            gi = indexes[ii + i1 + perms[jj + j1]];\n            let grad = this._gradients[gi];\n            n1 = t1 * t1 * (grad[0] * x1 + grad[1] * y1);\n        }\n        let t2 = 0.5 - x2 * x2 - y2 * y2;\n        if (t2 >= 0) {\n            t2 *= t2;\n            gi = indexes[ii + 1 + perms[jj + 1]];\n            let grad = this._gradients[gi];\n            n2 = t2 * t2 * (grad[0] * x2 + grad[1] * y2);\n        }\n        // Add contributions from each corner to get the final noise value.\n        // The result is scaled to return values in the interval [-1,1].\n        return 70 * (n0 + n1 + n2);\n    }\n}\n","/**\n * Base noise generator\n */\nexport default class Noise {\n}\n","import Dijkstra from \"./dijkstra.js\";\nimport AStar from \"./astar.js\";\nexport default { Dijkstra, AStar };\n","import Path from \"./path.js\";\n/**\n * @class Simplified Dijkstra's algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nexport default class Dijkstra extends Path {\n    constructor(toX, toY, passableCallback, options) {\n        super(toX, toY, passableCallback, options);\n        this._computed = {};\n        this._todo = [];\n        this._add(toX, toY, null);\n    }\n    /**\n     * Compute a path from a given point\n     * @see ROT.Path#compute\n     */\n    compute(fromX, fromY, callback) {\n        let key = fromX + \",\" + fromY;\n        if (!(key in this._computed)) {\n            this._compute(fromX, fromY);\n        }\n        if (!(key in this._computed)) {\n            return;\n        }\n        let item = this._computed[key];\n        while (item) {\n            callback(item.x, item.y);\n            item = item.prev;\n        }\n    }\n    /**\n     * Compute a non-cached value\n     */\n    _compute(fromX, fromY) {\n        while (this._todo.length) {\n            let item = this._todo.shift();\n            if (item.x == fromX && item.y == fromY) {\n                return;\n            }\n            let neighbors = this._getNeighbors(item.x, item.y);\n            for (let i = 0; i < neighbors.length; i++) {\n                let neighbor = neighbors[i];\n                let x = neighbor[0];\n                let y = neighbor[1];\n                let id = x + \",\" + y;\n                if (id in this._computed) {\n                    continue;\n                } /* already done */\n                this._add(x, y, item);\n            }\n        }\n    }\n    _add(x, y, prev) {\n        let obj = {\n            x: x,\n            y: y,\n            prev: prev\n        };\n        this._computed[x + \",\" + y] = obj;\n        this._todo.push(obj);\n    }\n}\n","import { DIRS } from \"../constants.js\";\n/**\n * @class Abstract pathfinder\n * @param {int} toX Target X coord\n * @param {int} toY Target Y coord\n * @param {function} passableCallback Callback to determine map passability\n * @param {object} [options]\n * @param {int} [options.topology=8]\n */\nexport default class Path {\n    constructor(toX, toY, passableCallback, options = {}) {\n        this._toX = toX;\n        this._toY = toY;\n        this._passableCallback = passableCallback;\n        this._options = Object.assign({\n            topology: 8\n        }, options);\n        this._dirs = DIRS[this._options.topology];\n        if (this._options.topology == 8) { /* reorder dirs for more aesthetic result (vertical/horizontal first) */\n            this._dirs = [\n                this._dirs[0],\n                this._dirs[2],\n                this._dirs[4],\n                this._dirs[6],\n                this._dirs[1],\n                this._dirs[3],\n                this._dirs[5],\n                this._dirs[7]\n            ];\n        }\n    }\n    _getNeighbors(cx, cy) {\n        let result = [];\n        for (let i = 0; i < this._dirs.length; i++) {\n            let dir = this._dirs[i];\n            let x = cx + dir[0];\n            let y = cy + dir[1];\n            if (!this._passableCallback(x, y)) {\n                continue;\n            }\n            result.push([x, y]);\n        }\n        return result;\n    }\n}\n","import Path from \"./path.js\";\n/**\n * @class Simplified A* algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nexport default class AStar extends Path {\n    constructor(toX, toY, passableCallback, options = {}) {\n        super(toX, toY, passableCallback, options);\n        this._todo = [];\n        this._done = {};\n    }\n    /**\n     * Compute a path from a given point\n     * @see ROT.Path#compute\n     */\n    compute(fromX, fromY, callback) {\n        this._todo = [];\n        this._done = {};\n        this._fromX = fromX;\n        this._fromY = fromY;\n        this._add(this._toX, this._toY, null);\n        while (this._todo.length) {\n            let item = this._todo.shift();\n            let id = item.x + \",\" + item.y;\n            if (id in this._done) {\n                continue;\n            }\n            this._done[id] = item;\n            if (item.x == fromX && item.y == fromY) {\n                break;\n            }\n            let neighbors = this._getNeighbors(item.x, item.y);\n            for (let i = 0; i < neighbors.length; i++) {\n                let neighbor = neighbors[i];\n                let x = neighbor[0];\n                let y = neighbor[1];\n                let id = x + \",\" + y;\n                if (id in this._done) {\n                    continue;\n                }\n                this._add(x, y, item);\n            }\n        }\n        let item = this._done[fromX + \",\" + fromY];\n        if (!item) {\n            return;\n        }\n        while (item) {\n            callback(item.x, item.y);\n            item = item.prev;\n        }\n    }\n    _add(x, y, prev) {\n        let h = this._distance(x, y);\n        let obj = {\n            x: x,\n            y: y,\n            prev: prev,\n            g: (prev ? prev.g + 1 : 0),\n            h: h\n        };\n        /* insert into priority queue */\n        let f = obj.g + obj.h;\n        for (let i = 0; i < this._todo.length; i++) {\n            let item = this._todo[i];\n            let itemF = item.g + item.h;\n            if (f < itemF || (f == itemF && h < item.h)) {\n                this._todo.splice(i, 0, obj);\n                return;\n            }\n        }\n        this._todo.push(obj);\n    }\n    _distance(x, y) {\n        switch (this._options.topology) {\n            case 4:\n                return (Math.abs(x - this._fromX) + Math.abs(y - this._fromY));\n                break;\n            case 6:\n                let dx = Math.abs(x - this._fromX);\n                let dy = Math.abs(y - this._fromY);\n                return dy + Math.max(0, (dx - dy) / 2);\n                break;\n            case 8:\n                return Math.max(Math.abs(x - this._fromX), Math.abs(y - this._fromY));\n                break;\n        }\n    }\n}\n","/**\n * @class Asynchronous main loop\n * @param {ROT.Scheduler} scheduler\n */\nexport default class Engine {\n    constructor(scheduler) {\n        this._scheduler = scheduler;\n        this._lock = 1;\n    }\n    /**\n     * Start the main loop. When this call returns, the loop is locked.\n     */\n    start() { return this.unlock(); }\n    /**\n     * Interrupt the engine by an asynchronous action\n     */\n    lock() {\n        this._lock++;\n        return this;\n    }\n    /**\n     * Resume execution (paused by a previous lock)\n     */\n    unlock() {\n        if (!this._lock) {\n            throw new Error(\"Cannot unlock unlocked engine\");\n        }\n        this._lock--;\n        while (!this._lock) {\n            let actor = this._scheduler.next();\n            if (!actor) {\n                return this.lock();\n            } /* no actors */\n            let result = actor.act();\n            if (result && result.then) { /* actor returned a \"thenable\", looks like a Promise */\n                this.lock();\n                result.then(this.unlock.bind(this));\n            }\n        }\n        return this;\n    }\n}\n","import * as Color from \"./color.js\";\n;\n;\n;\n;\n/**\n * Lighting computation, based on a traditional FOV for multiple light sources and multiple passes.\n */\nexport default class Lighting {\n    constructor(reflectivityCallback, options = {}) {\n        this._reflectivityCallback = reflectivityCallback;\n        this._options = {};\n        options = Object.assign({\n            passes: 1,\n            emissionThreshold: 100,\n            range: 10\n        }, options);\n        this._lights = {};\n        this._reflectivityCache = {};\n        this._fovCache = {};\n        this.setOptions(options);\n    }\n    /**\n     * Adjust options at runtime\n     */\n    setOptions(options) {\n        Object.assign(this._options, options);\n        if (options && options.range) {\n            this.reset();\n        }\n        return this;\n    }\n    /**\n     * Set the used Field-Of-View algo\n     */\n    setFOV(fov) {\n        this._fov = fov;\n        this._fovCache = {};\n        return this;\n    }\n    /**\n     * Set (or remove) a light source\n     */\n    setLight(x, y, color) {\n        let key = x + \",\" + y;\n        if (color) {\n            this._lights[key] = (typeof (color) == \"string\" ? Color.fromString(color) : color);\n        }\n        else {\n            delete this._lights[key];\n        }\n        return this;\n    }\n    /**\n     * Remove all light sources\n     */\n    clearLights() { this._lights = {}; }\n    /**\n     * Reset the pre-computed topology values. Call whenever the underlying map changes its light-passability.\n     */\n    reset() {\n        this._reflectivityCache = {};\n        this._fovCache = {};\n        return this;\n    }\n    /**\n     * Compute the lighting\n     */\n    compute(lightingCallback) {\n        let doneCells = {};\n        let emittingCells = {};\n        let litCells = {};\n        for (let key in this._lights) { /* prepare emitters for first pass */\n            let light = this._lights[key];\n            emittingCells[key] = [0, 0, 0];\n            Color.add_(emittingCells[key], light);\n        }\n        for (let i = 0; i < this._options.passes; i++) { /* main loop */\n            this._emitLight(emittingCells, litCells, doneCells);\n            if (i + 1 == this._options.passes) {\n                continue;\n            } /* not for the last pass */\n            emittingCells = this._computeEmitters(litCells, doneCells);\n        }\n        for (let litKey in litCells) { /* let the user know what and how is lit */\n            let parts = litKey.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            lightingCallback(x, y, litCells[litKey]);\n        }\n        return this;\n    }\n    /**\n     * Compute one iteration from all emitting cells\n     * @param emittingCells These emit light\n     * @param litCells Add projected light to these\n     * @param doneCells These already emitted, forbid them from further calculations\n     */\n    _emitLight(emittingCells, litCells, doneCells) {\n        for (let key in emittingCells) {\n            let parts = key.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            this._emitLightFromCell(x, y, emittingCells[key], litCells);\n            doneCells[key] = 1;\n        }\n        return this;\n    }\n    /**\n     * Prepare a list of emitters for next pass\n     */\n    _computeEmitters(litCells, doneCells) {\n        let result = {};\n        for (let key in litCells) {\n            if (key in doneCells) {\n                continue;\n            } /* already emitted */\n            let color = litCells[key];\n            let reflectivity;\n            if (key in this._reflectivityCache) {\n                reflectivity = this._reflectivityCache[key];\n            }\n            else {\n                let parts = key.split(\",\");\n                let x = parseInt(parts[0]);\n                let y = parseInt(parts[1]);\n                reflectivity = this._reflectivityCallback(x, y);\n                this._reflectivityCache[key] = reflectivity;\n            }\n            if (reflectivity == 0) {\n                continue;\n            } /* will not reflect at all */\n            /* compute emission color */\n            let emission = [0, 0, 0];\n            let intensity = 0;\n            for (let i = 0; i < 3; i++) {\n                let part = Math.round(color[i] * reflectivity);\n                emission[i] = part;\n                intensity += part;\n            }\n            if (intensity > this._options.emissionThreshold) {\n                result[key] = emission;\n            }\n        }\n        return result;\n    }\n    /**\n     * Compute one iteration from one cell\n     */\n    _emitLightFromCell(x, y, color, litCells) {\n        let key = x + \",\" + y;\n        let fov;\n        if (key in this._fovCache) {\n            fov = this._fovCache[key];\n        }\n        else {\n            fov = this._updateFOV(x, y);\n        }\n        for (let fovKey in fov) {\n            let formFactor = fov[fovKey];\n            let result;\n            if (fovKey in litCells) { /* already lit */\n                result = litCells[fovKey];\n            }\n            else { /* newly lit */\n                result = [0, 0, 0];\n                litCells[fovKey] = result;\n            }\n            for (let i = 0; i < 3; i++) {\n                result[i] += Math.round(color[i] * formFactor);\n            } /* add light color */\n        }\n        return this;\n    }\n    /**\n     * Compute FOV (\"form factor\") for a potential light source at [x,y]\n     */\n    _updateFOV(x, y) {\n        let key1 = x + \",\" + y;\n        let cache = {};\n        this._fovCache[key1] = cache;\n        let range = this._options.range;\n        function cb(x, y, r, vis) {\n            let key2 = x + \",\" + y;\n            let formFactor = vis * (1 - r / range);\n            if (formFactor == 0) {\n                return;\n            }\n            cache[key2] = formFactor;\n        }\n        ;\n        this._fov.compute(x, y, range, cb.bind(this));\n        return cache;\n    }\n}\n","import { SCREEN_DEATH } from '../core/screens/ScreenType';\nimport { IsDead, IsDestroying, IsPlayer } from '../ecs/components';\nimport System from './System';\n\nexport default class DeathSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [IsDead],\n            none: [IsDestroying],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            entity.fireEvent('death');\n\n            if (entity.isPlayer) {\n                this.game.screens.setScreen(SCREEN_DEATH);\n            } else {\n                entity.add(IsDestroying);\n            }\n        });\n    }\n}\n","import { game } from '../core/Game';\nimport { Particle, ParticleEmitter } from '../ecs/components';\nimport System from './System';\n\nexport default class ParticleSystem extends System {\n    #particleQuery = null;\n    #emitterQuery = null;\n\n    constructor(game) {\n        super(game);\n        this.#emitterQuery = game.ecs.createQuery({\n            all: [ParticleEmitter],\n        });\n        this.#particleQuery = game.ecs.createQuery({\n            all: [Particle],\n        });\n    }\n\n    createParticle(x, y, properties = {}) {\n        const e = this.game.ecs.createEntity();\n\n        e.add(Particle, {\n            ...properties,\n            x,\n            y,\n        });\n    }\n\n    createEmitter(x, y, particleData = {}) {\n        const e = this.game.ecs.createEntity();\n\n        e.add(ParticleEmitter, {\n            x,\n            y,\n            particleData: {\n                direction: {\n                    x: 0,\n                    y: 1,\n                },\n                glyphs: ['░', '▒', '▓', '█'],\n                fg1s: ['cyan', 'blue'],\n                speed: 0.04,\n                lifetime: 600,\n                ...particleData,\n            },\n        });\n    }\n\n    update(dt) {\n        this.#emitterQuery.get().forEach((entity) => {\n            const emitter = entity.particleEmitter;\n\n            emitter.age += dt;\n\n            if (emitter.isExpired) {\n                entity.destroy();\n            } else {\n                const total = (emitter.rate / 1000) * emitter.duration;\n                const targetCount = Math.trunc(emitter.percent * total);\n\n                for (let i = emitter.count; i < targetCount; i++) {\n                    emitter.createParticle();\n                }\n            }\n        });\n\n        this.#particleQuery.get().forEach((entity) => {\n            const particle = entity.particle;\n\n            particle.age += dt;\n\n            if (particle.isExpired) {\n                entity.destroy();\n                return;\n            }\n\n            particle.x += particle.direction.x * particle.speed;\n            particle.y += particle.direction.y * particle.speed;\n\n            if (!this.game.camera.isInView(particle.x, particle.y)) {\n                return;\n            }\n\n            const screen = this.game.camera.worldToScreen(\n                particle.x,\n                particle.y\n            );\n\n            this.game.renderer.draw(\n                Math.round(screen.x),\n                Math.round(screen.y),\n                particle.glyph,\n                particle.fg1,\n                particle.fg2,\n                particle.bg\n            );\n        });\n    }\n}\n","import { FactionMember } from '../ecs/components';\nimport {\n    factions,\n    FACTION_GOBLIN,\n    FACTION_PLAYER,\n    FACTION_VILLAGER,\n    getFactionByName,\n} from '../enums/Factions';\nimport Manager from './Manager';\n\nexport default class FactionManager extends Manager {\n    relations = {};\n\n    get factions() {\n        return Object.values(factions);\n    }\n\n    constructor(game) {\n        super(game);\n\n        this.setRelation(FACTION_PLAYER, FACTION_GOBLIN, -300);\n        this.setRelation(FACTION_PLAYER, FACTION_VILLAGER, 120);\n        this.setRelation(FACTION_GOBLIN, FACTION_VILLAGER, -400);\n    }\n\n    getFactionById(id) {\n        return this.factions.find((f) => f.id === id);\n    }\n\n    getFactionByName(name) {\n        return getFactionByName(name);\n    }\n\n    isHostile(factionA, factionB) {\n        return factionA !== factionB;\n    }\n\n    _relationKey(idA, idB) {\n        return [idA, idB].sort().join('-');\n    }\n\n    setRelation(idA, idB, value) {\n        const key = this._relationKey(idA, idB);\n\n        this.relations[key] = value;\n    }\n\n    getRelation(idA, idB) {\n        const key = this._relationKey(idA, idB);\n\n        if (!this.relations.hasOwnProperty(key)) {\n            this.relations[key] = 0;\n        }\n\n        return this.relations[key];\n    }\n\n    getEntityRelation(entityA, entityB) {\n        const memberA = entityA.get(FactionMember);\n        const memberB = entityB.get(FactionMember);\n\n        if (memberA && memberB) {\n            const factionA = memberA.faction;\n            const factionB = memberB.faction;\n\n            return this.getRelation(factionA.id, factionB.id);\n        }\n\n        return 0;\n    }\n\n    areEntitiesHostile(entityA, entityB) {\n        const relation = this.getEntityRelation(entityA, entityB);\n\n        return relation < -200;\n    }\n\n    getDisplay(value) {\n        if (value <= -300) {\n            return 'Aggressive';\n        }\n\n        if (value <= -200) {\n            return 'Unfriendly';\n        }\n\n        if (value >= 300) {\n            return 'Loyal';\n        }\n\n        if (value >= 200) {\n            return 'Friendly';\n        }\n\n        if (value >= 100) {\n            return 'Amicable';\n        }\n\n        return 'Neutral';\n    }\n}\n","import Manager from './Manager';\n\nexport default class CameraManager extends Manager {\n    width = 32;\n    height = 24;\n    zoom = 2;\n    padding = 4;\n    clampX = 16;\n    clampY = 12;\n\n    _focusX = 0;\n    _focusY = 0;\n\n    constructor(game) {\n        super(game);\n        window.addEventListener('resize', this.onWindowResize.bind(this));\n        this.onWindowResize();\n    }\n\n    get renderedTileWidth() {\n        return this.zoom * this.game.renderer.tileWidth;\n    }\n\n    get renderedTileHeight() {\n        return this.zoom * this.game.renderer.tileHeight;\n    }\n\n    computeSize() {\n        this.width = Math.max(\n            this.clampX,\n            Math.floor(window.innerWidth / this.renderedTileWidth) - 2\n        );\n        this.height = Math.max(\n            this.clampY,\n            Math.floor(window.innerHeight / this.renderedTileHeight) - 2\n        );\n        this.topLeftWorldX = Math.floor(\n            Math.min(\n                Math.max(-this.padding, this._focusX - this.width / 2),\n                Math.max(\n                    (this.width - this.game.map.width) / -2,\n                    this.padding + this.game.map.width - this.width\n                )\n            )\n        );\n        this.topLeftWorldY = Math.floor(\n            Math.min(\n                Math.max(-this.padding, this._focusY - this.height / 2),\n                Math.max(\n                    (this.height - this.game.map.height) / -2,\n                    this.padding + this.game.map.height - this.height\n                )\n            )\n        );\n    }\n\n    onWindowResize() {\n        this.computeSize();\n        this.game.renderer.resizeDisplay(this.width, this.height, this.zoom);\n    }\n\n    setZoom(zoom) {\n        this.zoom = zoom;\n        this.computeSize();\n        this.onWindowResize();\n    }\n\n    setFocus(x, y) {\n        this._focusX = x;\n        this._focusY = y;\n        this.computeSize();\n    }\n\n    setPadding(value) {\n        this.padding = value;\n        this.computeSize();\n    }\n\n    worldToScreen(x, y) {\n        return {\n            x: x - this.topLeftWorldX,\n            y: y - this.topLeftWorldY,\n        };\n    }\n\n    screenToWorld(x, y) {\n        return {\n            x: x + this.topLeftWorldX,\n            y: y + this.topLeftWorldY,\n        };\n    }\n\n    getScreenRect() {\n        return {\n            x: this.topLeftWorldX,\n            y: this.topLeftWorldY,\n            width: this.width,\n            height: this.height,\n        };\n    }\n\n    isInView(worldX, worldY) {\n        const screen = this.worldToScreen(worldX, worldY);\n\n        return (\n            screen.x < this.width &&\n            screen.y < this.height &&\n            screen.x >= 0 &&\n            screen.y >= 0\n        );\n    }\n}\n","import System from './System';\n\nconst fpsElement = document.getElementsByClassName('fps')[0];\n\nexport default class FPSMonitoringSystem extends System {\n    frames = [];\n    frameCount = 60;\n\n    constructor(game) {\n        super(game);\n        this.frames = [];\n\n        for (let i = 0; i < this.frameCount; i++) {\n            this.frames[i] = 0;\n        }\n    }\n\n    update(dt) {\n        this.frames.push(1000 / dt);\n        this.frames.shift();\n\n        const sum = this.frames.reduce((s, v) => s + v, 0);\n        const fps = Math.trunc(sum / this.frameCount);\n\n        fpsElement.innerText = fps;\n    }\n}\n","import WorldData from '../data/WorldData';\nimport { IsPlayer } from '../ecs/components';\nimport Manager from './Manager';\nimport { SCREEN_LOAD_SECTOR } from './screens/ScreenType';\n\nexport class WorldManager extends Manager {\n    #data;\n    #sectorId;\n    #entry;\n\n    get sectorId() {\n        return this.#sectorId;\n    }\n\n    get sector() {\n        return this.#data.getSector(this.#sectorId);\n    }\n\n    get entry() {\n        return this.#entry;\n    }\n\n    constructor(game) {\n        super(game);\n\n        this.#data = new WorldData();\n    }\n\n    getSetupData() {\n        return {\n            sectorId: this.#data.getStartingSector().id,\n            exploredSectorIds: [],\n        };\n    }\n\n    getSaveGameData() {\n        // TODO only save sector data??\n        const data = Array.from(this.game.ecs.entities.all).filter(\n            (e) => !e.has(IsPlayer)\n        );\n        const serialized = this.game.ecs.serialize(data);\n\n        console.log('serialized map data', serialized);\n\n        this.game.state.saveSectorEntityData(this.sector.id, serialized);\n\n        return {\n            sectorId: this.sector.id,\n            exploredSectorIds: [],\n        };\n    }\n\n    setup(data) {\n        const sector = this.#data.getSector(data.sectorId);\n\n        this.game.screens.setScreen(SCREEN_LOAD_SECTOR, {\n            nextSector: sector,\n            entry: data.position,\n        });\n    }\n\n    teardown() {\n        // TODO: destroy all sector entities?\n        this.#sectorId = null;\n    }\n\n    onSectorLoaded(sector, entry) {\n        this.#sectorId = sector.id;\n\n        const data = this.game.state.loadSectorEntityData(sector.id);\n\n        if (data) {\n            this.game.ecs.deserialize(data);\n        } else {\n            sector.generate(this.game);\n        }\n    }\n\n    enterSector(sector, entry) {\n        this.game.screens.setScreen(SCREEN_LOAD_SECTOR, {\n            prevousSector: this.sector,\n            nextSector: sector,\n            entry,\n        });\n    }\n}\n","import { Sector } from './Sector';\nimport data from './world.json';\n\nexport default class WorldData {\n    #sectors = [];\n\n    get width() {\n        return data.width;\n    }\n\n    get height() {\n        return data.height;\n    }\n\n    idx(x, y) {\n        return y * this.width + x;\n    }\n\n    coord(idx) {\n        return {\n            x: Math.trunc(idx % this.width),\n            y: Math.trunc(idx / this.width),\n        };\n    }\n\n    constructor() {\n        this.#sectors = [];\n\n        for (let x = 0; x < data.width; x++) {\n            for (let y = 0; y < data.height; y++) {\n                const sector = Sector.parseData(this, data.sectors[y][x], x, y);\n\n                this.#sectors[sector.id] = sector;\n            }\n        }\n    }\n\n    isOutOfBounds(x, y) {\n        return x < 0 || y < 0 || x >= this.width || y >= this.height;\n    }\n\n    getStartingSector() {\n        return this.getSector(4);\n    }\n\n    getSectorByCoord(x, y) {\n        return this.getSector(this.idx(x, y));\n    }\n\n    getSector(idx) {\n        const { x, y } = this.coord(idx);\n\n        if (this.isOutOfBounds(x, y)) {\n            return new Sector(this, x, y);\n        }\n\n        return this.#sectors[idx];\n    }\n}\n","import { game } from '../core/Game';\nimport { getGenerator } from '../level/generators/generators';\n\nexport class Sector {\n    #x = 0;\n    #y = 0;\n    connectionsNorth = [];\n    connectionsWest = [];\n    generator = {};\n    music = null;\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get id() {\n        return this.world.idx(this.x, this.y);\n    }\n\n    get northSector() {\n        return this.world.getSectorByCoord(this.#x, this.#y - 1);\n    }\n\n    get southSector() {\n        return this.world.getSectorByCoord(this.#x, this.#y + 1);\n    }\n\n    get eastSector() {\n        return this.world.getSectorByCoord(this.#x + 1, this.#y);\n    }\n\n    get westSector() {\n        return this.world.getSectorByCoord(this.#x - 1, this.#y);\n    }\n\n    constructor(world, x, y) {\n        this.world = world;\n        this.#x = x;\n        this.#y = y;\n    }\n\n    getExits() {\n        const exits = [];\n\n        // north\n        exits.push(\n            ...this.connectionsNorth.map((c) => ({\n                x: 12,\n                y: 0,\n            }))\n        );\n\n        // west\n        exits.push(\n            ...this.connectionsWest.map((c) => ({\n                x: 0,\n                y: 12,\n            }))\n        );\n\n        // east\n        exits.push(\n            ...this.eastSector.connectionsWest.map((c) => ({\n                x: game.map.width - 1,\n                y: 12,\n            }))\n        );\n\n        // south\n        exits.push(\n            ...this.southSector.connectionsNorth.map((c) => ({\n                x: 12,\n                y: game.map.height - 1,\n            }))\n        );\n\n        return exits;\n    }\n\n    generate(game) {\n        const exits = this.getExits();\n        const generator = getGenerator(this.generator.type);\n\n        const settings = {\n            width: game.map.width,\n            height: game.map.height,\n            exits,\n        };\n\n        const tiles = generator.generate(settings);\n\n        generator.populate(settings, tiles);\n\n        this.tiles = tiles;\n    }\n\n    static parseData(world, data, x, y) {\n        const sector = new Sector(world, x, y);\n\n        sector.connectionsNorth = data.connectionsNorth;\n        sector.connectionsWest = data.connectionsWest;\n        sector.generator = data.generator;\n        sector.music = data.music;\n\n        return sector;\n    }\n}\n","import { ForestCabinsGenerator } from './ForestCabinsGenerator';\nimport { ForestGenerator } from './ForestGenerator';\nimport { ForestStrongholdGenerator } from './ForestStrongholdGenerator';\nimport { ForestTownGenerator } from './ForestTownGenerator';\n\nconst mapping = {\n    ['FOREST']: ForestGenerator,\n    ['FOREST_STRONGHOLD']: ForestStrongholdGenerator,\n    ['FOREST_CABINS']: ForestCabinsGenerator,\n    ['FOREST_TOWN']: ForestTownGenerator,\n};\n\nexport const getGenerator = (name) => {\n    return mapping[name];\n};\n","import { pickRandom } from '../../utils/rand';\nimport { digExits } from '../LevelConnections';\nimport { UniformScheme } from '../schemes/UniformScheme';\nimport { TILE_THEME_CABIN, TILE_THEME_FOREST } from '../themes/TileTheme';\nimport SectorGenerator from './SectorGenerator';\n\nexport class ForestCabinsGenerator extends SectorGenerator {\n    static generate(settings) {\n        const tiles = UniformScheme.generate({\n            width: settings.width,\n            height: settings.height,\n        });\n\n        tiles.rooms.forEach((room) => (room.theme = TILE_THEME_FOREST));\n\n        const mediumRooms = tiles.rooms.filter(\n            (r) => r.width >= 3 && r.height >= 3\n        );\n        const room = pickRandom(mediumRooms);\n\n        if (room) {\n            room.theme = TILE_THEME_CABIN;\n            room.includeWalls = true;\n        }\n\n        const distancedRooms = mediumRooms.filter((r) => r !== room);\n        const room2 = pickRandom(distancedRooms);\n\n        if (room2) {\n            room2.theme = TILE_THEME_CABIN;\n            room2.includeWalls = true;\n        }\n\n        const leftovers = tiles.getUnassignedTiles();\n\n        leftovers.forEach((tile) => {\n            tile.theme = TILE_THEME_FOREST;\n        });\n\n        digExits(tiles, settings.exits);\n\n        return tiles;\n    }\n}\n","import { computeAStar } from '../utils/AStar';\nimport { diagonalDistance } from '../utils/diagonalDistance';\nimport { manhattanDistance } from '../utils/ManhattanDistance';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from './TileData';\n\nconst getClosestTile = (tiles, target) => {\n    let closest = null;\n    let closestDistance = null;\n\n    tiles.data.forEach((tile) => {\n        if (!tile.isType(TILE_TYPE_FLOOR)) {\n            return;\n        }\n\n        const distance = manhattanDistance(tile, target);\n\n        if (distance < closestDistance || closest === null) {\n            closest = tile;\n            closestDistance = distance;\n            return;\n        }\n    });\n\n    return closest;\n};\n\nexport const digExit = (tiles, exit) => {\n    const source = getClosestTile(tiles, exit);\n\n    if (source.x === exit.x && source.y === exit.y) {\n        tiles.setTileType(exit.x, exit.y, TILE_TYPE_FLOOR);\n        return;\n    }\n\n    tiles.setTileType(source.x, source.y, TILE_TYPE_WALL);\n    tiles.setTileType(exit.x, exit.y, TILE_TYPE_WALL);\n\n    const result = computeAStar({\n        goal: {\n            x: source.x,\n            y: source.y,\n        },\n        start: {\n            x: exit.x,\n            y: exit.y,\n        },\n        cost: (a, b) => {\n            if (tiles.isOnEdge(b.x, b.y)) {\n                return Infinity;\n            }\n\n            if (tiles.tileTypeMatches(b.x, b.y, TILE_TYPE_WALL)) {\n                return diagonalDistance(a, b);\n            }\n\n            return Infinity;\n        },\n    });\n\n    result.path.forEach((segment) => {\n        tiles.setTileType(segment.x, segment.y, TILE_TYPE_FLOOR);\n    });\n\n    if (result.success) {\n        const door = result.path[result.path.length - 2];\n        const room = tiles.getRoomForTile(door.x, door.y);\n\n        if (room) {\n            room.addExit(door.x, door.y);\n        }\n    }\n};\n\nexport const digExits = (tiles, exits) => {\n    exits.forEach((exit) => digExit(tiles, exit));\n};\n","import { TILE_THEME_CASTLE } from './themes/TileTheme';\n\nexport const TILE_TYPE_FLOOR = 0;\nexport const TILE_TYPE_WALL = 1;\nexport const TILE_TYPE_OUT_OF_BOUNDS = 1;\n\nexport class TileData {\n    x = -1;\n    y = -1;\n    type = TILE_TYPE_OUT_OF_BOUNDS;\n    theme = TILE_THEME_CASTLE;\n\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n\n    isType(type) {\n        return this.type === type;\n    }\n}\n\nexport const createTileData = (x, y) => new TileData(x, y);\n","import CastleTheme from './CastleTheme';\nimport ForestTheme from './ForestTheme';\nimport CabinTheme from './CabinTheme';\n\nexport const TILE_THEME_FOREST = 0;\nexport const TILE_THEME_CASTLE = 1;\nexport const TILE_THEME_CABIN = 2;\n\nconst mapping = {\n    [TILE_THEME_FOREST]: ForestTheme,\n    [TILE_THEME_CASTLE]: CastleTheme,\n    [TILE_THEME_CABIN]: CabinTheme,\n};\n\nexport const getThemePopulator = (theme) => {\n    return mapping[theme];\n};\n","import {\n    SPWN_GROUND_STONE,\n    SPWN_STONE,\n    SPWN_STONE_WALL,\n    SPWN_WOOD_DOOR,\n} from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\nimport { randomInt } from '../../utils/rand';\nimport { TILE_TYPE_WALL } from '../TileData';\nimport TileThemePopulator from './TileThemePopulator';\n\nexport default class CastleTheme extends TileThemePopulator {\n    static populateTile(tile) {\n        spawn(SPWN_GROUND_STONE, tile.x, tile.y);\n\n        if (this.getEntities(tile).length === 0) {\n            if (tile.isType(TILE_TYPE_WALL)) {\n                spawn(SPWN_STONE_WALL, tile.x, tile.y);\n            }\n        }\n    }\n\n    static populateRoom(room) {\n        room.exits.forEach((exit) => {\n            if (this.getEntities(exit).length === 0) {\n                spawn(SPWN_WOOD_DOOR, exit.x, exit.y);\n            }\n        });\n\n        room.tiles.forEach((tile) => this.populateTile(tile));\n\n        for (let i = 0; i < randomInt(0, 3); i++) {\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_STONE, tile.x, tile.y);\n            });\n        }\n    }\n}\n","import { game } from '../../core/Game';\nimport { pickRandom } from '../../utils/rand';\n\nexport default class TileThemePopulator {\n    static populateTile(tile) {}\n\n    static populateRoom(room) {\n        room.tiles.forEach((tile) => {\n            this.populateTile(tile);\n        });\n    }\n\n    static populate(tiles) {\n        tiles.data.forEach((tile) => {\n            this.populateTile(tile);\n        });\n    }\n\n    static getEntities(tile) {\n        return game.map.getEntitiesAt(tile.x, tile.y).filter((e) => !e.ground);\n    }\n\n    static clearTile(tile) {\n        getEntities(tile).forEach((e) => {\n            e.destroy();\n        });\n    }\n\n    static getRandomEmptyTile(tileArr, attempts = 100) {\n        for (let i = 0; i < attempts; i++) {\n            const tile = pickRandom(tileArr);\n\n            if (this.getEntities(tile) <= 0) {\n                return tile;\n            }\n        }\n\n        console.warn(\n            `ran out of attempts (${attempts}) to place item`,\n            tileArr\n        );\n    }\n\n    static trySpawn(room, cb) {\n        const tile = this.getRandomEmptyTile(room.interiorTiles);\n\n        if (tile) {\n            cb(tile);\n        }\n    }\n}\n","import {\n    SPWN_GOBLIN_GRUNT,\n    SPWN_PINE_TREE,\n    SPWN_STONE,\n    SPWN_VIAL_BLOOD,\n    SPWN_VIAL_HONEY,\n    SPWN_VIAL_WATER,\n    SPWN_GROUND_GRASS\n} from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\nimport { randomInt } from '../../utils/rand';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\nimport TileThemePopulator from './TileThemePopulator';\n\nexport default class ForestTheme extends TileThemePopulator {\n    static populateTile(tile) {\n        spawn(SPWN_GROUND_GRASS, tile.x, tile.y);\n\n        if (tile.isType(TILE_TYPE_WALL)) {\n            spawn(SPWN_PINE_TREE, tile.x, tile.y);\n        }\n    }\n\n    static populateRoom(room) {\n        room.tiles.forEach((tile) => {\n            this.populateTile(tile);\n\n            if (Math.random() > 0.05) {\n                return;\n            }\n\n            if (tile.isType(TILE_TYPE_FLOOR)) {\n                spawn(SPWN_STONE, tile.x, tile.y);\n            }\n        });\n\n        for (let i = 0; i < randomInt(0, 1); i++) {\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_GOBLIN_GRUNT, tile.x, tile.y);\n            });\n        }\n\n        for (let i = 0; i < randomInt(0, 1); i++) {\n            if (Math.random() > 0.05) {\n                return;\n            }\n\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_VIAL_BLOOD, tile.x, tile.y);\n            });\n        }\n\n        for (let i = 0; i < randomInt(0, 1); i++) {\n            if (Math.random() > 0.05) {\n                return;\n            }\n\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_VIAL_WATER, tile.x, tile.y);\n            });\n        }\n\n        for (let i = 0; i < randomInt(0, 1); i++) {\n            if (Math.random() > 0.05) {\n                return;\n            }\n\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_VIAL_HONEY, tile.x, tile.y);\n            });\n        }\n    }\n}\n","import {\n    SPWN_HUMAN_WANDERER,\n    SPWN_WOOD_DOOR,\n    SPWN_WOOD_WALL,\n    SPWN_WOOD_CHEST,\n    SPWN_STONE,\n    SPWN_VIAL_HONEY,\n    SPWN_AMULET,\n    SPWN_CLOTH_ARMOR,\n    SPWN_LEATHER_BOOTS,\n    SPWN_SHORTSWORD,\n    SPWN_GREATSWORD,\n    SPWN_BATTLE_AXE,\n    SPWN_HATCHET,\n    SPWN_GROUND_STONE,\n    SPWN_GROUND_GRASS,\n    SPWN_MACE,\n} from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\nimport { randomInt } from '../../utils/rand';\nimport { TILE_TYPE_WALL } from '../TileData';\nimport TileThemePopulator from './TileThemePopulator';\n\nexport default class CabinTheme extends TileThemePopulator {\n    static populateTile(tile) {\n        spawn(SPWN_GROUND_STONE, tile.x, tile.y);\n\n        if (this.getEntities(tile).length === 0) {\n            if (tile.isType(TILE_TYPE_WALL)) {\n                spawn(SPWN_WOOD_WALL, tile.x, tile.y);\n            }\n        }\n    }\n\n    static populateRoom(room) {\n        room.tiles.forEach((tile) => this.populateTile(tile));\n\n        room.exits.forEach((exit) => {\n            if (this.getEntities(exit).length === 0) {\n                spawn(SPWN_WOOD_DOOR, exit.x, exit.y);\n            }\n        });\n\n        this.trySpawn(room, (tile) => {\n            const chest = spawn(SPWN_WOOD_CHEST, tile.x, tile.y);\n\n            chest.inventory.addLoot(spawn(SPWN_VIAL_HONEY));\n            chest.inventory.addLoot(spawn(SPWN_STONE));\n            chest.inventory.addLoot(spawn(SPWN_AMULET));\n            chest.inventory.addLoot(spawn(SPWN_CLOTH_ARMOR));\n            chest.inventory.addLoot(spawn(SPWN_LEATHER_BOOTS));\n            chest.inventory.addLoot(spawn(SPWN_SHORTSWORD));\n            chest.inventory.addLoot(spawn(SPWN_GREATSWORD));\n            chest.inventory.addLoot(spawn(SPWN_BATTLE_AXE));\n            chest.inventory.addLoot(spawn(SPWN_HATCHET));\n            chest.inventory.addLoot(spawn(SPWN_MACE));\n        });\n\n        for (let i = 0; i < randomInt(1, 3); i++) {\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_HUMAN_WANDERER, tile.x, tile.y);\n            });\n        }\n    }\n}\n","import { Map as MapGenerator } from 'rot-js';\nimport { digExits } from '../LevelConnections';\nimport TileContainer from '../TileContainer';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\nimport TileScheme from '../TileScheme';\n\nexport class UniformScheme extends TileScheme {\n    static generate(settings) {\n        const width = settings.width;\n        const height = settings.height;\n        const exits = settings.exits || [];\n        const tiles = new TileContainer(width, height);\n\n        const generator = new MapGenerator.Uniform(width, height, {\n            timeLimit: 8000,\n            roomWidth: settings.roomWidth || [2, 8],\n            roomHeight: settings.roomHeight || [2, 8],\n            roomDugPercentage: settings.digPercentage || 0.8,\n        });\n\n        generator.create((x, y, v) => {\n            if (v === 0) {\n                tiles.setTileType(x, y, TILE_TYPE_FLOOR);\n            }\n\n            if (v === 1) {\n                tiles.setTileType(x, y, TILE_TYPE_WALL);\n            }\n        });\n\n        generator.getRooms().forEach((r) => {\n            const room = tiles.createRoom(\n                r.getLeft(),\n                r.getTop(),\n                r.getRight() - r.getLeft() + 1,\n                r.getBottom() - r.getTop() + 1\n            );\n            r.getDoors((x, y) => {\n                room.addExit(x, y);\n            });\n        });\n\n        digExits(tiles, exits);\n\n        return tiles;\n    }\n}\n","import Grid from '../utils/Grid';\nimport RoomData from './RoomData';\nimport { createTileData, TILE_TYPE_FLOOR } from './TileData';\n\nexport default class TileContainer {\n    #defaultType = TILE_TYPE_FLOOR;\n    #grid = [];\n    #rooms = {};\n\n    get width() {\n        return this.#grid.width;\n    }\n\n    get height() {\n        return this.#grid.height;\n    }\n\n    get size() {\n        return this.width * this.height;\n    }\n\n    get data() {\n        return this.#grid.data;\n    }\n\n    get rooms() {\n        return Object.values(this.#rooms);\n    }\n\n    constructor(width, height, defaultType = TILE_TYPE_FLOOR) {\n        this.#grid = new Grid(width, height, createTileData);\n        this.#defaultType = defaultType;\n        this.clear();\n    }\n\n    getTile(x, y) {\n        return this.#grid.get(x, y);\n    }\n\n    setTileType(x, y, type) {\n        this.#grid.get(x, y).type = type;\n    }\n\n    setTileTheme(x, y, theme) {\n        this.#grid.get(x, y).theme = theme;\n    }\n\n    getTileType(x, y) {\n        return this.getTile(x, y).type;\n    }\n\n    addRoom(room) {\n        this.#rooms[room.id] = room;\n    }\n\n    createRoom(x, y, width, height) {\n        const room = new RoomData(x, y, width, height, this);\n\n        this.addRoom(room);\n\n        return room;\n    }\n\n    clear() {\n        this.fill(0, 0, this.width, this.height, this.#defaultType);\n    }\n\n    fill(x, y, width, height, type) {\n        for (let i = x; i < x + width; i++) {\n            for (let j = y; j < y + height; j++) {\n                this.setTileType(i, j, type);\n            }\n        }\n    }\n\n    tileTypeMatches(x, y, type) {\n        return this.getTile(x, y).isType(type);\n    }\n\n    combineOther(offsetX, offsetY, tiles) {\n        tiles.rooms.forEach((room) => {\n            room.cloneTo(room.x + offsetX, room.y + offsetY, this);\n        });\n        tiles.data.forEach((tile) => {\n            this.setTileType(tile.x + offsetX, tile.y + offsetY, tile.type);\n            this.setTileTheme(tile.x + offsetX, tile.y + offsetY, tile.theme);\n        });\n    }\n\n    isOnEdge(x, y) {\n        return (\n            x === 0 || y === 0 || x === this.width - 1 || y === this.height - 1\n        );\n    }\n\n    setTheme(theme) {\n        this.data.forEach((tile) => this.setTileTheme(tile.x, tile.y, theme));\n        this.rooms.forEach((room) => (room.theme = theme));\n    }\n\n    getRoomForTile(x, y) {\n        const tile = this.getTile(x, y);\n\n        return this.rooms.find((room) => {\n            return room.tiles.includes(tile);\n        });\n    }\n\n    getUnassignedTiles() {\n        return this.data.filter((tile) => {\n            return !this.getRoomForTile(tile.x, tile.y);\n        });\n    }\n\n    getNeighbors(x, y) {\n        return this.#grid.getNeighbors(x, y);\n    }\n}\n","import { nanoid } from 'nanoid';\nimport { TILE_THEME_FOREST } from './themes/TileTheme';\nimport { TILE_TYPE_FLOOR } from './TileData';\n\nexport default class RoomData {\n    id = 0;\n    x = 0;\n    y = 0;\n    width = 0;\n    height = 0;\n    theme = TILE_THEME_FOREST;\n    includeWalls = false;\n    #container = null;\n    #exitCoords = [];\n\n    get relativeExits() {\n        return this.#exitCoords;\n    }\n\n    get exits() {\n        return this.relativeExits.map((exit) => ({\n            x: exit.x + this.x,\n            y: exit.y + this.y,\n        }));\n    }\n\n    get left() {\n        return this.includeWalls ? this.x - 1 : this.x;\n    }\n\n    get right() {\n        return this.includeWalls\n            ? this.x + this.width + 1\n            : this.x + this.width;\n    }\n\n    get top() {\n        return this.includeWalls ? this.y - 1 : this.y;\n    }\n\n    get bottom() {\n        return this.includeWalls\n            ? this.y + this.height + 1\n            : this.y + this.height;\n    }\n\n    get borderTiles() {\n        const start = this.includeWalls ? -1 : 0;\n        const endWidth = this.includeWalls ? this.width + 1 : this.width;\n        const endHeight = this.includeWalls ? this.height + 1 : this.height;\n        const borders = [];\n\n        // TODO this loop can be a lot simpler...\n        for (let i = start; i < endWidth; i++) {\n            for (let j = start; j < endHeight; j++) {\n                if (\n                    i === start ||\n                    i === endWidth - 1 ||\n                    j === start ||\n                    j === endHeight - 1\n                ) {\n                    borders.push(\n                        this.#container.getTile(i + this.x, j + this.y)\n                    );\n                }\n            }\n        }\n\n        return borders;\n    }\n\n    get interiorTiles() {\n        const interior = [];\n\n        for (let i = 0; i < this.width; i++) {\n            for (let j = 0; j < this.height; j++) {\n                interior.push(this.#container.getTile(i + this.x, j + this.y));\n            }\n        }\n\n        return interior;\n    }\n\n    get tiles() {\n        const start = this.includeWalls ? -1 : 0;\n        const endWidth = this.includeWalls ? this.width + 1 : this.width;\n        const endHeight = this.includeWalls ? this.height + 1 : this.height;\n        const tiles = [];\n\n        for (let i = start; i < endWidth; i++) {\n            for (let j = start; j < endHeight; j++) {\n                tiles.push(this.#container.getTile(i + this.x, j + this.y));\n            }\n        }\n\n        return tiles;\n    }\n\n    constructor(x, y, width, height, container) {\n        this.id = nanoid();\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.#container = container;\n    }\n\n    addRelativeExit(x, y) {\n        this.#container.setTileType(this.x + x, this.y + y, TILE_TYPE_FLOOR);\n        this.#exitCoords.push({ x, y });\n    }\n\n    addExit(x, y) {\n        this.addRelativeExit(x - this.x, y - this.y);\n    }\n\n    cloneTo(x, y, container) {\n        const room = new RoomData(x, y, this.width, this.height, container);\n\n        room.theme = this.theme;\n        room.includeWalls = this.includeWalls;\n\n        this.relativeExits.forEach((exit) => {\n            room.addRelativeExit(exit.x, exit.y);\n        });\n\n        container.addRoom(room);\n\n        return room;\n    }\n\n    containsPoint(x, y) {\n        return (\n            x <= this.right &&\n            x >= this.left &&\n            y <= this.bottom &&\n            y >= this.top\n        );\n    }\n\n    intersects(left, top, right, bottom) {\n        const c1 = left < this.right;\n        const c2 = right > this.left;\n        const c3 = top < this.bottom;\n        const c4 = bottom > this.top;\n\n        return c1 && c2 && c3 && c4;\n    }\n}\n","// This file replaces `index.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nimport { urlAlphabet } from './url-alphabet/index.js'\n\nif (false) {\n  // All bundlers will remove this block in the production bundle.\n  if (\n    typeof navigator !== 'undefined' &&\n    navigator.product === 'ReactNative' &&\n    typeof crypto === 'undefined'\n  ) {\n    throw new Error(\n      'React Native does not have a built-in secure random generator. ' +\n        'If you don’t need unpredictable IDs use `nanoid/non-secure`. ' +\n        'For secure IDs, import `react-native-get-random-values` ' +\n        'before Nano ID. If you use Expo, install `expo-random` ' +\n        'and use `nanoid/async`.'\n    )\n  }\n  if (typeof msCrypto !== 'undefined' && typeof crypto === 'undefined') {\n    throw new Error(\n      'Import file with `if (!window.crypto) window.crypto = window.msCrypto`' +\n        ' before importing Nano ID to fix IE 11 support'\n    )\n  }\n  if (typeof crypto === 'undefined') {\n    throw new Error(\n      'Your browser does not have secure random generator. ' +\n        'If you don’t need unpredictable IDs, you can use nanoid/non-secure.'\n    )\n  }\n}\n\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\n\nlet customRandom = (alphabet, size, getRandom) => {\n  // First, a bitmask is necessary to generate the ID. The bitmask makes bytes\n  // values closer to the alphabet size. The bitmask calculates the closest\n  // `2^31 - 1` number, which exceeds the alphabet size.\n  // For example, the bitmask for the alphabet size 30 is 31 (00011111).\n  // `Math.clz32` is not used, because it is not available in browsers.\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  // Though, the bitmask solution is not perfect since the bytes exceeding\n  // the alphabet size are refused. Therefore, to reliably generate the ID,\n  // the random bytes redundancy has to be satisfied.\n\n  // Note: every hardware random generator call is performance expensive,\n  // because the system call for entropy collection takes a lot of time.\n  // So, to avoid additional system calls, extra bytes are requested in advance.\n\n  // Next, a step determines how many random bytes to generate.\n  // The number of random bytes gets decided upon the ID size, mask,\n  // alphabet size, and magic number 1.6 (using 1.6 peaks at performance\n  // according to benchmarks).\n\n  // `-~f => Math.ceil(f)` if f is a float\n  // `-~i => i + 1` if i is an integer\n  let step = -~((1.6 * mask * size) / alphabet.length)\n\n  return () => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      // A compact alternative for `for (var i = 0; i < step; i++)`.\n      let j = step\n      while (j--) {\n        // Adding `|| ''` refuses a random byte that exceeds the alphabet size.\n        id += alphabet[bytes[j] & mask] || ''\n        // `id.length + 1 === size` is a more compact option.\n        if (id.length === +size) return id\n      }\n    }\n  }\n}\n\nlet customAlphabet = (alphabet, size) => customRandom(alphabet, size, random)\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  while (size--) {\n    // It is incorrect to use bytes exceeding the alphabet size.\n    // The following mask reduces the random byte in the 0-255 value\n    // range to the 0-63 value range. Therefore, adding hacks, such\n    // as empty string fallback or magic numbers, is unneccessary because\n    // the bitmask trims bytes down to the alphabet size.\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      // `0-9a-z`\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      // `A-Z`\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","// This alphabet uses `A-Za-z0-9_-` symbols. The genetic algorithm helped\n// optimize the gzip compression for this alphabet.\nlet urlAlphabet =\n  'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW'\n\nexport { urlAlphabet }\n","export default class TileScheme {\n    static generate() {}\n\n    static populate() {}\n}\n","import { getThemePopulator } from '../themes/TileTheme';\nimport TileContainer from '../TileContainer';\n\nexport default class SectorGenerator {\n    static generate(settings) {\n        return new TileContainer(settings.width, settings.height);\n    }\n\n    static populate(settings, tiles) {\n        tiles.rooms.forEach((room) => {\n            const theme = getThemePopulator(room.theme);\n\n            theme.populateRoom(room);\n        });\n\n        tiles.getUnassignedTiles().forEach((tile) => {\n            const theme = getThemePopulator(tile.theme);\n\n            theme.populateTile(tile);\n        });\n    }\n}\n","import { digExits } from '../LevelConnections';\nimport { UniformScheme } from '../schemes/UniformScheme';\nimport { TILE_THEME_FOREST } from '../themes/TileTheme';\nimport SectorGenerator from './SectorGenerator';\n\nexport class ForestGenerator extends SectorGenerator {\n    static generate(settings) {\n        const tiles = UniformScheme.generate({\n            width: settings.width,\n            height: settings.height,\n            exits: settings.exits,\n        });\n\n        tiles.setTheme(TILE_THEME_FOREST);\n\n        digExits(tiles, settings.exits);\n\n        return tiles;\n    }\n}\n","import { digExits } from '../LevelConnections';\nimport { DenseCastleScheme } from '../schemes/DenseCastleScheme';\nimport { UniformScheme } from '../schemes/UniformScheme';\nimport { TILE_THEME_CASTLE, TILE_THEME_FOREST } from '../themes/TileTheme';\nimport TileContainer from '../TileContainer';\nimport SectorGenerator from './SectorGenerator';\n\nexport class ForestStrongholdGenerator extends SectorGenerator {\n    static generate(settings) {\n        const tiles = new TileContainer(settings.width, settings.height);\n        const padding = 5;\n        const exitOffset = Math.ceil(padding / 2) - 1;\n\n        const top = UniformScheme.generate({\n            width: settings.width - padding,\n            height: padding,\n            exits: [\n                { x: exitOffset, y: padding - 1 },\n                { x: settings.width - padding - 1, y: exitOffset - 1 },\n                { x: padding + 11, y: padding - 1 },\n            ],\n        });\n\n        const left = UniformScheme.generate({\n            width: padding,\n            height: settings.height - padding,\n            exits: [\n                { x: exitOffset, y: 0 },\n                {\n                    x: padding - 1,\n                    y: settings.height - padding - exitOffset - 1,\n                },\n            ],\n        });\n\n        const bottom = UniformScheme.generate({\n            width: settings.width - padding,\n            height: padding,\n            exits: [\n                { x: 0, y: exitOffset - 1 },\n                { x: settings.width - padding - exitOffset - 1, y: 0 },\n            ],\n        });\n\n        const right = UniformScheme.generate({\n            width: padding,\n            height: settings.height - padding,\n            exits: [\n                { x: 0, y: exitOffset - 1 },\n                { x: exitOffset - 1, y: settings.height - padding - 1 },\n            ],\n        });\n\n        const castle = DenseCastleScheme.generate({\n            width: settings.width - padding * 2 + 2,\n            height: settings.height - padding * 2 + 2,\n            exits: [{ x: 12, y: 0 }],\n        });\n\n        top.setTheme(TILE_THEME_FOREST);\n        left.setTheme(TILE_THEME_FOREST);\n        bottom.setTheme(TILE_THEME_FOREST);\n        right.setTheme(TILE_THEME_FOREST);\n        castle.setTheme(TILE_THEME_CASTLE);\n\n        tiles.combineOther(0, 0, top);\n        tiles.combineOther(0, padding, left);\n        tiles.combineOther(padding, settings.height - padding, bottom);\n        tiles.combineOther(settings.width - padding, 0, right);\n        tiles.combineOther(padding - 1, padding - 1, castle);\n\n        digExits(tiles, settings.exits);\n\n        return tiles;\n    }\n}\n","import { digExits } from '../LevelConnections';\nimport TileContainer from '../TileContainer';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\nimport { pickRandom, randomInt } from '../../utils/rand';\nimport { computeAStar } from '../../utils/AStar';\nimport { diagonalDistance } from '../../utils/diagonalDistance';\nimport TileScheme from '../TileScheme';\n\nconst VERTICAL = 0;\nconst HORIZONTAL = 1;\n\nlet curId = 1;\nconst createNodeId = () => curId++;\n\nconst splitNodeVertical = (node, cut) => {\n    const leftId = createNodeId();\n    const rightId = createNodeId();\n    const left = {\n        id: leftId,\n        isLeaf: true,\n        parentId: node.id,\n        siblingId: rightId,\n        offsetX: node.offsetX,\n        offsetY: node.offsetY,\n        width: cut,\n        height: node.height,\n    };\n    const right = {\n        id: rightId,\n        isLeaf: true,\n        parentId: node.id,\n        siblingId: leftId,\n        offsetX: node.offsetX + cut,\n        offsetY: node.offsetY,\n        width: node.width - cut,\n        height: node.height,\n    };\n    return [left, right];\n};\n\nconst splitNodeHorizontal = (node, cut) => {\n    const topId = createNodeId();\n    const bottomId = createNodeId();\n    const top = {\n        id: topId,\n        isLeaf: true,\n        parentId: node.id,\n        siblingId: bottomId,\n        offsetX: node.offsetX,\n        offsetY: node.offsetY,\n        width: node.width,\n        height: cut,\n    };\n    const bottom = {\n        id: bottomId,\n        isLeaf: true,\n        parentId: node.id,\n        siblingId: topId,\n        offsetX: node.offsetX,\n        offsetY: node.offsetY + cut,\n        width: node.width,\n        height: node.height - cut,\n    };\n\n    return [top, bottom];\n};\n\nexport class DenseCastleScheme extends TileScheme {\n    static generate(settings) {\n        const width = settings.width;\n        const height = settings.height;\n        const exits = settings.exits || [];\n\n        const minRoomWidth = settings.minRoomWidth || 4;\n        const minRoomHeight = settings.minRoomHeight || 4;\n\n        const maxRoomWidth = settings.maxRoomWidth || 12;\n        const maxRoomHeight = settings.maxRoomHeight || 12;\n\n        const splitIgnoreChance = settings.splitIgnoreChance || 0.8;\n\n        const loopiness = settings.loopiness || 35;\n\n        const tiles = new TileContainer(width, height);\n\n        for (let i = 0; i < width; i++) {\n            for (let j = 0; j < height; j++) {\n                if (i === 0 || i === width - 1 || j === 0 || j === height - 1) {\n                    tiles.setTileType(i, j, TILE_TYPE_WALL);\n                } else {\n                    tiles.setTileType(i, j, TILE_TYPE_FLOOR);\n                }\n            }\n        }\n\n        const nodes = [\n            {\n                isLeaf: true,\n                parentId: null,\n                siblingId: null,\n                id: createNodeId(),\n                offsetX: 0,\n                offsetY: 0,\n                height: height - 1,\n                width: width - 1,\n            },\n        ];\n\n        const graph = [];\n\n        while (nodes.length > 0) {\n            const node = nodes.pop();\n            graph.push(node);\n\n            if (node.width < maxRoomWidth && node.height < maxRoomHeight) {\n                const ignoreSplit = Math.random() < splitIgnoreChance;\n\n                if (ignoreSplit) {\n                    continue;\n                }\n            }\n\n            const directions = [];\n\n            if (node.width - minRoomWidth - 1 > minRoomWidth) {\n                directions.push(VERTICAL);\n            }\n\n            if (node.height - minRoomHeight - 1 > minRoomHeight) {\n                directions.push(HORIZONTAL);\n            }\n\n            if (directions.length <= 0) {\n                continue;\n            }\n\n            const direction = pickRandom(directions);\n\n            if (direction === VERTICAL) {\n                const cut = randomInt(\n                    minRoomWidth + 1,\n                    node.width - minRoomWidth - 1\n                );\n\n                nodes.push(...splitNodeVertical(node, cut));\n            } else {\n                const cut = randomInt(\n                    minRoomHeight + 1,\n                    node.height - minRoomHeight - 1\n                );\n\n                nodes.push(...splitNodeHorizontal(node, cut));\n            }\n\n            node.isLeaf = false;\n        }\n\n        graph.forEach((node) => {\n            if (node.parentId === null) {\n                return;\n            }\n\n            if (node.isLeaf) {\n                const room = tiles.createRoom(\n                    node.offsetX + 1,\n                    node.offsetY + 1,\n                    node.width - 1,\n                    node.height - 1\n                );\n\n                room.includeWalls = true;\n\n                for (let i = 0; i < node.width; i++) {\n                    tiles.setTileType(\n                        node.offsetX + i,\n                        node.offsetY,\n                        TILE_TYPE_WALL\n                    );\n                }\n\n                for (let j = 0; j < node.height; j++) {\n                    tiles.setTileType(\n                        node.offsetX,\n                        node.offsetY + j,\n                        TILE_TYPE_WALL\n                    );\n                }\n                return;\n            }\n        });\n\n        graph.forEach((node) => {\n            if (node.parentId === null) {\n                return;\n            }\n\n            const sibling = graph.find((n) => n.id === node.siblingId);\n\n            let doorCandidates = [];\n            let hasSib = false;\n\n            if (sibling.offsetX < node.offsetX) {\n                hasSib = true;\n                for (let i = 1; i < node.height; i++) {\n                    const x = node.offsetX;\n                    const y = node.offsetY + i;\n                    const tile = tiles.getTile(x, y);\n\n                    if (\n                        tiles.tileTypeMatches(x - 1, y, TILE_TYPE_FLOOR) &&\n                        tiles.tileTypeMatches(x + 1, y, TILE_TYPE_FLOOR)\n                    ) {\n                        doorCandidates.push(tile);\n                    }\n                }\n            } else if (sibling.offsetY < node.offsetY) {\n                hasSib = true;\n                for (let i = 1; i < node.width; i++) {\n                    const x = node.offsetX + i;\n                    const y = node.offsetY;\n                    const tile = tiles.getTile(x, y);\n\n                    if (\n                        tiles.tileTypeMatches(x, y - 1, TILE_TYPE_FLOOR) &&\n                        tiles.tileTypeMatches(x, y + 1, TILE_TYPE_FLOOR)\n                    ) {\n                        doorCandidates.push(tile);\n                    }\n                }\n            }\n\n            const door = pickRandom(doorCandidates);\n\n            if (hasSib && !door) {\n                console.warn(\n                    'cannot make door!?',\n                    node,\n                    node.width,\n                    node.height\n                );\n            }\n\n            if (door) {\n                const room = tiles.getRoomForTile(door.x, door.y);\n\n                if (room) {\n                    room.addExit(door.x, door.y);\n                }\n\n                tiles.setTileType(door.x, door.y, TILE_TYPE_FLOOR);\n            }\n        });\n\n        const cost = (a, b) => {\n            if (tiles.tileTypeMatches(b.x, b.y, TILE_TYPE_FLOOR)) {\n                return diagonalDistance(a, b);\n            }\n\n            return Infinity;\n        };\n\n        const tryAddLoop = (a, b) => {\n            if (a.isType(TILE_TYPE_FLOOR) && b.isType(TILE_TYPE_FLOOR)) {\n                const start = {\n                    x: b.x,\n                    y: b.y,\n                };\n                const goal = {\n                    x: a.x,\n                    y: a.y,\n                };\n                const path = computeAStar({\n                    start,\n                    goal,\n                    cost,\n                });\n\n                if (path.success && path.cost >= loopiness) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n\n        tiles.data\n            .filter((tile) => tile.isType(TILE_TYPE_WALL))\n            .forEach((tile) => {\n                const north = tiles.getTile(tile.x, tile.y - 1);\n                const south = tiles.getTile(tile.x, tile.y + 1);\n\n                if (tryAddLoop(north, south)) {\n                    tiles.setTileType(tile.x, tile.y, TILE_TYPE_FLOOR);\n\n                    const room = tiles.getRoomForTile(tile.x, tile.y);\n\n                    if (room) {\n                        room.addExit(tile.x, tile.y);\n                    }\n\n                    return;\n                }\n\n                const east = tiles.getTile(tile.x - 1, tile.y);\n                const west = tiles.getTile(tile.x + 1, tile.y);\n\n                if (tryAddLoop(east, west)) {\n                    tiles.setTileType(tile.x, tile.y, TILE_TYPE_FLOOR);\n\n                    const room = tiles.getRoomForTile(tile.x, tile.y);\n\n                    if (room) {\n                        room.addExit(tile.x, tile.y);\n                    }\n\n                    return;\n                }\n            });\n\n        digExits(tiles, exits);\n\n        return tiles;\n    }\n}\n","import { game } from '../../core/Game';\nimport { SPWN_DIRT_PATH } from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\nimport { computeAStar } from '../../utils/AStar';\nimport { diagonalDistance } from '../../utils/diagonalDistance';\nimport { pickRandom } from '../../utils/rand';\nimport { digExits } from '../LevelConnections';\nimport { ScatteredScheme } from '../schemes/ScatteredScheme';\nimport {\n    getThemePopulator,\n    TILE_THEME_CABIN,\n    TILE_THEME_FOREST,\n} from '../themes/TileTheme';\nimport { TILE_TYPE_WALL } from '../TileData';\nimport { addBorder } from './GeneratorUtils';\nimport SectorGenerator from './SectorGenerator';\n\nconst isTopLeftCorner = (t, room) => t.x === room.left && t.y === room.top;\nconst isBottomLeftCorner = (t, room) =>\n    t.x === room.left && t.y === room.bottom - 1;\nconst isBottomRightCorner = (t, room) =>\n    t.x === room.right - 1 && t.y === room.bottom - 1;\nconst isTopRightCorner = (t, room) =>\n    t.x === room.right - 1 && t.y === room.top;\n\nexport class ForestTownGenerator extends SectorGenerator {\n    static generate(settings) {\n        const tiles = ScatteredScheme.generate({\n            width: settings.width,\n            height: settings.height,\n            exits: settings.exits,\n        });\n\n        tiles.setTheme(TILE_THEME_CABIN);\n\n        const addDoor = (room) => {\n            const edges = room.borderTiles.filter(\n                (t) =>\n                    !(\n                        isTopLeftCorner(t, room) ||\n                        isBottomLeftCorner(t, room) ||\n                        isBottomRightCorner(t, room) ||\n                        isTopRightCorner(t, room)\n                    )\n            );\n\n            const door = pickRandom(edges);\n\n            if (door) {\n                room.addExit(door.x, door.y);\n            }\n        };\n\n        tiles.rooms.forEach(addDoor);\n\n        tiles.getUnassignedTiles().forEach((tile) => {\n            tile.theme = TILE_THEME_FOREST;\n        });\n\n        addBorder(tiles);\n\n        digExits(tiles, settings.exits);\n\n        return tiles;\n    }\n\n    static populate(settings, tiles) {\n        tiles.rooms.forEach((room) => {\n            const theme = getThemePopulator(room.theme);\n\n            theme.populateRoom(room);\n        });\n\n        const doors = tiles.rooms.map((room) => room.exits).flat();\n        const walkways = new Set();\n\n        const populatePath = (result) => {\n            if (!result.success) {\n                return;\n            }\n\n            result.path.forEach((segment) => {\n                const entities = game.map.getEntitiesAt(segment.x, segment.y);\n\n                if (entities.length > 0) {\n                    return;\n                }\n\n                spawn(SPWN_DIRT_PATH, segment.x, segment.y);\n\n                walkways.add(`${segment.x},${segment.y}`);\n            });\n        };\n\n        const generatePath = (start, end) => {\n            const path = computeAStar({\n                start: {\n                    x: start.x,\n                    y: start.y,\n                },\n                goal: {\n                    x: end.x,\n                    y: end.y,\n                },\n                cost: (a, b) => {\n                    if (tiles.tileTypeMatches(b.x, b.y, TILE_TYPE_WALL)) {\n                        return Infinity;\n                    }\n\n                    const neighbors = tiles.getNeighbors(b.x, b.y);\n                    const walls = neighbors.filter((n) =>\n                        n.isType(TILE_TYPE_WALL)\n                    );\n\n                    if (walls.length > 0) {\n                        return walls.length * 2;\n                    }\n\n                    if (walkways.has(`${b.x},${b.y}`)) {\n                        return 0.1;\n                    }\n\n                    return diagonalDistance(a, b) * 2;\n                },\n            });\n\n            populatePath(path);\n        };\n\n        doors.forEach((doorA) => {\n            settings.exits.forEach((exit) => {\n                generatePath(doorA, exit);\n            });\n            doors.forEach((doorB) => {\n                if (doorA === doorB) {\n                    return;\n                }\n\n                generatePath(doorA, doorB);\n            });\n        });\n\n        tiles.getUnassignedTiles().forEach((tile) => {\n            const theme = getThemePopulator(tile.theme);\n\n            theme.populateTile(tile);\n        });\n    }\n}\n","import { randomInt } from '../../utils/rand';\nimport { digExits } from '../LevelConnections';\nimport TileContainer from '../TileContainer';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\nimport TileScheme from '../TileScheme';\n\nexport class ScatteredScheme extends TileScheme {\n    static generate(settings) {\n        const attempt = settings.attempt || 1;\n        const maxAttempts = settings.maxAttempts || 100;\n        const width = settings.width;\n        const height = settings.height;\n        const padding = settings.padding || 3;\n        const roomPadding = settings.roomPadding || 3;\n        const minCount = settings.minCount || 5;\n        const maxCount = settings.maxCount || 8;\n        const minWidth = settings.minWidth || 6;\n        const maxWidth = settings.maxWidth || 10;\n        const minHeight = settings.minHeight || 6;\n        const maxHeight = settings.maxHeight || 10;\n        const exits = settings.exits || [];\n        const tiles = new TileContainer(width, height);\n\n        if (attempt > maxAttempts) {\n            console.warn(\n                `Failed to generate ScatteredScheme in ${maxAttempts} attempts`\n            );\n\n            return tiles;\n        }\n\n        const createBox = () => {\n            const width = randomInt(minWidth, maxWidth);\n            const height = randomInt(minHeight, maxHeight);\n\n            return {\n                x: randomInt(padding, settings.width - padding - width),\n                y: randomInt(padding, settings.height - padding - height),\n                width,\n                height,\n                get top() {\n                    return this.y - roomPadding;\n                },\n                get bottom() {\n                    return this.y + this.height + roomPadding;\n                },\n                get left() {\n                    return this.x - roomPadding;\n                },\n                get right() {\n                    return this.x + this.width + roomPadding;\n                },\n            };\n        };\n\n        const overlaps = (box) => {\n            return tiles.rooms.some((room) => {\n                return room.intersects(\n                    box.left,\n                    box.top,\n                    box.right,\n                    box.bottom\n                );\n            });\n        };\n\n        for (let i = 0; i < 100; i++) {\n            const box = createBox();\n\n            if (overlaps(box)) {\n                continue;\n            }\n\n            for (let i = 0; i < box.width; i++) {\n                for (let j = 0; j < box.height; j++) {\n                    const point = {\n                        x: box.x + i,\n                        y: box.y + j,\n                    };\n\n                    if (\n                        i === 0 ||\n                        i === box.width - 1 ||\n                        j === 0 ||\n                        j === box.height - 1\n                    ) {\n                        tiles.setTileType(point.x, point.y, TILE_TYPE_WALL);\n                    } else {\n                        tiles.setTileType(point.x, point.y, TILE_TYPE_FLOOR);\n                    }\n                }\n            }\n\n            tiles.createRoom(box.x, box.y, box.width, box.height);\n\n            if (tiles.rooms.length >= maxCount) {\n                break;\n            }\n        }\n\n        if (tiles.rooms.length < minCount) {\n            return this.generate({\n                ...settings,\n                attempt: attempt + 1,\n            });\n        }\n\n        digExits(tiles, exits);\n\n        return tiles;\n    }\n}\n","import { TILE_TYPE_WALL } from '../TileData';\n\nexport const addBorder = (tiles) => {\n    for (let i = 0; i < tiles.width; i++) {\n        tiles.setTileType(i, 0, TILE_TYPE_WALL);\n        tiles.setTileType(i, tiles.height - 1, TILE_TYPE_WALL);\n    }\n\n    for (let j = 1; j < tiles.height - 1; j++) {\n        tiles.setTileType(0, j, TILE_TYPE_WALL);\n        tiles.setTileType(tiles.width - 1, j, TILE_TYPE_WALL);\n    }\n};\n","import { getMessage, shouldAppear } from '../enums/ConsoleEvents';\nimport Manager from './Manager';\n\nexport default class ConsoleManager extends Manager {\n    #messages = [];\n    #events = [];\n    #viewCount = 4;\n\n    event(type, data) {\n        this.#events.push({ type, data });\n    }\n\n    log(text) {\n        this.#messages.push({ text });\n    }\n\n    render(dt) {\n        this.#events.forEach(({ type, data }) => {\n            if (shouldAppear(type, data)) {\n                this.#messages.push({\n                    text: getMessage(type, data),\n                });\n            }\n        });\n        this.#events = [];\n\n        const msgs = this.#messages.slice(\n            Math.max(this.#messages.length - this.#viewCount, 0)\n        );\n        const height = Math.min(msgs.length, this.#viewCount);\n\n        msgs.forEach((message, i) => {\n            this.game.renderer.drawText(\n                0,\n                this.game.camera.height - (height - i),\n                message.text\n            );\n        });\n    }\n}\n","import { IsDestroying } from '../ecs/components';\nimport System from './System';\n\nexport default class DestroySystem extends System {\n    #query;\n\n    constructor(game) {\n        super(game);\n\n        this.#query = game.ecs.createQuery({\n            all: [IsDestroying],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            if (entity.isDestroying.pass > 0) {\n                entity.destroy();\n            } else {\n                entity.isDestroying.pass++;\n            }\n        });\n    }\n}\n","import { Howl } from 'howler';\nimport Manager from './Manager';\nimport music from './../data/music.json';\n\nclass Track {\n    isPlaying = false;\n    isIntro = false;\n    howl = null;\n\n    constructor(path, data) {\n        this.name = data.name;\n        this.loop = new Howl({\n            loop: true,\n            src: [`${path}${data.loop}`],\n        });\n\n        if (data.intro) {\n            this.intro = new Howl({\n                loop: false,\n                src: [`${path}${data.intro}`],\n            });\n\n            this.intro.on('end', () => {\n                if (this.isPlaying) {\n                    this.howl = this.loop;\n                    this.loop.seek(0);\n                    this.loop.volume(1);\n                    this.loop.play();\n                } else {\n                    this.intro.stop();\n                    this.loop.stop();\n                }\n            });\n        }\n    }\n\n    play() {\n        if (this.isPlaying) {\n            return;\n        }\n\n        if (this.intro) {\n            this.howl = this.intro;\n            this.intro.seek(0);\n            this.intro.play();\n            this.intro.fade(0, 1, 5000);\n            this.loop.stop();\n            // this.intro.volume(1);\n        } else {\n            this.howl = this.loop;\n            this.loop.seek(0);\n            this.loop.play();\n            this.loop.fade(0, 1, 5000);\n            // this.loop.volume(1);\n        }\n\n        this.isPlaying = true;\n    }\n\n    stop() {\n        if (this.howl) {\n            this.howl.fade(1, 0, 500);\n        }\n        this.isPlaying = false;\n    }\n}\n\nexport default class MusicManager extends Manager {\n    tracks = {};\n    currentTrack = null;\n\n    constructor(game) {\n        super(game);\n        const path = `${window.location.protocol}//${window.location.host}${window.location.pathname}${music.path}`;\n\n        music.tracks.forEach((data) => {\n            const track = new Track(path, data);\n\n            this.tracks[data.key] = track;\n        });\n    }\n\n    play(key) {\n        if (key === this.currentTrack) {\n            return;\n        }\n\n        if (this.currentTrack) {\n            this.tracks[this.currentTrack].stop();\n        }\n\n        this.tracks[key].play();\n        this.currentTrack = key;\n    }\n\n    stop() {\n        if (this.currentTrack) {\n            this.tracks[this.currentTrack].stop();\n        }\n    }\n\n    onSectorLoaded(sector) {\n        this.play(sector.music);\n    }\n}\n","import { getStatus } from '../data/Statuses';\nimport { Status } from '../ecs/components';\nimport System from './System';\n\nexport default class StatusSystem extends System {\n    constructor(game) {\n        super(game);\n\n        this.query = this.game.ecs.createQuery({\n            all: [Status],\n        });\n    }\n\n    update(dt) {\n        if (!this.game.clock.tickDelta) {\n            return;\n        }\n\n        const delta = this.game.clock.tickDelta;\n\n        this.query.get().forEach((entity) => {\n            entity.status.forEach((status) => {\n                const statusType = getStatus(status.key);\n\n                statusType.update(delta, entity, status);\n\n                if (status.isCompleted()) {\n                    status.destroy();\n                }\n            });\n        });\n    }\n}\n","import { IsDestroying, IsInventoried, LiquidContainer, Position } from '../ecs/components';\nimport System from './System';\n\nexport default class LiquidSystem extends System {\n    constructor(game) {\n        super(game);\n\n        this.query = this.game.ecs.createQuery({\n            all: [LiquidContainer, Position],\n            none: [IsInventoried, IsDestroying]\n        });\n    }\n\n    update(dt) {\n        if (!this.game.clock.tickDelta) {\n            return;\n        }\n\n        const pools = Array.from(this.query.get());\n\n        pools.reduce((rv, pool) => {\n            const container = pool.liquidContainer;\n\n            if (!container.isFreeFlowing) {\n                return rv;\n            }\n\n            const pos = pool.position.getPos();\n            const liquid = container.content;\n            const key = `${pos.x},${pos.y},${liquid}`;\n\n            if (rv[key]) {\n                rv[key].combineFrom(container);\n            } else {\n                rv[key] = container;\n            }\n\n            return rv;\n        }, {});\n    }\n}\n","import { addStatus, STATUS_BLEEDING } from '../data/Statuses';\nimport { IsDestroying, IsInventoried, Position, SharpTrap } from '../ecs/components';\nimport { CONSOLE_EVENT_TRAP_SHARP } from '../enums/ConsoleEvents';\nimport System from './System';\n\nexport default class TrapSystem extends System {\n    constructor(game) {\n        super(game);\n\n        this.sharpTrapQuery = this.game.ecs.createQuery({\n            all: [SharpTrap, Position],\n            none: [IsInventoried, IsDestroying]\n        });\n    }\n\n    update(dt) {\n        if (!this.game.clock.turnDelta) {\n            return;\n        }\n\n        this.sharpTrapQuery.get().forEach((trapEntity) => {\n            const pos = trapEntity.position.getPos();\n            const entities = this.game.map.getEntitiesAt(pos.x, pos.y);\n\n            entities.forEach((entity) => {\n                if (entity.id === trapEntity.id) {\n                    return;\n                }\n                if (entity.stats) {\n                    const saved = trapEntity.sharpTrap.test(entity);\n\n                    if (!saved) {\n                        addStatus(STATUS_BLEEDING, entity);\n                        this.game.console.event(CONSOLE_EVENT_TRAP_SHARP, {\n                            trap: trapEntity,\n                            entity\n                        });\n                    }\n                }\n            });\n        });\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => module['default'] :\n\t\t() => module;\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(0);\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}